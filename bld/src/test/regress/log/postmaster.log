2024-09-08 14:51:50.232 KST postmaster[3075126] LOG:  starting PostgreSQL 16.2 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0, 64-bit
2024-09-08 14:51:50.232 KST postmaster[3075126] LOG:  listening on Unix socket "/tmp/pg_regress-2oJqK2/.s.PGSQL.61698"
2024-09-08 14:51:50.234 KST startup[3075131] LOG:  database system was shut down at 2024-09-08 14:51:50 KST
2024-09-08 14:51:50.236 KST postmaster[3075126] LOG:  database system is ready to accept connections
2024-09-08 14:51:51.460 KST client backend[3075186] pg_regress/int8 ERROR:  invalid input syntax for type bigint: "      " at character 34
2024-09-08 14:51:51.460 KST client backend[3075186] pg_regress/int8 STATEMENT:  INSERT INTO INT8_TBL(q1) VALUES ('      ');
2024-09-08 14:51:51.460 KST client backend[3075176] pg_regress/boolean ERROR:  invalid input syntax for type boolean: "test" at character 13
2024-09-08 14:51:51.460 KST client backend[3075176] pg_regress/boolean STATEMENT:  SELECT bool 'test' AS error;
2024-09-08 14:51:51.460 KST client backend[3075186] pg_regress/int8 ERROR:  invalid input syntax for type bigint: "xxx" at character 34
2024-09-08 14:51:51.460 KST client backend[3075186] pg_regress/int8 STATEMENT:  INSERT INTO INT8_TBL(q1) VALUES ('xxx');
2024-09-08 14:51:51.460 KST client backend[3075186] pg_regress/int8 ERROR:  value "3908203590239580293850293850329485" is out of range for type bigint at character 34
2024-09-08 14:51:51.460 KST client backend[3075186] pg_regress/int8 STATEMENT:  INSERT INTO INT8_TBL(q1) VALUES ('3908203590239580293850293850329485');
2024-09-08 14:51:51.460 KST client backend[3075176] pg_regress/boolean ERROR:  invalid input syntax for type boolean: "foo" at character 13
2024-09-08 14:51:51.460 KST client backend[3075176] pg_regress/boolean STATEMENT:  SELECT bool 'foo' AS error;
2024-09-08 14:51:51.460 KST client backend[3075186] pg_regress/int8 ERROR:  value "-1204982019841029840928340329840934" is out of range for type bigint at character 34
2024-09-08 14:51:51.460 KST client backend[3075186] pg_regress/int8 STATEMENT:  INSERT INTO INT8_TBL(q1) VALUES ('-1204982019841029840928340329840934');
2024-09-08 14:51:51.460 KST client backend[3075186] pg_regress/int8 ERROR:  invalid input syntax for type bigint: "- 123" at character 34
2024-09-08 14:51:51.460 KST client backend[3075186] pg_regress/int8 STATEMENT:  INSERT INTO INT8_TBL(q1) VALUES ('- 123');
2024-09-08 14:51:51.460 KST client backend[3075186] pg_regress/int8 ERROR:  invalid input syntax for type bigint: "  345     5" at character 34
2024-09-08 14:51:51.460 KST client backend[3075186] pg_regress/int8 STATEMENT:  INSERT INTO INT8_TBL(q1) VALUES ('  345     5');
2024-09-08 14:51:51.461 KST client backend[3075176] pg_regress/boolean ERROR:  invalid input syntax for type boolean: "yeah" at character 13
2024-09-08 14:51:51.461 KST client backend[3075176] pg_regress/boolean STATEMENT:  SELECT bool 'yeah' AS error;
2024-09-08 14:51:51.461 KST client backend[3075186] pg_regress/int8 ERROR:  invalid input syntax for type bigint: "" at character 34
2024-09-08 14:51:51.461 KST client backend[3075186] pg_regress/int8 STATEMENT:  INSERT INTO INT8_TBL(q1) VALUES ('');
2024-09-08 14:51:51.461 KST client backend[3075182] pg_regress/varchar ERROR:  value too long for type character varying(1)
2024-09-08 14:51:51.461 KST client backend[3075182] pg_regress/varchar STATEMENT:  INSERT INTO VARCHAR_TBL (f1) VALUES ('cd');
2024-09-08 14:51:51.461 KST client backend[3075176] pg_regress/boolean ERROR:  invalid input syntax for type boolean: "nay" at character 13
2024-09-08 14:51:51.461 KST client backend[3075176] pg_regress/boolean STATEMENT:  SELECT bool 'nay' AS error;
2024-09-08 14:51:51.461 KST client backend[3075176] pg_regress/boolean ERROR:  invalid input syntax for type boolean: "o" at character 13
2024-09-08 14:51:51.461 KST client backend[3075176] pg_regress/boolean STATEMENT:  SELECT bool 'o' AS error;
2024-09-08 14:51:51.461 KST client backend[3075176] pg_regress/boolean ERROR:  invalid input syntax for type boolean: "on_" at character 13
2024-09-08 14:51:51.461 KST client backend[3075176] pg_regress/boolean STATEMENT:  SELECT bool 'on_' AS error;
2024-09-08 14:51:51.461 KST client backend[3075184] pg_regress/text ERROR:  function length(integer) does not exist at character 8
2024-09-08 14:51:51.461 KST client backend[3075184] pg_regress/text HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:51.461 KST client backend[3075184] pg_regress/text STATEMENT:  select length(42);
2024-09-08 14:51:51.461 KST client backend[3075176] pg_regress/boolean ERROR:  invalid input syntax for type boolean: "off_" at character 13
2024-09-08 14:51:51.461 KST client backend[3075176] pg_regress/boolean STATEMENT:  SELECT bool 'off_' AS error;
2024-09-08 14:51:51.461 KST client backend[3075176] pg_regress/boolean ERROR:  invalid input syntax for type boolean: "11" at character 13
2024-09-08 14:51:51.461 KST client backend[3075176] pg_regress/boolean STATEMENT:  SELECT bool '11' AS error;
2024-09-08 14:51:51.461 KST client backend[3075176] pg_regress/boolean ERROR:  invalid input syntax for type boolean: "000" at character 13
2024-09-08 14:51:51.461 KST client backend[3075176] pg_regress/boolean STATEMENT:  SELECT bool '000' AS error;
2024-09-08 14:51:51.461 KST client backend[3075176] pg_regress/boolean ERROR:  invalid input syntax for type boolean: "" at character 13
2024-09-08 14:51:51.461 KST client backend[3075176] pg_regress/boolean STATEMENT:  SELECT bool '' AS error;
2024-09-08 14:51:51.461 KST client backend[3075194] pg_regress/int4 ERROR:  invalid input syntax for type integer: "34.5" at character 34
2024-09-08 14:51:51.461 KST client backend[3075194] pg_regress/int4 STATEMENT:  INSERT INTO INT4_TBL(f1) VALUES ('34.5');
2024-09-08 14:51:51.461 KST client backend[3075184] pg_regress/text ERROR:  operator does not exist: integer || numeric at character 10
2024-09-08 14:51:51.461 KST client backend[3075184] pg_regress/text HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:51.461 KST client backend[3075184] pg_regress/text STATEMENT:  select 3 || 4.0;
2024-09-08 14:51:51.461 KST client backend[3075193] pg_regress/int2 ERROR:  invalid input syntax for type smallint: "34.5" at character 34
2024-09-08 14:51:51.461 KST client backend[3075193] pg_regress/int2 STATEMENT:  INSERT INTO INT2_TBL(f1) VALUES ('34.5');
2024-09-08 14:51:51.462 KST client backend[3075193] pg_regress/int2 ERROR:  value "100000" is out of range for type smallint at character 34
2024-09-08 14:51:51.462 KST client backend[3075193] pg_regress/int2 STATEMENT:  INSERT INTO INT2_TBL(f1) VALUES ('100000');
2024-09-08 14:51:51.462 KST client backend[3075194] pg_regress/int4 ERROR:  value "1000000000000" is out of range for type integer at character 34
2024-09-08 14:51:51.462 KST client backend[3075194] pg_regress/int4 STATEMENT:  INSERT INTO INT4_TBL(f1) VALUES ('1000000000000');
2024-09-08 14:51:51.462 KST client backend[3075193] pg_regress/int2 ERROR:  invalid input syntax for type smallint: "asdf" at character 34
2024-09-08 14:51:51.462 KST client backend[3075193] pg_regress/int2 STATEMENT:  INSERT INTO INT2_TBL(f1) VALUES ('asdf');
2024-09-08 14:51:51.462 KST client backend[3075194] pg_regress/int4 ERROR:  invalid input syntax for type integer: "asdf" at character 34
2024-09-08 14:51:51.462 KST client backend[3075194] pg_regress/int4 STATEMENT:  INSERT INTO INT4_TBL(f1) VALUES ('asdf');
2024-09-08 14:51:51.462 KST client backend[3075193] pg_regress/int2 ERROR:  invalid input syntax for type smallint: "    " at character 34
2024-09-08 14:51:51.462 KST client backend[3075193] pg_regress/int2 STATEMENT:  INSERT INTO INT2_TBL(f1) VALUES ('    ');
2024-09-08 14:51:51.462 KST client backend[3075194] pg_regress/int4 ERROR:  invalid input syntax for type integer: "     " at character 34
2024-09-08 14:51:51.462 KST client backend[3075194] pg_regress/int4 STATEMENT:  INSERT INTO INT4_TBL(f1) VALUES ('     ');
2024-09-08 14:51:51.462 KST client backend[3075193] pg_regress/int2 ERROR:  invalid input syntax for type smallint: "- 1234" at character 34
2024-09-08 14:51:51.462 KST client backend[3075193] pg_regress/int2 STATEMENT:  INSERT INTO INT2_TBL(f1) VALUES ('- 1234');
2024-09-08 14:51:51.462 KST client backend[3075178] pg_regress/char ERROR:  value too long for type character(1)
2024-09-08 14:51:51.462 KST client backend[3075178] pg_regress/char STATEMENT:  INSERT INTO CHAR_TBL (f1) VALUES ('cd');
2024-09-08 14:51:51.462 KST client backend[3075194] pg_regress/int4 ERROR:  invalid input syntax for type integer: "   asdf   " at character 34
2024-09-08 14:51:51.462 KST client backend[3075194] pg_regress/int4 STATEMENT:  INSERT INTO INT4_TBL(f1) VALUES ('   asdf   ');
2024-09-08 14:51:51.462 KST client backend[3075193] pg_regress/int2 ERROR:  invalid input syntax for type smallint: "4 444" at character 34
2024-09-08 14:51:51.462 KST client backend[3075193] pg_regress/int2 STATEMENT:  INSERT INTO INT2_TBL(f1) VALUES ('4 444');
2024-09-08 14:51:51.462 KST client backend[3075194] pg_regress/int4 ERROR:  invalid input syntax for type integer: "- 1234" at character 34
2024-09-08 14:51:51.462 KST client backend[3075194] pg_regress/int4 STATEMENT:  INSERT INTO INT4_TBL(f1) VALUES ('- 1234');
2024-09-08 14:51:51.462 KST client backend[3075193] pg_regress/int2 ERROR:  invalid input syntax for type smallint: "123 dt" at character 34
2024-09-08 14:51:51.462 KST client backend[3075193] pg_regress/int2 STATEMENT:  INSERT INTO INT2_TBL(f1) VALUES ('123 dt');
2024-09-08 14:51:51.462 KST client backend[3075194] pg_regress/int4 ERROR:  invalid input syntax for type integer: "123       5" at character 34
2024-09-08 14:51:51.462 KST client backend[3075194] pg_regress/int4 STATEMENT:  INSERT INTO INT4_TBL(f1) VALUES ('123       5');
2024-09-08 14:51:51.462 KST client backend[3075193] pg_regress/int2 ERROR:  invalid input syntax for type smallint: "" at character 34
2024-09-08 14:51:51.462 KST client backend[3075193] pg_regress/int2 STATEMENT:  INSERT INTO INT2_TBL(f1) VALUES ('');
2024-09-08 14:51:51.462 KST client backend[3075194] pg_regress/int4 ERROR:  invalid input syntax for type integer: "" at character 34
2024-09-08 14:51:51.462 KST client backend[3075194] pg_regress/int4 STATEMENT:  INSERT INTO INT4_TBL(f1) VALUES ('');
2024-09-08 14:51:51.463 KST client backend[3075193] pg_regress/int2 ERROR:  table "f" has 1 columns available but 2 columns specified
2024-09-08 14:51:51.463 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT * FROM INT2_TBL AS f(a, b);
2024-09-08 14:51:51.463 KST client backend[3075176] pg_regress/boolean ERROR:  invalid input syntax for type boolean: "  tru e "
2024-09-08 14:51:51.463 KST client backend[3075176] pg_regress/boolean STATEMENT:  SELECT '  tru e '::text::boolean AS invalid;
2024-09-08 14:51:51.463 KST client backend[3075191] pg_regress/bit ERROR:  bit string length 2 does not match type bit(11)
2024-09-08 14:51:51.463 KST client backend[3075191] pg_regress/bit STATEMENT:  INSERT INTO BIT_TABLE VALUES (B'10');
2024-09-08 14:51:51.463 KST client backend[3075193] pg_regress/int2 ERROR:  table "s" has 1 columns available but 2 columns specified
2024-09-08 14:51:51.463 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT * FROM (TABLE int2_tbl) AS s (a, b);
2024-09-08 14:51:51.463 KST client backend[3075176] pg_regress/boolean ERROR:  invalid input syntax for type boolean: ""
2024-09-08 14:51:51.463 KST client backend[3075176] pg_regress/boolean STATEMENT:  SELECT ''::text::boolean AS invalid;
2024-09-08 14:51:51.463 KST client backend[3075184] pg_regress/text ERROR:  VARIADIC argument must be an array at character 32
2024-09-08 14:51:51.463 KST client backend[3075184] pg_regress/text STATEMENT:  select concat_ws(',', variadic 10);
2024-09-08 14:51:51.463 KST client backend[3075198] pg_regress/txid ERROR:  invalid input syntax for type pg_snapshot: "31:12:" at character 8
2024-09-08 14:51:51.463 KST client backend[3075198] pg_regress/txid STATEMENT:  select '31:12:'::txid_snapshot;
2024-09-08 14:51:51.463 KST client backend[3075184] pg_regress/text ERROR:  too few arguments for format()
2024-09-08 14:51:51.463 KST client backend[3075184] pg_regress/text STATEMENT:  select format('Hello %s %s', 'World');
2024-09-08 14:51:51.463 KST client backend[3075198] pg_regress/txid ERROR:  invalid input syntax for type pg_snapshot: "0:1:" at character 8
2024-09-08 14:51:51.463 KST client backend[3075198] pg_regress/txid STATEMENT:  select '0:1:'::txid_snapshot;
2024-09-08 14:51:51.463 KST client backend[3075184] pg_regress/text ERROR:  too few arguments for format()
2024-09-08 14:51:51.463 KST client backend[3075184] pg_regress/text STATEMENT:  select format('Hello %s');
2024-09-08 14:51:51.463 KST client backend[3075198] pg_regress/txid ERROR:  invalid input syntax for type pg_snapshot: "12:13:0" at character 8
2024-09-08 14:51:51.463 KST client backend[3075198] pg_regress/txid STATEMENT:  select '12:13:0'::txid_snapshot;
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text ERROR:  unrecognized format() type specifier "x"
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text HINT:  For a single "%" use "%%".
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text STATEMENT:  select format('Hello %x', 20);
2024-09-08 14:51:51.464 KST client backend[3075198] pg_regress/txid ERROR:  invalid input syntax for type pg_snapshot: "12:16:14,13" at character 8
2024-09-08 14:51:51.464 KST client backend[3075198] pg_regress/txid STATEMENT:  select '12:16:14,13'::txid_snapshot;
2024-09-08 14:51:51.464 KST client backend[3075194] pg_regress/int4 ERROR:  integer out of range
2024-09-08 14:51:51.464 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT i.f1, i.f1 * int2 '2' AS x FROM INT4_TBL i;
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text ERROR:  null values cannot be formatted as an SQL identifier
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text STATEMENT:  select format('INSERT INTO %I VALUES(%L,%L)', NULL, 10, 'Hello');
2024-09-08 14:51:51.464 KST client backend[3075194] pg_regress/int4 ERROR:  integer out of range
2024-09-08 14:51:51.464 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT i.f1, i.f1 * int4 '2' AS x FROM INT4_TBL i;
2024-09-08 14:51:51.464 KST client backend[3075194] pg_regress/int4 ERROR:  integer out of range
2024-09-08 14:51:51.464 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT i.f1, i.f1 + int2 '2' AS x FROM INT4_TBL i;
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text ERROR:  too few arguments for format()
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text STATEMENT:  select format('%1$s %4$s', 1, 2, 3);
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text ERROR:  too few arguments for format()
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text STATEMENT:  select format('%1$s %13$s', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text ERROR:  format specifies argument 0, but arguments are numbered from 1
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text STATEMENT:  select format('%0$s', 'Hello');
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes ERROR:  malformed range literal: "" at character 8
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes DETAIL:  Missing left parenthesis or bracket.
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select ''::textrange;
2024-09-08 14:51:51.464 KST client backend[3075193] pg_regress/int2 ERROR:  smallint out of range
2024-09-08 14:51:51.464 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT i.f1, i.f1 * int2 '2' AS x FROM INT2_TBL i;
2024-09-08 14:51:51.464 KST client backend[3075194] pg_regress/int4 ERROR:  integer out of range
2024-09-08 14:51:51.464 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT i.f1, i.f1 + int4 '2' AS x FROM INT4_TBL i;
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text ERROR:  format specifies argument 0, but arguments are numbered from 1
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text STATEMENT:  select format('%*0$s', 'Hello');
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes ERROR:  malformed range literal: "-[a,z)" at character 8
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes DETAIL:  Missing left parenthesis or bracket.
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select '-[a,z)'::textrange;
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text ERROR:  unterminated format() type specifier
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text HINT:  For a single "%" use "%%".
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text STATEMENT:  select format('%1$', 1);
2024-09-08 14:51:51.464 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.464 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT q1, q2, q1 * q2 AS multiply FROM INT8_TBL;
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes ERROR:  malformed range literal: "[a,z) - " at character 8
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes DETAIL:  Junk after right parenthesis or bracket.
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select '[a,z) - '::textrange;
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text ERROR:  unterminated format() type specifier
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text HINT:  For a single "%" use "%%".
2024-09-08 14:51:51.464 KST client backend[3075184] pg_regress/text STATEMENT:  select format('%1$1', 1);
2024-09-08 14:51:51.464 KST client backend[3075194] pg_regress/int4 ERROR:  integer out of range
2024-09-08 14:51:51.464 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT i.f1, i.f1 - int2 '2' AS x FROM INT4_TBL i;
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes ERROR:  malformed range literal: "(",a)" at character 8
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes DETAIL:  Unexpected end of input.
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select '(",a)'::textrange;
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes ERROR:  malformed range literal: "(,,a)" at character 8
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes DETAIL:  Too many commas.
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select '(,,a)'::textrange;
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes ERROR:  malformed range literal: "(),a)" at character 8
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes DETAIL:  Missing comma after lower bound.
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select '(),a)'::textrange;
2024-09-08 14:51:51.464 KST client backend[3075193] pg_regress/int2 ERROR:  smallint out of range
2024-09-08 14:51:51.464 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT i.f1, i.f1 + int2 '2' AS x FROM INT2_TBL i;
2024-09-08 14:51:51.464 KST client backend[3075194] pg_regress/int4 ERROR:  integer out of range
2024-09-08 14:51:51.464 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT i.f1, i.f1 - int4 '2' AS x FROM INT4_TBL i;
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes ERROR:  malformed range literal: "(a,))" at character 8
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes DETAIL:  Junk after right parenthesis or bracket.
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select '(a,))'::textrange;
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes ERROR:  malformed range literal: "(],a)" at character 8
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes DETAIL:  Missing comma after lower bound.
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select '(],a)'::textrange;
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes ERROR:  malformed range literal: "(a,])" at character 8
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes DETAIL:  Junk after right parenthesis or bracket.
2024-09-08 14:51:51.464 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select '(a,])'::textrange;
2024-09-08 14:51:51.465 KST client backend[3075203] pg_regress/rangetypes ERROR:  range lower bound must be less than or equal to range upper bound at character 8
2024-09-08 14:51:51.465 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select '[z,a]'::textrange;
2024-09-08 14:51:51.465 KST client backend[3075193] pg_regress/int2 ERROR:  smallint out of range
2024-09-08 14:51:51.465 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT i.f1, i.f1 - int2 '2' AS x FROM INT2_TBL i;
2024-09-08 14:51:51.465 KST client backend[3075193] pg_regress/int2 ERROR:  smallint out of range
2024-09-08 14:51:51.465 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT (-32768)::int2 * (-1)::int2;
2024-09-08 14:51:51.465 KST client backend[3075193] pg_regress/int2 ERROR:  smallint out of range
2024-09-08 14:51:51.465 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT (-32768)::int2 / (-1)::int2;
2024-09-08 14:51:51.465 KST client backend[3075194] pg_regress/int4 ERROR:  integer out of range
2024-09-08 14:51:51.465 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT (-2147483648)::int4 * (-1)::int4;
2024-09-08 14:51:51.465 KST client backend[3075194] pg_regress/int4 ERROR:  integer out of range
2024-09-08 14:51:51.465 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT (-2147483648)::int4 / (-1)::int4;
2024-09-08 14:51:51.465 KST client backend[3075194] pg_regress/int4 ERROR:  integer out of range
2024-09-08 14:51:51.465 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT (-2147483648)::int4 * (-1)::int2;
2024-09-08 14:51:51.465 KST client backend[3075194] pg_regress/int4 ERROR:  integer out of range
2024-09-08 14:51:51.465 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT (-2147483648)::int4 / (-1)::int2;
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 ERROR:  invalid input syntax for type smallint: "0b" at character 13
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT int2 '0b';
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 ERROR:  invalid input syntax for type smallint: "0o" at character 13
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT int2 '0o';
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 ERROR:  invalid input syntax for type smallint: "0x" at character 13
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT int2 '0x';
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 ERROR:  value "0b1000000000000000" is out of range for type smallint at character 13
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT int2 '0b1000000000000000';
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 ERROR:  value "0o100000" is out of range for type smallint at character 13
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT int2 '0o100000';
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 ERROR:  value "0x8000" is out of range for type smallint at character 13
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT int2 '0x8000';
2024-09-08 14:51:51.466 KST client backend[3075194] pg_regress/int4 ERROR:  integer out of range
2024-09-08 14:51:51.466 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT gcd((-2147483648)::int4, 0::int4);
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 ERROR:  value "-0b1000000000000001" is out of range for type smallint at character 13
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT int2 '-0b1000000000000001';
2024-09-08 14:51:51.466 KST client backend[3075194] pg_regress/int4 ERROR:  integer out of range
2024-09-08 14:51:51.466 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT gcd((-2147483648)::int4, (-2147483648)::int4);
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 ERROR:  value "-0o100001" is out of range for type smallint at character 13
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT int2 '-0o100001';
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 ERROR:  value "-0x8001" is out of range for type smallint at character 13
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT int2 '-0x8001';
2024-09-08 14:51:51.466 KST client backend[3075194] pg_regress/int4 ERROR:  integer out of range
2024-09-08 14:51:51.466 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT lcm((-2147483648)::int4, 1::int4);
2024-09-08 14:51:51.466 KST client backend[3075194] pg_regress/int4 ERROR:  integer out of range
2024-09-08 14:51:51.466 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT lcm(2147483647::int4, 2147483646::int4);
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 ERROR:  invalid input syntax for type smallint: "_100" at character 13
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT int2 '_100';
2024-09-08 14:51:51.466 KST client backend[3075194] pg_regress/int4 ERROR:  invalid input syntax for type integer: "0b" at character 13
2024-09-08 14:51:51.466 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT int4 '0b';
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 ERROR:  invalid input syntax for type smallint: "100_" at character 13
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT int2 '100_';
2024-09-08 14:51:51.466 KST client backend[3075194] pg_regress/int4 ERROR:  invalid input syntax for type integer: "0o" at character 13
2024-09-08 14:51:51.466 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT int4 '0o';
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 ERROR:  invalid input syntax for type smallint: "10__000" at character 13
2024-09-08 14:51:51.466 KST client backend[3075193] pg_regress/int2 STATEMENT:  SELECT int2 '10__000';
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 ERROR:  invalid input syntax for type integer: "0x" at character 13
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT int4 '0x';
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 ERROR:  value "0b10000000000000000000000000000000" is out of range for type integer at character 13
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT int4 '0b10000000000000000000000000000000';
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 ERROR:  value "0o20000000000" is out of range for type integer at character 13
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT int4 '0o20000000000';
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 ERROR:  value "0x80000000" is out of range for type integer at character 13
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT int4 '0x80000000';
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 ERROR:  value "-0b10000000000000000000000000000001" is out of range for type integer at character 13
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT int4 '-0b10000000000000000000000000000001';
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 ERROR:  value "-0o20000000001" is out of range for type integer at character 13
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT int4 '-0o20000000001';
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 ERROR:  value "-0x80000001" is out of range for type integer at character 13
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT int4 '-0x80000001';
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 ERROR:  invalid input syntax for type integer: "_100" at character 13
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT int4 '_100';
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 ERROR:  invalid input syntax for type integer: "100_" at character 13
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT int4 '100_';
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 ERROR:  invalid input syntax for type integer: "100__000" at character 13
2024-09-08 14:51:51.467 KST client backend[3075194] pg_regress/int4 STATEMENT:  SELECT int4 '100__000';
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  value "-9223372036854775809" is out of range for type bigint at character 8
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '-9223372036854775809'::int8;
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  value "9223372036854775808" is out of range for type bigint at character 8
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '9223372036854775808'::int8;
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select -('-9223372036854775808'::int8);
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select 0::int8 - '-9223372036854775808'::int8;
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '9223372036854775800'::int8 + '9223372036854775800'::int8;
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '-9223372036854775800'::int8 + '-9223372036854775800'::int8;
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '9223372036854775800'::int8 - '-9223372036854775800'::int8;
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '-9223372036854775800'::int8 - '9223372036854775800'::int8;
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '9223372036854775800'::int8 * '9223372036854775800'::int8;
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  division by zero
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '9223372036854775800'::int8 / '0'::int8;
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  division by zero
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '9223372036854775800'::int8 % '0'::int8;
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select abs('-9223372036854775808'::int8);
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '9223372036854775800'::int8 + '100'::int4;
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '-9223372036854775800'::int8 - '100'::int4;
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '9223372036854775800'::int8 * '100'::int4;
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '100'::int4 + '9223372036854775800'::int8;
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '-100'::int4 - '9223372036854775800'::int8;
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '100'::int4 * '9223372036854775800'::int8;
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '9223372036854775800'::int8 + '100'::int2;
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.468 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '-9223372036854775800'::int8 - '100'::int2;
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '9223372036854775800'::int8 * '100'::int2;
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 ERROR:  division by zero
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '-9223372036854775808'::int8 / '0'::int2;
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '100'::int2 + '9223372036854775800'::int8;
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '-100'::int2 - '9223372036854775800'::int8;
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '100'::int2 * '9223372036854775800'::int8;
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 ERROR:  division by zero
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 STATEMENT:  select '100'::int2 / '0'::int8;
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 ERROR:  integer out of range
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT CAST(q1 AS int4) FROM int8_tbl WHERE q2 <> 456;
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 ERROR:  smallint out of range
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT CAST(q1 AS int2) FROM int8_tbl WHERE q2 <> 456;
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT CAST('922337203685477580700.0'::float8 AS int8);
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 ERROR:  OID out of range
2024-09-08 14:51:51.469 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT CAST(q1 AS oid) FROM INT8_TBL;
2024-09-08 14:51:51.470 KST client backend[3075186] pg_regress/int8 ERROR:  step size cannot equal zero
2024-09-08 14:51:51.470 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT * FROM generate_series('+4567890123456789'::int8, '+4567890123456799'::int8, 0);
2024-09-08 14:51:51.470 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.470 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT (-9223372036854775808)::int8 * (-1)::int8;
2024-09-08 14:51:51.470 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.470 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT (-9223372036854775808)::int8 / (-1)::int8;
2024-09-08 14:51:51.471 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.471 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT (-9223372036854775808)::int8 * (-1)::int4;
2024-09-08 14:51:51.471 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.471 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT (-9223372036854775808)::int8 / (-1)::int4;
2024-09-08 14:51:51.471 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.471 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT (-9223372036854775808)::int8 * (-1)::int2;
2024-09-08 14:51:51.471 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.471 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT (-9223372036854775808)::int8 / (-1)::int2;
2024-09-08 14:51:51.471 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.471 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT gcd((-9223372036854775808)::int8, 0::int8);
2024-09-08 14:51:51.471 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.471 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT gcd((-9223372036854775808)::int8, (-9223372036854775808)::int8);
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT lcm((-9223372036854775808)::int8, 1::int8);
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 ERROR:  bigint out of range
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT lcm(9223372036854775807::int8, 9223372036854775806::int8);
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 ERROR:  invalid input syntax for type bigint: "0b" at character 13
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT int8 '0b';
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 ERROR:  invalid input syntax for type bigint: "0o" at character 13
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT int8 '0o';
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 ERROR:  invalid input syntax for type bigint: "0x" at character 13
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT int8 '0x';
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 ERROR:  value "0b1000000000000000000000000000000000000000000000000000000000000000" is out of range for type bigint at character 13
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT int8 '0b1000000000000000000000000000000000000000000000000000000000000000';
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 ERROR:  value "0o1000000000000000000000" is out of range for type bigint at character 13
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT int8 '0o1000000000000000000000';
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 ERROR:  value "0x8000000000000000" is out of range for type bigint at character 13
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT int8 '0x8000000000000000';
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 ERROR:  value "-0b1000000000000000000000000000000000000000000000000000000000000001" is out of range for type bigint at character 13
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT int8 '-0b1000000000000000000000000000000000000000000000000000000000000001';
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 ERROR:  value "-0o1000000000000000000001" is out of range for type bigint at character 13
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT int8 '-0o1000000000000000000001';
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 ERROR:  value "-0x8000000000000001" is out of range for type bigint at character 13
2024-09-08 14:51:51.472 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT int8 '-0x8000000000000001';
2024-09-08 14:51:51.473 KST client backend[3075186] pg_regress/int8 ERROR:  invalid input syntax for type bigint: "_100" at character 13
2024-09-08 14:51:51.473 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT int8 '_100';
2024-09-08 14:51:51.473 KST client backend[3075186] pg_regress/int8 ERROR:  invalid input syntax for type bigint: "100_" at character 13
2024-09-08 14:51:51.473 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT int8 '100_';
2024-09-08 14:51:51.473 KST client backend[3075186] pg_regress/int8 ERROR:  invalid input syntax for type bigint: "100__000" at character 13
2024-09-08 14:51:51.473 KST client backend[3075186] pg_regress/int8 STATEMENT:  SELECT int8 '100__000';
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid ERROR:  invalid input syntax for type oid: "" at character 33
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid STATEMENT:  INSERT INTO OID_TBL(f1) VALUES ('');
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid ERROR:  invalid input syntax for type oid: "    " at character 33
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid STATEMENT:  INSERT INTO OID_TBL(f1) VALUES ('    ');
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid ERROR:  invalid input syntax for type oid: "asdfasd" at character 33
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid STATEMENT:  INSERT INTO OID_TBL(f1) VALUES ('asdfasd');
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid ERROR:  invalid input syntax for type oid: "99asdfasd" at character 33
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid STATEMENT:  INSERT INTO OID_TBL(f1) VALUES ('99asdfasd');
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid ERROR:  invalid input syntax for type oid: "5    d" at character 33
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid STATEMENT:  INSERT INTO OID_TBL(f1) VALUES ('5    d');
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid ERROR:  invalid input syntax for type oid: "    5d" at character 33
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid STATEMENT:  INSERT INTO OID_TBL(f1) VALUES ('    5d');
2024-09-08 14:51:51.476 KST client backend[3075182] pg_regress/varchar ERROR:  value too long for type character varying(4)
2024-09-08 14:51:51.476 KST client backend[3075182] pg_regress/varchar STATEMENT:  INSERT INTO VARCHAR_TBL (f1) VALUES ('abcde');
2024-09-08 14:51:51.476 KST client backend[3075191] pg_regress/bit ERROR:  bit string length 12 does not match type bit(11)
2024-09-08 14:51:51.476 KST client backend[3075191] pg_regress/bit STATEMENT:  INSERT INTO BIT_TABLE VALUES (B'101011111010');
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid ERROR:  invalid input syntax for type oid: "5    5" at character 33
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid STATEMENT:  INSERT INTO OID_TBL(f1) VALUES ('5    5');
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid ERROR:  invalid input syntax for type oid: " - 500" at character 33
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid STATEMENT:  INSERT INTO OID_TBL(f1) VALUES (' - 500');
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid ERROR:  value "32958209582039852935" is out of range for type oid at character 33
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid STATEMENT:  INSERT INTO OID_TBL(f1) VALUES ('32958209582039852935');
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid ERROR:  value "-23582358720398502385" is out of range for type oid at character 33
2024-09-08 14:51:51.476 KST client backend[3075188] pg_regress/oid STATEMENT:  INSERT INTO OID_TBL(f1) VALUES ('-23582358720398502385');
2024-09-08 14:51:51.476 KST client backend[3075178] pg_regress/char ERROR:  value too long for type character(4)
2024-09-08 14:51:51.476 KST client backend[3075178] pg_regress/char STATEMENT:  INSERT INTO CHAR_TBL (f1) VALUES ('abcde');
2024-09-08 14:51:51.477 KST client backend[3075202] pg_regress/pg_lsn ERROR:  invalid input syntax for type pg_lsn: "G/0" at character 32
2024-09-08 14:51:51.477 KST client backend[3075202] pg_regress/pg_lsn STATEMENT:  INSERT INTO PG_LSN_TBL VALUES ('G/0');
2024-09-08 14:51:51.477 KST client backend[3075202] pg_regress/pg_lsn ERROR:  invalid input syntax for type pg_lsn: "-1/0" at character 32
2024-09-08 14:51:51.477 KST client backend[3075202] pg_regress/pg_lsn STATEMENT:  INSERT INTO PG_LSN_TBL VALUES ('-1/0');
2024-09-08 14:51:51.477 KST client backend[3075202] pg_regress/pg_lsn ERROR:  invalid input syntax for type pg_lsn: " 0/12345678" at character 32
2024-09-08 14:51:51.477 KST client backend[3075202] pg_regress/pg_lsn STATEMENT:  INSERT INTO PG_LSN_TBL VALUES (' 0/12345678');
2024-09-08 14:51:51.477 KST client backend[3075202] pg_regress/pg_lsn ERROR:  invalid input syntax for type pg_lsn: "ABCD/" at character 32
2024-09-08 14:51:51.477 KST client backend[3075202] pg_regress/pg_lsn STATEMENT:  INSERT INTO PG_LSN_TBL VALUES ('ABCD/');
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 ERROR:  "10e70" is out of range for type real at character 36
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('10e70');
2024-09-08 14:51:51.477 KST client backend[3075202] pg_regress/pg_lsn ERROR:  invalid input syntax for type pg_lsn: "/ABCD" at character 32
2024-09-08 14:51:51.477 KST client backend[3075202] pg_regress/pg_lsn STATEMENT:  INSERT INTO PG_LSN_TBL VALUES ('/ABCD');
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 ERROR:  "10e400" is out of range for type double precision at character 8
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT '10e400'::float8;
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 ERROR:  "-10e70" is out of range for type real at character 36
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e70');
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 ERROR:  "10e-70" is out of range for type real at character 36
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('10e-70');
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 ERROR:  "-10e400" is out of range for type double precision at character 8
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT '-10e400'::float8;
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 ERROR:  "-10e-70" is out of range for type real at character 36
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e-70');
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 ERROR:  "10e-400" is out of range for type double precision at character 8
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT '10e-400'::float8;
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 ERROR:  "-10e-400" is out of range for type double precision at character 8
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT '-10e-400'::float8;
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 ERROR:  value out of range: overflow
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('10e70'::float8);
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 ERROR:  value out of range: overflow
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e70'::float8);
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 ERROR:  value out of range: underflow
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('10e-70'::float8);
2024-09-08 14:51:51.477 KST client backend[3075199] pg_regress/enum ERROR:  invalid input value for enum rainbow: "mauve" at character 8
2024-09-08 14:51:51.477 KST client backend[3075199] pg_regress/enum STATEMENT:  SELECT 'mauve'::rainbow;
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 ERROR:  value out of range: underflow
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e-70'::float8);
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 ERROR:  invalid input syntax for type double precision: "" at character 36
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 STATEMENT:  INSERT INTO FLOAT8_TBL(f1) VALUES ('');
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 ERROR:  "10e400" is out of range for type real at character 36
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('10e400');
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 ERROR:  "-10e400" is out of range for type real at character 36
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e400');
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 ERROR:  invalid input syntax for type double precision: "     " at character 36
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 STATEMENT:  INSERT INTO FLOAT8_TBL(f1) VALUES ('     ');
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 ERROR:  "10e-400" is out of range for type real at character 36
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('10e-400');
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 ERROR:  "-10e-400" is out of range for type real at character 36
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e-400');
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 ERROR:  invalid input syntax for type double precision: "xyz" at character 36
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 STATEMENT:  INSERT INTO FLOAT8_TBL(f1) VALUES ('xyz');
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 ERROR:  invalid input syntax for type real: "" at character 36
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('');
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 ERROR:  invalid input syntax for type double precision: "5.0.0" at character 36
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 STATEMENT:  INSERT INTO FLOAT8_TBL(f1) VALUES ('5.0.0');
2024-09-08 14:51:51.477 KST client backend[3075195] pg_regress/uuid ERROR:  invalid input syntax for type uuid: "11111111-1111-1111-1111-111111111111F" at character 38
2024-09-08 14:51:51.477 KST client backend[3075195] pg_regress/uuid STATEMENT:  INSERT INTO guid1(guid_field) VALUES('11111111-1111-1111-1111-111111111111F');
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 ERROR:  invalid input syntax for type real: "       " at character 36
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('       ');
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 ERROR:  invalid input syntax for type double precision: "5 . 0" at character 36
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 STATEMENT:  INSERT INTO FLOAT8_TBL(f1) VALUES ('5 . 0');
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 ERROR:  invalid input syntax for type real: "xyz" at character 36
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('xyz');
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 ERROR:  invalid input syntax for type double precision: "5.   0" at character 36
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 STATEMENT:  INSERT INTO FLOAT8_TBL(f1) VALUES ('5.   0');
2024-09-08 14:51:51.477 KST client backend[3075195] pg_regress/uuid ERROR:  invalid input syntax for type uuid: "{11111111-1111-1111-1111-11111111111}" at character 38
2024-09-08 14:51:51.477 KST client backend[3075195] pg_regress/uuid STATEMENT:  INSERT INTO guid1(guid_field) VALUES('{11111111-1111-1111-1111-11111111111}');
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 ERROR:  invalid input syntax for type real: "5.0.0" at character 36
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('5.0.0');
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 ERROR:  invalid input syntax for type double precision: "    - 3" at character 36
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 STATEMENT:  INSERT INTO FLOAT8_TBL(f1) VALUES ('    - 3');
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 ERROR:  invalid input syntax for type real: "5 . 0" at character 36
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('5 . 0');
2024-09-08 14:51:51.477 KST client backend[3075195] pg_regress/uuid ERROR:  invalid input syntax for type uuid: "111-11111-1111-1111-1111-111111111111" at character 38
2024-09-08 14:51:51.477 KST client backend[3075195] pg_regress/uuid STATEMENT:  INSERT INTO guid1(guid_field) VALUES('111-11111-1111-1111-1111-111111111111');
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 ERROR:  invalid input syntax for type double precision: "123           5" at character 36
2024-09-08 14:51:51.477 KST client backend[3075196] pg_regress/float8 STATEMENT:  INSERT INTO FLOAT8_TBL(f1) VALUES ('123           5');
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 ERROR:  invalid input syntax for type real: "5.   0" at character 36
2024-09-08 14:51:51.477 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('5.   0');
2024-09-08 14:51:51.477 KST client backend[3075195] pg_regress/uuid ERROR:  invalid input syntax for type uuid: "{22222222-2222-2222-2222-222222222222 " at character 38
2024-09-08 14:51:51.477 KST client backend[3075195] pg_regress/uuid STATEMENT:  INSERT INTO guid1(guid_field) VALUES('{22222222-2222-2222-2222-222222222222 ');
2024-09-08 14:51:51.478 KST client backend[3075197] pg_regress/float4 ERROR:  invalid input syntax for type real: "     - 3.0" at character 36
2024-09-08 14:51:51.478 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('     - 3.0');
2024-09-08 14:51:51.478 KST client backend[3075195] pg_regress/uuid ERROR:  invalid input syntax for type uuid: "11111111-1111-1111-G111-111111111111" at character 38
2024-09-08 14:51:51.478 KST client backend[3075195] pg_regress/uuid STATEMENT:  INSERT INTO guid1(guid_field) VALUES('11111111-1111-1111-G111-111111111111');
2024-09-08 14:51:51.478 KST client backend[3075197] pg_regress/float4 ERROR:  invalid input syntax for type real: "123            5" at character 36
2024-09-08 14:51:51.478 KST client backend[3075197] pg_regress/float4 STATEMENT:  INSERT INTO FLOAT4_TBL(f1) VALUES ('123            5');
2024-09-08 14:51:51.478 KST client backend[3075181] pg_regress/name ERROR:  string is not a valid identifier: "foo.boo[]"
2024-09-08 14:51:51.478 KST client backend[3075181] pg_regress/name STATEMENT:  SELECT parse_ident('foo.boo[]');
2024-09-08 14:51:51.478 KST client backend[3075195] pg_regress/uuid ERROR:  invalid input syntax for type uuid: "11+11111-1111-1111-1111-111111111111" at character 38
2024-09-08 14:51:51.478 KST client backend[3075195] pg_regress/uuid STATEMENT:  INSERT INTO guid1(guid_field) VALUES('11+11111-1111-1111-1111-111111111111');
2024-09-08 14:51:51.478 KST client backend[3075181] pg_regress/name ERROR:  string is not a valid identifier: " "
2024-09-08 14:51:51.478 KST client backend[3075181] pg_regress/name STATEMENT:  SELECT parse_ident(' ');
2024-09-08 14:51:51.478 KST client backend[3075191] pg_regress/bit ERROR:  bit string too long for type bit varying(11)
2024-09-08 14:51:51.478 KST client backend[3075191] pg_regress/bit STATEMENT:  INSERT INTO VARBIT_TABLE VALUES (B'101011111010');
2024-09-08 14:51:51.478 KST client backend[3075181] pg_regress/name ERROR:  string is not a valid identifier: " .aaa"
2024-09-08 14:51:51.478 KST client backend[3075181] pg_regress/name DETAIL:  No valid identifier before ".".
2024-09-08 14:51:51.478 KST client backend[3075181] pg_regress/name STATEMENT:  SELECT parse_ident(' .aaa');
2024-09-08 14:51:51.478 KST client backend[3075181] pg_regress/name ERROR:  string is not a valid identifier: " aaa . "
2024-09-08 14:51:51.478 KST client backend[3075181] pg_regress/name DETAIL:  No valid identifier after ".".
2024-09-08 14:51:51.478 KST client backend[3075181] pg_regress/name STATEMENT:  SELECT parse_ident(' aaa . ');
2024-09-08 14:51:51.478 KST client backend[3075181] pg_regress/name ERROR:  string is not a valid identifier: "aaa.a%b"
2024-09-08 14:51:51.478 KST client backend[3075181] pg_regress/name STATEMENT:  SELECT parse_ident('aaa.a%b');
2024-09-08 14:51:51.478 KST client backend[3075181] pg_regress/name ERROR:  string is not a valid identifier: "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
2024-09-08 14:51:51.478 KST client backend[3075181] pg_regress/name STATEMENT:  SELECT parse_ident(E'X\rXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX');
2024-09-08 14:51:51.478 KST client backend[3075198] pg_regress/txid ERROR:  invalid input syntax for type pg_snapshot: "1:9223372036854775808:3" at character 22
2024-09-08 14:51:51.478 KST client backend[3075198] pg_regress/txid STATEMENT:  SELECT txid_snapshot '1:9223372036854775808:3';
2024-09-08 14:51:51.478 KST client backend[3075196] pg_regress/float8 ERROR:  invalid input syntax for type double precision: "N A N" at character 8
2024-09-08 14:51:51.478 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT 'N A N'::float8;
2024-09-08 14:51:51.478 KST client backend[3075197] pg_regress/float4 ERROR:  invalid input syntax for type real: "N A N" at character 8
2024-09-08 14:51:51.478 KST client backend[3075197] pg_regress/float4 STATEMENT:  SELECT 'N A N'::float4;
2024-09-08 14:51:51.478 KST client backend[3075196] pg_regress/float8 ERROR:  invalid input syntax for type double precision: "NaN x" at character 8
2024-09-08 14:51:51.478 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT 'NaN x'::float8;
2024-09-08 14:51:51.478 KST client backend[3075176] pg_regress/boolean ERROR:  invalid input syntax for type boolean: "XXX" at character 43
2024-09-08 14:51:51.478 KST client backend[3075176] pg_regress/boolean STATEMENT:  INSERT INTO BOOLTBL2 (f1)
	   VALUES (bool 'XXX');
2024-09-08 14:51:51.478 KST client backend[3075197] pg_regress/float4 ERROR:  invalid input syntax for type real: "NaN x" at character 8
2024-09-08 14:51:51.478 KST client backend[3075197] pg_regress/float4 STATEMENT:  SELECT 'NaN x'::float4;
2024-09-08 14:51:51.478 KST client backend[3075196] pg_regress/float8 ERROR:  invalid input syntax for type double precision: " INFINITY    x" at character 8
2024-09-08 14:51:51.478 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT ' INFINITY    x'::float8;
2024-09-08 14:51:51.478 KST client backend[3075197] pg_regress/float4 ERROR:  invalid input syntax for type real: " INFINITY    x" at character 8
2024-09-08 14:51:51.478 KST client backend[3075197] pg_regress/float4 STATEMENT:  SELECT ' INFINITY    x'::float4;
2024-09-08 14:51:51.478 KST client backend[3075181] pg_regress/name ERROR:  string is not a valid identifier: ""c".X XXXXXXXXXX"
2024-09-08 14:51:51.478 KST client backend[3075181] pg_regress/name STATEMENT:  SELECT parse_ident(E'"c".X XXXX\002XXXXXX');
2024-09-08 14:51:51.478 KST client backend[3075181] pg_regress/name ERROR:  string is not a valid identifier: "1020"
2024-09-08 14:51:51.478 KST client backend[3075181] pg_regress/name STATEMENT:  SELECT parse_ident('1020');
2024-09-08 14:51:51.479 KST client backend[3075181] pg_regress/name ERROR:  string is not a valid identifier: "10.20"
2024-09-08 14:51:51.479 KST client backend[3075181] pg_regress/name STATEMENT:  SELECT parse_ident('10.20');
2024-09-08 14:51:51.479 KST client backend[3075181] pg_regress/name ERROR:  string is not a valid identifier: "."
2024-09-08 14:51:51.479 KST client backend[3075181] pg_regress/name DETAIL:  No valid identifier before ".".
2024-09-08 14:51:51.479 KST client backend[3075181] pg_regress/name STATEMENT:  SELECT parse_ident('.');
2024-09-08 14:51:51.479 KST client backend[3075181] pg_regress/name ERROR:  string is not a valid identifier: ".1020"
2024-09-08 14:51:51.479 KST client backend[3075181] pg_regress/name DETAIL:  No valid identifier before ".".
2024-09-08 14:51:51.479 KST client backend[3075181] pg_regress/name STATEMENT:  SELECT parse_ident('.1020');
2024-09-08 14:51:51.479 KST client backend[3075181] pg_regress/name ERROR:  string is not a valid identifier: "xxx.1020"
2024-09-08 14:51:51.479 KST client backend[3075181] pg_regress/name DETAIL:  No valid identifier after ".".
2024-09-08 14:51:51.479 KST client backend[3075181] pg_regress/name STATEMENT:  SELECT parse_ident('xxx.1020');
2024-09-08 14:51:51.479 KST client backend[3075202] pg_regress/pg_lsn ERROR:  pg_lsn out of range
2024-09-08 14:51:51.479 KST client backend[3075202] pg_regress/pg_lsn STATEMENT:  SELECT 'FFFFFFFF/FFFFFFFE'::pg_lsn + 2::numeric;
2024-09-08 14:51:51.479 KST client backend[3075202] pg_regress/pg_lsn ERROR:  pg_lsn out of range
2024-09-08 14:51:51.479 KST client backend[3075202] pg_regress/pg_lsn STATEMENT:  SELECT '0/1'::pg_lsn - 2::numeric;
2024-09-08 14:51:51.479 KST client backend[3075199] pg_regress/enum ERROR:  invalid enum label "plutoplutoplutoplutoplutoplutoplutoplutoplutoplutoplutoplutoplutopluto"
2024-09-08 14:51:51.479 KST client backend[3075199] pg_regress/enum DETAIL:  Labels must be 63 bytes or less.
2024-09-08 14:51:51.479 KST client backend[3075199] pg_regress/enum STATEMENT:  ALTER TYPE planets ADD VALUE
	  'plutoplutoplutoplutoplutoplutoplutoplutoplutoplutoplutoplutoplutopluto';
2024-09-08 14:51:51.479 KST client backend[3075201] pg_regress/regproc ERROR:  operator does not exist: ||// at character 16
2024-09-08 14:51:51.479 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regoper('||//');
2024-09-08 14:51:51.479 KST client backend[3075202] pg_regress/pg_lsn ERROR:  cannot add NaN to pg_lsn
2024-09-08 14:51:51.479 KST client backend[3075202] pg_regress/pg_lsn STATEMENT:  SELECT '0/16AE7F7'::pg_lsn + 'NaN'::numeric;
2024-09-08 14:51:51.479 KST client backend[3075201] pg_regress/regproc ERROR:  operator does not exist: ++(int4,int4) at character 20
2024-09-08 14:51:51.479 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regoperator('++(int4,int4)');
2024-09-08 14:51:51.479 KST client backend[3075191] pg_regress/bit ERROR:  negative substring length not allowed
2024-09-08 14:51:51.479 KST client backend[3075191] pg_regress/bit STATEMENT:  SELECT SUBSTRING('01010101'::bit(8) FROM -10 FOR -2147483646) AS "error";
2024-09-08 14:51:51.479 KST client backend[3075202] pg_regress/pg_lsn ERROR:  cannot subtract NaN from pg_lsn
2024-09-08 14:51:51.479 KST client backend[3075202] pg_regress/pg_lsn STATEMENT:  SELECT '0/16AE7F7'::pg_lsn - 'NaN'::numeric;
2024-09-08 14:51:51.479 KST client backend[3075201] pg_regress/regproc ERROR:  function "know" does not exist at character 16
2024-09-08 14:51:51.479 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regproc('know');
2024-09-08 14:51:51.479 KST client backend[3075199] pg_regress/enum ERROR:  "zeus" is not an existing enum label
2024-09-08 14:51:51.479 KST client backend[3075199] pg_regress/enum STATEMENT:  ALTER TYPE planets ADD VALUE 'pluto' AFTER 'zeus';
2024-09-08 14:51:51.479 KST client backend[3075201] pg_regress/regproc ERROR:  function "absinthe(numeric)" does not exist at character 21
2024-09-08 14:51:51.479 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regprocedure('absinthe(numeric)');
2024-09-08 14:51:51.479 KST client backend[3075201] pg_regress/regproc ERROR:  relation "pg_classes" does not exist at character 17
2024-09-08 14:51:51.479 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regclass('pg_classes');
2024-09-08 14:51:51.479 KST client backend[3075199] pg_regress/enum ERROR:  enum label "mercury" already exists
2024-09-08 14:51:51.479 KST client backend[3075199] pg_regress/enum STATEMENT:  ALTER TYPE planets ADD VALUE 'mercury';
2024-09-08 14:51:51.479 KST client backend[3075191] pg_regress/bit ERROR:  negative substring length not allowed
2024-09-08 14:51:51.479 KST client backend[3075191] pg_regress/bit STATEMENT:  SELECT SUBSTRING('01010101'::varbit FROM -10 FOR -2147483646) AS "error";
2024-09-08 14:51:51.479 KST client backend[3075201] pg_regress/regproc ERROR:  type "int3" does not exist at character 16
2024-09-08 14:51:51.479 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regtype('int3');
2024-09-08 14:51:51.479 KST client backend[3075201] pg_regress/regproc ERROR:  operator does not exist: ng_catalog.||/ at character 16
2024-09-08 14:51:51.479 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regoper('ng_catalog.||/');
2024-09-08 14:51:51.479 KST client backend[3075201] pg_regress/regproc ERROR:  operator does not exist: ng_catalog.+(int4,int4) at character 20
2024-09-08 14:51:51.479 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regoperator('ng_catalog.+(int4,int4)');
2024-09-08 14:51:51.479 KST client backend[3075201] pg_regress/regproc ERROR:  function "ng_catalog.now" does not exist at character 16
2024-09-08 14:51:51.479 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regproc('ng_catalog.now');
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc ERROR:  function "ng_catalog.abs(numeric)" does not exist at character 21
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regprocedure('ng_catalog.abs(numeric)');
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc ERROR:  relation "ng_catalog.pg_class" does not exist at character 17
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regclass('ng_catalog.pg_class');
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc ERROR:  schema "ng_catalog" does not exist at character 16
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regtype('ng_catalog.int4');
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc ERROR:  collation "ng_catalog.POSIX" for encoding "UTF8" does not exist at character 21
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regcollation('ng_catalog."POSIX"');
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc ERROR:  role "regress_regrole_test" does not exist at character 16
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regrole('regress_regrole_test');
2024-09-08 14:51:51.480 KST client backend[3075197] pg_regress/float4 ERROR:  division by zero
2024-09-08 14:51:51.480 KST client backend[3075197] pg_regress/float4 STATEMENT:  SELECT f.f1 / '0.0' from FLOAT4_TBL f;
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc ERROR:  role "regress_regrole_test" does not exist at character 16
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regrole('"regress_regrole_test"');
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc ERROR:  role "nonexistent" does not exist at character 16
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regrole('Nonexistent');
2024-09-08 14:51:51.480 KST client backend[3075203] pg_regress/rangetypes ERROR:  range lower bound must be less than or equal to range upper bound
2024-09-08 14:51:51.480 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select numrange(2.0, 1.0);
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc ERROR:  role "Nonexistent" does not exist at character 16
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regrole('"Nonexistent"');
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc ERROR:  invalid name syntax at character 16
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regrole('foo.bar');
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc ERROR:  schema "nonexistent" does not exist at character 21
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regnamespace('Nonexistent');
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc ERROR:  schema "Nonexistent" does not exist at character 21
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regnamespace('"Nonexistent"');
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc ERROR:  invalid name syntax at character 21
2024-09-08 14:51:51.480 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT regnamespace('foo.bar');
2024-09-08 14:51:51.480 KST client backend[3075197] pg_regress/float4 ERROR:  smallint out of range
2024-09-08 14:51:51.480 KST client backend[3075197] pg_regress/float4 STATEMENT:  SELECT '32767.6'::float4::int2;
2024-09-08 14:51:51.480 KST client backend[3075197] pg_regress/float4 ERROR:  smallint out of range
2024-09-08 14:51:51.480 KST client backend[3075197] pg_regress/float4 STATEMENT:  SELECT '-32768.6'::float4::int2;
2024-09-08 14:51:51.480 KST client backend[3075197] pg_regress/float4 ERROR:  integer out of range
2024-09-08 14:51:51.480 KST client backend[3075197] pg_regress/float4 STATEMENT:  SELECT '2147483647'::float4::int4;
2024-09-08 14:51:51.480 KST client backend[3075197] pg_regress/float4 ERROR:  integer out of range
2024-09-08 14:51:51.480 KST client backend[3075197] pg_regress/float4 STATEMENT:  SELECT '-2147483900'::float4::int4;
2024-09-08 14:51:51.481 KST client backend[3075197] pg_regress/float4 ERROR:  bigint out of range
2024-09-08 14:51:51.481 KST client backend[3075197] pg_regress/float4 STATEMENT:  SELECT '9223372036854775807'::float4::int8;
2024-09-08 14:51:51.481 KST client backend[3075200] pg_regress/money ERROR:  value "123456789012345678" is out of range for type money at character 8
2024-09-08 14:51:51.481 KST client backend[3075200] pg_regress/money STATEMENT:  SELECT '123456789012345678'::money;
2024-09-08 14:51:51.481 KST client backend[3075197] pg_regress/float4 ERROR:  bigint out of range
2024-09-08 14:51:51.481 KST client backend[3075197] pg_regress/float4 STATEMENT:  SELECT '-9223380000000000000'::float4::int8;
2024-09-08 14:51:51.481 KST client backend[3075200] pg_regress/money ERROR:  value "9223372036854775807" is out of range for type money at character 8
2024-09-08 14:51:51.481 KST client backend[3075200] pg_regress/money STATEMENT:  SELECT '9223372036854775807'::money;
2024-09-08 14:51:51.481 KST client backend[3075200] pg_regress/money ERROR:  value "-123456789012345678" is out of range for type money at character 8
2024-09-08 14:51:51.481 KST client backend[3075200] pg_regress/money STATEMENT:  SELECT '-123456789012345678'::money;
2024-09-08 14:51:51.481 KST client backend[3075200] pg_regress/money ERROR:  value "-9223372036854775808" is out of range for type money at character 8
2024-09-08 14:51:51.481 KST client backend[3075200] pg_regress/money STATEMENT:  SELECT '-9223372036854775808'::money;
2024-09-08 14:51:51.481 KST client backend[3075195] pg_regress/uuid ERROR:  duplicate key value violates unique constraint "guid1_unique_btree"
2024-09-08 14:51:51.481 KST client backend[3075195] pg_regress/uuid DETAIL:  Key (guid_field)=(11111111-1111-1111-1111-111111111111) already exists.
2024-09-08 14:51:51.481 KST client backend[3075195] pg_regress/uuid STATEMENT:  INSERT INTO guid1(guid_field) VALUES('11111111-1111-1111-1111-111111111111');
2024-09-08 14:51:51.481 KST client backend[3075196] pg_regress/float8 ERROR:  zero raised to a negative power is undefined
2024-09-08 14:51:51.481 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT power(float8 '0', float8 '-inf');
2024-09-08 14:51:51.481 KST client backend[3075200] pg_regress/money ERROR:  value "-92233720368547758.09" is out of range for type money at character 8
2024-09-08 14:51:51.481 KST client backend[3075200] pg_regress/money STATEMENT:  SELECT '-92233720368547758.09'::money;
2024-09-08 14:51:51.481 KST client backend[3075203] pg_regress/rangetypes ERROR:  result of range union would not be contiguous
2024-09-08 14:51:51.481 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select numrange(1.0, 2.0) + numrange(2.5, 3.0);
2024-09-08 14:51:51.481 KST client backend[3075200] pg_regress/money ERROR:  value "92233720368547758.08" is out of range for type money at character 8
2024-09-08 14:51:51.481 KST client backend[3075200] pg_regress/money STATEMENT:  SELECT '92233720368547758.08'::money;
2024-09-08 14:51:51.481 KST client backend[3075200] pg_regress/money ERROR:  value "-92233720368547758.085" is out of range for type money at character 8
2024-09-08 14:51:51.481 KST client backend[3075200] pg_regress/money STATEMENT:  SELECT '-92233720368547758.085'::money;
2024-09-08 14:51:51.482 KST client backend[3075200] pg_regress/money ERROR:  value "92233720368547758.075" is out of range for type money at character 8
2024-09-08 14:51:51.482 KST client backend[3075200] pg_regress/money STATEMENT:  SELECT '92233720368547758.075'::money;
2024-09-08 14:51:51.482 KST client backend[3075196] pg_regress/float8 ERROR:  a negative number raised to a non-integer power yields a complex result
2024-09-08 14:51:51.482 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT power(float8 '-inf', float8 '3.5');
2024-09-08 14:51:51.482 KST client backend[3075201] pg_regress/regproc ERROR:  syntax error at or near "type" at character 11
2024-09-08 14:51:51.482 KST client backend[3075201] pg_regress/regproc CONTEXT:  invalid type name "incorrect type name syntax"
2024-09-08 14:51:51.482 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT * FROM pg_input_error_info('incorrect type name syntax', 'regtype');
2024-09-08 14:51:51.483 KST client backend[3075201] pg_regress/regproc ERROR:  invalid NUMERIC type modifier
2024-09-08 14:51:51.483 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT * FROM pg_input_error_info('numeric(1,2,3)', 'regtype');
2024-09-08 14:51:51.483 KST client backend[3075201] pg_regress/regproc ERROR:  improper qualified name (too many dotted names): way.too.many.names
2024-09-08 14:51:51.483 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT * FROM pg_input_error_info('way.too.many.names', 'regtype');
2024-09-08 14:51:51.483 KST client backend[3075201] pg_regress/regproc ERROR:  cross-database references are not implemented: no_such_catalog.schema.name
2024-09-08 14:51:51.483 KST client backend[3075201] pg_regress/regproc STATEMENT:  SELECT * FROM pg_input_error_info('no_such_catalog.schema.name', 'regtype');
2024-09-08 14:51:51.483 KST client backend[3075196] pg_regress/float8 ERROR:  value out of range: overflow
2024-09-08 14:51:51.483 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT f.f1 * '1e200' from FLOAT8_TBL f;
2024-09-08 14:51:51.483 KST client backend[3075196] pg_regress/float8 ERROR:  value out of range: overflow
2024-09-08 14:51:51.483 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT f.f1 ^ '1e200' from FLOAT8_TBL f;
2024-09-08 14:51:51.483 KST client backend[3075196] pg_regress/float8 ERROR:  cannot take logarithm of zero
2024-09-08 14:51:51.483 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT ln(f.f1) from FLOAT8_TBL f where f.f1 = '0.0' ;
2024-09-08 14:51:51.483 KST client backend[3075196] pg_regress/float8 ERROR:  cannot take logarithm of a negative number
2024-09-08 14:51:51.483 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT ln(f.f1) from FLOAT8_TBL f where f.f1 < '0.0' ;
2024-09-08 14:51:51.483 KST client backend[3075196] pg_regress/float8 ERROR:  value out of range: underflow
2024-09-08 14:51:51.483 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT exp(f.f1) from FLOAT8_TBL f;
2024-09-08 14:51:51.483 KST client backend[3075196] pg_regress/float8 ERROR:  division by zero
2024-09-08 14:51:51.483 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT f.f1 / '0.0' from FLOAT8_TBL f;
2024-09-08 14:51:51.484 KST client backend[3075191] pg_regress/bit ERROR:  cannot AND bit strings of different sizes
2024-09-08 14:51:51.484 KST client backend[3075191] pg_regress/bit STATEMENT:  select B'001' & B'10';
2024-09-08 14:51:51.484 KST client backend[3075191] pg_regress/bit ERROR:  cannot OR bit strings of different sizes
2024-09-08 14:51:51.484 KST client backend[3075191] pg_regress/bit STATEMENT:  select B'0111' | B'011';
2024-09-08 14:51:51.484 KST client backend[3075191] pg_regress/bit ERROR:  cannot XOR bit strings of different sizes
2024-09-08 14:51:51.484 KST client backend[3075191] pg_regress/bit STATEMENT:  select B'0010' # B'011101';
2024-09-08 14:51:51.484 KST client backend[3075196] pg_regress/float8 ERROR:  input is out of range
2024-09-08 14:51:51.484 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT acosh(float8 '-infinity');
2024-09-08 14:51:51.484 KST client backend[3075196] pg_regress/float8 ERROR:  input is out of range
2024-09-08 14:51:51.484 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT atanh(float8 'infinity');
2024-09-08 14:51:51.484 KST client backend[3075196] pg_regress/float8 ERROR:  input is out of range
2024-09-08 14:51:51.484 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT atanh(float8 '-infinity');
2024-09-08 14:51:51.485 KST client backend[3075196] pg_regress/float8 ERROR:  "10e400" is out of range for type double precision at character 36
2024-09-08 14:51:51.485 KST client backend[3075196] pg_regress/float8 STATEMENT:  INSERT INTO FLOAT8_TBL(f1) VALUES ('10e400');
2024-09-08 14:51:51.485 KST client backend[3075196] pg_regress/float8 ERROR:  "-10e400" is out of range for type double precision at character 36
2024-09-08 14:51:51.485 KST client backend[3075196] pg_regress/float8 STATEMENT:  INSERT INTO FLOAT8_TBL(f1) VALUES ('-10e400');
2024-09-08 14:51:51.485 KST client backend[3075196] pg_regress/float8 ERROR:  "10e-400" is out of range for type double precision at character 36
2024-09-08 14:51:51.485 KST client backend[3075196] pg_regress/float8 STATEMENT:  INSERT INTO FLOAT8_TBL(f1) VALUES ('10e-400');
2024-09-08 14:51:51.485 KST client backend[3075196] pg_regress/float8 ERROR:  "-10e-400" is out of range for type double precision at character 36
2024-09-08 14:51:51.485 KST client backend[3075196] pg_regress/float8 STATEMENT:  INSERT INTO FLOAT8_TBL(f1) VALUES ('-10e-400');
2024-09-08 14:51:51.486 KST client backend[3075196] pg_regress/float8 ERROR:  smallint out of range
2024-09-08 14:51:51.486 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT '32767.6'::float8::int2;
2024-09-08 14:51:51.486 KST client backend[3075196] pg_regress/float8 ERROR:  smallint out of range
2024-09-08 14:51:51.486 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT '-32768.6'::float8::int2;
2024-09-08 14:51:51.486 KST client backend[3075196] pg_regress/float8 ERROR:  integer out of range
2024-09-08 14:51:51.486 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT '2147483647.6'::float8::int4;
2024-09-08 14:51:51.486 KST client backend[3075196] pg_regress/float8 ERROR:  integer out of range
2024-09-08 14:51:51.486 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT '-2147483648.6'::float8::int4;
2024-09-08 14:51:51.486 KST client backend[3075196] pg_regress/float8 ERROR:  bigint out of range
2024-09-08 14:51:51.486 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT '9223372036854775807'::float8::int8;
2024-09-08 14:51:51.486 KST client backend[3075196] pg_regress/float8 ERROR:  bigint out of range
2024-09-08 14:51:51.486 KST client backend[3075196] pg_regress/float8 STATEMENT:  SELECT '-9223372036854780000'::float8::int8;
2024-09-08 14:51:51.488 KST client backend[3075199] pg_regress/enum ERROR:  value for domain rgb violates check constraint "rgb_check"
2024-09-08 14:51:51.488 KST client backend[3075199] pg_regress/enum STATEMENT:  SELECT 'purple'::rgb;
2024-09-08 14:51:51.488 KST client backend[3075199] pg_regress/enum ERROR:  value for domain rgb violates check constraint "rgb_check"
2024-09-08 14:51:51.488 KST client backend[3075199] pg_regress/enum STATEMENT:  SELECT 'purple'::rainbow::rgb;
2024-09-08 14:51:51.489 KST client backend[3075191] pg_regress/bit ERROR:  bit index 16 out of valid range (0..15)
2024-09-08 14:51:51.489 KST client backend[3075191] pg_regress/bit STATEMENT:  SELECT set_bit(B'0101011000100100', 16, 1);
2024-09-08 14:51:51.492 KST client backend[3075199] pg_regress/enum ERROR:  insert or update on table "enumtest_child" violates foreign key constraint "enumtest_child_parent_fkey"
2024-09-08 14:51:51.492 KST client backend[3075199] pg_regress/enum DETAIL:  Key (parent)=(blue) is not present in table "enumtest_parent".
2024-09-08 14:51:51.492 KST client backend[3075199] pg_regress/enum STATEMENT:  INSERT INTO enumtest_child VALUES ('blue');
2024-09-08 14:51:51.493 KST client backend[3075199] pg_regress/enum ERROR:  update or delete on table "enumtest_parent" violates foreign key constraint "enumtest_child_parent_fkey" on table "enumtest_child"
2024-09-08 14:51:51.493 KST client backend[3075199] pg_regress/enum DETAIL:  Key (id)=(red) is still referenced from table "enumtest_child".
2024-09-08 14:51:51.493 KST client backend[3075199] pg_regress/enum STATEMENT:  DELETE FROM enumtest_parent;
2024-09-08 14:51:51.493 KST client backend[3075199] pg_regress/enum ERROR:  foreign key constraint "enumtest_bogus_child_parent_fkey" cannot be implemented
2024-09-08 14:51:51.493 KST client backend[3075199] pg_regress/enum DETAIL:  Key columns "parent" and "id" are of incompatible types: bogus and rainbow.
2024-09-08 14:51:51.493 KST client backend[3075199] pg_regress/enum STATEMENT:  CREATE TABLE enumtest_bogus_child(parent bogus REFERENCES enumtest_parent);
2024-09-08 14:51:51.494 KST client backend[3075199] pg_regress/enum ERROR:  "red" is not an existing enum label
2024-09-08 14:51:51.494 KST client backend[3075199] pg_regress/enum STATEMENT:  ALTER TYPE rainbow RENAME VALUE 'red' TO 'crimson';
2024-09-08 14:51:51.494 KST client backend[3075199] pg_regress/enum ERROR:  enum label "green" already exists
2024-09-08 14:51:51.494 KST client backend[3075199] pg_regress/enum STATEMENT:  ALTER TYPE rainbow RENAME VALUE 'blue' TO 'green';
2024-09-08 14:51:51.494 KST client backend[3075199] pg_regress/enum ERROR:  unsafe use of new value "new" of enum type bogus at character 8
2024-09-08 14:51:51.494 KST client backend[3075199] pg_regress/enum HINT:  New enum values must be committed before they can be used.
2024-09-08 14:51:51.494 KST client backend[3075199] pg_regress/enum STATEMENT:  SELECT 'new'::bogus;
2024-09-08 14:51:51.494 KST client backend[3075199] pg_regress/enum ERROR:  unsafe use of new value "new" of enum type bogus
2024-09-08 14:51:51.494 KST client backend[3075199] pg_regress/enum HINT:  New enum values must be committed before they can be used.
2024-09-08 14:51:51.494 KST client backend[3075199] pg_regress/enum STATEMENT:  SELECT enum_last(null::bogus);
2024-09-08 14:51:51.494 KST client backend[3075199] pg_regress/enum ERROR:  unsafe use of new value "new" of enum type bogus
2024-09-08 14:51:51.494 KST client backend[3075199] pg_regress/enum HINT:  New enum values must be committed before they can be used.
2024-09-08 14:51:51.494 KST client backend[3075199] pg_regress/enum STATEMENT:  SELECT enum_range(null::bogus);
2024-09-08 14:51:51.495 KST client backend[3075199] pg_regress/enum ERROR:  unsafe use of new value "bad" of enum type bogon at character 8
2024-09-08 14:51:51.495 KST client backend[3075199] pg_regress/enum HINT:  New enum values must be committed before they can be used.
2024-09-08 14:51:51.495 KST client backend[3075199] pg_regress/enum STATEMENT:  SELECT 'bad'::bogon;
2024-09-08 14:51:51.496 KST client backend[3075199] pg_regress/enum ERROR:  unsafe use of new value "bad" of enum type bogon
2024-09-08 14:51:51.496 KST client backend[3075199] pg_regress/enum HINT:  New enum values must be committed before they can be used.
2024-09-08 14:51:51.496 KST client backend[3075199] pg_regress/enum STATEMENT:  select enum_range(null::bogon);
2024-09-08 14:51:51.513 KST client backend[3075192] pg_regress/numeric ERROR:  division by zero
2024-09-08 14:51:51.513 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT 'inf'::numeric / '0';
2024-09-08 14:51:51.513 KST client backend[3075192] pg_regress/numeric ERROR:  division by zero
2024-09-08 14:51:51.513 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT '-inf'::numeric / '0';
2024-09-08 14:51:51.513 KST client backend[3075192] pg_regress/numeric ERROR:  division by zero
2024-09-08 14:51:51.513 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT '0'::numeric / '0';
2024-09-08 14:51:51.513 KST client backend[3075192] pg_regress/numeric ERROR:  division by zero
2024-09-08 14:51:51.513 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT 'inf'::numeric % '0';
2024-09-08 14:51:51.513 KST client backend[3075192] pg_regress/numeric ERROR:  division by zero
2024-09-08 14:51:51.513 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT '-inf'::numeric % '0';
2024-09-08 14:51:51.513 KST client backend[3075192] pg_regress/numeric ERROR:  division by zero
2024-09-08 14:51:51.513 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT '0'::numeric % '0';
2024-09-08 14:51:51.513 KST client backend[3075192] pg_regress/numeric ERROR:  division by zero
2024-09-08 14:51:51.513 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT div('inf'::numeric, '0');
2024-09-08 14:51:51.513 KST client backend[3075192] pg_regress/numeric ERROR:  division by zero
2024-09-08 14:51:51.513 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT div('-inf'::numeric, '0');
2024-09-08 14:51:51.513 KST client backend[3075192] pg_regress/numeric ERROR:  division by zero
2024-09-08 14:51:51.513 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT div('0'::numeric, '0');
2024-09-08 14:51:51.514 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take square root of a negative number
2024-09-08 14:51:51.514 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT sqrt('-1'::numeric);
2024-09-08 14:51:51.514 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take square root of a negative number
2024-09-08 14:51:51.514 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT sqrt('-inf'::numeric);
2024-09-08 14:51:51.514 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of zero
2024-09-08 14:51:51.514 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT ln('0'::numeric);
2024-09-08 14:51:51.514 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of a negative number
2024-09-08 14:51:51.514 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT ln('-1'::numeric);
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of a negative number
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT ln('-inf'::numeric);
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of zero
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT log('0'::numeric, '10');
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of zero
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT log('10'::numeric, '0');
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of a negative number
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT log('-inf'::numeric, '10');
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of a negative number
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT log('10'::numeric, '-inf');
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of zero
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT log('inf'::numeric, '0');
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of a negative number
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT log('inf'::numeric, '-inf');
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of a negative number
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT log('-inf'::numeric, 'inf');
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric ERROR:  zero raised to a negative power is undefined
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT power('0'::numeric, '-1');
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric ERROR:  zero raised to a negative power is undefined
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT power('0'::numeric, '-inf');
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric ERROR:  a negative number raised to a non-integer power yields a complex result
2024-09-08 14:51:51.515 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT power('-2'::numeric, '3.3');
2024-09-08 14:51:51.516 KST client backend[3075192] pg_regress/numeric ERROR:  a negative number raised to a non-integer power yields a complex result
2024-09-08 14:51:51.516 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT power('-2'::numeric, '-1.5');
2024-09-08 14:51:51.516 KST client backend[3075192] pg_regress/numeric ERROR:  a negative number raised to a non-integer power yields a complex result
2024-09-08 14:51:51.516 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT power('-inf'::numeric, '4.5');
2024-09-08 14:51:51.517 KST client backend[3075192] pg_regress/numeric ERROR:  numeric field overflow
2024-09-08 14:51:51.517 KST client backend[3075192] pg_regress/numeric DETAIL:  A field with precision 4, scale 4 must round to an absolute value less than 1.
2024-09-08 14:51:51.517 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO fract_only VALUES (3, '1.0');
2024-09-08 14:51:51.517 KST client backend[3075192] pg_regress/numeric ERROR:  numeric field overflow
2024-09-08 14:51:51.517 KST client backend[3075192] pg_regress/numeric DETAIL:  A field with precision 4, scale 4 must round to an absolute value less than 1.
2024-09-08 14:51:51.517 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO fract_only VALUES (6, '0.99995');
2024-09-08 14:51:51.517 KST client backend[3075192] pg_regress/numeric ERROR:  numeric field overflow
2024-09-08 14:51:51.517 KST client backend[3075192] pg_regress/numeric DETAIL:  A field with precision 4, scale 4 cannot hold an infinite value.
2024-09-08 14:51:51.517 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO fract_only VALUES (10, 'Inf');
2024-09-08 14:51:51.517 KST client backend[3075192] pg_regress/numeric ERROR:  numeric field overflow
2024-09-08 14:51:51.517 KST client backend[3075192] pg_regress/numeric DETAIL:  A field with precision 4, scale 4 cannot hold an infinite value.
2024-09-08 14:51:51.517 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO fract_only VALUES (11, '-Inf');
2024-09-08 14:51:51.518 KST client backend[3075192] pg_regress/numeric ERROR:  bigint out of range
2024-09-08 14:51:51.518 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT (-9223372036854775808.5)::int8;
2024-09-08 14:51:51.518 KST client backend[3075192] pg_regress/numeric ERROR:  bigint out of range
2024-09-08 14:51:51.518 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT 9223372036854775807.5::int8;
2024-09-08 14:51:51.518 KST client backend[3075192] pg_regress/numeric ERROR:  integer out of range
2024-09-08 14:51:51.518 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT (-2147483648.5)::int4;
2024-09-08 14:51:51.518 KST client backend[3075192] pg_regress/numeric ERROR:  integer out of range
2024-09-08 14:51:51.518 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT 2147483647.5::int4;
2024-09-08 14:51:51.518 KST client backend[3075192] pg_regress/numeric ERROR:  smallint out of range
2024-09-08 14:51:51.518 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT (-32768.5)::int2;
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric ERROR:  smallint out of range
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT 32767.5::int2;
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric ERROR:  cannot convert NaN to smallint
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT 'NaN'::numeric::int2;
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric ERROR:  cannot convert infinity to smallint
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT 'Infinity'::numeric::int2;
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric ERROR:  cannot convert infinity to smallint
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT '-Infinity'::numeric::int2;
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric ERROR:  cannot convert NaN to integer
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT 'NaN'::numeric::int4;
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric ERROR:  cannot convert infinity to integer
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT 'Infinity'::numeric::int4;
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric ERROR:  cannot convert infinity to integer
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT '-Infinity'::numeric::int4;
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric ERROR:  cannot convert NaN to bigint
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT 'NaN'::numeric::int8;
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric ERROR:  cannot convert infinity to bigint
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT 'Infinity'::numeric::int8;
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric ERROR:  cannot convert infinity to bigint
2024-09-08 14:51:51.519 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT '-Infinity'::numeric::int8;
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric ERROR:  count must be greater than zero
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT width_bucket(5.0, 3.0, 4.0, 0);
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric ERROR:  count must be greater than zero
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT width_bucket(5.0, 3.0, 4.0, -5);
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric ERROR:  lower bound cannot equal upper bound
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT width_bucket(3.5, 3.0, 3.0, 888);
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric ERROR:  count must be greater than zero
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT width_bucket(5.0::float8, 3.0::float8, 4.0::float8, 0);
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric ERROR:  count must be greater than zero
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT width_bucket(5.0::float8, 3.0::float8, 4.0::float8, -5);
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric ERROR:  lower bound cannot equal upper bound
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT width_bucket(3.5::float8, 3.0::float8, 3.0::float8, 888);
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric ERROR:  operand, lower bound, and upper bound cannot be NaN
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT width_bucket('NaN', 3.0, 4.0, 888);
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric ERROR:  operand, lower bound, and upper bound cannot be NaN
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT width_bucket(0::float8, 'NaN', 4.0::float8, 888);
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric ERROR:  lower and upper bounds must be finite
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT width_bucket(2.0, 3.0, '-inf', 888);
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric ERROR:  lower and upper bounds must be finite
2024-09-08 14:51:51.522 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT width_bucket(0::float8, '-inf', 4.0::float8, 888);
2024-09-08 14:51:51.523 KST client backend[3075192] pg_regress/numeric ERROR:  lower and upper bounds must be finite
2024-09-08 14:51:51.523 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT width_bucket(0.0::numeric, 'Infinity'::numeric, 5, 10);
2024-09-08 14:51:51.523 KST client backend[3075192] pg_regress/numeric ERROR:  lower and upper bounds must be finite
2024-09-08 14:51:51.523 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT width_bucket(0.0::numeric, 5, '-Infinity'::numeric, 20);
2024-09-08 14:51:51.523 KST client backend[3075192] pg_regress/numeric ERROR:  lower and upper bounds must be finite
2024-09-08 14:51:51.523 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT width_bucket(0.0::float8, 'Infinity'::float8, 5, 10);
2024-09-08 14:51:51.523 KST client backend[3075192] pg_regress/numeric ERROR:  lower and upper bounds must be finite
2024-09-08 14:51:51.523 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT width_bucket(0.0::float8, 5, '-Infinity'::float8, 20);
2024-09-08 14:51:51.525 KST client backend[3075192] pg_regress/numeric ERROR:  integer out of range
2024-09-08 14:51:51.525 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT width_bucket(1::float8, 0, 1, 2147483647);
2024-09-08 14:51:51.525 KST client backend[3075192] pg_regress/numeric ERROR:  integer out of range
2024-09-08 14:51:51.525 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT width_bucket(0::float8, 1, 0, 2147483647);
2024-09-08 14:51:51.530 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "     " at character 40
2024-09-08 14:51:51.530 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('     ');
2024-09-08 14:51:51.530 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "   1234   %" at character 40
2024-09-08 14:51:51.530 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('   1234   %');
2024-09-08 14:51:51.530 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "xyz" at character 40
2024-09-08 14:51:51.530 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('xyz');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "- 1234" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('- 1234');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "5 . 0" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('5 . 0');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "5. 0   " at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('5. 0   ');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: " N aN " at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES (' N aN ');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "+NaN" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('+NaN');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "-NaN" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('-NaN');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "+ infinity" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('+ infinity');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "_123" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('_123');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "123_" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('123_');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "12__34" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('12__34');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "123_.456" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('123_.456');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "123._456" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('123._456');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "1.2e_34" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('1.2e_34');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "1.2e34_" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('1.2e34_');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "1.2e3__4" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('1.2e3__4');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "0b1112" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('0b1112');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "0c1112" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('0c1112');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "0o12345678" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('0o12345678');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "0x1eg" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('0x1eg');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "0x12.34" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('0x12.34');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "0x__1234" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('0x__1234');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "0x1234_" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('0x1234_');
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric ERROR:  invalid input syntax for type numeric: "0x12__34" at character 40
2024-09-08 14:51:51.531 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_input_test(n1) VALUES ('0x12__34');
2024-09-08 14:51:51.537 KST client backend[3075192] pg_regress/numeric ERROR:  numeric field overflow
2024-09-08 14:51:51.537 KST client backend[3075192] pg_regress/numeric DETAIL:  A field with precision 3, scale -6 cannot hold an infinite value.
2024-09-08 14:51:51.537 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_typemod_test (millions) VALUES ('inf');
2024-09-08 14:51:51.537 KST client backend[3075192] pg_regress/numeric ERROR:  numeric field overflow
2024-09-08 14:51:51.537 KST client backend[3075192] pg_regress/numeric DETAIL:  A field with precision 3, scale -6 must round to an absolute value less than 10^9.
2024-09-08 14:51:51.537 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_typemod_test (millions) VALUES (999500000);
2024-09-08 14:51:51.537 KST client backend[3075192] pg_regress/numeric ERROR:  numeric field overflow
2024-09-08 14:51:51.537 KST client backend[3075192] pg_regress/numeric DETAIL:  A field with precision 3, scale -3 must round to an absolute value less than 10^6.
2024-09-08 14:51:51.537 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_typemod_test (thousands) VALUES (999500);
2024-09-08 14:51:51.537 KST client backend[3075192] pg_regress/numeric ERROR:  numeric field overflow
2024-09-08 14:51:51.537 KST client backend[3075192] pg_regress/numeric DETAIL:  A field with precision 3, scale 0 must round to an absolute value less than 10^3.
2024-09-08 14:51:51.537 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_typemod_test (units) VALUES (999.5);
2024-09-08 14:51:51.537 KST client backend[3075192] pg_regress/numeric ERROR:  numeric field overflow
2024-09-08 14:51:51.537 KST client backend[3075192] pg_regress/numeric DETAIL:  A field with precision 3, scale 3 must round to an absolute value less than 1.
2024-09-08 14:51:51.537 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_typemod_test (thousandths) VALUES (0.9995);
2024-09-08 14:51:51.537 KST client backend[3075192] pg_regress/numeric ERROR:  numeric field overflow
2024-09-08 14:51:51.537 KST client backend[3075192] pg_regress/numeric DETAIL:  A field with precision 3, scale 6 must round to an absolute value less than 10^-3.
2024-09-08 14:51:51.537 KST client backend[3075192] pg_regress/numeric STATEMENT:  INSERT INTO num_typemod_test (millionths) VALUES (0.0009995);
2024-09-08 14:51:51.543 KST client backend[3075192] pg_regress/numeric ERROR:  value overflows numeric format
2024-09-08 14:51:51.543 KST client backend[3075192] pg_regress/numeric STATEMENT:  select 10.0 ^ 2147483647 as overflows;
2024-09-08 14:51:51.543 KST client backend[3075192] pg_regress/numeric ERROR:  value overflows numeric format
2024-09-08 14:51:51.543 KST client backend[3075192] pg_regress/numeric STATEMENT:  select 117743296169.0 ^ 1000000000 as overflows;
2024-09-08 14:51:51.545 KST client backend[3075192] pg_regress/numeric ERROR:  zero raised to a negative power is undefined
2024-09-08 14:51:51.545 KST client backend[3075192] pg_regress/numeric STATEMENT:  select 0.0 ^ (-12.34);
2024-09-08 14:51:51.546 KST client backend[3075192] pg_regress/numeric ERROR:  a negative number raised to a non-integer power yields a complex result
2024-09-08 14:51:51.546 KST client backend[3075192] pg_regress/numeric STATEMENT:  select (-12.34) ^ 1.2;
2024-09-08 14:51:51.548 KST client backend[3075192] pg_regress/numeric ERROR:  step size cannot equal zero
2024-09-08 14:51:51.548 KST client backend[3075192] pg_regress/numeric STATEMENT:  select * from generate_series(-100::numeric, 100::numeric, 0::numeric);
2024-09-08 14:51:51.548 KST client backend[3075192] pg_regress/numeric ERROR:  step size cannot be NaN
2024-09-08 14:51:51.548 KST client backend[3075192] pg_regress/numeric STATEMENT:  select * from generate_series(-100::numeric, 100::numeric, 'nan'::numeric);
2024-09-08 14:51:51.548 KST client backend[3075192] pg_regress/numeric ERROR:  start value cannot be NaN
2024-09-08 14:51:51.548 KST client backend[3075192] pg_regress/numeric STATEMENT:  select * from generate_series('nan'::numeric, 100::numeric, 10::numeric);
2024-09-08 14:51:51.548 KST client backend[3075192] pg_regress/numeric ERROR:  stop value cannot be NaN
2024-09-08 14:51:51.548 KST client backend[3075192] pg_regress/numeric STATEMENT:  select * from generate_series(0::numeric, 'nan'::numeric, 10::numeric);
2024-09-08 14:51:51.548 KST client backend[3075192] pg_regress/numeric ERROR:  start value cannot be infinity
2024-09-08 14:51:51.548 KST client backend[3075192] pg_regress/numeric STATEMENT:  select * from generate_series('inf'::numeric, 'inf'::numeric, 10::numeric);
2024-09-08 14:51:51.548 KST client backend[3075192] pg_regress/numeric ERROR:  stop value cannot be infinity
2024-09-08 14:51:51.548 KST client backend[3075192] pg_regress/numeric STATEMENT:  select * from generate_series(0::numeric, 'inf'::numeric, 10::numeric);
2024-09-08 14:51:51.548 KST client backend[3075192] pg_regress/numeric ERROR:  step size cannot be infinity
2024-09-08 14:51:51.548 KST client backend[3075192] pg_regress/numeric STATEMENT:  select * from generate_series(0::numeric, '42'::numeric, '-inf'::numeric);
2024-09-08 14:51:51.549 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of a negative number
2024-09-08 14:51:51.549 KST client backend[3075192] pg_regress/numeric STATEMENT:  select ln(-12.34);
2024-09-08 14:51:51.549 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of zero
2024-09-08 14:51:51.549 KST client backend[3075192] pg_regress/numeric STATEMENT:  select ln(0.0);
2024-09-08 14:51:51.549 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of a negative number
2024-09-08 14:51:51.549 KST client backend[3075192] pg_regress/numeric CONTEXT:  SQL function "log" statement 1
2024-09-08 14:51:51.549 KST client backend[3075192] pg_regress/numeric STATEMENT:  select log(-12.34);
2024-09-08 14:51:51.549 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of zero
2024-09-08 14:51:51.549 KST client backend[3075192] pg_regress/numeric CONTEXT:  SQL function "log" statement 1
2024-09-08 14:51:51.549 KST client backend[3075192] pg_regress/numeric STATEMENT:  select log(0.0);
2024-09-08 14:51:51.550 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of a negative number
2024-09-08 14:51:51.550 KST client backend[3075192] pg_regress/numeric STATEMENT:  select log(-12.34, 56.78);
2024-09-08 14:51:51.550 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of a negative number
2024-09-08 14:51:51.550 KST client backend[3075192] pg_regress/numeric STATEMENT:  select log(-12.34, -56.78);
2024-09-08 14:51:51.550 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of a negative number
2024-09-08 14:51:51.550 KST client backend[3075192] pg_regress/numeric STATEMENT:  select log(12.34, -56.78);
2024-09-08 14:51:51.550 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of zero
2024-09-08 14:51:51.550 KST client backend[3075192] pg_regress/numeric STATEMENT:  select log(0.0, 12.34);
2024-09-08 14:51:51.550 KST client backend[3075192] pg_regress/numeric ERROR:  cannot take logarithm of zero
2024-09-08 14:51:51.550 KST client backend[3075192] pg_regress/numeric STATEMENT:  select log(12.34, 0.0);
2024-09-08 14:51:51.550 KST client backend[3075192] pg_regress/numeric ERROR:  division by zero
2024-09-08 14:51:51.550 KST client backend[3075192] pg_regress/numeric STATEMENT:  select log(1.0, 12.34);
2024-09-08 14:51:51.569 KST client backend[3075192] pg_regress/numeric LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075192.0", size 1400000
2024-09-08 14:51:51.569 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT SUM(9999::numeric) FROM generate_series(1, 100000);
2024-09-08 14:51:51.584 KST client backend[3075192] pg_regress/numeric LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075192.1", size 1400000
2024-09-08 14:51:51.584 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT SUM((-9999)::numeric) FROM generate_series(1, 100000);
2024-09-08 14:51:51.617 KST client backend[3075192] pg_regress/numeric ERROR:  value overflows numeric format
2024-09-08 14:51:51.617 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT lcm(9999 * (10::numeric)^131068 + (10::numeric^131068 - 1), 2);
2024-09-08 14:51:51.617 KST client backend[3075192] pg_regress/numeric ERROR:  value overflows numeric format
2024-09-08 14:51:51.617 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT factorial(100000);
2024-09-08 14:51:51.617 KST client backend[3075192] pg_regress/numeric ERROR:  factorial of a negative number is undefined
2024-09-08 14:51:51.617 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT factorial(-4);
2024-09-08 14:51:51.617 KST client backend[3075192] pg_regress/numeric ERROR:  pg_lsn out of range
2024-09-08 14:51:51.617 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT pg_lsn(-1::numeric);
2024-09-08 14:51:51.617 KST client backend[3075192] pg_regress/numeric ERROR:  pg_lsn out of range
2024-09-08 14:51:51.617 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT pg_lsn(18446744073709551616::numeric);
2024-09-08 14:51:51.618 KST client backend[3075192] pg_regress/numeric ERROR:  cannot convert NaN to pg_lsn
2024-09-08 14:51:51.618 KST client backend[3075192] pg_regress/numeric STATEMENT:  SELECT pg_lsn('NaN'::numeric);
2024-09-08 14:51:51.674 KST client backend[3075203] pg_regress/rangetypes ERROR:  conflicting key value violates exclusion constraint "test_range_excl_room_during_excl"
2024-09-08 14:51:51.674 KST client backend[3075203] pg_regress/rangetypes DETAIL:  Key (room, during)=([123,124), ["Sat Jan 02 10:10:00 2010","Sat Jan 02 11:00:00 2010")) conflicts with existing key (room, during)=([123,124), ["Sat Jan 02 10:00:00 2010","Sat Jan 02 11:00:00 2010")).
2024-09-08 14:51:51.674 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  insert into test_range_excl
	  values(int4range(123, 123, '[]'), int4range(3, 3, '[]'), '[2010-01-02 10:10, 2010-01-02 11:00)');
2024-09-08 14:51:51.675 KST client backend[3075203] pg_regress/rangetypes ERROR:  conflicting key value violates exclusion constraint "test_range_excl_speaker_during_excl"
2024-09-08 14:51:51.675 KST client backend[3075203] pg_regress/rangetypes DETAIL:  Key (speaker, during)=([1,2), ["Sat Jan 02 10:10:00 2010","Sat Jan 02 11:00:00 2010")) conflicts with existing key (speaker, during)=([1,2), ["Sat Jan 02 10:00:00 2010","Sat Jan 02 11:00:00 2010")).
2024-09-08 14:51:51.675 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  insert into test_range_excl
	  values(int4range(125, 125, '[]'), int4range(1, 1, '[]'), '[2010-01-02 10:10, 2010-01-02 11:00)');
2024-09-08 14:51:51.675 KST client backend[3075203] pg_regress/rangetypes ERROR:  range lower bound must be less than or equal to range upper bound at character 8
2024-09-08 14:51:51.675 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select '[2010-01-01 01:00:00 -08, 2010-01-01 02:00:00 -05)'::tstzrange;
2024-09-08 14:51:51.675 KST client backend[3075203] pg_regress/rangetypes ERROR:  function float4mi(double precision, double precision) does not exist
2024-09-08 14:51:51.675 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  create type bogus_float8range as range (subtype=float8, subtype_diff=float4mi);
2024-09-08 14:51:51.678 KST client backend[3075203] pg_regress/rangetypes ERROR:  cannot drop type mydomain because other objects depend on it
2024-09-08 14:51:51.678 KST client backend[3075203] pg_regress/rangetypes DETAIL:  type mydomainrange depends on type mydomain
2024-09-08 14:51:51.678 KST client backend[3075203] pg_regress/rangetypes HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:51.678 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  drop domain mydomain;
2024-09-08 14:51:51.679 KST client backend[3075203] pg_regress/rangetypes ERROR:  value for domain restrictedrange violates check constraint "restrictedrange_check"
2024-09-08 14:51:51.679 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select '[4,50)'::restrictedrange @> 7;
2024-09-08 14:51:51.680 KST client backend[3075203] pg_regress/rangetypes ERROR:  range lower bound must be less than or equal to range upper bound
2024-09-08 14:51:51.680 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select textrange1('a','Z') @> 'b'::text;
2024-09-08 14:51:51.681 KST client backend[3075203] pg_regress/rangetypes ERROR:  function anyarray_anyrange_func(integer[], numrange) does not exist at character 8
2024-09-08 14:51:51.681 KST client backend[3075203] pg_regress/rangetypes HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:51.681 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select anyarray_anyrange_func(ARRAY[1,2], numrange(10,20));
2024-09-08 14:51:51.682 KST client backend[3075203] pg_regress/rangetypes ERROR:  cannot determine result data type
2024-09-08 14:51:51.682 KST client backend[3075203] pg_regress/rangetypes DETAIL:  A result of type anyrange requires at least one input of type anyrange or anymultirange.
2024-09-08 14:51:51.682 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  create function bogus_func(anyelement)
	  returns anyrange as 'select int4range(1,10)' language sql;
2024-09-08 14:51:51.682 KST client backend[3075203] pg_regress/rangetypes ERROR:  cannot determine result data type
2024-09-08 14:51:51.682 KST client backend[3075203] pg_regress/rangetypes DETAIL:  A result of type anyrange requires at least one input of type anyrange or anymultirange.
2024-09-08 14:51:51.682 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  create function bogus_func(int)
	  returns anyrange as 'select int4range(1,10)' language sql;
2024-09-08 14:51:51.682 KST client backend[3075203] pg_regress/rangetypes ERROR:  function rangetypes_sql(numrange, integer[]) does not exist at character 8
2024-09-08 14:51:51.682 KST client backend[3075203] pg_regress/rangetypes HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:51.682 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select rangetypes_sql(numrange(1,10), ARRAY[2,20]);
2024-09-08 14:51:51.683 KST client backend[3075203] pg_regress/rangetypes ERROR:  function anycompatiblearray_anycompatiblerange_func(numeric[], int4range) does not exist at character 8
2024-09-08 14:51:51.683 KST client backend[3075203] pg_regress/rangetypes HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:51.683 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select anycompatiblearray_anycompatiblerange_func(ARRAY[1.1,2], int4range(10,20));
2024-09-08 14:51:51.683 KST client backend[3075203] pg_regress/rangetypes ERROR:  cannot determine result data type
2024-09-08 14:51:51.683 KST client backend[3075203] pg_regress/rangetypes DETAIL:  A result of type anycompatiblerange requires at least one input of type anycompatiblerange or anycompatiblemultirange.
2024-09-08 14:51:51.683 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  create function bogus_func(anycompatible)
	  returns anycompatiblerange as 'select int4range(1,10)' language sql;
2024-09-08 14:51:51.685 KST client backend[3075203] pg_regress/rangetypes ERROR:  range lower bound must be less than or equal to range upper bound
2024-09-08 14:51:51.685 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  select arrayrange(ARRAY[2,1], ARRAY[1,2]);
2024-09-08 14:51:51.687 KST client backend[3075203] pg_regress/rangetypes ERROR:  composite type two_ints cannot be made a member of itself
2024-09-08 14:51:51.687 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  alter type two_ints add attribute c two_ints_range;
2024-09-08 14:51:51.689 KST client backend[3075203] pg_regress/rangetypes ERROR:  cannot determine result data type
2024-09-08 14:51:51.689 KST client backend[3075203] pg_regress/rangetypes DETAIL:  A result of type anyrange requires at least one input of type anyrange or anymultirange.
2024-09-08 14:51:51.689 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  create function outparam_fail(i anyelement, out r anyrange, out t text)
	  as $$ select '[1,10]', 'foo' $$ language sql;
2024-09-08 14:51:51.689 KST client backend[3075203] pg_regress/rangetypes ERROR:  cannot determine result data type
2024-09-08 14:51:51.689 KST client backend[3075203] pg_regress/rangetypes DETAIL:  A result of type anyrange requires at least one input of type anyrange or anymultirange.
2024-09-08 14:51:51.689 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  create function inoutparam_fail(inout i anyelement, out r anyrange)
	  as $$ select $1, '[1,10]' $$ language sql;
2024-09-08 14:51:51.689 KST client backend[3075203] pg_regress/rangetypes ERROR:  cannot determine result data type
2024-09-08 14:51:51.689 KST client backend[3075203] pg_regress/rangetypes DETAIL:  A result of type anyrange requires at least one input of type anyrange or anymultirange.
2024-09-08 14:51:51.689 KST client backend[3075203] pg_regress/rangetypes STATEMENT:  create function table_fail(i anyelement) returns table(i anyelement, r anyrange)
	  as $$ select $1, '[1,10]' $$ language sql;
2024-09-08 14:51:51.739 KST client backend[3075264] pg_regress/strings ERROR:  syntax error at or near "' - third line'" at character 75
2024-09-08 14:51:51.739 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT 'first line'
	' - next line' /* this comment is not allowed here */
	' - third line'
		AS "Illegal comment within continuation";
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode escape at character 18
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings HINT:  Unicode escapes must be \XXXX or \+XXXXXX.
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT U&'wrong: \061';
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode escape at character 18
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings HINT:  Unicode escapes must be \XXXX or \+XXXXXX.
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT U&'wrong: \+0061';
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings ERROR:  UESCAPE must be followed by a simple string literal at or near "+" at character 33
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT U&'wrong: +0061' UESCAPE +;
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode escape character at or near "'+'" at character 33
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT U&'wrong: +0061' UESCAPE '+';
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode surrogate pair at character 23
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT U&'wrong: \db99';
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode surrogate pair at character 23
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT U&'wrong: \db99xy';
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode surrogate pair at character 23
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT U&'wrong: \db99\\';
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode surrogate pair at character 23
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT U&'wrong: \db99\0061';
2024-09-08 14:51:51.740 KST client backend[3075266] pg_regress/point ERROR:  invalid input syntax for type point: "asdfasdf" at character 35
2024-09-08 14:51:51.740 KST client backend[3075266] pg_regress/point STATEMENT:  INSERT INTO POINT_TBL(f1) VALUES ('asdfasdf');
2024-09-08 14:51:51.740 KST client backend[3075266] pg_regress/point ERROR:  invalid input syntax for type point: "(10.0 10.0)" at character 35
2024-09-08 14:51:51.740 KST client backend[3075266] pg_regress/point STATEMENT:  INSERT INTO POINT_TBL(f1) VALUES ('(10.0 10.0)');
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode surrogate pair at character 26
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT U&'wrong: \+00db99\+000061';
2024-09-08 14:51:51.740 KST client backend[3075266] pg_regress/point ERROR:  invalid input syntax for type point: "(10.0, 10.0) x" at character 35
2024-09-08 14:51:51.740 KST client backend[3075266] pg_regress/point STATEMENT:  INSERT INTO POINT_TBL(f1) VALUES ('(10.0, 10.0) x');
2024-09-08 14:51:51.740 KST client backend[3075266] pg_regress/point ERROR:  invalid input syntax for type point: "(10.0,10.0" at character 35
2024-09-08 14:51:51.740 KST client backend[3075266] pg_regress/point STATEMENT:  INSERT INTO POINT_TBL(f1) VALUES ('(10.0,10.0');
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode escape value at character 18
2024-09-08 14:51:51.740 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT U&'wrong: \+2FFFFF';
2024-09-08 14:51:51.740 KST client backend[3075266] pg_regress/point ERROR:  "1e+500" is out of range for type double precision at character 35
2024-09-08 14:51:51.740 KST client backend[3075266] pg_regress/point STATEMENT:  INSERT INTO POINT_TBL(f1) VALUES ('(10.0, 1e+500)');
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode escape at character 17
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings HINT:  Unicode escapes must be \uXXXX or \UXXXXXXXX.
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT E'wrong: \u061';
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode escape at character 17
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings HINT:  Unicode escapes must be \uXXXX or \UXXXXXXXX.
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT E'wrong: \U0061';
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode surrogate pair at or near "'" at character 23
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT E'wrong: \udb99';
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode surrogate pair at or near "x" at character 23
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT E'wrong: \udb99xy';
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode surrogate pair at or near "\" at character 23
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT E'wrong: \udb99\\';
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode surrogate pair at or near "\u0061" at character 23
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT E'wrong: \udb99\u0061';
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode surrogate pair at or near "\U00000061" at character 27
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT E'wrong: \U0000db99\U00000061';
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode escape value at or near "\U002FFFFF" at character 17
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT E'wrong: \U002FFFFF';
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings ERROR:  unsafe use of string constant with Unicode escapes at character 8
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings DETAIL:  String constants with Unicode escapes cannot be used when standard_conforming_strings is off.
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT U&'d\0061t\+000061' AS U&"d\0061t\+000061";
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings ERROR:  unsafe use of string constant with Unicode escapes at character 8
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings DETAIL:  String constants with Unicode escapes cannot be used when standard_conforming_strings is off.
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT U&'d!0061t\+000061' UESCAPE '!' AS U&"d*0061t\+000061" UESCAPE '*';
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings ERROR:  unsafe use of string constant with Unicode escapes at character 8
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings DETAIL:  String constants with Unicode escapes cannot be used when standard_conforming_strings is off.
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT U&' \' UESCAPE '!' AS "tricky";
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings ERROR:  unsafe use of string constant with Unicode escapes at character 8
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings DETAIL:  String constants with Unicode escapes cannot be used when standard_conforming_strings is off.
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT U&'wrong: \061';
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings ERROR:  unsafe use of string constant with Unicode escapes at character 8
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings DETAIL:  String constants with Unicode escapes cannot be used when standard_conforming_strings is off.
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT U&'wrong: \+0061';
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings ERROR:  unsafe use of string constant with Unicode escapes at character 8
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings DETAIL:  String constants with Unicode escapes cannot be used when standard_conforming_strings is off.
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT U&'wrong: +0061' UESCAPE '+';
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings ERROR:  invalid hexadecimal data: odd number of digits at character 8
2024-09-08 14:51:51.741 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT E'\\xDeAdBeE'::bytea;
2024-09-08 14:51:51.742 KST client backend[3075264] pg_regress/strings ERROR:  invalid hexadecimal digit: "x" at character 8
2024-09-08 14:51:51.742 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT E'\\xDeAdBeEx'::bytea;
2024-09-08 14:51:51.742 KST client backend[3075264] pg_regress/strings ERROR:  invalid input syntax for type bytea at character 8
2024-09-08 14:51:51.742 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT E'De\\678dBeEf'::bytea;
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "123a" at character 8
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 123abc;
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "0x0o" at character 8
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 0x0o;
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "0.a" at character 8
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 0.a;
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "0.0a" at character 8
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 0.0a;
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near ".0a" at character 8
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT .0a;
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "0.0e1a" at character 8
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 0.0e1a;
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "0.0e" at character 8
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 0.0e;
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "0.0e+" at character 8
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 0.0e+a;
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after parameter at or near "$1a" at character 22
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology STATEMENT:  PREPARE p1 AS SELECT $1a;
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology ERROR:  invalid binary integer at or near "0b" at character 8
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 0b;
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "1b" at character 8
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 1b;
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "0b0x" at character 8
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 0b0x;
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology ERROR:  invalid octal integer at or near "0o" at character 8
2024-09-08 14:51:51.742 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 0o;
2024-09-08 14:51:51.742 KST client backend[3075271] pg_regress/line ERROR:  invalid input syntax for type line: "{}" at character 30
2024-09-08 14:51:51.742 KST client backend[3075271] pg_regress/line STATEMENT:  INSERT INTO LINE_TBL VALUES ('{}');
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "1o" at character 8
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 1o;
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line ERROR:  invalid input syntax for type line: "{0" at character 30
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line STATEMENT:  INSERT INTO LINE_TBL VALUES ('{0');
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "0o0x" at character 8
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 0o0x;
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line ERROR:  invalid input syntax for type line: "{0,0}" at character 30
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line STATEMENT:  INSERT INTO LINE_TBL VALUES ('{0,0}');
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology ERROR:  invalid hexadecimal integer at or near "0x" at character 8
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 0x;
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "1x" at character 8
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 1x;
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line ERROR:  invalid input syntax for type line: "{0,0,1" at character 30
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line STATEMENT:  INSERT INTO LINE_TBL VALUES ('{0,0,1');
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "0x0y" at character 8
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 0x0y;
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line ERROR:  invalid line specification: A and B cannot both be zero at character 30
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line STATEMENT:  INSERT INTO LINE_TBL VALUES ('{0,0,1}');
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line ERROR:  invalid input syntax for type line: "{0,0,1} x" at character 30
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line STATEMENT:  INSERT INTO LINE_TBL VALUES ('{0,0,1} x');
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line ERROR:  invalid input syntax for type line: "(3asdf,2 ,3,4r2)" at character 30
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line STATEMENT:  INSERT INTO LINE_TBL VALUES ('(3asdf,2 ,3,4r2)');
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line ERROR:  invalid input syntax for type line: "[1,2,3, 4" at character 30
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line STATEMENT:  INSERT INTO LINE_TBL VALUES ('[1,2,3, 4');
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line ERROR:  invalid input syntax for type line: "[(,2),(3,4)]" at character 30
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line STATEMENT:  INSERT INTO LINE_TBL VALUES ('[(,2),(3,4)]');
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line ERROR:  invalid input syntax for type line: "[(1,2),(3,4)" at character 30
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line STATEMENT:  INSERT INTO LINE_TBL VALUES ('[(1,2),(3,4)');
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line ERROR:  invalid line specification: must be two distinct points at character 30
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line STATEMENT:  INSERT INTO LINE_TBL VALUES ('[(1,2),(1,2)]');
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line ERROR:  invalid line specification: must be two distinct points
2024-09-08 14:51:51.743 KST client backend[3075271] pg_regress/line STATEMENT:  INSERT INTO LINE_TBL VALUES (line(point '(1,0)', point '(1,0)'));
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology ERROR:  column "_100" does not exist at character 8
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT _100;
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "100_" at character 8
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 100_;
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "100_" at character 8
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 100__000;
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology ERROR:  syntax error at or near ".5" at character 14
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT _1_000.5;
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "1_000_" at character 8
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 1_000_.5;
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "1_000._" at character 8
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 1_000._5;
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "1_000.5_" at character 8
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 1_000.5_;
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology ERROR:  trailing junk after numeric literal at or near "1_000.5e" at character 8
2024-09-08 14:51:51.743 KST client backend[3075268] pg_regress/numerology STATEMENT:  SELECT 1_000.5e_1;
2024-09-08 14:51:51.744 KST client backend[3075264] pg_regress/strings ERROR:  negative substring length not allowed
2024-09-08 14:51:51.744 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT SUBSTRING('string' FROM -10 FOR -2147483646) AS "error";
2024-09-08 14:51:51.744 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "1997-02-29" at character 30
2024-09-08 14:51:51.744 KST client backend[3075279] pg_regress/date STATEMENT:  INSERT INTO DATE_TBL VALUES ('1997-02-29');
2024-09-08 14:51:51.744 KST client backend[3075275] pg_regress/polygon ERROR:  invalid input syntax for type polygon: "0.0" at character 37
2024-09-08 14:51:51.744 KST client backend[3075275] pg_regress/polygon STATEMENT:  INSERT INTO POLYGON_TBL(f1) VALUES ('0.0');
2024-09-08 14:51:51.744 KST client backend[3075275] pg_regress/polygon ERROR:  invalid input syntax for type polygon: "(0.0 0.0" at character 37
2024-09-08 14:51:51.744 KST client backend[3075275] pg_regress/polygon STATEMENT:  INSERT INTO POLYGON_TBL(f1) VALUES ('(0.0 0.0');
2024-09-08 14:51:51.744 KST client backend[3075278] pg_regress/lseg ERROR:  invalid input syntax for type lseg: "(3asdf,2 ,3,4r2)" at character 30
2024-09-08 14:51:51.744 KST client backend[3075278] pg_regress/lseg STATEMENT:  INSERT INTO LSEG_TBL VALUES ('(3asdf,2 ,3,4r2)');
2024-09-08 14:51:51.744 KST client backend[3075275] pg_regress/polygon ERROR:  invalid input syntax for type polygon: "(0,1,2)" at character 37
2024-09-08 14:51:51.744 KST client backend[3075275] pg_regress/polygon STATEMENT:  INSERT INTO POLYGON_TBL(f1) VALUES ('(0,1,2)');
2024-09-08 14:51:51.745 KST client backend[3075275] pg_regress/polygon ERROR:  invalid input syntax for type polygon: "(0,1,2,3" at character 37
2024-09-08 14:51:51.745 KST client backend[3075275] pg_regress/polygon STATEMENT:  INSERT INTO POLYGON_TBL(f1) VALUES ('(0,1,2,3');
2024-09-08 14:51:51.745 KST client backend[3075278] pg_regress/lseg ERROR:  invalid input syntax for type lseg: "[1,2,3, 4" at character 30
2024-09-08 14:51:51.745 KST client backend[3075278] pg_regress/lseg STATEMENT:  INSERT INTO LSEG_TBL VALUES ('[1,2,3, 4');
2024-09-08 14:51:51.745 KST client backend[3075275] pg_regress/polygon ERROR:  invalid input syntax for type polygon: "asdf" at character 37
2024-09-08 14:51:51.745 KST client backend[3075275] pg_regress/polygon STATEMENT:  INSERT INTO POLYGON_TBL(f1) VALUES ('asdf');
2024-09-08 14:51:51.745 KST client backend[3075278] pg_regress/lseg ERROR:  invalid input syntax for type lseg: "[(,2),(3,4)]" at character 30
2024-09-08 14:51:51.745 KST client backend[3075278] pg_regress/lseg STATEMENT:  INSERT INTO LSEG_TBL VALUES ('[(,2),(3,4)]');
2024-09-08 14:51:51.745 KST client backend[3075278] pg_regress/lseg ERROR:  invalid input syntax for type lseg: "[(1,2),(3,4)" at character 30
2024-09-08 14:51:51.745 KST client backend[3075278] pg_regress/lseg STATEMENT:  INSERT INTO LSEG_TBL VALUES ('[(1,2),(3,4)');
2024-09-08 14:51:51.745 KST client backend[3075280] pg_regress/box ERROR:  invalid input syntax for type box: "(2.3, 4.5)" at character 34
2024-09-08 14:51:51.745 KST client backend[3075280] pg_regress/box STATEMENT:  INSERT INTO BOX_TBL (f1) VALUES ('(2.3, 4.5)');
2024-09-08 14:51:51.745 KST client backend[3075280] pg_regress/box ERROR:  invalid input syntax for type box: "[1, 2, 3, 4)" at character 34
2024-09-08 14:51:51.745 KST client backend[3075280] pg_regress/box STATEMENT:  INSERT INTO BOX_TBL (f1) VALUES ('[1, 2, 3, 4)');
2024-09-08 14:51:51.745 KST client backend[3075280] pg_regress/box ERROR:  invalid input syntax for type box: "(1, 2, 3, 4]" at character 34
2024-09-08 14:51:51.745 KST client backend[3075280] pg_regress/box STATEMENT:  INSERT INTO BOX_TBL (f1) VALUES ('(1, 2, 3, 4]');
2024-09-08 14:51:51.745 KST client backend[3075280] pg_regress/box ERROR:  invalid input syntax for type box: "(1, 2, 3, 4) x" at character 34
2024-09-08 14:51:51.745 KST client backend[3075280] pg_regress/box STATEMENT:  INSERT INTO BOX_TBL (f1) VALUES ('(1, 2, 3, 4) x');
2024-09-08 14:51:51.745 KST client backend[3075280] pg_regress/box ERROR:  invalid input syntax for type box: "asdfasdf(ad" at character 34
2024-09-08 14:51:51.745 KST client backend[3075280] pg_regress/box STATEMENT:  INSERT INTO BOX_TBL (f1) VALUES ('asdfasdf(ad');
2024-09-08 14:51:51.745 KST client backend[3075264] pg_regress/strings ERROR:  SQL regular expression may not contain more than two escape-double-quote separators
2024-09-08 14:51:51.745 KST client backend[3075264] pg_regress/strings CONTEXT:  SQL function "substring" statement 1
2024-09-08 14:51:51.745 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT SUBSTRING('abcdefg' SIMILAR 'a*#"%#"g*#"x' ESCAPE '#') AS "error";
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "1/8/1999" at character 13
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '1/8/1999';
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "1/18/1999" at character 13
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '1/18/1999';
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "18/1/1999" at character 13
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '18/1/1999';
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "January 8, 99 BC" at character 13
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date 'January 8, 99 BC';
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "08-Jan-99" at character 13
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '08-Jan-99';
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "Jan-08-99" at character 13
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date 'Jan-08-99';
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date ERROR:  invalid input syntax for type date: "99-08-Jan" at character 13
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '99-08-Jan';
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date ERROR:  invalid input syntax for type date: "1999-08-Jan" at character 13
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '1999-08-Jan';
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "08 Jan 99" at character 13
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '08 Jan 99';
2024-09-08 14:51:51.746 KST client backend[3075283] pg_regress/circle ERROR:  invalid input syntax for type circle: "<(-100,0),-100>" at character 32
2024-09-08 14:51:51.746 KST client backend[3075283] pg_regress/circle STATEMENT:  INSERT INTO CIRCLE_TBL VALUES ('<(-100,0),-100>');
2024-09-08 14:51:51.746 KST client backend[3075287] pg_regress/inet ERROR:  table "inet_tbl" does not exist
2024-09-08 14:51:51.746 KST client backend[3075287] pg_regress/inet STATEMENT:  DROP TABLE INET_TBL;
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "Jan 08 99" at character 13
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.746 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date 'Jan 08 99';
2024-09-08 14:51:51.746 KST client backend[3075283] pg_regress/circle ERROR:  invalid input syntax for type circle: "<(100,200),10" at character 32
2024-09-08 14:51:51.746 KST client backend[3075283] pg_regress/circle STATEMENT:  INSERT INTO CIRCLE_TBL VALUES ('<(100,200),10');
2024-09-08 14:51:51.747 KST client backend[3075264] pg_regress/strings ERROR:  invalid escape string
2024-09-08 14:51:51.747 KST client backend[3075264] pg_regress/strings HINT:  Escape string must be empty or one character.
2024-09-08 14:51:51.747 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT 'abcdefg' SIMILAR TO '_bcd#%' ESCAPE '##' AS error;
2024-09-08 14:51:51.747 KST client backend[3075283] pg_regress/circle ERROR:  invalid input syntax for type circle: "<(100,200),10> x" at character 32
2024-09-08 14:51:51.747 KST client backend[3075283] pg_regress/circle STATEMENT:  INSERT INTO CIRCLE_TBL VALUES ('<(100,200),10> x');
2024-09-08 14:51:51.747 KST client backend[3075283] pg_regress/circle ERROR:  invalid input syntax for type circle: "1abc,3,5" at character 32
2024-09-08 14:51:51.747 KST client backend[3075283] pg_regress/circle STATEMENT:  INSERT INTO CIRCLE_TBL VALUES ('1abc,3,5');
2024-09-08 14:51:51.747 KST client backend[3075283] pg_regress/circle ERROR:  invalid input syntax for type circle: "(3,(1,2),3)" at character 32
2024-09-08 14:51:51.747 KST client backend[3075283] pg_regress/circle STATEMENT:  INSERT INTO CIRCLE_TBL VALUES ('(3,(1,2),3)');
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "08-01-99" at character 13
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '08-01-99';
2024-09-08 14:51:51.747 KST client backend[3075281] pg_regress/path ERROR:  invalid input syntax for type path: "[]" at character 30
2024-09-08 14:51:51.747 KST client backend[3075281] pg_regress/path STATEMENT:  INSERT INTO PATH_TBL VALUES ('[]');
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "08-01-1999" at character 13
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '08-01-1999';
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "01-08-99" at character 13
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '01-08-99';
2024-09-08 14:51:51.747 KST client backend[3075281] pg_regress/path ERROR:  invalid input syntax for type path: "[(,2),(3,4)]" at character 30
2024-09-08 14:51:51.747 KST client backend[3075281] pg_regress/path STATEMENT:  INSERT INTO PATH_TBL VALUES ('[(,2),(3,4)]');
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "01-08-1999" at character 13
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '01-08-1999';
2024-09-08 14:51:51.747 KST client backend[3075281] pg_regress/path ERROR:  invalid input syntax for type path: "[(1,2),(3,4)" at character 30
2024-09-08 14:51:51.747 KST client backend[3075281] pg_regress/path STATEMENT:  INSERT INTO PATH_TBL VALUES ('[(1,2),(3,4)');
2024-09-08 14:51:51.747 KST client backend[3075281] pg_regress/path ERROR:  invalid input syntax for type path: "(1,2,3,4" at character 30
2024-09-08 14:51:51.747 KST client backend[3075281] pg_regress/path STATEMENT:  INSERT INTO PATH_TBL VALUES ('(1,2,3,4');
2024-09-08 14:51:51.747 KST client backend[3075281] pg_regress/path ERROR:  invalid input syntax for type path: "(1,2),(3,4)]" at character 30
2024-09-08 14:51:51.747 KST client backend[3075281] pg_regress/path STATEMENT:  INSERT INTO PATH_TBL VALUES ('(1,2),(3,4)]');
2024-09-08 14:51:51.747 KST client backend[3075282] pg_regress/time ERROR:  invalid input syntax for type time: "15:36:39 America/New_York" at character 30
2024-09-08 14:51:51.747 KST client backend[3075282] pg_regress/time STATEMENT:  INSERT INTO TIME_TBL VALUES ('15:36:39 America/New_York');
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "08 01 99" at character 13
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '08 01 99';
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "08 01 1999" at character 13
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '08 01 1999';
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "01 08 99" at character 13
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '01 08 99';
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "01 08 1999" at character 13
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '01 08 1999';
2024-09-08 14:51:51.747 KST client backend[3075264] pg_regress/strings ERROR:  invalid regular expression option: "z"
2024-09-08 14:51:51.747 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_replace('AAA aaa', 'A+', 'Z', 'z');
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "1/18/1999" at character 13
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.747 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '1/18/1999';
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 ERROR:  invalid input syntax for type macaddr8: "123    08:00:2b:01:02:03" at character 8
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 STATEMENT:  SELECT '123    08:00:2b:01:02:03'::macaddr8;
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 ERROR:  invalid input syntax for type macaddr8: "08:00:2b:01:02:03  123" at character 8
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 STATEMENT:  SELECT '08:00:2b:01:02:03  123'::macaddr8;
2024-09-08 14:51:51.748 KST client backend[3075284] pg_regress/timetz ERROR:  invalid input syntax for type time with time zone: "15:36:39 America/New_York" at character 32
2024-09-08 14:51:51.748 KST client backend[3075284] pg_regress/timetz STATEMENT:  INSERT INTO TIMETZ_TBL VALUES ('15:36:39 America/New_York');
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 ERROR:  invalid input syntax for type macaddr8: "123    08:00:2b:01:02:03:04:05" at character 8
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 STATEMENT:  SELECT '123    08:00:2b:01:02:03:04:05'::macaddr8;
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 ERROR:  invalid input syntax for type macaddr8: "08:00:2b:01:02:03:04:05  123" at character 8
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 STATEMENT:  SELECT '08:00:2b:01:02:03:04:05  123'::macaddr8;
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 ERROR:  invalid input syntax for type macaddr8: "08:00:2b:01:02:03:04:05:06:07" at character 8
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 STATEMENT:  SELECT '08:00:2b:01:02:03:04:05:06:07'::macaddr8;
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 ERROR:  invalid input syntax for type macaddr8: "08-00-2b-01-02-03-04-05-06-07" at character 8
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 STATEMENT:  SELECT '08-00-2b-01-02-03-04-05-06-07'::macaddr8;
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 ERROR:  invalid input syntax for type macaddr8: "08002b:01020304050607" at character 8
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 STATEMENT:  SELECT '08002b:01020304050607'::macaddr8;
2024-09-08 14:51:51.748 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "99-Jan-08" at character 13
2024-09-08 14:51:51.748 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.748 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '99-Jan-08';
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 ERROR:  invalid input syntax for type macaddr8: "08002b01020304050607" at character 8
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 STATEMENT:  SELECT '08002b01020304050607'::macaddr8;
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 ERROR:  invalid input syntax for type macaddr8: "0z002b0102030405" at character 8
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 STATEMENT:  SELECT '0z002b0102030405'::macaddr8;
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 ERROR:  invalid input syntax for type macaddr8: "08002b010203xyza" at character 8
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 STATEMENT:  SELECT '08002b010203xyza'::macaddr8;
2024-09-08 14:51:51.748 KST client backend[3075284] pg_regress/timetz ERROR:  invalid input syntax for type time with time zone: "15:36:39 m2" at character 32
2024-09-08 14:51:51.748 KST client backend[3075284] pg_regress/timetz STATEMENT:  INSERT INTO TIMETZ_TBL VALUES ('15:36:39 m2');
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 ERROR:  invalid input syntax for type macaddr8: "08:00-2b:01:02:03:04:05" at character 8
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 STATEMENT:  SELECT '08:00-2b:01:02:03:04:05'::macaddr8;
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 ERROR:  invalid input syntax for type macaddr8: "08:00-2b:01:02:03:04:05" at character 8
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 STATEMENT:  SELECT '08:00-2b:01:02:03:04:05'::macaddr8;
2024-09-08 14:51:51.748 KST client backend[3075282] pg_regress/time ERROR:  date/time field value out of range: "24:00:00.01" at character 8
2024-09-08 14:51:51.748 KST client backend[3075282] pg_regress/time STATEMENT:  SELECT '24:00:00.01'::time;
2024-09-08 14:51:51.748 KST client backend[3075264] pg_regress/strings ERROR:  invalid value for parameter "start": -1
2024-09-08 14:51:51.748 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_replace('A PostgreSQL function', 'a|e|i|o|u', 'X', -1, 0, 'i');
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 ERROR:  invalid input syntax for type macaddr8: "08:00:2b:01.02:03:04:05" at character 8
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 STATEMENT:  SELECT '08:00:2b:01.02:03:04:05'::macaddr8;
2024-09-08 14:51:51.748 KST client backend[3075282] pg_regress/time ERROR:  date/time field value out of range: "23:59:60.01" at character 8
2024-09-08 14:51:51.748 KST client backend[3075282] pg_regress/time STATEMENT:  SELECT '23:59:60.01'::time;
2024-09-08 14:51:51.748 KST client backend[3075288] pg_regress/macaddr ERROR:  invalid input syntax for type macaddr: "0800:2b01:0203" at character 37
2024-09-08 14:51:51.748 KST client backend[3075288] pg_regress/macaddr STATEMENT:  INSERT INTO macaddr_data VALUES (8, '0800:2b01:0203');
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 ERROR:  invalid input syntax for type macaddr8: "08:00:2b:01.02:03:04:05" at character 8
2024-09-08 14:51:51.748 KST client backend[3075289] pg_regress/macaddr8 STATEMENT:  SELECT '08:00:2b:01.02:03:04:05'::macaddr8;
2024-09-08 14:51:51.748 KST client backend[3075264] pg_regress/strings ERROR:  invalid value for parameter "n": -1
2024-09-08 14:51:51.748 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_replace('A PostgreSQL function', 'a|e|i|o|u', 'X', 1, -1, 'i');
2024-09-08 14:51:51.748 KST client backend[3075279] pg_regress/date ERROR:  invalid input syntax for type date: "99-08-Jan" at character 13
2024-09-08 14:51:51.748 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '99-08-Jan';
2024-09-08 14:51:51.748 KST client backend[3075282] pg_regress/time ERROR:  date/time field value out of range: "24:01:00" at character 8
2024-09-08 14:51:51.748 KST client backend[3075282] pg_regress/time STATEMENT:  SELECT '24:01:00'::time;
2024-09-08 14:51:51.748 KST client backend[3075288] pg_regress/macaddr ERROR:  invalid input syntax for type macaddr: "not even close" at character 37
2024-09-08 14:51:51.748 KST client backend[3075288] pg_regress/macaddr STATEMENT:  INSERT INTO macaddr_data VALUES (9, 'not even close');
2024-09-08 14:51:51.748 KST client backend[3075279] pg_regress/date ERROR:  invalid input syntax for type date: "1999-08-Jan" at character 13
2024-09-08 14:51:51.748 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '1999-08-Jan';
2024-09-08 14:51:51.748 KST client backend[3075282] pg_regress/time ERROR:  date/time field value out of range: "25:00:00" at character 8
2024-09-08 14:51:51.748 KST client backend[3075282] pg_regress/time STATEMENT:  SELECT '25:00:00'::time;
2024-09-08 14:51:51.748 KST client backend[3075264] pg_regress/strings ERROR:  invalid regular expression option: "1"
2024-09-08 14:51:51.748 KST client backend[3075264] pg_regress/strings HINT:  If you meant to use regexp_replace() with a start parameter, cast the fourth argument to integer explicitly.
2024-09-08 14:51:51.748 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_replace('A PostgreSQL function', 'a|e|i|o|u', 'X', '1');
2024-09-08 14:51:51.748 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "99 Jan 08" at character 13
2024-09-08 14:51:51.748 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.748 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '99 Jan 08';
2024-09-08 14:51:51.748 KST client backend[3075284] pg_regress/timetz ERROR:  invalid input syntax for type time with time zone: "15:36:39 MSK m2" at character 32
2024-09-08 14:51:51.748 KST client backend[3075284] pg_regress/timetz STATEMENT:  INSERT INTO TIMETZ_TBL VALUES ('15:36:39 MSK m2');
2024-09-08 14:51:51.748 KST client backend[3075279] pg_regress/date ERROR:  invalid input syntax for type date: "99 08 Jan" at character 13
2024-09-08 14:51:51.748 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '99 08 Jan';
2024-09-08 14:51:51.748 KST client backend[3075291] pg_regress/multirangetypes ERROR:  malformed multirange literal: "" at character 8
2024-09-08 14:51:51.748 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  Missing left brace.
2024-09-08 14:51:51.748 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select ''::textmultirange;
2024-09-08 14:51:51.748 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "99-01-08" at character 13
2024-09-08 14:51:51.748 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.748 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '99-01-08';
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes ERROR:  malformed multirange literal: "{,}" at character 8
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  Expected range start.
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select '{,}'::textmultirange;
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes ERROR:  malformed multirange literal: "{(,)}." at character 8
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  Junk after closing right brace.
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select '{(,)}.'::textmultirange;
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes ERROR:  malformed multirange literal: "{[a,c),}" at character 8
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  Expected range start.
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select '{[a,c),}'::textmultirange;
2024-09-08 14:51:51.749 KST client backend[3075264] pg_regress/strings ERROR:  invalid value for parameter "start": 0
2024-09-08 14:51:51.749 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_count('123123123123', '123', 0);
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes ERROR:  malformed multirange literal: "{,[a,c)}" at character 8
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  Expected range start.
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select '{,[a,c)}'::textmultirange;
2024-09-08 14:51:51.749 KST client backend[3075264] pg_regress/strings ERROR:  invalid value for parameter "start": -3
2024-09-08 14:51:51.749 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_count('123123123123', '123', -3);
2024-09-08 14:51:51.749 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "99-08-01" at character 13
2024-09-08 14:51:51.749 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.749 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '99-08-01';
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes ERROR:  malformed multirange literal: "{-[a,z)}" at character 8
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  Expected range start.
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select '{-[a,z)}'::textmultirange;
2024-09-08 14:51:51.749 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "99 01 08" at character 13
2024-09-08 14:51:51.749 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.749 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '99 01 08';
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes ERROR:  malformed multirange literal: "{[a,z) - }" at character 8
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  Expected comma or end of multirange.
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select '{[a,z) - }'::textmultirange;
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes ERROR:  malformed multirange literal: "{(",a)}" at character 8
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  Unexpected end of input.
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select '{(",a)}'::textmultirange;
2024-09-08 14:51:51.749 KST client backend[3075282] pg_regress/time ERROR:  operator is not unique: time without time zone + time without time zone at character 11
2024-09-08 14:51:51.749 KST client backend[3075282] pg_regress/time HINT:  Could not choose a best candidate operator. You might need to add explicit type casts.
2024-09-08 14:51:51.749 KST client backend[3075282] pg_regress/time STATEMENT:  SELECT f1 + time '00:01' AS "Illegal" FROM TIME_TBL;
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes ERROR:  malformed range literal: "(,,a)" at character 8
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  Too many commas.
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select '{(,,a)}'::textmultirange;
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes ERROR:  malformed range literal: "()" at character 8
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  Missing comma after lower bound.
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select '{(),a)}'::textmultirange;
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes ERROR:  malformed multirange literal: "{(a,))}" at character 8
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  Expected comma or end of multirange.
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select '{(a,))}'::textmultirange;
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes ERROR:  malformed range literal: "(]" at character 8
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  Missing comma after lower bound.
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select '{(],a)}'::textmultirange;
2024-09-08 14:51:51.749 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "99 08 01" at character 13
2024-09-08 14:51:51.749 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.749 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '99 08 01';
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes ERROR:  malformed multirange literal: "{(a,])}" at character 8
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  Expected comma or end of multirange.
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select '{(a,])}'::textmultirange;
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes ERROR:  range lower bound must be less than or equal to range upper bound at character 8
2024-09-08 14:51:51.749 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select '{[z,a]}'::textmultirange;
2024-09-08 14:51:51.749 KST client backend[3075264] pg_regress/strings ERROR:  regexp_like() does not support the "global" option
2024-09-08 14:51:51.749 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_like('abc', 'a.c', 'g');
2024-09-08 14:51:51.749 KST client backend[3075284] pg_regress/timetz ERROR:  date/time field value out of range: "24:00:00.01 PDT" at character 8
2024-09-08 14:51:51.749 KST client backend[3075284] pg_regress/timetz STATEMENT:  SELECT '24:00:00.01 PDT'::timetz;
2024-09-08 14:51:51.749 KST client backend[3075284] pg_regress/timetz ERROR:  date/time field value out of range: "23:59:60.01 PDT" at character 8
2024-09-08 14:51:51.749 KST client backend[3075284] pg_regress/timetz STATEMENT:  SELECT '23:59:60.01 PDT'::timetz;
2024-09-08 14:51:51.749 KST client backend[3075284] pg_regress/timetz ERROR:  date/time field value out of range: "24:01:00 PDT" at character 8
2024-09-08 14:51:51.749 KST client backend[3075284] pg_regress/timetz STATEMENT:  SELECT '24:01:00 PDT'::timetz;
2024-09-08 14:51:51.749 KST client backend[3075284] pg_regress/timetz ERROR:  date/time field value out of range: "25:00:00 PDT" at character 8
2024-09-08 14:51:51.749 KST client backend[3075284] pg_regress/timetz STATEMENT:  SELECT '25:00:00 PDT'::timetz;
2024-09-08 14:51:51.749 KST client backend[3075282] pg_regress/time ERROR:  unit "day" not supported for type time without time zone
2024-09-08 14:51:51.749 KST client backend[3075282] pg_regress/time STATEMENT:  SELECT EXTRACT(DAY         FROM TIME '2020-05-26 13:30:25.575401');
2024-09-08 14:51:51.749 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "18/1/1999" at character 13
2024-09-08 14:51:51.749 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.749 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '18/1/1999';
2024-09-08 14:51:51.749 KST client backend[3075282] pg_regress/time ERROR:  unit "fortnight" not recognized for type time without time zone
2024-09-08 14:51:51.749 KST client backend[3075282] pg_regress/time STATEMENT:  SELECT EXTRACT(FORTNIGHT   FROM TIME '2020-05-26 13:30:25.575401');
2024-09-08 14:51:51.749 KST client backend[3075282] pg_regress/time ERROR:  unit "timezone" not supported for type time without time zone
2024-09-08 14:51:51.749 KST client backend[3075282] pg_regress/time STATEMENT:  SELECT EXTRACT(TIMEZONE    FROM TIME '2020-05-26 13:30:25.575401');
2024-09-08 14:51:51.750 KST client backend[3075287] pg_regress/inet ERROR:  invalid cidr value: "192.168.1.2/30" at character 37
2024-09-08 14:51:51.750 KST client backend[3075287] pg_regress/inet DETAIL:  Value has bits set to right of mask.
2024-09-08 14:51:51.750 KST client backend[3075287] pg_regress/inet STATEMENT:  INSERT INTO INET_TBL (c, i) VALUES ('192.168.1.2/30', '192.168.1.226');
2024-09-08 14:51:51.750 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "99-Jan-08" at character 13
2024-09-08 14:51:51.750 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.750 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '99-Jan-08';
2024-09-08 14:51:51.750 KST client backend[3075287] pg_regress/inet ERROR:  invalid input syntax for type cidr: "1234::1234::1234" at character 37
2024-09-08 14:51:51.750 KST client backend[3075287] pg_regress/inet STATEMENT:  INSERT INTO INET_TBL (c, i) VALUES ('1234::1234::1234', '::1.2.3.4');
2024-09-08 14:51:51.750 KST client backend[3075287] pg_regress/inet ERROR:  invalid cidr value: "192.168.1.2/30" at character 42
2024-09-08 14:51:51.750 KST client backend[3075287] pg_regress/inet DETAIL:  Value has bits set to right of mask.
2024-09-08 14:51:51.750 KST client backend[3075287] pg_regress/inet STATEMENT:  INSERT INTO INET_TBL (c, i) VALUES (cidr('192.168.1.2/30'), '192.168.1.226');
2024-09-08 14:51:51.750 KST client backend[3075287] pg_regress/inet ERROR:  invalid cidr value: "ffff:ffff:ffff:ffff::/24" at character 42
2024-09-08 14:51:51.750 KST client backend[3075287] pg_regress/inet DETAIL:  Value has bits set to right of mask.
2024-09-08 14:51:51.750 KST client backend[3075287] pg_regress/inet STATEMENT:  INSERT INTO INET_TBL (c, i) VALUES (cidr('ffff:ffff:ffff:ffff::/24'), '::192.168.1.226');
2024-09-08 14:51:51.750 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "badly formatted interval" at character 39
2024-09-08 14:51:51.750 KST client backend[3075290] pg_regress/interval STATEMENT:  INSERT INTO INTERVAL_TBL (f1) VALUES ('badly formatted interval');
2024-09-08 14:51:51.750 KST client backend[3075289] pg_regress/macaddr8 ERROR:  invalid input syntax for type macaddr8: "not even close" at character 38
2024-09-08 14:51:51.750 KST client backend[3075289] pg_regress/macaddr8 STATEMENT:  INSERT INTO macaddr8_data VALUES (9, 'not even close');
2024-09-08 14:51:51.750 KST client backend[3075279] pg_regress/date ERROR:  invalid input syntax for type date: "99-08-Jan" at character 13
2024-09-08 14:51:51.750 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '99-08-Jan';
2024-09-08 14:51:51.750 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "@ 30 eons ago" at character 39
2024-09-08 14:51:51.750 KST client backend[3075290] pg_regress/interval STATEMENT:  INSERT INTO INTERVAL_TBL (f1) VALUES ('@ 30 eons ago');
2024-09-08 14:51:51.750 KST client backend[3075279] pg_regress/date ERROR:  invalid input syntax for type date: "1999-08-Jan" at character 13
2024-09-08 14:51:51.750 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '1999-08-Jan';
2024-09-08 14:51:51.750 KST client backend[3075279] pg_regress/date ERROR:  invalid input syntax for type date: "99 Jan 08" at character 13
2024-09-08 14:51:51.750 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '99 Jan 08';
2024-09-08 14:51:51.750 KST client backend[3075284] pg_regress/timetz ERROR:  operator does not exist: time with time zone + time with time zone at character 11
2024-09-08 14:51:51.750 KST client backend[3075284] pg_regress/timetz HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:51.750 KST client backend[3075284] pg_regress/timetz STATEMENT:  SELECT f1 + time with time zone '00:01' AS "Illegal" FROM TIMETZ_TBL;
2024-09-08 14:51:51.750 KST client backend[3075279] pg_regress/date ERROR:  invalid input syntax for type date: "99 08 Jan" at character 13
2024-09-08 14:51:51.750 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '99 08 Jan';
2024-09-08 14:51:51.750 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "99-01-08" at character 13
2024-09-08 14:51:51.750 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.750 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '99-01-08';
2024-09-08 14:51:51.750 KST client backend[3075284] pg_regress/timetz ERROR:  unit "day" not supported for type time with time zone
2024-09-08 14:51:51.750 KST client backend[3075284] pg_regress/timetz STATEMENT:  SELECT EXTRACT(DAY         FROM TIME WITH TIME ZONE '2020-05-26 13:30:25.575401-04');
2024-09-08 14:51:51.750 KST client backend[3075264] pg_regress/strings ERROR:  invalid value for parameter "start": 0
2024-09-08 14:51:51.750 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_instr('abcabcabc', 'a.c', 0, 1);
2024-09-08 14:51:51.750 KST client backend[3075284] pg_regress/timetz ERROR:  unit "fortnight" not recognized for type time with time zone
2024-09-08 14:51:51.750 KST client backend[3075284] pg_regress/timetz STATEMENT:  SELECT EXTRACT(FORTNIGHT   FROM TIME WITH TIME ZONE '2020-05-26 13:30:25.575401-04');
2024-09-08 14:51:51.750 KST client backend[3075264] pg_regress/strings ERROR:  invalid value for parameter "n": 0
2024-09-08 14:51:51.750 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_instr('abcabcabc', 'a.c', 1, 0);
2024-09-08 14:51:51.750 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "99-08-01" at character 13
2024-09-08 14:51:51.750 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.750 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '99-08-01';
2024-09-08 14:51:51.750 KST client backend[3075264] pg_regress/strings ERROR:  invalid value for parameter "endoption": -1
2024-09-08 14:51:51.750 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_instr('abcabcabc', 'a.c', 1, 1, -1);
2024-09-08 14:51:51.751 KST client backend[3075264] pg_regress/strings ERROR:  invalid value for parameter "endoption": 2
2024-09-08 14:51:51.751 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_instr('abcabcabc', 'a.c', 1, 1, 2);
2024-09-08 14:51:51.751 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "99 01 08" at character 13
2024-09-08 14:51:51.751 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.751 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '99 01 08';
2024-09-08 14:51:51.751 KST client backend[3075264] pg_regress/strings ERROR:  regexp_instr() does not support the "global" option
2024-09-08 14:51:51.751 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_instr('abcabcabc', 'a.c', 1, 1, 0, 'g');
2024-09-08 14:51:51.751 KST client backend[3075264] pg_regress/strings ERROR:  invalid value for parameter "subexpr": -1
2024-09-08 14:51:51.751 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_instr('abcabcabc', 'a.c', 1, 1, 0, '', -1);
2024-09-08 14:51:51.751 KST client backend[3075279] pg_regress/date ERROR:  date/time field value out of range: "99 08 01" at character 13
2024-09-08 14:51:51.751 KST client backend[3075279] pg_regress/date HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:51.751 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '99 08 01';
2024-09-08 14:51:51.751 KST client backend[3075279] pg_regress/date ERROR:  date out of range: "4714-11-23 BC" at character 13
2024-09-08 14:51:51.751 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '4714-11-23 BC';
2024-09-08 14:51:51.751 KST client backend[3075279] pg_regress/date ERROR:  date out of range: "5874898-01-01" at character 13
2024-09-08 14:51:51.751 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT date '5874898-01-01';
2024-09-08 14:51:51.751 KST client backend[3075264] pg_regress/strings ERROR:  invalid value for parameter "start": 0
2024-09-08 14:51:51.751 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_substr('abcabcabc', 'a.c', 0, 1);
2024-09-08 14:51:51.751 KST client backend[3075264] pg_regress/strings ERROR:  invalid value for parameter "n": 0
2024-09-08 14:51:51.751 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_substr('abcabcabc', 'a.c', 1, 0);
2024-09-08 14:51:51.751 KST client backend[3075264] pg_regress/strings ERROR:  regexp_substr() does not support the "global" option
2024-09-08 14:51:51.751 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_substr('abcabcabc', 'a.c', 1, 1, 'g');
2024-09-08 14:51:51.752 KST client backend[3075264] pg_regress/strings ERROR:  invalid value for parameter "subexpr": -1
2024-09-08 14:51:51.752 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_substr('abcabcabc', 'a.c', 1, 1, '', -1);
2024-09-08 14:51:51.752 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2147483648 days" at character 42
2024-09-08 14:51:51.752 KST client backend[3075290] pg_regress/interval STATEMENT:  INSERT INTO INTERVAL_TBL_OF (f1) VALUES ('2147483648 days');
2024-09-08 14:51:51.752 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483649 days" at character 42
2024-09-08 14:51:51.752 KST client backend[3075290] pg_regress/interval STATEMENT:  INSERT INTO INTERVAL_TBL_OF (f1) VALUES ('-2147483649 days');
2024-09-08 14:51:51.752 KST client backend[3075290] pg_regress/interval ERROR:  interval out of range at character 42
2024-09-08 14:51:51.752 KST client backend[3075290] pg_regress/interval STATEMENT:  INSERT INTO INTERVAL_TBL_OF (f1) VALUES ('2147483647 years');
2024-09-08 14:51:51.752 KST client backend[3075290] pg_regress/interval ERROR:  interval out of range at character 42
2024-09-08 14:51:51.752 KST client backend[3075290] pg_regress/interval STATEMENT:  INSERT INTO INTERVAL_TBL_OF (f1) VALUES ('-2147483648 years');
2024-09-08 14:51:51.753 KST client backend[3075290] pg_regress/interval ERROR:  interval out of range
2024-09-08 14:51:51.753 KST client backend[3075290] pg_regress/interval STATEMENT:  select extract(epoch from '256 microseconds'::interval * (2^55)::float8);
2024-09-08 14:51:51.753 KST client backend[3075264] pg_regress/strings ERROR:  invalid regular expression option: "z"
2024-09-08 14:51:51.753 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_matches('foobarbequebaz', $re$(bar)(beque)$re$, 'gz');
2024-09-08 14:51:51.753 KST client backend[3075264] pg_regress/strings ERROR:  invalid regular expression: parentheses () not balanced
2024-09-08 14:51:51.753 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_matches('foobarbequebaz', $re$(barbeque$re$);
2024-09-08 14:51:51.753 KST client backend[3075264] pg_regress/strings ERROR:  invalid regular expression: invalid repetition count(s)
2024-09-08 14:51:51.753 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_matches('foobarbequebaz', $re$(bar)(beque){2,1}$re$);
2024-09-08 14:51:51.754 KST client backend[3075279] pg_regress/date ERROR:  unit "microseconds" not supported for type date
2024-09-08 14:51:51.754 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT EXTRACT(MICROSECONDS  FROM DATE '2020-08-11');
2024-09-08 14:51:51.754 KST client backend[3075279] pg_regress/date ERROR:  unit "milliseconds" not supported for type date
2024-09-08 14:51:51.754 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT EXTRACT(MILLISECONDS  FROM DATE '2020-08-11');
2024-09-08 14:51:51.754 KST client backend[3075279] pg_regress/date ERROR:  unit "second" not supported for type date
2024-09-08 14:51:51.754 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT EXTRACT(SECOND        FROM DATE '2020-08-11');
2024-09-08 14:51:51.754 KST client backend[3075279] pg_regress/date ERROR:  unit "minute" not supported for type date
2024-09-08 14:51:51.754 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT EXTRACT(MINUTE        FROM DATE '2020-08-11');
2024-09-08 14:51:51.754 KST client backend[3075279] pg_regress/date ERROR:  unit "hour" not supported for type date
2024-09-08 14:51:51.754 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT EXTRACT(HOUR          FROM DATE '2020-08-11');
2024-09-08 14:51:51.754 KST client backend[3075264] pg_regress/strings ERROR:  invalid regular expression option: "z"
2024-09-08 14:51:51.754 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT foo, length(foo) FROM regexp_split_to_table('thE QUick bROWn FOx jUMPs ovEr The lazy dOG', 'e', 'zippy') AS foo;
2024-09-08 14:51:51.754 KST client backend[3075264] pg_regress/strings ERROR:  invalid regular expression option: "z"
2024-09-08 14:51:51.754 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_split_to_array('thE QUick bROWn FOx jUMPs ovEr The lazy dOG', 'e', 'iz');
2024-09-08 14:51:51.754 KST client backend[3075264] pg_regress/strings ERROR:  regexp_split_to_table() does not support the "global" option
2024-09-08 14:51:51.754 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT foo, length(foo) FROM regexp_split_to_table('thE QUick bROWn FOx jUMPs ovEr The lazy dOG', 'e', 'g') AS foo;
2024-09-08 14:51:51.754 KST client backend[3075264] pg_regress/strings ERROR:  regexp_split_to_array() does not support the "global" option
2024-09-08 14:51:51.754 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT regexp_split_to_array('thE QUick bROWn FOx jUMPs ovEr The lazy dOG', 'e', 'g');
2024-09-08 14:51:51.755 KST client backend[3075279] pg_regress/date ERROR:  unit "timezone" not supported for type date
2024-09-08 14:51:51.755 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT EXTRACT(TIMEZONE      FROM DATE '2020-08-11');
2024-09-08 14:51:51.755 KST client backend[3075279] pg_regress/date ERROR:  unit "timezone_m" not supported for type date
2024-09-08 14:51:51.755 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT EXTRACT(TIMEZONE_M    FROM DATE '2020-08-11');
2024-09-08 14:51:51.755 KST client backend[3075279] pg_regress/date ERROR:  unit "timezone_h" not supported for type date
2024-09-08 14:51:51.755 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT EXTRACT(TIMEZONE_H    FROM DATE '2020-08-11');
2024-09-08 14:51:51.756 KST client backend[3075290] pg_regress/interval ERROR:  interval out of range
2024-09-08 14:51:51.756 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT '3000000 months'::interval * 1000;
2024-09-08 14:51:51.756 KST client backend[3075290] pg_regress/interval ERROR:  interval out of range
2024-09-08 14:51:51.756 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT '3000000 months'::interval / 0.001;
2024-09-08 14:51:51.756 KST client backend[3075290] pg_regress/interval ERROR:  interval out of range
2024-09-08 14:51:51.756 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT '3000000 days'::interval * 1000;
2024-09-08 14:51:51.756 KST client backend[3075290] pg_regress/interval ERROR:  interval out of range
2024-09-08 14:51:51.756 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT '3000000 days'::interval / 0.001;
2024-09-08 14:51:51.756 KST client backend[3075290] pg_regress/interval ERROR:  interval out of range
2024-09-08 14:51:51.756 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT '1 month 2146410 days'::interval * 1000.5002;
2024-09-08 14:51:51.756 KST client backend[3075290] pg_regress/interval ERROR:  interval out of range
2024-09-08 14:51:51.756 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT '4611686018427387904 usec'::interval / 0.1;
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval ERROR:  interval out of range
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT justify_hours(interval '2147483647 days 24 hrs');
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval ERROR:  interval out of range
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT justify_days(interval '2147483647 months 30 days');
2024-09-08 14:51:51.757 KST client backend[3075279] pg_regress/date ERROR:  unit "microsec" not recognized for type date
2024-09-08 14:51:51.757 KST client backend[3075279] pg_regress/date STATEMENT:  SELECT EXTRACT(MICROSEC  FROM DATE 'infinity');
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval ERROR:  interval out of range
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT justify_interval(interval '2147483647 months 30 days');
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval ERROR:  interval out of range
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT justify_interval(interval '-2147483648 months -30 days');
2024-09-08 14:51:51.757 KST client backend[3075279] pg_regress/date ERROR:  date field value out of range: 0-07-15
2024-09-08 14:51:51.757 KST client backend[3075279] pg_regress/date STATEMENT:  select make_date(0, 7, 15);
2024-09-08 14:51:51.757 KST client backend[3075279] pg_regress/date ERROR:  date field value out of range: 2013-02-30
2024-09-08 14:51:51.757 KST client backend[3075279] pg_regress/date STATEMENT:  select make_date(2013, 2, 30);
2024-09-08 14:51:51.757 KST client backend[3075279] pg_regress/date ERROR:  date field value out of range: 2013-13-01
2024-09-08 14:51:51.757 KST client backend[3075279] pg_regress/date STATEMENT:  select make_date(2013, 13, 1);
2024-09-08 14:51:51.757 KST client backend[3075279] pg_regress/date ERROR:  date field value out of range: 2013-11--1
2024-09-08 14:51:51.757 KST client backend[3075279] pg_regress/date STATEMENT:  select make_date(2013, 11, -1);
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval ERROR:  interval out of range
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT justify_interval(interval '2147483647 months -30 days 1440 hrs');
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval ERROR:  interval out of range
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT justify_interval(interval '-2147483648 months 30 days -1440 hrs');
2024-09-08 14:51:51.757 KST client backend[3075279] pg_regress/date ERROR:  time field value out of range: 10:55:100.1
2024-09-08 14:51:51.757 KST client backend[3075279] pg_regress/date STATEMENT:  select make_time(10, 55, 100.1);
2024-09-08 14:51:51.757 KST client backend[3075279] pg_regress/date ERROR:  time field value out of range: 24:00:2.1
2024-09-08 14:51:51.757 KST client backend[3075279] pg_regress/date STATEMENT:  select make_time(24, 0, 2.1);
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "1 second 2 seconds" at character 8
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT '1 second 2 seconds'::interval;
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "10 milliseconds 20 milliseconds" at character 8
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT '10 milliseconds 20 milliseconds'::interval;
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "5.5 seconds 3 milliseconds" at character 8
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT '5.5 seconds 3 milliseconds'::interval;
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "1:20:05 5 microseconds" at character 8
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT '1:20:05 5 microseconds'::interval;
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "1 day 1 day" at character 8
2024-09-08 14:51:51.757 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT '1 day 1 day'::interval;
2024-09-08 14:51:51.758 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "1 2" at character 17
2024-09-08 14:51:51.758 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT interval '1 2' day to minute;
2024-09-08 14:51:51.758 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "1 2" at character 17
2024-09-08 14:51:51.758 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT interval '1 2' day to second;
2024-09-08 14:51:51.758 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "1 2" at character 17
2024-09-08 14:51:51.758 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT interval '1 2' hour to minute;
2024-09-08 14:51:51.758 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "1 2" at character 17
2024-09-08 14:51:51.758 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT interval '1 2' hour to second;
2024-09-08 14:51:51.758 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "1 2" at character 17
2024-09-08 14:51:51.758 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT interval '1 2' minute to second;
2024-09-08 14:51:51.759 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "123 11" at character 17
2024-09-08 14:51:51.759 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT interval '123 11' day;
2024-09-08 14:51:51.759 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "123 11" at character 17
2024-09-08 14:51:51.759 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT interval '123 11';
2024-09-08 14:51:51.759 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "123 2:03 -2:04" at character 17
2024-09-08 14:51:51.759 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT interval '123 2:03 -2:04';
2024-09-08 14:51:51.759 KST client backend[3075291] pg_regress/multirangetypes ERROR:  range lower bound must be less than or equal to range upper bound
2024-09-08 14:51:51.759 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select nummultirange(numrange(2.0, 1.0));
2024-09-08 14:51:51.759 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "1 2.345" at character 17
2024-09-08 14:51:51.759 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT interval '1 2.345' day to second(2);
2024-09-08 14:51:51.759 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "1 2.345" at character 17
2024-09-08 14:51:51.759 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT interval '1 2.345' hour to second(2);
2024-09-08 14:51:51.759 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "1 2.3456" at character 17
2024-09-08 14:51:51.759 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT interval '1 2.3456' minute to second(2);
2024-09-08 14:51:51.760 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "" at character 18
2024-09-08 14:51:51.760 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT  interval '';
2024-09-08 14:51:51.761 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "P.Y0M3DT4H5M6S" at character 17
2024-09-08 14:51:51.761 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P.Y0M3DT4H5M6S';
2024-09-08 14:51:51.761 KST client backend[3075287] pg_regress/inet ERROR:  result is out of range
2024-09-08 14:51:51.761 KST client backend[3075287] pg_regress/inet STATEMENT:  SELECT '127.0.0.1'::inet + 10000000000;
2024-09-08 14:51:51.761 KST client backend[3075287] pg_regress/inet ERROR:  result is out of range
2024-09-08 14:51:51.761 KST client backend[3075287] pg_regress/inet STATEMENT:  SELECT '127.0.0.1'::inet - 10000000000;
2024-09-08 14:51:51.761 KST client backend[3075287] pg_regress/inet ERROR:  result is out of range
2024-09-08 14:51:51.761 KST client backend[3075287] pg_regress/inet STATEMENT:  SELECT '126::1'::inet - '127::2'::inet;
2024-09-08 14:51:51.761 KST client backend[3075287] pg_regress/inet ERROR:  result is out of range
2024-09-08 14:51:51.761 KST client backend[3075287] pg_regress/inet STATEMENT:  SELECT '127::1'::inet - '126::2'::inet;
2024-09-08 14:51:51.761 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2147483648 years" at character 17
2024-09-08 14:51:51.761 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2147483648 years';
2024-09-08 14:51:51.761 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483649 years" at character 17
2024-09-08 14:51:51.761 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483649 years';
2024-09-08 14:51:51.761 KST client backend[3075287] pg_regress/inet ERROR:  cannot merge addresses from different families
2024-09-08 14:51:51.761 KST client backend[3075287] pg_regress/inet STATEMENT:  SELECT inet_merge(c, i) FROM INET_TBL;
2024-09-08 14:51:51.761 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2147483648 months" at character 17
2024-09-08 14:51:51.761 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2147483648 months';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483649 months" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483649 months';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2147483648 days" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2147483648 days';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483649 days" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483649 days';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2562047789 hours" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2562047789 hours';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2562047789 hours" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2562047789 hours';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "153722867281 minutes" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '153722867281 minutes';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-153722867281 minutes" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-153722867281 minutes';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "9223372036855 seconds" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '9223372036855 seconds';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-9223372036855 seconds" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-9223372036855 seconds';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "9223372036854777 millisecond" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '9223372036854777 millisecond';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-9223372036854777 millisecond" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-9223372036854777 millisecond';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "9223372036854775808 microsecond" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '9223372036854775808 microsecond';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-9223372036854775809 microsecond" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-9223372036854775809 microsecond';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P2147483648" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P2147483648';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P-2147483649" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P-2147483649';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval out of range at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P1-2147483647-2147483647';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "PT2562047789" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'PT2562047789';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "PT-2562047789" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'PT-2562047789';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2147483647 weeks" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2147483647 weeks';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483648 weeks" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483648 weeks';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2147483647 decades" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2147483647 decades';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483648 decades" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483648 decades';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2147483647 centuries" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2147483647 centuries';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483648 centuries" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483648 centuries';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2147483647 millennium" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2147483647 millennium';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483648 millennium" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483648 millennium';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "1 week 2147483647 days" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '1 week 2147483647 days';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-1 week -2147483648 days" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-1 week -2147483648 days';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2147483647 days 1 week" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2147483647 days 1 week';
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483648 days -1 week" at character 17
2024-09-08 14:51:51.762 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483648 days -1 week';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P1W2147483647D" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P1W2147483647D';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P-1W-2147483648D" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P-1W-2147483648D';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P2147483647D1W" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P2147483647D1W';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P-2147483648D-1W" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P-2147483648D-1W';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "1 decade 2147483647 years" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '1 decade 2147483647 years';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "1 century 2147483647 years" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '1 century 2147483647 years';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "1 millennium 2147483647 years" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '1 millennium 2147483647 years';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-1 decade -2147483648 years" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-1 decade -2147483648 years';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-1 century -2147483648 years" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-1 century -2147483648 years';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-1 millennium -2147483648 years" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-1 millennium -2147483648 years';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2147483647 years 1 decade" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2147483647 years 1 decade';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2147483647 years 1 century" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2147483647 years 1 century';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2147483647 years 1 millennium" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2147483647 years 1 millennium';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483648 years -1 decade" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483648 years -1 decade';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483648 years -1 century" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483648 years -1 century';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483648 years -1 millennium" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483648 years -1 millennium';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "0.1 millennium 2147483647 months" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '0.1 millennium 2147483647 months';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "0.1 centuries 2147483647 months" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '0.1 centuries 2147483647 months';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "0.1 decades 2147483647 months" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '0.1 decades 2147483647 months';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "0.1 yrs 2147483647 months" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '0.1 yrs 2147483647 months';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-0.1 millennium -2147483648 months" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-0.1 millennium -2147483648 months';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-0.1 centuries -2147483648 months" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-0.1 centuries -2147483648 months';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-0.1 decades -2147483648 months" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-0.1 decades -2147483648 months';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-0.1 yrs -2147483648 months" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-0.1 yrs -2147483648 months';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2147483647 months 0.1 millennium" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2147483647 months 0.1 millennium';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2147483647 months 0.1 centuries" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2147483647 months 0.1 centuries';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2147483647 months 0.1 decades" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2147483647 months 0.1 decades';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2147483647 months 0.1 yrs" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2147483647 months 0.1 yrs';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483648 months -0.1 millennium" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483648 months -0.1 millennium';
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483648 months -0.1 centuries" at character 17
2024-09-08 14:51:51.763 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483648 months -0.1 centuries';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483648 months -0.1 decades" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483648 months -0.1 decades';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483648 months -0.1 yrs" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483648 months -0.1 yrs';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "0.1 months 2147483647 days" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '0.1 months 2147483647 days';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-0.1 months -2147483648 days" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-0.1 months -2147483648 days';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2147483647 days 0.1 months" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2147483647 days 0.1 months';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483648 days -0.1 months" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483648 days -0.1 months';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "0.5 weeks 2147483647 days" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '0.5 weeks 2147483647 days';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-0.5 weeks -2147483648 days" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-0.5 weeks -2147483648 days';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2147483647 days 0.5 weeks" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2147483647 days 0.5 weeks';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483648 days -0.5 weeks" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483648 days -0.5 weeks';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "0.01 months 9223372036854775807 microseconds" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '0.01 months 9223372036854775807 microseconds';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-0.01 months -9223372036854775808 microseconds" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-0.01 months -9223372036854775808 microseconds';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "9223372036854775807 microseconds 0.01 months" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '9223372036854775807 microseconds 0.01 months';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-9223372036854775808 microseconds -0.01 months" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-9223372036854775808 microseconds -0.01 months';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "0.1 weeks 9223372036854775807 microseconds" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '0.1 weeks 9223372036854775807 microseconds';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-0.1 weeks -9223372036854775808 microseconds" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-0.1 weeks -9223372036854775808 microseconds';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "9223372036854775807 microseconds 0.1 weeks" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '9223372036854775807 microseconds 0.1 weeks';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-9223372036854775808 microseconds -0.1 weeks" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-9223372036854775808 microseconds -0.1 weeks';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "0.1 days 9223372036854775807 microseconds" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '0.1 days 9223372036854775807 microseconds';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-0.1 days -9223372036854775808 microseconds" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-0.1 days -9223372036854775808 microseconds';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "9223372036854775807 microseconds 0.1 days" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '9223372036854775807 microseconds 0.1 days';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-9223372036854775808 microseconds -0.1 days" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-9223372036854775808 microseconds -0.1 days';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P0.1Y2147483647M" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P0.1Y2147483647M';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P-0.1Y-2147483648M" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P-0.1Y-2147483648M';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P2147483647M0.1Y" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P2147483647M0.1Y';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P-2147483648M-0.1Y" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P-2147483648M-0.1Y';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P0.1M2147483647D" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P0.1M2147483647D';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P-0.1M-2147483648D" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P-0.1M-2147483648D';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P2147483647D0.1M" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P2147483647D0.1M';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P-2147483648D-0.1M" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P-2147483648D-0.1M';
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P0.5W2147483647D" at character 17
2024-09-08 14:51:51.764 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P0.5W2147483647D';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P-0.5W-2147483648D" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P-0.5W-2147483648D';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P2147483647D0.5W" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P2147483647D0.5W';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P-2147483648D-0.5W" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P-2147483648D-0.5W';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P0.01MT2562047788H54.775807S" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P0.01MT2562047788H54.775807S';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P-0.01MT-2562047788H-54.775808S" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P-0.01MT-2562047788H-54.775808S';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P0.1DT2562047788H54.775807S" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P0.1DT2562047788H54.775807S';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P-0.1DT-2562047788H-54.775808S" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P-0.1DT-2562047788H-54.775808S';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "PT2562047788.1H54.775807S" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'PT2562047788.1H54.775807S';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "PT-2562047788.1H-54.775808S" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'PT-2562047788.1H-54.775808S';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "PT2562047788H0.1M54.775807S" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'PT2562047788H0.1M54.775807S';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "PT-2562047788H-0.1M-54.775808S" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'PT-2562047788H-0.1M-54.775808S';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P0.1-2147483647-00" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P0.1-2147483647-00';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P00-0.1-2147483647" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P00-0.1-2147483647';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P00-0.01-00T2562047788:00:54.775807" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P00-0.01-00T2562047788:00:54.775807';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "P00-00-0.1T2562047788:00:54.775807" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'P00-00-0.1T2562047788:00:54.775807';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "PT2562047788.1:00:54.775807" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'PT2562047788.1:00:54.775807';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "PT2562047788:01.:54.775807" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval 'PT2562047788:01.:54.775807';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "0.1 2562047788:0:54.775807" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '0.1 2562047788:0:54.775807';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "0.1 2562047788:0:54.775808 ago" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '0.1 2562047788:0:54.775808 ago';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2562047788.1:0:54.775807" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2562047788.1:0:54.775807';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "2562047788.1:0:54.775808 ago" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2562047788.1:0:54.775808 ago';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "2562047788:0.1:54.775807" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2562047788:0.1:54.775807';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  invalid input syntax for type interval: "2562047788:0.1:54.775808 ago" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '2562047788:0.1:54.775808 ago';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483648 months ago" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483648 months ago';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483648 days ago" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483648 days ago';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-9223372036854775808 microseconds ago" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-9223372036854775808 microseconds ago';
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval ERROR:  interval field value out of range: "-2147483648 months -2147483648 days -9223372036854775808 microseconds ago" at character 17
2024-09-08 14:51:51.765 KST client backend[3075290] pg_regress/interval STATEMENT:  select interval '-2147483648 months -2147483648 days -9223372036854775808 microseconds ago';
2024-09-08 14:51:51.766 KST client backend[3075290] pg_regress/interval ERROR:  integer out of range
2024-09-08 14:51:51.766 KST client backend[3075290] pg_regress/interval STATEMENT:  select make_interval(years := 'inf'::float::int);
2024-09-08 14:51:51.766 KST client backend[3075290] pg_regress/interval ERROR:  integer out of range
2024-09-08 14:51:51.766 KST client backend[3075290] pg_regress/interval STATEMENT:  select make_interval(months := 'NaN'::float::int);
2024-09-08 14:51:51.766 KST client backend[3075290] pg_regress/interval ERROR:  interval out of range
2024-09-08 14:51:51.766 KST client backend[3075290] pg_regress/interval STATEMENT:  select make_interval(secs := 'inf');
2024-09-08 14:51:51.766 KST client backend[3075290] pg_regress/interval ERROR:  interval out of range
2024-09-08 14:51:51.766 KST client backend[3075290] pg_regress/interval STATEMENT:  select make_interval(secs := 'NaN');
2024-09-08 14:51:51.767 KST client backend[3075290] pg_regress/interval ERROR:  unit "fortnight" not recognized for type interval
2024-09-08 14:51:51.767 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT EXTRACT(FORTNIGHT FROM INTERVAL '2 days');
2024-09-08 14:51:51.767 KST client backend[3075290] pg_regress/interval ERROR:  unit "timezone" not supported for type interval
2024-09-08 14:51:51.767 KST client backend[3075290] pg_regress/interval STATEMENT:  SELECT EXTRACT(TIMEZONE FROM INTERVAL '2 days');
2024-09-08 14:51:51.769 KST client backend[3075264] pg_regress/strings ERROR:  negative substring length not allowed
2024-09-08 14:51:51.769 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT substr(f1, 5, -1) from toasttest;
2024-09-08 14:51:51.782 KST client backend[3075264] pg_regress/strings ERROR:  negative substring length not allowed
2024-09-08 14:51:51.782 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT substr(f1, 5, -1) from toasttest;
2024-09-08 14:51:51.785 KST client backend[3075264] pg_regress/strings ERROR:  field position must not be zero
2024-09-08 14:51:51.785 KST client backend[3075264] pg_regress/strings STATEMENT:  select split_part('joeuser@mydatabase','@',0) AS "an error";
2024-09-08 14:51:51.787 KST client backend[3075264] pg_regress/strings ERROR:  index 99 out of valid range, 0..71
2024-09-08 14:51:51.787 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT get_bit('\x1234567890abcdef00'::bytea, 99);
2024-09-08 14:51:51.787 KST client backend[3075264] pg_regress/strings ERROR:  index 99 out of valid range, 0..71
2024-09-08 14:51:51.787 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT set_bit('\x1234567890abcdef00'::bytea, 99, 0);
2024-09-08 14:51:51.787 KST client backend[3075264] pg_regress/strings ERROR:  index 99 out of valid range, 0..8
2024-09-08 14:51:51.787 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT get_byte('\x1234567890abcdef00'::bytea, 99);
2024-09-08 14:51:51.787 KST client backend[3075264] pg_regress/strings ERROR:  index 99 out of valid range, 0..8
2024-09-08 14:51:51.787 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT set_byte('\x1234567890abcdef00'::bytea, 99, 11);
2024-09-08 14:51:51.788 KST client backend[3075264] pg_regress/strings WARNING:  nonstandard use of \\ in a string literal at character 8
2024-09-08 14:51:51.788 KST client backend[3075264] pg_regress/strings HINT:  Use the escape string syntax for backslashes, e.g., E'\\'.
2024-09-08 14:51:51.788 KST client backend[3075264] pg_regress/strings WARNING:  nonstandard use of \\ in a string literal at character 24
2024-09-08 14:51:51.788 KST client backend[3075264] pg_regress/strings HINT:  Use the escape string syntax for backslashes, e.g., E'\\'.
2024-09-08 14:51:51.788 KST client backend[3075264] pg_regress/strings WARNING:  nonstandard use of \\ in a string literal at character 42
2024-09-08 14:51:51.788 KST client backend[3075264] pg_regress/strings HINT:  Use the escape string syntax for backslashes, e.g., E'\\'.
2024-09-08 14:51:51.788 KST client backend[3075264] pg_regress/strings WARNING:  nonstandard use of \\ in a string literal at character 62
2024-09-08 14:51:51.788 KST client backend[3075264] pg_regress/strings HINT:  Use the escape string syntax for backslashes, e.g., E'\\'.
2024-09-08 14:51:51.788 KST client backend[3075264] pg_regress/strings WARNING:  nonstandard use of \\ in a string literal at character 80
2024-09-08 14:51:51.788 KST client backend[3075264] pg_regress/strings HINT:  Use the escape string syntax for backslashes, e.g., E'\\'.
2024-09-08 14:51:51.788 KST client backend[3075264] pg_regress/strings WARNING:  nonstandard use of \\ in a string literal at character 98
2024-09-08 14:51:51.788 KST client backend[3075264] pg_regress/strings HINT:  Use the escape string syntax for backslashes, e.g., E'\\'.
2024-09-08 14:51:51.789 KST client backend[3075264] pg_regress/strings ERROR:  null character not permitted
2024-09-08 14:51:51.789 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT chr(0);
2024-09-08 14:51:51.789 KST client backend[3075264] pg_regress/strings ERROR:  negative substring length not allowed
2024-09-08 14:51:51.789 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT SUBSTRING('string'::bytea FROM -10 FOR -2147483646) AS "error";
2024-09-08 14:51:51.790 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode surrogate pair
2024-09-08 14:51:51.790 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT unistr('wrong: \db99');
2024-09-08 14:51:51.790 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode surrogate pair
2024-09-08 14:51:51.790 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT unistr('wrong: \db99\0061');
2024-09-08 14:51:51.790 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode surrogate pair
2024-09-08 14:51:51.790 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT unistr('wrong: \+00db99\+000061');
2024-09-08 14:51:51.790 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode code point: 2FFFFF
2024-09-08 14:51:51.790 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT unistr('wrong: \+2FFFFF');
2024-09-08 14:51:51.790 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode surrogate pair
2024-09-08 14:51:51.790 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT unistr('wrong: \udb99\u0061');
2024-09-08 14:51:51.790 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode surrogate pair
2024-09-08 14:51:51.790 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT unistr('wrong: \U0000db99\U00000061');
2024-09-08 14:51:51.790 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode code point: 2FFFFF
2024-09-08 14:51:51.790 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT unistr('wrong: \U002FFFFF');
2024-09-08 14:51:51.790 KST client backend[3075264] pg_regress/strings ERROR:  invalid Unicode escape
2024-09-08 14:51:51.790 KST client backend[3075264] pg_regress/strings HINT:  Unicode escapes must be \XXXX, \+XXXXXX, \uXXXX, or \UXXXXXXXX.
2024-09-08 14:51:51.790 KST client backend[3075264] pg_regress/strings STATEMENT:  SELECT unistr('wrong: \xyz');
2024-09-08 14:51:51.852 KST client backend[3075291] pg_regress/multirangetypes ERROR:  value for domain restrictedmultirange violates check constraint "restrictedmultirange_check"
2024-09-08 14:51:51.852 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select '{[4,50)}'::restrictedmultirange @> 7;
2024-09-08 14:51:51.853 KST client backend[3075291] pg_regress/multirangetypes ERROR:  type "intmultirange" already exists
2024-09-08 14:51:51.853 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  Failed while creating a multirange type for type "intrange".
2024-09-08 14:51:51.853 KST client backend[3075291] pg_regress/multirangetypes HINT:  You can manually specify a multirange type name using the "multirange_type_name" attribute.
2024-09-08 14:51:51.853 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  create type intrange as range(subtype=int);
2024-09-08 14:51:51.854 KST client backend[3075291] pg_regress/multirangetypes ERROR:  type "intr_multirange" already exists
2024-09-08 14:51:51.854 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  Failed while creating a multirange type for type "intr".
2024-09-08 14:51:51.854 KST client backend[3075291] pg_regress/multirangetypes HINT:  You can manually specify a multirange type name using the "multirange_type_name" attribute.
2024-09-08 14:51:51.854 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  create type intr as range(subtype=int);
2024-09-08 14:51:51.854 KST client backend[3075291] pg_regress/multirangetypes ERROR:  type "int4" already exists
2024-09-08 14:51:51.854 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  create type textrange1 as range(subtype=text, multirange_type_name=int, collation="C");
2024-09-08 14:51:51.855 KST client backend[3075291] pg_regress/multirangetypes ERROR:  function multirange_of_text(textrange2) does not exist at character 8
2024-09-08 14:51:51.855 KST client backend[3075291] pg_regress/multirangetypes HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:51.855 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select multirange_of_text(textrange2('a','Z'));
2024-09-08 14:51:51.855 KST client backend[3075291] pg_regress/multirangetypes ERROR:  range lower bound must be less than or equal to range upper bound
2024-09-08 14:51:51.855 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select multirange_of_text(textrange1('a','Z')) @> 'b'::text;
2024-09-08 14:51:51.856 KST client backend[3075291] pg_regress/multirangetypes ERROR:  function anyarray_anymultirange_func(integer[], nummultirange) does not exist at character 8
2024-09-08 14:51:51.856 KST client backend[3075291] pg_regress/multirangetypes HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:51.856 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select anyarray_anymultirange_func(ARRAY[1,2], nummultirange(numrange(10,20)));
2024-09-08 14:51:51.857 KST client backend[3075291] pg_regress/multirangetypes ERROR:  cannot determine result data type
2024-09-08 14:51:51.857 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  A result of type anymultirange requires at least one input of type anyrange or anymultirange.
2024-09-08 14:51:51.857 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  create function bogus_func(anyelement)
	  returns anymultirange as 'select int4multirange(int4range(1,10))' language sql;
2024-09-08 14:51:51.857 KST client backend[3075291] pg_regress/multirangetypes ERROR:  cannot determine result data type
2024-09-08 14:51:51.857 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  A result of type anymultirange requires at least one input of type anyrange or anymultirange.
2024-09-08 14:51:51.857 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  create function bogus_func(int)
	  returns anymultirange as 'select int4multirange(int4range(1,10))' language sql;
2024-09-08 14:51:51.857 KST client backend[3075291] pg_regress/multirangetypes ERROR:  function multirangetypes_sql(nummultirange, integer[]) does not exist at character 8
2024-09-08 14:51:51.857 KST client backend[3075291] pg_regress/multirangetypes HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:51.857 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select multirangetypes_sql(nummultirange(numrange(1,10)), ARRAY[2,20]);
2024-09-08 14:51:51.858 KST client backend[3075291] pg_regress/multirangetypes ERROR:  function anycompatiblearray_anycompatiblemultirange_func(numeric[], int4multirange) does not exist at character 8
2024-09-08 14:51:51.858 KST client backend[3075291] pg_regress/multirangetypes HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:51.858 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select anycompatiblearray_anycompatiblemultirange_func(ARRAY[1.1,2], multirange(int4range(10,20)));
2024-09-08 14:51:51.858 KST client backend[3075291] pg_regress/multirangetypes ERROR:  function anycompatiblerange_anycompatiblemultirange_func(numrange, int4multirange) does not exist at character 8
2024-09-08 14:51:51.858 KST client backend[3075291] pg_regress/multirangetypes HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:51.858 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select anycompatiblerange_anycompatiblemultirange_func(numrange(1,2), multirange(int4range(10,20)));
2024-09-08 14:51:51.858 KST client backend[3075291] pg_regress/multirangetypes ERROR:  cannot determine result data type
2024-09-08 14:51:51.858 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  A result of type anycompatiblerange requires at least one input of type anycompatiblerange or anycompatiblemultirange.
2024-09-08 14:51:51.858 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  create function bogus_func(anycompatible)
	  returns anycompatiblerange as 'select int4range(1,10)' language sql;
2024-09-08 14:51:51.860 KST client backend[3075291] pg_regress/multirangetypes ERROR:  range lower bound must be less than or equal to range upper bound
2024-09-08 14:51:51.860 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  select arraymultirange(arrayrange(ARRAY[2,1], ARRAY[1,2]));
2024-09-08 14:51:51.865 KST client backend[3075291] pg_regress/multirangetypes ERROR:  cannot determine result data type
2024-09-08 14:51:51.865 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  A result of type anymultirange requires at least one input of type anyrange or anymultirange.
2024-09-08 14:51:51.865 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  create function mr_outparam_fail(i anyelement, out r anymultirange, out t text)
	  as $$ select '[1,10]', 'foo' $$ language sql;
2024-09-08 14:51:51.865 KST client backend[3075291] pg_regress/multirangetypes ERROR:  cannot determine result data type
2024-09-08 14:51:51.865 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  A result of type anymultirange requires at least one input of type anyrange or anymultirange.
2024-09-08 14:51:51.865 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  create function mr_inoutparam_fail(inout i anyelement, out r anymultirange)
	  as $$ select $1, '[1,10]' $$ language sql;
2024-09-08 14:51:51.865 KST client backend[3075291] pg_regress/multirangetypes ERROR:  cannot determine result data type
2024-09-08 14:51:51.865 KST client backend[3075291] pg_regress/multirangetypes DETAIL:  A result of type anymultirange requires at least one input of type anyrange or anymultirange.
2024-09-08 14:51:51.865 KST client backend[3075291] pg_regress/multirangetypes STATEMENT:  create function mr_table_fail(i anyelement) returns table(i anyelement, r anymultirange)
	  as $$ select $1, '[1,10]' $$ language sql;
2024-09-08 14:51:52.060 KST client backend[3075285] pg_regress/timestamp ERROR:  time zone "america/does_not_exist" not recognized at character 35
2024-09-08 14:51:52.060 KST client backend[3075285] pg_regress/timestamp STATEMENT:  INSERT INTO TIMESTAMP_TBL VALUES ('19970710 173201 America/Does_not_exist');
2024-09-08 14:51:52.062 KST client backend[3075286] pg_regress/timestamptz ERROR:  time zone "america/does_not_exist" not recognized at character 37
2024-09-08 14:51:52.062 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  INSERT INTO TIMESTAMPTZ_TBL VALUES ('19970710 173201 America/Does_not_exist');
2024-09-08 14:51:52.062 KST client backend[3075286] pg_regress/timestamptz ERROR:  time zone "America/Does_not_exist" not recognized
2024-09-08 14:51:52.062 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  SELECT '19970710 173201' AT TIME ZONE 'America/Does_not_exist';
2024-09-08 14:51:52.064 KST client backend[3075285] pg_regress/timestamp ERROR:  date/time field value out of range: "Feb 29 17:32:01 1997" at character 35
2024-09-08 14:51:52.064 KST client backend[3075285] pg_regress/timestamp STATEMENT:  INSERT INTO TIMESTAMP_TBL VALUES ('Feb 29 17:32:01 1997');
2024-09-08 14:51:52.065 KST client backend[3075285] pg_regress/timestamp ERROR:  time zone displacement out of range: "Feb 16 17:32:01 -0097" at character 35
2024-09-08 14:51:52.065 KST client backend[3075285] pg_regress/timestamp STATEMENT:  INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 -0097');
2024-09-08 14:51:52.065 KST client backend[3075285] pg_regress/timestamp ERROR:  timestamp out of range: "Feb 16 17:32:01 5097 BC" at character 35
2024-09-08 14:51:52.065 KST client backend[3075285] pg_regress/timestamp STATEMENT:  INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 5097 BC');
2024-09-08 14:51:52.066 KST client backend[3075285] pg_regress/timestamp ERROR:  timestamp out of range: "4714-11-23 23:59:59 BC" at character 8
2024-09-08 14:51:52.066 KST client backend[3075285] pg_regress/timestamp STATEMENT:  SELECT '4714-11-23 23:59:59 BC'::timestamp;
2024-09-08 14:51:52.066 KST client backend[3075285] pg_regress/timestamp ERROR:  timestamp out of range: "294277-01-01 00:00:00" at character 8
2024-09-08 14:51:52.066 KST client backend[3075285] pg_regress/timestamp STATEMENT:  SELECT '294277-01-01 00:00:00'::timestamp;
2024-09-08 14:51:52.066 KST client backend[3075286] pg_regress/timestamptz ERROR:  date/time field value out of range: "Feb 29 17:32:01 1997" at character 37
2024-09-08 14:51:52.066 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 29 17:32:01 1997');
2024-09-08 14:51:52.067 KST client backend[3075286] pg_regress/timestamptz ERROR:  time zone displacement out of range: "Feb 16 17:32:01 -0097" at character 37
2024-09-08 14:51:52.067 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 -0097');
2024-09-08 14:51:52.067 KST client backend[3075286] pg_regress/timestamptz ERROR:  timestamp out of range: "Feb 16 17:32:01 5097 BC" at character 37
2024-09-08 14:51:52.067 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  INSERT INTO TIMESTAMPTZ_TBL VALUES ('Feb 16 17:32:01 5097 BC');
2024-09-08 14:51:52.069 KST client backend[3075286] pg_regress/timestamptz ERROR:  timestamp out of range: "4714-11-23 23:59:59+00 BC" at character 8
2024-09-08 14:51:52.069 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  SELECT '4714-11-23 23:59:59+00 BC'::timestamptz;
2024-09-08 14:51:52.069 KST client backend[3075286] pg_regress/timestamptz ERROR:  timestamp out of range: "294277-01-01 00:00:00+00" at character 8
2024-09-08 14:51:52.069 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  SELECT '294277-01-01 00:00:00+00'::timestamptz;
2024-09-08 14:51:52.069 KST client backend[3075286] pg_regress/timestamptz ERROR:  timestamp out of range: "294277-12-31 16:00:00-08" at character 8
2024-09-08 14:51:52.069 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  SELECT '294277-12-31 16:00:00-08'::timestamptz;
2024-09-08 14:51:52.070 KST client backend[3075285] pg_regress/timestamp ERROR:  timestamps cannot be binned into intervals containing months or years
2024-09-08 14:51:52.070 KST client backend[3075285] pg_regress/timestamp STATEMENT:  SELECT date_bin('5 months'::interval, timestamp '2020-02-01 01:01:01', timestamp '2001-01-01');
2024-09-08 14:51:52.070 KST client backend[3075285] pg_regress/timestamp ERROR:  timestamps cannot be binned into intervals containing months or years
2024-09-08 14:51:52.070 KST client backend[3075285] pg_regress/timestamp STATEMENT:  SELECT date_bin('5 years'::interval,  timestamp '2020-02-01 01:01:01', timestamp '2001-01-01');
2024-09-08 14:51:52.071 KST client backend[3075285] pg_regress/timestamp ERROR:  stride must be greater than zero
2024-09-08 14:51:52.071 KST client backend[3075285] pg_regress/timestamp STATEMENT:  SELECT date_bin('0 days'::interval, timestamp '1970-01-01 01:00:00' , timestamp '1970-01-01 00:00:00');
2024-09-08 14:51:52.071 KST client backend[3075285] pg_regress/timestamp ERROR:  stride must be greater than zero
2024-09-08 14:51:52.071 KST client backend[3075285] pg_regress/timestamp STATEMENT:  SELECT date_bin('-2 days'::interval, timestamp '1970-01-01 01:00:00' , timestamp '1970-01-01 00:00:00');
2024-09-08 14:51:52.074 KST client backend[3075286] pg_regress/timestamptz ERROR:  timestamps cannot be binned into intervals containing months or years
2024-09-08 14:51:52.074 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  SELECT date_bin('5 months'::interval, timestamp with time zone '2020-02-01 01:01:01+00', timestamp with time zone '2001-01-01+00');
2024-09-08 14:51:52.074 KST client backend[3075286] pg_regress/timestamptz ERROR:  timestamps cannot be binned into intervals containing months or years
2024-09-08 14:51:52.074 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  SELECT date_bin('5 years'::interval,  timestamp with time zone '2020-02-01 01:01:01+00', timestamp with time zone '2001-01-01+00');
2024-09-08 14:51:52.074 KST client backend[3075286] pg_regress/timestamptz ERROR:  stride must be greater than zero
2024-09-08 14:51:52.074 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  SELECT date_bin('0 days'::interval, timestamp with time zone '1970-01-01 01:00:00+00' , timestamp with time zone '1970-01-01 00:00:00+00');
2024-09-08 14:51:52.074 KST client backend[3075286] pg_regress/timestamptz ERROR:  stride must be greater than zero
2024-09-08 14:51:52.074 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  SELECT date_bin('-2 days'::interval, timestamp with time zone '1970-01-01 01:00:00+00' , timestamp with time zone '1970-01-01 00:00:00+00');
2024-09-08 14:51:52.077 KST client backend[3075285] pg_regress/timestamp ERROR:  interval out of range
2024-09-08 14:51:52.077 KST client backend[3075285] pg_regress/timestamp STATEMENT:  SELECT timestamp '294276-12-31 23:59:59' - timestamp '1999-12-23 19:59:04.224192' AS overflows;
2024-09-08 14:51:52.082 KST client backend[3075286] pg_regress/timestamptz ERROR:  interval out of range
2024-09-08 14:51:52.082 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  SELECT timestamptz '294276-12-31 23:59:59 UTC' - timestamptz '1999-12-23 19:59:04.224192 UTC' AS overflows;
2024-09-08 14:51:52.085 KST client backend[3075285] pg_regress/timestamp ERROR:  date field value out of range: 0-07-15
2024-09-08 14:51:52.085 KST client backend[3075285] pg_regress/timestamp STATEMENT:  select make_timestamp(0, 7, 15, 12, 30, 15);
2024-09-08 14:51:52.086 KST client backend[3075285] pg_regress/timestamp ERROR:  step size cannot equal zero
2024-09-08 14:51:52.086 KST client backend[3075285] pg_regress/timestamp STATEMENT:  select * from generate_series('2020-01-01 00:00'::timestamp,
	                              '2020-01-02 03:00'::timestamp,
	                              '0 hour'::interval);
2024-09-08 14:51:52.098 KST client backend[3075286] pg_regress/timestamptz ERROR:  invalid input syntax for type numeric time zone: "2"
2024-09-08 14:51:52.098 KST client backend[3075286] pg_regress/timestamptz HINT:  Numeric time zones must have "-" or "+" as first character.
2024-09-08 14:51:52.098 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  SELECT make_timestamptz(1973, 07, 15, 08, 15, 55.33, '2');
2024-09-08 14:51:52.098 KST client backend[3075286] pg_regress/timestamptz ERROR:  numeric time zone "+16" out of range
2024-09-08 14:51:52.098 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  SELECT make_timestamptz(2014, 12, 10, 10, 10, 10, '+16');
2024-09-08 14:51:52.098 KST client backend[3075286] pg_regress/timestamptz ERROR:  numeric time zone "-16" out of range
2024-09-08 14:51:52.098 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  SELECT make_timestamptz(2014, 12, 10, 10, 10, 10, '-16');
2024-09-08 14:51:52.100 KST client backend[3075286] pg_regress/timestamptz ERROR:  time zone "Nehwon/Lankhmar" not recognized
2024-09-08 14:51:52.100 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  SELECT make_timestamptz(1910, 12, 24, 0, 0, 0, 'Nehwon/Lankhmar');
2024-09-08 14:51:52.101 KST client backend[3075286] pg_regress/timestamptz ERROR:  step size cannot equal zero
2024-09-08 14:51:52.101 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  select * from generate_series('2020-01-01 00:00'::timestamptz,
	                              '2020-01-02 03:00'::timestamptz,
	                              '0 hour'::interval);
2024-09-08 14:51:52.109 KST client backend[3075286] pg_regress/timestamptz ERROR:  timestamp cannot be NaN
2024-09-08 14:51:52.109 KST client backend[3075286] pg_regress/timestamptz STATEMENT:  SELECT to_timestamp('NaN'::float);
2024-09-08 14:51:52.181 KST client backend[3075343] pg_regress/horology ERROR:  date/time field value out of range: "27/12/2001 04:05:06.789-08" at character 33
2024-09-08 14:51:52.181 KST client backend[3075343] pg_regress/horology HINT:  Perhaps you need a different "datestyle" setting.
2024-09-08 14:51:52.181 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamp with time zone '27/12/2001 04:05:06.789-08';
2024-09-08 14:51:52.181 KST client backend[3075345] pg_regress/tstypes ERROR:  syntax error in tsvector: "'' '1' '2'" at character 8
2024-09-08 14:51:52.181 KST client backend[3075345] pg_regress/tstypes STATEMENT:  SELECT $$'' '1' '2'$$::tsvector;
2024-09-08 14:51:52.183 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type time with time zone: "T040506.789 America/Los_Angeles" at character 28
2024-09-08 14:51:52.183 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT time with time zone 'T040506.789 America/Los_Angeles';
2024-09-08 14:51:52.183 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type date: "1995-08-06  J J J" at character 13
2024-09-08 14:51:52.183 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT date '1995-08-06  J J J';
2024-09-08 14:51:52.183 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type date: "J J 1520447" at character 13
2024-09-08 14:51:52.183 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT date 'J J 1520447';
2024-09-08 14:51:52.183 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type timestamp with time zone: "Y2001M12D27H04M05S06.789+08" at character 33
2024-09-08 14:51:52.183 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamp with time zone 'Y2001M12D27H04M05S06.789+08';
2024-09-08 14:51:52.183 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type timestamp with time zone: "Y2001M12D27H04MM05S06.789-08" at character 33
2024-09-08 14:51:52.183 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamp with time zone 'Y2001M12D27H04MM05S06.789-08';
2024-09-08 14:51:52.183 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type date: "1995-08-06 epoch" at character 13
2024-09-08 14:51:52.183 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT date '1995-08-06 epoch';
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type date: "1995-08-06 infinity" at character 13
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT date '1995-08-06 infinity';
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type date: "1995-08-06 -infinity" at character 13
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT date '1995-08-06 -infinity';
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type date: "today infinity" at character 13
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT date 'today infinity';
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type date: "-infinity infinity" at character 13
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT date '-infinity infinity';
2024-09-08 14:51:52.184 KST client backend[3075354] pg_regress/xid ERROR:  invalid input syntax for type xid: "" at character 8
2024-09-08 14:51:52.184 KST client backend[3075354] pg_regress/xid STATEMENT:  select ''::xid;
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type timestamp: "1995-08-06 epoch" at character 18
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamp '1995-08-06 epoch';
2024-09-08 14:51:52.184 KST client backend[3075354] pg_regress/xid ERROR:  invalid input syntax for type xid: "asdf" at character 8
2024-09-08 14:51:52.184 KST client backend[3075354] pg_regress/xid STATEMENT:  select 'asdf'::xid;
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type timestamp: "1995-08-06 infinity" at character 18
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamp '1995-08-06 infinity';
2024-09-08 14:51:52.184 KST client backend[3075354] pg_regress/xid ERROR:  invalid input syntax for type xid8: "" at character 8
2024-09-08 14:51:52.184 KST client backend[3075354] pg_regress/xid STATEMENT:  select ''::xid8;
2024-09-08 14:51:52.184 KST client backend[3075354] pg_regress/xid ERROR:  invalid input syntax for type xid8: "asdf" at character 8
2024-09-08 14:51:52.184 KST client backend[3075354] pg_regress/xid STATEMENT:  select 'asdf'::xid8;
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type timestamp: "1995-08-06 -infinity" at character 18
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamp '1995-08-06 -infinity';
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type timestamp: "epoch 01:01:01" at character 18
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamp 'epoch 01:01:01';
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type timestamp: "infinity 01:01:01" at character 18
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamp 'infinity 01:01:01';
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type timestamp: "-infinity 01:01:01" at character 18
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamp '-infinity 01:01:01';
2024-09-08 14:51:52.184 KST client backend[3075351] pg_regress/unicode ERROR:  invalid normalization form: def
2024-09-08 14:51:52.184 KST client backend[3075351] pg_regress/unicode STATEMENT:  SELECT "normalize"('abc', 'def');
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type timestamp: "now epoch" at character 18
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamp 'now epoch';
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type timestamp: "-infinity infinity" at character 18
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamp '-infinity infinity';
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type timestamp with time zone: "1995-08-06 epoch" at character 20
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamptz '1995-08-06 epoch';
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type timestamp with time zone: "1995-08-06 infinity" at character 20
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamptz '1995-08-06 infinity';
2024-09-08 14:51:52.184 KST client backend[3075353] pg_regress/expressions WARNING:  TIME(7) WITH TIME ZONE precision reduced to maximum allowed, 6
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type timestamp with time zone: "1995-08-06 -infinity" at character 20
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamptz '1995-08-06 -infinity';
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type timestamp with time zone: "epoch 01:01:01" at character 20
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamptz 'epoch 01:01:01';
2024-09-08 14:51:52.184 KST client backend[3075353] pg_regress/expressions WARNING:  TIMESTAMP(7) WITH TIME ZONE precision reduced to maximum allowed, 6
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type timestamp with time zone: "infinity 01:01:01" at character 20
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamptz 'infinity 01:01:01';
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type timestamp with time zone: "-infinity 01:01:01" at character 20
2024-09-08 14:51:52.184 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamptz '-infinity 01:01:01';
2024-09-08 14:51:52.184 KST client backend[3075353] pg_regress/expressions WARNING:  TIME(7) precision reduced to maximum allowed, 6
2024-09-08 14:51:52.185 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type timestamp with time zone: "now epoch" at character 20
2024-09-08 14:51:52.185 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamptz 'now epoch';
2024-09-08 14:51:52.185 KST client backend[3075353] pg_regress/expressions WARNING:  TIMESTAMP(7) precision reduced to maximum allowed, 6
2024-09-08 14:51:52.185 KST client backend[3075343] pg_regress/horology ERROR:  invalid input syntax for type timestamp with time zone: "-infinity infinity" at character 20
2024-09-08 14:51:52.185 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamptz '-infinity infinity';
2024-09-08 14:51:52.185 KST client backend[3075346] pg_regress/geometry ERROR:  value out of range: underflow
2024-09-08 14:51:52.185 KST client backend[3075346] pg_regress/geometry STATEMENT:  SELECT p1.f1, p2.f1, p1.f1 * p2.f1 FROM POINT_TBL p1, POINT_TBL p2 WHERE p1.f1[0] < 1;
2024-09-08 14:51:52.185 KST client backend[3075351] pg_regress/unicode ERROR:  invalid normalization form: def
2024-09-08 14:51:52.185 KST client backend[3075351] pg_regress/unicode STATEMENT:  SELECT is_normalized('abc', 'def');
2024-09-08 14:51:52.185 KST client backend[3075349] pg_regress/regex ERROR:  regexp_match() does not support the "global" option
2024-09-08 14:51:52.185 KST client backend[3075349] pg_regress/regex HINT:  Use the regexp_matches function instead.
2024-09-08 14:51:52.185 KST client backend[3075349] pg_regress/regex STATEMENT:  select regexp_match('abc', 'Bd', 'ig');
2024-09-08 14:51:52.185 KST client backend[3075354] pg_regress/xid ERROR:  operator does not exist: xid < xid at character 17
2024-09-08 14:51:52.185 KST client backend[3075354] pg_regress/xid HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:52.185 KST client backend[3075354] pg_regress/xid STATEMENT:  select '1'::xid < '2'::xid;
2024-09-08 14:51:52.185 KST client backend[3075354] pg_regress/xid ERROR:  operator does not exist: xid <= xid at character 17
2024-09-08 14:51:52.185 KST client backend[3075354] pg_regress/xid HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:52.185 KST client backend[3075354] pg_regress/xid STATEMENT:  select '1'::xid <= '2'::xid;
2024-09-08 14:51:52.185 KST client backend[3075346] pg_regress/geometry ERROR:  value out of range: overflow
2024-09-08 14:51:52.185 KST client backend[3075346] pg_regress/geometry STATEMENT:  SELECT p1.f1, p2.f1, p1.f1 / p2.f1 FROM POINT_TBL p1, POINT_TBL p2 WHERE p2.f1[0] > 1000;
2024-09-08 14:51:52.185 KST client backend[3075354] pg_regress/xid ERROR:  operator does not exist: xid > xid at character 17
2024-09-08 14:51:52.185 KST client backend[3075354] pg_regress/xid HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:52.185 KST client backend[3075354] pg_regress/xid STATEMENT:  select '1'::xid > '2'::xid;
2024-09-08 14:51:52.185 KST client backend[3075346] pg_regress/geometry ERROR:  division by zero
2024-09-08 14:51:52.185 KST client backend[3075346] pg_regress/geometry STATEMENT:  SELECT p1.f1, p2.f1, p1.f1 / p2.f1 FROM POINT_TBL p1, POINT_TBL p2 WHERE p2.f1 ~= '(0,0)'::point;
2024-09-08 14:51:52.185 KST client backend[3075354] pg_regress/xid ERROR:  operator does not exist: xid >= xid at character 17
2024-09-08 14:51:52.185 KST client backend[3075354] pg_regress/xid HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:52.185 KST client backend[3075354] pg_regress/xid STATEMENT:  select '1'::xid >= '2'::xid;
2024-09-08 14:51:52.186 KST client backend[3075343] pg_regress/horology ERROR:  operator does not exist: date - time with time zone at character 26
2024-09-08 14:51:52.186 KST client backend[3075343] pg_regress/horology HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:52.186 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT date '1991-02-03' - time with time zone '04:05:06 UTC' AS "Subtract Time UTC";
2024-09-08 14:51:52.186 KST client backend[3075343] pg_regress/horology ERROR:  timestamp out of range
2024-09-08 14:51:52.186 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamp without time zone '2000-01-01' - interval '2483590 days' AS "out of range";
2024-09-08 14:51:52.188 KST client backend[3075343] pg_regress/horology ERROR:  timestamp out of range
2024-09-08 14:51:52.188 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT timestamp with time zone '2000-01-01' - interval '2483590 days' AS "out of range";
2024-09-08 14:51:52.190 KST client backend[3075354] pg_regress/xid ERROR:  invalid input syntax for type pg_snapshot: "31:12:" at character 8
2024-09-08 14:51:52.190 KST client backend[3075354] pg_regress/xid STATEMENT:  select '31:12:'::pg_snapshot;
2024-09-08 14:51:52.190 KST client backend[3075354] pg_regress/xid ERROR:  invalid input syntax for type pg_snapshot: "0:1:" at character 8
2024-09-08 14:51:52.190 KST client backend[3075354] pg_regress/xid STATEMENT:  select '0:1:'::pg_snapshot;
2024-09-08 14:51:52.190 KST client backend[3075354] pg_regress/xid ERROR:  invalid input syntax for type pg_snapshot: "12:13:0" at character 8
2024-09-08 14:51:52.190 KST client backend[3075354] pg_regress/xid STATEMENT:  select '12:13:0'::pg_snapshot;
2024-09-08 14:51:52.190 KST client backend[3075354] pg_regress/xid ERROR:  invalid input syntax for type pg_snapshot: "12:16:14,13" at character 8
2024-09-08 14:51:52.190 KST client backend[3075354] pg_regress/xid STATEMENT:  select '12:16:14,13'::pg_snapshot;
2024-09-08 14:51:52.191 KST client backend[3075343] pg_regress/horology ERROR:  cannot cast type time with time zone to interval at character 8
2024-09-08 14:51:52.191 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT CAST(time with time zone '01:02-08' AS interval) AS "+00:01";
2024-09-08 14:51:52.191 KST client backend[3075343] pg_regress/horology ERROR:  cannot cast type interval to time with time zone at character 8
2024-09-08 14:51:52.191 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT CAST(interval '02:03' AS time with time zone) AS "02:03:00-08";
2024-09-08 14:51:52.193 KST client backend[3075354] pg_regress/xid ERROR:  invalid input syntax for type pg_snapshot: "1:9223372036854775808:3" at character 20
2024-09-08 14:51:52.193 KST client backend[3075354] pg_regress/xid STATEMENT:  SELECT pg_snapshot '1:9223372036854775808:3';
2024-09-08 14:51:52.195 KST client backend[3075346] pg_regress/geometry ERROR:  operator does not exist: lseg # point at character 23
2024-09-08 14:51:52.195 KST client backend[3075346] pg_regress/geometry HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:52.195 KST client backend[3075346] pg_regress/geometry STATEMENT:  SELECT p.f1, l.s, l.s # p.f1 AS intersection
	   FROM LSEG_TBL l, POINT_TBL p;
2024-09-08 14:51:52.196 KST client backend[3075345] pg_regress/tstypes ERROR:  lexeme array may not contain nulls
2024-09-08 14:51:52.196 KST client backend[3075345] pg_regress/tstypes STATEMENT:  SELECT array_to_tsvector(ARRAY['base','hidden','rebel','spaceship', NULL]);
2024-09-08 14:51:52.196 KST client backend[3075345] pg_regress/tstypes ERROR:  lexeme array may not contain empty strings
2024-09-08 14:51:52.196 KST client backend[3075345] pg_regress/tstypes STATEMENT:  SELECT array_to_tsvector(ARRAY['base','hidden','rebel','spaceship', '']);
2024-09-08 14:51:52.197 KST client backend[3075345] pg_regress/tstypes ERROR:  weight array may not contain nulls
2024-09-08 14:51:52.197 KST client backend[3075345] pg_regress/tstypes STATEMENT:  SELECT ts_filter('base hidden rebel spaceship strike'::tsvector, '{a,b,NULL}');
2024-09-08 14:51:52.197 KST client backend[3075353] pg_regress/expressions ERROR:  operator does not exist: point = box at character 23
2024-09-08 14:51:52.197 KST client backend[3075353] pg_regress/expressions HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:52.197 KST client backend[3075353] pg_regress/expressions STATEMENT:  select '(0,0)'::point in ('(0,0,0,0)'::box, point(0,0));
2024-09-08 14:51:52.203 KST client backend[3075343] pg_regress/horology ERROR:  date out of range for timestamp
2024-09-08 14:51:52.203 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT '2202020-10-05'::date::timestamp;
2024-09-08 14:51:52.203 KST client backend[3075343] pg_regress/horology ERROR:  date out of range for timestamp
2024-09-08 14:51:52.203 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT '2202020-10-05'::date::timestamptz;
2024-09-08 14:51:52.203 KST client backend[3075343] pg_regress/horology ERROR:  date out of range for timestamp
2024-09-08 14:51:52.203 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT '4714-11-24 BC'::date::timestamptz;
2024-09-08 14:51:52.204 KST client backend[3075346] pg_regress/geometry ERROR:  open path cannot be converted to polygon
2024-09-08 14:51:52.204 KST client backend[3075346] pg_regress/geometry STATEMENT:  SELECT f1, f1::polygon FROM PATH_TBL WHERE isopen(f1);
2024-09-08 14:51:52.207 KST client backend[3075343] pg_regress/horology ERROR:  invalid value "/Feb/16" for "Mon"
2024-09-08 14:51:52.207 KST client backend[3075343] pg_regress/horology DETAIL:  The given value did not match any of the allowed values for this field.
2024-09-08 14:51:52.207 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('97/Feb/16', 'YYMonDD');
2024-09-08 14:51:52.208 KST client backend[3075346] pg_regress/geometry ERROR:  division by zero
2024-09-08 14:51:52.208 KST client backend[3075346] pg_regress/geometry STATEMENT:  SELECT p.f1, p1.f1, p.f1 / p1.f1 FROM PATH_TBL p, POINT_TBL p1 WHERE p1.f1 ~= '(0,0)'::point;
2024-09-08 14:51:52.209 KST client backend[3075343] pg_regress/horology ERROR:  formatting field "TZ" is only supported in to_char
2024-09-08 14:51:52.209 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('2011-12-18 11:38 PST', 'YYYY-MM-DD HH12:MI TZ');
2024-09-08 14:51:52.209 KST client backend[3075343] pg_regress/horology ERROR:  date/time field value out of range: "2018-11-02 12:34:56.123456789"
2024-09-08 14:51:52.209 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT i, to_timestamp('2018-11-02 12:34:56.123456789', 'YYYY-MM-DD HH24:MI:SS.FF' || i) FROM generate_series(1, 6) i;
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology ERROR:  invalid value "+" for "MON"
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology DETAIL:  The given value did not match any of the allowed values for this field.
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('2000 + + JUN', 'YYYY  MON');
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology ERROR:  invalid value "x1" for "MM"
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology DETAIL:  Value must be an integer.
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_date('2011 x12 x18', 'YYYYxMMxDD');
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology ERROR:  invalid combination of date conventions
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology HINT:  Do not mix Gregorian and ISO week date conventions in a formatting template.
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('2005527', 'YYYYIWID');
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology ERROR:  source string too short for "MM" formatting field
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology DETAIL:  Field requires 2 characters, but only 1 remain.
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology HINT:  If your source string is not fixed-width, try using the "FM" modifier.
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('19971', 'YYYYMMDD');
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology ERROR:  invalid value "1)" for "MM"
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology DETAIL:  Field requires 2 characters, but only 1 could be parsed.
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology HINT:  If your source string is not fixed-width, try using the "FM" modifier.
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('19971)24', 'YYYYMMDD');
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology ERROR:  invalid value "da" for "DD"
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology DETAIL:  Value must be an integer.
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('Friday 1-January-1999', 'DY DD MON YYYY');
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology ERROR:  invalid value "uary" for "YYYY"
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology DETAIL:  Value must be an integer.
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('Fri 1-January-1999', 'DY DD MON YYYY');
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology ERROR:  conflicting values for "Mon" field in formatting string
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology DETAIL:  This value contradicts a previous setting for the same field type.
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('1997-11-Jan-16', 'YYYY-MM-Mon-DD');
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology ERROR:  invalid value "xy" for "DD"
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology DETAIL:  Value must be an integer.
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('199711xy', 'YYYYMMDD');
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology ERROR:  value for "YYYY" in source string is out of range
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology DETAIL:  Value must be in the range -2147483648 to 2147483647.
2024-09-08 14:51:52.211 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('10000000000', 'FMYYYY');
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology ERROR:  date/time field value out of range: "2016-06-13 25:00:00"
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('2016-06-13 25:00:00', 'YYYY-MM-DD HH24:MI:SS');
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology ERROR:  date/time field value out of range: "2016-06-13 15:60:00"
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('2016-06-13 15:60:00', 'YYYY-MM-DD HH24:MI:SS');
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology ERROR:  date/time field value out of range: "2016-06-13 15:50:60"
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('2016-06-13 15:50:60', 'YYYY-MM-DD HH24:MI:SS');
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology ERROR:  hour "15" is invalid for the 12-hour clock
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology HINT:  Use the 24-hour clock, or give an hour between 1 and 12.
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('2016-06-13 15:50:55', 'YYYY-MM-DD HH:MI:SS');
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology ERROR:  date/time field value out of range: "2016-13-01 15:50:55"
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('2016-13-01 15:50:55', 'YYYY-MM-DD HH24:MI:SS');
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology ERROR:  date/time field value out of range: "2016-02-30 15:50:55"
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('2016-02-30 15:50:55', 'YYYY-MM-DD HH24:MI:SS');
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology ERROR:  date/time field value out of range: "2015-02-29 15:50:55"
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('2015-02-29 15:50:55', 'YYYY-MM-DD HH24:MI:SS');
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology ERROR:  date/time field value out of range: "2015-02-11 86400"
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('2015-02-11 86400', 'YYYY-MM-DD SSSS');
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology ERROR:  date/time field value out of range: "2015-02-11 86400"
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_timestamp('2015-02-11 86400', 'YYYY-MM-DD SSSSS');
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology ERROR:  date/time field value out of range: "2016-13-10"
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_date('2016-13-10', 'YYYY-MM-DD');
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology ERROR:  date/time field value out of range: "2016-02-30"
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_date('2016-02-30', 'YYYY-MM-DD');
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology ERROR:  date/time field value out of range: "2015-02-29"
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_date('2015-02-29', 'YYYY-MM-DD');
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology ERROR:  date/time field value out of range: "2015 366"
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_date('2015 366', 'YYYY DDD');
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology ERROR:  date/time field value out of range: "2016 367"
2024-09-08 14:51:52.212 KST client backend[3075343] pg_regress/horology STATEMENT:  SELECT to_date('2016 367', 'YYYY DDD');
2024-09-08 14:51:52.215 KST client backend[3075346] pg_regress/geometry ERROR:  must request at least 2 points
2024-09-08 14:51:52.215 KST client backend[3075346] pg_regress/geometry STATEMENT:  SELECT f1, polygon(1, f1) FROM CIRCLE_TBL WHERE f1 >= '<(0,0),1>';
2024-09-08 14:51:52.215 KST client backend[3075346] pg_regress/geometry ERROR:  cannot convert circle with radius zero to polygon
2024-09-08 14:51:52.215 KST client backend[3075346] pg_regress/geometry STATEMENT:  SELECT f1, polygon(10, f1) FROM CIRCLE_TBL WHERE f1 < '<(0,0),1>';
2024-09-08 14:51:52.220 KST client backend[3075346] pg_regress/geometry ERROR:  value out of range: overflow
2024-09-08 14:51:52.220 KST client backend[3075346] pg_regress/geometry STATEMENT:  SELECT c.f1, p.f1, c.f1 / p.f1 FROM CIRCLE_TBL c, POINT_TBL p WHERE p.f1[0] > 1000;
2024-09-08 14:51:52.220 KST client backend[3075346] pg_regress/geometry ERROR:  division by zero
2024-09-08 14:51:52.220 KST client backend[3075346] pg_regress/geometry STATEMENT:  SELECT c.f1, p.f1, c.f1 / p.f1 FROM CIRCLE_TBL c, POINT_TBL p WHERE p.f1 ~= '(0,0)'::point;
2024-09-08 14:51:52.440 KST client backend[3075349] pg_regress/regex ERROR:  invalid regular expression: regular expression is too complex
2024-09-08 14:51:52.440 KST client backend[3075349] pg_regress/regex STATEMENT:  select 'x' ~ repeat('x*y*z*', 1000);
2024-09-08 14:51:52.448 KST client backend[3075349] pg_regress/regex ERROR:  invalid regular expression: invalid backreference number
2024-09-08 14:51:52.448 KST client backend[3075349] pg_regress/regex STATEMENT:  select 'xyz' ~ 'x(\w)(?=\1)';
2024-09-08 14:51:52.448 KST client backend[3075349] pg_regress/regex ERROR:  invalid regular expression: invalid backreference number
2024-09-08 14:51:52.448 KST client backend[3075349] pg_regress/regex STATEMENT:  select 'xyz' ~ 'x(\w)(?=(\1))';
2024-09-08 14:51:52.448 KST client backend[3075349] pg_regress/regex ERROR:  invalid regular expression: invalid escape \ sequence
2024-09-08 14:51:52.448 KST client backend[3075349] pg_regress/regex STATEMENT:  select 'a' ~ '\x7fffffff';
2024-09-08 14:51:52.488 KST client backend[3075412] pg_regress/insert ERROR:  null value in column "col2" of relation "inserttest" violates not-null constraint
2024-09-08 14:51:52.488 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (null, null, testing).
2024-09-08 14:51:52.488 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into inserttest (col1, col2, col3) values (DEFAULT, DEFAULT, DEFAULT);
2024-09-08 14:51:52.489 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.489 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (key) do nothing;
2024-09-08 14:51:52.489 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.489 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (fruit) do nothing;
2024-09-08 14:51:52.489 KST client backend[3075412] pg_regress/insert ERROR:  INSERT has more target columns than expressions at character 37
2024-09-08 14:51:52.489 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into inserttest (col1, col2, col3) values (DEFAULT, DEFAULT);
2024-09-08 14:51:52.489 KST client backend[3075412] pg_regress/insert ERROR:  INSERT has more target columns than expressions at character 37
2024-09-08 14:51:52.489 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into inserttest (col1, col2, col3) values (1, 2);
2024-09-08 14:51:52.489 KST client backend[3075412] pg_regress/insert ERROR:  INSERT has more expressions than target columns at character 42
2024-09-08 14:51:52.489 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into inserttest (col1) values (1, 2);
2024-09-08 14:51:52.489 KST client backend[3075412] pg_regress/insert ERROR:  INSERT has more expressions than target columns at character 48
2024-09-08 14:51:52.489 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into inserttest (col1) values (DEFAULT, DEFAULT);
2024-09-08 14:51:52.490 KST client backend[3075409] pg_regress/copyselect ERROR:  cannot copy from view "v_test1"
2024-09-08 14:51:52.490 KST client backend[3075409] pg_regress/copyselect HINT:  Try the COPY (SELECT ...) TO variant.
2024-09-08 14:51:52.490 KST client backend[3075409] pg_regress/copyselect STATEMENT:  copy v_test1 to stdout;
2024-09-08 14:51:52.490 KST client backend[3075409] pg_regress/copyselect ERROR:  COPY (SELECT INTO) is not supported
2024-09-08 14:51:52.490 KST client backend[3075409] pg_regress/copyselect STATEMENT:  copy (select t into temp test3 from test1 where id=3) to stdout;
2024-09-08 14:51:52.490 KST client backend[3075409] pg_regress/copyselect ERROR:  syntax error at or near "from" at character 28
2024-09-08 14:51:52.490 KST client backend[3075409] pg_regress/copyselect STATEMENT:  copy (select * from test1) from stdin;
2024-09-08 14:51:52.490 KST client backend[3075409] pg_regress/copyselect ERROR:  syntax error at or near "(" at character 28
2024-09-08 14:51:52.490 KST client backend[3075409] pg_regress/copyselect STATEMENT:  copy (select * from test1) (t,id) to stdout;
2024-09-08 14:51:52.490 KST client backend[3075411] pg_regress/copydml ERROR:  COPY query must have a RETURNING clause
2024-09-08 14:51:52.490 KST client backend[3075411] pg_regress/copydml STATEMENT:  copy (insert into copydml_test default values) to stdout;
2024-09-08 14:51:52.490 KST client backend[3075411] pg_regress/copydml ERROR:  COPY query must have a RETURNING clause
2024-09-08 14:51:52.490 KST client backend[3075411] pg_regress/copydml STATEMENT:  copy (update copydml_test set t = 'g') to stdout;
2024-09-08 14:51:52.490 KST client backend[3075411] pg_regress/copydml ERROR:  COPY query must have a RETURNING clause
2024-09-08 14:51:52.490 KST client backend[3075411] pg_regress/copydml STATEMENT:  copy (delete from copydml_test) to stdout;
2024-09-08 14:51:52.491 KST client backend[3075411] pg_regress/copydml ERROR:  DO INSTEAD NOTHING rules are not supported for COPY
2024-09-08 14:51:52.491 KST client backend[3075411] pg_regress/copydml STATEMENT:  copy (insert into copydml_test default values) to stdout;
2024-09-08 14:51:52.491 KST client backend[3075409] pg_regress/copyselect ERROR:  cannot copy from view "v_test1"
2024-09-08 14:51:52.491 KST client backend[3075409] pg_regress/copyselect HINT:  Try the COPY (SELECT ...) TO variant.
2024-09-08 14:51:52.491 KST client backend[3075409] pg_regress/copyselect STATEMENT:  COPY  v_test1 TO STDOUT 
2024-09-08 14:51:52.491 KST client backend[3075411] pg_regress/copydml ERROR:  DO ALSO rules are not supported for the COPY
2024-09-08 14:51:52.491 KST client backend[3075411] pg_regress/copydml STATEMENT:  copy (insert into copydml_test default values) to stdout;
2024-09-08 14:51:52.492 KST client backend[3075411] pg_regress/copydml ERROR:  multi-statement DO INSTEAD rules are not supported for COPY
2024-09-08 14:51:52.492 KST client backend[3075411] pg_regress/copydml STATEMENT:  copy (insert into copydml_test default values) to stdout;
2024-09-08 14:51:52.492 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.492 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lower(fruit) text_pattern_ops, upper(fruit) collate "C") do nothing;
2024-09-08 14:51:52.492 KST client backend[3075411] pg_regress/copydml ERROR:  conditional DO INSTEAD rules are not supported for COPY
2024-09-08 14:51:52.492 KST client backend[3075411] pg_regress/copydml STATEMENT:  copy (insert into copydml_test default values) to stdout;
2024-09-08 14:51:52.493 KST client backend[3075411] pg_regress/copydml ERROR:  DO INSTEAD NOTHING rules are not supported for COPY
2024-09-08 14:51:52.493 KST client backend[3075411] pg_regress/copydml STATEMENT:  copy (update copydml_test set t = 'f') to stdout;
2024-09-08 14:51:52.493 KST client backend[3075411] pg_regress/copydml ERROR:  DO ALSO rules are not supported for the COPY
2024-09-08 14:51:52.493 KST client backend[3075411] pg_regress/copydml STATEMENT:  copy (update copydml_test set t = 'f') to stdout;
2024-09-08 14:51:52.493 KST client backend[3075410] pg_regress/insert_conflict ERROR:  ON CONFLICT DO UPDATE requires inference specification or constraint name at character 52
2024-09-08 14:51:52.493 KST client backend[3075410] pg_regress/insert_conflict HINT:  For example, ON CONFLICT (column_name).
2024-09-08 14:51:52.493 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (1, 'Apple') on conflict do update set fruit = excluded.fruit;
2024-09-08 14:51:52.494 KST client backend[3075409] pg_regress/copyselect ERROR:  division by zero
2024-09-08 14:51:52.494 KST client backend[3075409] pg_regress/copyselect STATEMENT:  copy (select 1) to stdout; select 1/0;
2024-09-08 14:51:52.494 KST client backend[3075411] pg_regress/copydml ERROR:  multi-statement DO INSTEAD rules are not supported for COPY
2024-09-08 14:51:52.494 KST client backend[3075411] pg_regress/copydml STATEMENT:  copy (update copydml_test set t = 'f') to stdout;
2024-09-08 14:51:52.494 KST client backend[3075409] pg_regress/copyselect ERROR:  division by zero
2024-09-08 14:51:52.494 KST client backend[3075409] pg_regress/copyselect STATEMENT:  select 1/0; copy (select 1) to stdout;
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict ERROR:  invalid reference to FROM-clause entry for table "excluded" at character 117
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict DETAIL:  There is an entry for table "excluded", but it cannot be referenced from this part of the query.
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (1, 'Apple') on conflict (key) do update set fruit = excluded.fruit RETURNING excluded.fruit;
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict ERROR:  column "keyy" does not exist at character 64
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict HINT:  Perhaps you meant to reference the column "insertconflicttest.key" or the column "excluded.key".
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (1, 'Apple') on conflict (keyy) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict ERROR:  column excluded.fruitt does not exist at character 92
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict HINT:  Perhaps you meant to reference the column "excluded.fruit".
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (1, 'Apple') on conflict (key) do update set fruit = excluded.fruitt;
2024-09-08 14:51:52.494 KST client backend[3075411] pg_regress/copydml ERROR:  conditional DO INSTEAD rules are not supported for COPY
2024-09-08 14:51:52.494 KST client backend[3075411] pg_regress/copydml STATEMENT:  copy (update copydml_test set t = 'f') to stdout;
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (3, 'Kiwi') on conflict (key, fruit) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (4, 'Mango') on conflict (fruit, key) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (5, 'Lemon') on conflict (fruit) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (6, 'Passionfruit') on conflict (lower(fruit)) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.494 KST client backend[3075411] pg_regress/copydml ERROR:  DO INSTEAD NOTHING rules are not supported for COPY
2024-09-08 14:51:52.494 KST client backend[3075411] pg_regress/copydml STATEMENT:  copy (delete from copydml_test) to stdout;
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict ERROR:  invalid reference to FROM-clause entry for table "insertconflicttest" at character 106
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict HINT:  Perhaps you meant to reference the table alias "ict".
2024-09-08 14:51:52.494 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest AS ict values (6, 'Passionfruit') on conflict (key) do update set fruit = insertconflicttest.fruit;
2024-09-08 14:51:52.494 KST client backend[3075412] pg_regress/insert ERROR:  cannot set an array element to DEFAULT at character 32
2024-09-08 14:51:52.494 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into inserttest (f2[1], f2[2]) values (1,default);
2024-09-08 14:51:52.495 KST client backend[3075411] pg_regress/copydml ERROR:  DO ALSO rules are not supported for the COPY
2024-09-08 14:51:52.495 KST client backend[3075411] pg_regress/copydml STATEMENT:  copy (delete from copydml_test) to stdout;
2024-09-08 14:51:52.495 KST client backend[3075412] pg_regress/insert ERROR:  cannot set a subfield to DEFAULT at character 33
2024-09-08 14:51:52.495 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into inserttest (f3.if1, f3.if2) values (1,default);
2024-09-08 14:51:52.495 KST client backend[3075411] pg_regress/copydml ERROR:  multi-statement DO INSTEAD rules are not supported for COPY
2024-09-08 14:51:52.495 KST client backend[3075411] pg_regress/copydml STATEMENT:  copy (delete from copydml_test) to stdout;
2024-09-08 14:51:52.496 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.496 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (9, 'Banana') on conflict (key) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.496 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.496 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (10, 'Blueberry') on conflict (key, key, key) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.496 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.496 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (11, 'Cherry') on conflict (key, lower(fruit)) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.496 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.496 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (12, 'Date') on conflict (lower(fruit), key) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.496 KST client backend[3075411] pg_regress/copydml ERROR:  conditional DO INSTEAD rules are not supported for COPY
2024-09-08 14:51:52.496 KST client backend[3075411] pg_regress/copydml STATEMENT:  copy (delete from copydml_test) to stdout;
2024-09-08 14:51:52.497 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.497 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (13, 'Grape') on conflict (key, fruit) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.497 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.497 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (14, 'Raisin') on conflict (fruit, key) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.497 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.497 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (15, 'Cranberry') on conflict (key) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.497 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.497 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (16, 'Melon') on conflict (key, key, key) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.498 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.498 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (17, 'Mulberry') on conflict (key, lower(fruit)) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.498 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.498 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (18, 'Pineapple') on conflict (lower(fruit), key) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.499 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.499 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (22, 'Apricot') on conflict (upper(fruit)) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.499 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.499 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (23, 'Blackberry') on conflict (fruit) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.501 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.501 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (27, 'Prune') on conflict (key, upper(fruit)) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.501 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.501 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (28, 'Redcurrant') on conflict (fruit, key) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.501 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.501 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (29, 'Nectarine') on conflict (key) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.501 KST client backend[3075408] pg_regress/copy ERROR:  cannot perform COPY FREEZE on a partitioned table
2024-09-08 14:51:52.501 KST client backend[3075408] pg_regress/copy STATEMENT:  copy parted_copytest from '/home/vldb/postgresql-16.2/bld/src/test/regress/results/parted_copytest.csv' (freeze);
2024-09-08 14:51:52.502 KST client backend[3075410] pg_regress/insert_conflict ERROR:  duplicate key value violates unique constraint "fruit_index"
2024-09-08 14:51:52.502 KST client backend[3075410] pg_regress/insert_conflict DETAIL:  Key (fruit)=(Peach) already exists.
2024-09-08 14:51:52.502 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (26, 'Peach') on conflict (key) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.504 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.504 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (23, 'Blackberry') on conflict (key) do update set fruit = excluded.fruit;
2024-09-08 14:51:52.504 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.504 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (23, 'Blackberry') on conflict (key) where fruit like '%berry' or fruit = 'consequential' do nothing;
2024-09-08 14:51:52.504 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.504 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into insertconflicttest values (23, 'Blackberry') on conflict (fruit) where fruit like '%berry' do update set fruit = excluded.fruit;
2024-09-08 14:51:52.506 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "range_parted" found for row
2024-09-08 14:51:52.506 KST client backend[3075412] pg_regress/insert DETAIL:  Partition key of the failing row contains (a, (b + 0)) = (a, 11).
2024-09-08 14:51:52.506 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into range_parted values ('a', 11);
2024-09-08 14:51:52.507 KST client backend[3075410] pg_regress/insert_conflict ERROR:  column excluded.ctid does not exist at character 82
2024-09-08 14:51:52.507 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into syscolconflicttest values (1) on conflict (key) do update set data = excluded.ctid::text;
2024-09-08 14:51:52.510 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "part1" violates partition constraint
2024-09-08 14:51:52.510 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (a, 11).
2024-09-08 14:51:52.510 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into part1 values ('a', 11);
2024-09-08 14:51:52.510 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "part1" violates partition constraint
2024-09-08 14:51:52.510 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (b, 1).
2024-09-08 14:51:52.510 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into part1 values ('b', 1);
2024-09-08 14:51:52.510 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "part4" violates partition constraint
2024-09-08 14:51:52.510 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (b, 21).
2024-09-08 14:51:52.510 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into part4 values ('b', 21);
2024-09-08 14:51:52.510 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "part4" violates partition constraint
2024-09-08 14:51:52.510 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (a, 10).
2024-09-08 14:51:52.510 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into part4 values ('a', 10);
2024-09-08 14:51:52.510 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "part1" violates partition constraint
2024-09-08 14:51:52.510 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (null, null).
2024-09-08 14:51:52.510 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into part1 values (null);
2024-09-08 14:51:52.510 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "part1" violates partition constraint
2024-09-08 14:51:52.510 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (1, null).
2024-09-08 14:51:52.510 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into part1 values (1);
2024-09-08 14:51:52.513 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "part_aa_bb" violates partition constraint
2024-09-08 14:51:52.513 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (cc, 1).
2024-09-08 14:51:52.513 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into part_aa_bb values ('cc', 1);
2024-09-08 14:51:52.513 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "part_aa_bb" violates partition constraint
2024-09-08 14:51:52.513 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (AAa, 1).
2024-09-08 14:51:52.513 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into part_aa_bb values ('AAa', 1);
2024-09-08 14:51:52.514 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "part_aa_bb" violates partition constraint
2024-09-08 14:51:52.514 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (null, null).
2024-09-08 14:51:52.514 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into part_aa_bb values (null);
2024-09-08 14:51:52.517 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "part_default" violates partition constraint
2024-09-08 14:51:52.517 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (aa, 2).
2024-09-08 14:51:52.517 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into part_default values ('aa', 2);
2024-09-08 14:51:52.517 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "part_default" violates partition constraint
2024-09-08 14:51:52.517 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (null, 2).
2024-09-08 14:51:52.517 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into part_default values (null, 2);
2024-09-08 14:51:52.517 KST client backend[3075408] pg_regress/copy ERROR:  cannot use "match" with HEADER in COPY TO
2024-09-08 14:51:52.517 KST client backend[3075408] pg_regress/copy STATEMENT:  copy header_copytest to stdout with (header match);
2024-09-08 14:51:52.517 KST client backend[3075408] pg_regress/copy ERROR:  header requires a Boolean value or "match"
2024-09-08 14:51:52.517 KST client backend[3075408] pg_regress/copy STATEMENT:  copy header_copytest from stdin with (header wrong_choice);
2024-09-08 14:51:52.517 KST client backend[3075408] pg_regress/copy ERROR:  column name mismatch in header line field 1: got "a", expected "c"
2024-09-08 14:51:52.517 KST client backend[3075408] pg_regress/copy CONTEXT:  COPY header_copytest, line 1: "a	b	c"
2024-09-08 14:51:52.517 KST client backend[3075408] pg_regress/copy STATEMENT:  copy header_copytest (c, b, a) from stdin with (header match);
2024-09-08 14:51:52.517 KST client backend[3075408] pg_regress/copy ERROR:  column name mismatch in header line field 3: got null value ("\N"), expected "c"
2024-09-08 14:51:52.517 KST client backend[3075408] pg_regress/copy CONTEXT:  COPY header_copytest, line 1: "a	b	\N"
2024-09-08 14:51:52.517 KST client backend[3075408] pg_regress/copy STATEMENT:  copy header_copytest from stdin with (header match);
2024-09-08 14:51:52.517 KST client backend[3075408] pg_regress/copy ERROR:  wrong number of fields in header line: got 2, expected 3
2024-09-08 14:51:52.517 KST client backend[3075408] pg_regress/copy CONTEXT:  COPY header_copytest, line 1: "a	b"
2024-09-08 14:51:52.517 KST client backend[3075408] pg_regress/copy STATEMENT:  copy header_copytest from stdin with (header match);
2024-09-08 14:51:52.518 KST client backend[3075408] pg_regress/copy ERROR:  wrong number of fields in header line: got 4, expected 3
2024-09-08 14:51:52.518 KST client backend[3075408] pg_regress/copy CONTEXT:  COPY header_copytest, line 1: "a	b	c	d"
2024-09-08 14:51:52.518 KST client backend[3075408] pg_regress/copy STATEMENT:  copy header_copytest from stdin with (header match);
2024-09-08 14:51:52.518 KST client backend[3075408] pg_regress/copy ERROR:  column name mismatch in header line field 3: got "d", expected "c"
2024-09-08 14:51:52.518 KST client backend[3075408] pg_regress/copy CONTEXT:  COPY header_copytest, line 1: "a	b	d"
2024-09-08 14:51:52.518 KST client backend[3075408] pg_regress/copy STATEMENT:  copy header_copytest from stdin with (header match);
2024-09-08 14:51:52.518 KST client backend[3075408] pg_regress/copy ERROR:  wrong number of fields in header line: got 3, expected 2
2024-09-08 14:51:52.518 KST client backend[3075408] pg_regress/copy CONTEXT:  COPY header_copytest, line 1: "a	........pg.dropped.2........	c"
2024-09-08 14:51:52.518 KST client backend[3075408] pg_regress/copy STATEMENT:  copy header_copytest from stdin with (header match);
2024-09-08 14:51:52.518 KST client backend[3075408] pg_regress/copy ERROR:  wrong number of fields in header line: got 3, expected 2
2024-09-08 14:51:52.518 KST client backend[3075408] pg_regress/copy CONTEXT:  COPY header_copytest, line 1: "a	c	b"
2024-09-08 14:51:52.518 KST client backend[3075408] pg_regress/copy STATEMENT:  copy header_copytest (a, c) from stdin with (header match);
2024-09-08 14:51:52.520 KST client backend[3075408] pg_regress/copy ERROR:  value too long for type character varying(5)
2024-09-08 14:51:52.520 KST client backend[3075408] pg_regress/copy STATEMENT:  copy oversized_column_default (col2) from stdin;
2024-09-08 14:51:52.520 KST client backend[3075408] pg_regress/copy ERROR:  value too long for type character varying(5)
2024-09-08 14:51:52.520 KST client backend[3075408] pg_regress/copy STATEMENT:  copy oversized_column_default from stdin (default '');
2024-09-08 14:51:52.520 KST client backend[3075410] pg_regress/insert_conflict ERROR:  table reference "excluded" is ambiguous at character 76
2024-09-08 14:51:52.520 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into excluded values(1, '2') on conflict (key) do update set data = excluded.data RETURNING *;
2024-09-08 14:51:52.522 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "part_ee_ff1" violates partition constraint
2024-09-08 14:51:52.522 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (EE, 11).
2024-09-08 14:51:52.522 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into part_ee_ff1 values ('EE', 11);
2024-09-08 14:51:52.522 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "part_default_p2" violates partition constraint
2024-09-08 14:51:52.522 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (gg, 43).
2024-09-08 14:51:52.522 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into part_default_p2 values ('gg', 43);
2024-09-08 14:51:52.522 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "part_ee_ff1" violates partition constraint
2024-09-08 14:51:52.522 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (cc, 1).
2024-09-08 14:51:52.522 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into part_ee_ff1 values ('cc', 1);
2024-09-08 14:51:52.522 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "part_default" found for row
2024-09-08 14:51:52.522 KST client backend[3075412] pg_regress/insert DETAIL:  Partition key of the failing row contains (b) = (43).
2024-09-08 14:51:52.522 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into part_default values ('gg', 43);
2024-09-08 14:51:52.524 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "range_parted" found for row
2024-09-08 14:51:52.524 KST client backend[3075412] pg_regress/insert DETAIL:  Partition key of the failing row contains (a, (b + 0)) = (a, 0).
2024-09-08 14:51:52.524 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into range_parted values ('a', 0);
2024-09-08 14:51:52.524 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "range_parted" found for row
2024-09-08 14:51:52.524 KST client backend[3075412] pg_regress/insert DETAIL:  Partition key of the failing row contains (a, (b + 0)) = (a, 20).
2024-09-08 14:51:52.524 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into range_parted values ('a', 20);
2024-09-08 14:51:52.524 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "range_parted" found for row
2024-09-08 14:51:52.524 KST client backend[3075412] pg_regress/insert DETAIL:  Partition key of the failing row contains (a, (b + 0)) = (a, null).
2024-09-08 14:51:52.524 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into range_parted values ('a');
2024-09-08 14:51:52.525 KST client backend[3075410] pg_regress/insert_conflict ERROR:  duplicate key value violates unique constraint "twoconstraints_f1_key"
2024-09-08 14:51:52.525 KST client backend[3075410] pg_regress/insert_conflict DETAIL:  Key (f1)=(1) already exists.
2024-09-08 14:51:52.525 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into twoconstraints values(1, '((2,2),(3,3))');
2024-09-08 14:51:52.525 KST client backend[3075410] pg_regress/insert_conflict ERROR:  conflicting key value violates exclusion constraint "twoconstraints_f2_excl"
2024-09-08 14:51:52.525 KST client backend[3075410] pg_regress/insert_conflict DETAIL:  Key (f2)=((1,2),(0,0)) conflicts with existing key (f2)=((1,1),(0,0)).
2024-09-08 14:51:52.525 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into twoconstraints values(2, '((0,0),(1,2))');
2024-09-08 14:51:52.525 KST client backend[3075410] pg_regress/insert_conflict ERROR:  conflicting key value violates exclusion constraint "twoconstraints_f2_excl"
2024-09-08 14:51:52.525 KST client backend[3075410] pg_regress/insert_conflict DETAIL:  Key (f2)=((1,2),(0,0)) conflicts with existing key (f2)=((1,1),(0,0)).
2024-09-08 14:51:52.525 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into twoconstraints values(2, '((0,0),(1,2))')
	  on conflict on constraint twoconstraints_f1_key do nothing;
2024-09-08 14:51:52.525 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "part_def" violates partition constraint
2024-09-08 14:51:52.525 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (b, 10).
2024-09-08 14:51:52.525 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into part_def values ('b', 10);
2024-09-08 14:51:52.526 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "part_ee_ff" found for row
2024-09-08 14:51:52.526 KST client backend[3075412] pg_regress/insert DETAIL:  Partition key of the failing row contains (b) = (0).
2024-09-08 14:51:52.526 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into list_parted values ('EE', 0);
2024-09-08 14:51:52.526 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "part_ee_ff" found for row
2024-09-08 14:51:52.526 KST client backend[3075412] pg_regress/insert DETAIL:  Partition key of the failing row contains (b) = (0).
2024-09-08 14:51:52.526 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into part_ee_ff values ('EE', 0);
2024-09-08 14:51:52.527 KST client backend[3075410] pg_regress/insert_conflict ERROR:  ON CONFLICT DO UPDATE command cannot affect row a second time
2024-09-08 14:51:52.527 KST client backend[3075410] pg_regress/insert_conflict HINT:  Ensure that no rows proposed for insertion within the same command have duplicate constrained values.
2024-09-08 14:51:52.527 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into selfconflict values (4,1), (4,2) on conflict(f1) do update set f2 = 0;
2024-09-08 14:51:52.527 KST client backend[3075410] pg_regress/insert_conflict ERROR:  ON CONFLICT DO UPDATE command cannot affect row a second time
2024-09-08 14:51:52.527 KST client backend[3075410] pg_regress/insert_conflict HINT:  Ensure that no rows proposed for insertion within the same command have duplicate constrained values.
2024-09-08 14:51:52.527 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into selfconflict values (5,1), (5,2) on conflict(f1) do update set f2 = 0;
2024-09-08 14:51:52.527 KST client backend[3075410] pg_regress/insert_conflict ERROR:  ON CONFLICT DO UPDATE command cannot affect row a second time
2024-09-08 14:51:52.527 KST client backend[3075410] pg_regress/insert_conflict HINT:  Ensure that no rows proposed for insertion within the same command have duplicate constrained values.
2024-09-08 14:51:52.527 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into selfconflict values (6,1), (6,2) on conflict(f1) do update set f2 = 0;
2024-09-08 14:51:52.530 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.530 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into parted_conflict_test values (2, 'b') on conflict (b) do update set a = excluded.a;
2024-09-08 14:51:52.540 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "hpart0" violates partition constraint
2024-09-08 14:51:52.540 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (11).
2024-09-08 14:51:52.540 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into hpart0 values(11);
2024-09-08 14:51:52.548 KST client backend[3075410] pg_regress/insert_conflict ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
2024-09-08 14:51:52.548 KST client backend[3075410] pg_regress/insert_conflict STATEMENT:  insert into parted_conflict_1 values (40, 'cuarenta')
	  on conflict (a) do update set b = excluded.b;
2024-09-08 14:51:52.556 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "mlparted1" found for row
2024-09-08 14:51:52.556 KST client backend[3075412] pg_regress/insert DETAIL:  Partition key of the failing row contains ((b + 0)) = (5).
2024-09-08 14:51:52.556 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into mlparted (a, b) values (1, 5);
2024-09-08 14:51:52.557 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "mlparted11" violates check constraint "check_b"
2024-09-08 14:51:52.557 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (1, 4).
2024-09-08 14:51:52.557 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into mlparted values (1, 2);
2024-09-08 14:51:52.557 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "mlparted1" violates partition constraint
2024-09-08 14:51:52.557 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (3, 2).
2024-09-08 14:51:52.557 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into mlparted1 (a, b) values (2, 3);
2024-09-08 14:51:52.558 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "lparted_nonullpart" found for row
2024-09-08 14:51:52.558 KST client backend[3075412] pg_regress/insert DETAIL:  Partition key of the failing row contains (b) = (null).
2024-09-08 14:51:52.558 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into lparted_nonullpart values (1);
2024-09-08 14:51:52.565 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "mlparted5a" violates check constraint "check_b"
2024-09-08 14:51:52.565 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (1, 45, a).
2024-09-08 14:51:52.565 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into mlparted values (1, 45, 'a');
2024-09-08 14:51:52.565 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "mlparted5a" violates partition constraint
2024-09-08 14:51:52.565 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (b, 1, 40).
2024-09-08 14:51:52.565 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into mlparted5 (a, b, c) values (1, 40, 'a');
2024-09-08 14:51:52.568 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "mlparted_def" found for row
2024-09-08 14:51:52.568 KST client backend[3075412] pg_regress/insert DETAIL:  Partition key of the failing row contains (a) = (70).
2024-09-08 14:51:52.568 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into mlparted values (70, 100);
2024-09-08 14:51:52.568 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "mlparted_def1" violates partition constraint
2024-09-08 14:51:52.568 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (52, 50, null).
2024-09-08 14:51:52.568 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into mlparted_def1 values (52, 50);
2024-09-08 14:51:52.568 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "mlparted_def2" violates partition constraint
2024-09-08 14:51:52.568 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (34, 50, null).
2024-09-08 14:51:52.568 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into mlparted_def2 values (34, 50);
2024-09-08 14:51:52.576 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "mlparted5_cd" found for row
2024-09-08 14:51:52.576 KST client backend[3075412] pg_regress/insert DETAIL:  Partition key of the failing row contains (c) = (c).
2024-09-08 14:51:52.576 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into mlparted values (1, 45, 'c', 1);
2024-09-08 14:51:52.576 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "mlparted5" found for row
2024-09-08 14:51:52.576 KST client backend[3075412] pg_regress/insert DETAIL:  Partition key of the failing row contains (c) = (f).
2024-09-08 14:51:52.576 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into mlparted values (1, 45, 'f', 1);
2024-09-08 14:51:52.582 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "mlparted5_cd" found for row
2024-09-08 14:51:52.582 KST client backend[3075412] pg_regress/insert DETAIL:  Partition key of the failing row contains (c) = (c).
2024-09-08 14:51:52.582 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into mlparted values (1, 45, 'c', 1);
2024-09-08 14:51:52.583 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "mlparted5" found for row
2024-09-08 14:51:52.583 KST client backend[3075412] pg_regress/insert DETAIL:  Partition key of the failing row contains (c) = (f).
2024-09-08 14:51:52.583 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into mlparted values (1, 45, 'f', 1);
2024-09-08 14:51:52.585 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "key_desc_1" found for row
2024-09-08 14:51:52.585 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into key_desc values (1, 1);
2024-09-08 14:51:52.585 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "key_desc_1" found for row
2024-09-08 14:51:52.585 KST client backend[3075412] pg_regress/insert DETAIL:  Partition key of the failing row contains (b) = (1).
2024-09-08 14:51:52.585 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into key_desc values (1, 1);
2024-09-08 14:51:52.586 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "key_desc" found for row
2024-09-08 14:51:52.586 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into key_desc values (2, 1);
2024-09-08 14:51:52.587 KST client backend[3075412] pg_regress/insert ERROR:  every bound following MINVALUE must also be MINVALUE at character 75
2024-09-08 14:51:52.587 KST client backend[3075412] pg_regress/insert STATEMENT:  create table mcrparted0 partition of mcrparted for values from (minvalue, 0, 0) to (1, maxvalue, maxvalue);
2024-09-08 14:51:52.587 KST client backend[3075412] pg_regress/insert ERROR:  every bound following MAXVALUE must also be MAXVALUE at character 100
2024-09-08 14:51:52.587 KST client backend[3075412] pg_regress/insert STATEMENT:  create table mcrparted2 partition of mcrparted for values from (10, 6, minvalue) to (10, maxvalue, minvalue);
2024-09-08 14:51:52.587 KST client backend[3075412] pg_regress/insert ERROR:  every bound following MINVALUE must also be MINVALUE at character 79
2024-09-08 14:51:52.587 KST client backend[3075412] pg_regress/insert STATEMENT:  create table mcrparted4 partition of mcrparted for values from (21, minvalue, 0) to (30, 20, minvalue);
2024-09-08 14:51:52.589 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "mcrparted" found for row
2024-09-08 14:51:52.589 KST client backend[3075412] pg_regress/insert DETAIL:  Partition key of the failing row contains (a, abs(b), c) = (null, null, null).
2024-09-08 14:51:52.589 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into mcrparted values (null, null, null);
2024-09-08 14:51:52.590 KST client backend[3075412] pg_regress/insert ERROR:  no partition of relation "mcrparted" found for row
2024-09-08 14:51:52.590 KST client backend[3075412] pg_regress/insert DETAIL:  Partition key of the failing row contains (a, abs(b), c) = (11, 1, -1).
2024-09-08 14:51:52.590 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into mcrparted values (11, 1, -1);
2024-09-08 14:51:52.590 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "mcrparted3" violates partition constraint
2024-09-08 14:51:52.590 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (11, 1, -1).
2024-09-08 14:51:52.590 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into mcrparted3 values (11, 1, -1);
2024-09-08 14:51:52.590 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "mcrparted4" violates partition constraint
2024-09-08 14:51:52.590 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (30, 21, 20).
2024-09-08 14:51:52.590 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into mcrparted4 values (30, 21, 20);
2024-09-08 14:51:52.593 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "brtrigpartcon1" violates partition constraint
2024-09-08 14:51:52.593 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (2, hi there).
2024-09-08 14:51:52.593 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into brtrigpartcon values (1, 'hi there');
2024-09-08 14:51:52.593 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "brtrigpartcon1" violates partition constraint
2024-09-08 14:51:52.593 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (2, hi there).
2024-09-08 14:51:52.593 KST client backend[3075412] pg_regress/insert STATEMENT:  insert into brtrigpartcon1 values (1, 'hi there');
2024-09-08 14:51:52.594 KST client backend[3075412] pg_regress/insert ERROR:  new row for relation "brtrigpartcon1" violates partition constraint
2024-09-08 14:51:52.594 KST client backend[3075412] pg_regress/insert DETAIL:  Failing row contains (a, b) = (2, hi there).
2024-09-08 14:51:52.594 KST client backend[3075412] pg_regress/insert STATEMENT:  with result as (insert into brtrigpartcon values (1, 'hi there') returning 1)
	  insert into inserttest3 (f3) select * from result;
2024-09-08 14:51:52.641 KST client backend[3075431] pg_regress/create_operator ERROR:  operator right argument type must be specified
2024-09-08 14:51:52.641 KST client backend[3075431] pg_regress/create_operator DETAIL:  Postfix operators are not supported.
2024-09-08 14:51:52.641 KST client backend[3075431] pg_regress/create_operator STATEMENT:  CREATE OPERATOR #%# (
	   leftarg = int8,		-- fail, postfix is no longer supported
	   procedure = factorial
	);
2024-09-08 14:51:52.641 KST client backend[3075431] pg_regress/create_operator ERROR:  operator does not exist: ###### integer
2024-09-08 14:51:52.641 KST client backend[3075431] pg_regress/create_operator STATEMENT:  COMMENT ON OPERATOR ###### (NONE, int4) IS 'bad prefix';
2024-09-08 14:51:52.641 KST client backend[3075431] pg_regress/create_operator ERROR:  postfix operators are not supported
2024-09-08 14:51:52.641 KST client backend[3075431] pg_regress/create_operator STATEMENT:  COMMENT ON OPERATOR ###### (int4, NONE) IS 'bad postfix';
2024-09-08 14:51:52.641 KST client backend[3075431] pg_regress/create_operator ERROR:  operator does not exist: integer ###### bigint
2024-09-08 14:51:52.641 KST client backend[3075431] pg_regress/create_operator STATEMENT:  COMMENT ON OPERATOR ###### (int4, int8) IS 'bad infix';
2024-09-08 14:51:52.641 KST client backend[3075431] pg_regress/create_operator ERROR:  operator does not exist: ###### integer
2024-09-08 14:51:52.641 KST client backend[3075431] pg_regress/create_operator STATEMENT:  DROP OPERATOR ###### (NONE, int4);
2024-09-08 14:51:52.641 KST client backend[3075431] pg_regress/create_operator ERROR:  postfix operators are not supported
2024-09-08 14:51:52.641 KST client backend[3075431] pg_regress/create_operator STATEMENT:  DROP OPERATOR ###### (int4, NONE);
2024-09-08 14:51:52.641 KST client backend[3075431] pg_regress/create_operator ERROR:  operator does not exist: integer ###### bigint
2024-09-08 14:51:52.641 KST client backend[3075431] pg_regress/create_operator STATEMENT:  DROP OPERATOR ###### (int4, int8);
2024-09-08 14:51:52.642 KST client backend[3075431] pg_regress/create_operator ERROR:  syntax error at or near "=>" at character 17
2024-09-08 14:51:52.642 KST client backend[3075431] pg_regress/create_operator STATEMENT:  CREATE OPERATOR => (
	   rightarg = int8,
	   procedure = factorial
	);
2024-09-08 14:51:52.642 KST client backend[3075430] pg_regress/create_function_c ERROR:  could not access file "nosuchfile": No such file or directory
2024-09-08 14:51:52.642 KST client backend[3075430] pg_regress/create_function_c STATEMENT:  CREATE FUNCTION test1 (int) RETURNS int LANGUAGE C
	    AS 'nosuchfile';
2024-09-08 14:51:52.642 KST client backend[3075431] pg_regress/create_operator ERROR:  syntax error at or near ";" at character 14
2024-09-08 14:51:52.642 KST client backend[3075431] pg_regress/create_operator STATEMENT:  SELECT 10 !=-;
2024-09-08 14:51:52.642 KST client backend[3075430] pg_regress/create_function_c ERROR:  could not find function "nosuchsymbol" in file "/home/vldb/postgresql-16.2/bld/src/test/regress/regress.so"
2024-09-08 14:51:52.642 KST client backend[3075430] pg_regress/create_function_c STATEMENT:  CREATE FUNCTION test1 (int) RETURNS int LANGUAGE C
	    AS '/home/vldb/postgresql-16.2/bld/src/test/regress/regress.so', 'nosuchsymbol';
2024-09-08 14:51:52.642 KST client backend[3075433] pg_regress/create_procedure ERROR:  procedure nonexistent() does not exist at character 6
2024-09-08 14:51:52.642 KST client backend[3075433] pg_regress/create_procedure HINT:  No procedure matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:52.642 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  CALL nonexistent();
2024-09-08 14:51:52.642 KST client backend[3075430] pg_regress/create_function_c ERROR:  there is no built-in function named "nosuch"
2024-09-08 14:51:52.642 KST client backend[3075430] pg_regress/create_function_c STATEMENT:  CREATE FUNCTION test1 (int) RETURNS int LANGUAGE internal
	    AS 'nosuch';
2024-09-08 14:51:52.642 KST client backend[3075433] pg_regress/create_procedure ERROR:  random() is not a procedure at character 6
2024-09-08 14:51:52.642 KST client backend[3075433] pg_regress/create_procedure HINT:  To call a function, use SELECT.
2024-09-08 14:51:52.642 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  CALL random();
2024-09-08 14:51:52.643 KST client backend[3075431] pg_regress/create_operator ERROR:  permission denied for schema schema_op1
2024-09-08 14:51:52.643 KST client backend[3075431] pg_regress/create_operator STATEMENT:  CREATE OPERATOR schema_op1.#*# (
	   rightarg = int8,
	   procedure = factorial
	);
2024-09-08 14:51:52.643 KST client backend[3075431] pg_regress/create_operator ERROR:  SETOF type not allowed for operator argument
2024-09-08 14:51:52.643 KST client backend[3075431] pg_regress/create_operator STATEMENT:  CREATE OPERATOR #*# (
	   leftarg = SETOF int8,
	   procedure = factorial
	);
2024-09-08 14:51:52.643 KST client backend[3075431] pg_regress/create_operator ERROR:  SETOF type not allowed for operator argument
2024-09-08 14:51:52.643 KST client backend[3075431] pg_regress/create_operator STATEMENT:  CREATE OPERATOR #*# (
	   rightarg = SETOF int8,
	   procedure = factorial
	);
2024-09-08 14:51:52.643 KST client backend[3075435] pg_regress/create_table ERROR:  column "u" has pseudo-type unknown
2024-09-08 14:51:52.643 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE unknowntab (
		u unknown    -- fail
	);
2024-09-08 14:51:52.643 KST client backend[3075435] pg_regress/create_table ERROR:  column "u" has pseudo-type unknown
2024-09-08 14:51:52.643 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TYPE unknown_comptype AS (
		u unknown    -- fail
	);
2024-09-08 14:51:52.643 KST client backend[3075435] pg_regress/create_table ERROR:  unrecognized parameter "Fillfactor"
2024-09-08 14:51:52.643 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE tas_case WITH ("Fillfactor" = 10) AS SELECT 1 a;
2024-09-08 14:51:52.644 KST client backend[3075431] pg_regress/create_operator WARNING:  operator attribute "invalid_att" not recognized
2024-09-08 14:51:52.644 KST client backend[3075431] pg_regress/create_operator ERROR:  operator argument types must be specified
2024-09-08 14:51:52.644 KST client backend[3075431] pg_regress/create_operator STATEMENT:  CREATE OPERATOR #@%# (
	   procedure = factorial
	);
2024-09-08 14:51:52.644 KST client backend[3075431] pg_regress/create_operator ERROR:  operator function must be specified
2024-09-08 14:51:52.644 KST client backend[3075431] pg_regress/create_operator STATEMENT:  CREATE OPERATOR #@%# (
	   rightarg = int8
	);
2024-09-08 14:51:52.644 KST client backend[3075436] pg_regress/create_schema ERROR:  CREATE specifies a schema (schema_not_existing) different from the one being created (regress_create_schema_role)
2024-09-08 14:51:52.644 KST client backend[3075436] pg_regress/create_schema STATEMENT:  CREATE SCHEMA AUTHORIZATION regress_create_schema_role
	  CREATE SEQUENCE schema_not_existing.seq;
2024-09-08 14:51:52.644 KST client backend[3075436] pg_regress/create_schema ERROR:  CREATE specifies a schema (schema_not_existing) different from the one being created (regress_create_schema_role)
2024-09-08 14:51:52.644 KST client backend[3075436] pg_regress/create_schema STATEMENT:  CREATE SCHEMA AUTHORIZATION regress_create_schema_role
	  CREATE TABLE schema_not_existing.tab (id int);
2024-09-08 14:51:52.644 KST client backend[3075436] pg_regress/create_schema ERROR:  CREATE specifies a schema (schema_not_existing) different from the one being created (regress_create_schema_role)
2024-09-08 14:51:52.644 KST client backend[3075436] pg_regress/create_schema STATEMENT:  CREATE SCHEMA AUTHORIZATION regress_create_schema_role
	  CREATE VIEW schema_not_existing.view AS SELECT 1;
2024-09-08 14:51:52.644 KST client backend[3075431] pg_regress/create_operator ERROR:  permission denied for type type_op3
2024-09-08 14:51:52.644 KST client backend[3075431] pg_regress/create_operator STATEMENT:  CREATE OPERATOR #*# (
	   leftarg = type_op3,
	   rightarg = int8,
	   procedure = fn_op3
	);
2024-09-08 14:51:52.644 KST client backend[3075436] pg_regress/create_schema ERROR:  CREATE specifies a schema (schema_not_existing) different from the one being created (regress_create_schema_role)
2024-09-08 14:51:52.644 KST client backend[3075436] pg_regress/create_schema STATEMENT:  CREATE SCHEMA AUTHORIZATION regress_create_schema_role
	  CREATE INDEX ON schema_not_existing.tab (id);
2024-09-08 14:51:52.644 KST client backend[3075434] pg_regress/create_type ERROR:  type "shell" already exists
2024-09-08 14:51:52.644 KST client backend[3075434] pg_regress/create_type STATEMENT:  CREATE TYPE shell;
2024-09-08 14:51:52.645 KST client backend[3075436] pg_regress/create_schema ERROR:  CREATE specifies a schema (schema_not_existing) different from the one being created (regress_create_schema_role)
2024-09-08 14:51:52.645 KST client backend[3075436] pg_regress/create_schema STATEMENT:  CREATE SCHEMA AUTHORIZATION regress_create_schema_role
	  CREATE TRIGGER schema_trig BEFORE INSERT ON schema_not_existing.tab
	  EXECUTE FUNCTION schema_trig.no_func();
2024-09-08 14:51:52.645 KST client backend[3075434] pg_regress/create_type ERROR:  type "shell" does not exist
2024-09-08 14:51:52.645 KST client backend[3075434] pg_regress/create_type STATEMENT:  DROP TYPE shell;
2024-09-08 14:51:52.645 KST client backend[3075436] pg_regress/create_schema ERROR:  CREATE specifies a schema (schema_not_existing) different from the one being created (regress_create_schema_role)
2024-09-08 14:51:52.645 KST client backend[3075436] pg_regress/create_schema STATEMENT:  CREATE SCHEMA AUTHORIZATION CURRENT_ROLE
	  CREATE SEQUENCE schema_not_existing.seq;
2024-09-08 14:51:52.645 KST client backend[3075431] pg_regress/create_operator ERROR:  permission denied for type type_op4
2024-09-08 14:51:52.645 KST client backend[3075431] pg_regress/create_operator STATEMENT:  CREATE OPERATOR #*# (
	   leftarg = int8,
	   rightarg = type_op4,
	   procedure = fn_op4
	);
2024-09-08 14:51:52.645 KST client backend[3075436] pg_regress/create_schema ERROR:  CREATE specifies a schema (schema_not_existing) different from the one being created (regress_create_schema_role)
2024-09-08 14:51:52.645 KST client backend[3075436] pg_regress/create_schema STATEMENT:  CREATE SCHEMA AUTHORIZATION CURRENT_ROLE
	  CREATE TABLE schema_not_existing.tab (id int);
2024-09-08 14:51:52.645 KST client backend[3075436] pg_regress/create_schema ERROR:  CREATE specifies a schema (schema_not_existing) different from the one being created (regress_create_schema_role)
2024-09-08 14:51:52.645 KST client backend[3075436] pg_regress/create_schema STATEMENT:  CREATE SCHEMA AUTHORIZATION CURRENT_ROLE
	  CREATE VIEW schema_not_existing.view AS SELECT 1;
2024-09-08 14:51:52.645 KST client backend[3075436] pg_regress/create_schema ERROR:  CREATE specifies a schema (schema_not_existing) different from the one being created (regress_create_schema_role)
2024-09-08 14:51:52.645 KST client backend[3075436] pg_regress/create_schema STATEMENT:  CREATE SCHEMA AUTHORIZATION CURRENT_ROLE
	  CREATE INDEX ON schema_not_existing.tab (id);
2024-09-08 14:51:52.645 KST client backend[3075436] pg_regress/create_schema ERROR:  CREATE specifies a schema (schema_not_existing) different from the one being created (regress_create_schema_role)
2024-09-08 14:51:52.645 KST client backend[3075436] pg_regress/create_schema STATEMENT:  CREATE SCHEMA AUTHORIZATION CURRENT_ROLE
	  CREATE TRIGGER schema_trig BEFORE INSERT ON schema_not_existing.tab
	  EXECUTE FUNCTION schema_trig.no_func();
2024-09-08 14:51:52.645 KST client backend[3075436] pg_regress/create_schema ERROR:  CREATE specifies a schema (schema_not_existing) different from the one being created (regress_schema_1)
2024-09-08 14:51:52.645 KST client backend[3075436] pg_regress/create_schema STATEMENT:  CREATE SCHEMA regress_schema_1 AUTHORIZATION CURRENT_ROLE
	  CREATE SEQUENCE schema_not_existing.seq;
2024-09-08 14:51:52.645 KST client backend[3075431] pg_regress/create_operator ERROR:  permission denied for function fn_op5
2024-09-08 14:51:52.645 KST client backend[3075431] pg_regress/create_operator STATEMENT:  CREATE OPERATOR #*# (
	   leftarg = int8,
	   rightarg = int8,
	   procedure = fn_op5
	);
2024-09-08 14:51:52.645 KST client backend[3075436] pg_regress/create_schema ERROR:  CREATE specifies a schema (schema_not_existing) different from the one being created (regress_schema_1)
2024-09-08 14:51:52.645 KST client backend[3075436] pg_regress/create_schema STATEMENT:  CREATE SCHEMA regress_schema_1 AUTHORIZATION CURRENT_ROLE
	  CREATE TABLE schema_not_existing.tab (id int);
2024-09-08 14:51:52.646 KST client backend[3075436] pg_regress/create_schema ERROR:  CREATE specifies a schema (schema_not_existing) different from the one being created (regress_schema_1)
2024-09-08 14:51:52.646 KST client backend[3075436] pg_regress/create_schema STATEMENT:  CREATE SCHEMA regress_schema_1 AUTHORIZATION CURRENT_ROLE
	  CREATE VIEW schema_not_existing.view AS SELECT 1;
2024-09-08 14:51:52.646 KST client backend[3075436] pg_regress/create_schema ERROR:  CREATE specifies a schema (schema_not_existing) different from the one being created (regress_schema_1)
2024-09-08 14:51:52.646 KST client backend[3075436] pg_regress/create_schema STATEMENT:  CREATE SCHEMA regress_schema_1 AUTHORIZATION CURRENT_ROLE
	  CREATE INDEX ON schema_not_existing.tab (id);
2024-09-08 14:51:52.646 KST client backend[3075431] pg_regress/create_operator ERROR:  permission denied for type type_op6
2024-09-08 14:51:52.646 KST client backend[3075431] pg_regress/create_operator STATEMENT:  CREATE OPERATOR #*# (
	   leftarg = int8,
	   rightarg = int8,
	   procedure = fn_op6
	);
2024-09-08 14:51:52.646 KST client backend[3075436] pg_regress/create_schema ERROR:  CREATE specifies a schema (schema_not_existing) different from the one being created (regress_schema_1)
2024-09-08 14:51:52.646 KST client backend[3075436] pg_regress/create_schema STATEMENT:  CREATE SCHEMA regress_schema_1 AUTHORIZATION CURRENT_ROLE
	  CREATE TRIGGER schema_trig BEFORE INSERT ON schema_not_existing.tab
	  EXECUTE FUNCTION schema_trig.no_func();
2024-09-08 14:51:52.646 KST client backend[3075431] pg_regress/create_operator WARNING:  operator attribute "Leftarg" not recognized
2024-09-08 14:51:52.646 KST client backend[3075431] pg_regress/create_operator WARNING:  operator attribute "Rightarg" not recognized
2024-09-08 14:51:52.646 KST client backend[3075431] pg_regress/create_operator WARNING:  operator attribute "Procedure" not recognized
2024-09-08 14:51:52.646 KST client backend[3075431] pg_regress/create_operator WARNING:  operator attribute "Commutator" not recognized
2024-09-08 14:51:52.646 KST client backend[3075431] pg_regress/create_operator WARNING:  operator attribute "Negator" not recognized
2024-09-08 14:51:52.646 KST client backend[3075431] pg_regress/create_operator WARNING:  operator attribute "Restrict" not recognized
2024-09-08 14:51:52.646 KST client backend[3075431] pg_regress/create_operator WARNING:  operator attribute "Join" not recognized
2024-09-08 14:51:52.646 KST client backend[3075431] pg_regress/create_operator WARNING:  operator attribute "Hashes" not recognized
2024-09-08 14:51:52.646 KST client backend[3075431] pg_regress/create_operator WARNING:  operator attribute "Merges" not recognized
2024-09-08 14:51:52.646 KST client backend[3075431] pg_regress/create_operator ERROR:  operator function must be specified
2024-09-08 14:51:52.646 KST client backend[3075431] pg_regress/create_operator STATEMENT:  CREATE OPERATOR ===
	(
		"Leftarg" = box,
		"Rightarg" = box,
		"Procedure" = area_equal_function,
		"Commutator" = ===,
		"Negator" = !==,
		"Restrict" = area_restriction_function,
		"Join" = area_join_function,
		"Hashes",
		"Merges"
	);
2024-09-08 14:51:52.647 KST client backend[3075434] pg_regress/create_type WARNING:  type attribute "Internallength" not recognized at character 27
2024-09-08 14:51:52.647 KST client backend[3075434] pg_regress/create_type WARNING:  type attribute "Input" not recognized at character 50
2024-09-08 14:51:52.647 KST client backend[3075434] pg_regress/create_type WARNING:  type attribute "Output" not recognized at character 71
2024-09-08 14:51:52.647 KST client backend[3075434] pg_regress/create_type WARNING:  type attribute "Alignment" not recognized at character 94
2024-09-08 14:51:52.647 KST client backend[3075434] pg_regress/create_type WARNING:  type attribute "Default" not recognized at character 115
2024-09-08 14:51:52.647 KST client backend[3075434] pg_regress/create_type WARNING:  type attribute "Passedbyvalue" not recognized at character 132
2024-09-08 14:51:52.647 KST client backend[3075434] pg_regress/create_type ERROR:  type input function must be specified
2024-09-08 14:51:52.647 KST client backend[3075434] pg_regress/create_type STATEMENT:  CREATE TYPE bogus_type (
		"Internallength" = 4,
		"Input" = int42_in,
		"Output" = int42_out,
		"Alignment" = int4,
		"Default" = 42,
		"Passedbyvalue"
	);
2024-09-08 14:51:52.647 KST client backend[3075434] pg_regress/create_type ERROR:  type input function array_in must return type bogus_type
2024-09-08 14:51:52.647 KST client backend[3075434] pg_regress/create_type STATEMENT:  CREATE TYPE bogus_type (INPUT = array_in,
	    OUTPUT = array_out,
	    ELEMENT = int,
	    INTERNALLENGTH = 32);
2024-09-08 14:51:52.647 KST client backend[3075434] pg_regress/create_type ERROR:  type "bogus_type" does not exist
2024-09-08 14:51:52.647 KST client backend[3075434] pg_regress/create_type HINT:  Create the type as a shell type, then create its I/O functions, then do a full CREATE TYPE.
2024-09-08 14:51:52.647 KST client backend[3075434] pg_regress/create_type STATEMENT:  CREATE TYPE bogus_type (INPUT = array_in,
	    OUTPUT = array_out,
	    ELEMENT = int,
	    INTERNALLENGTH = 32);
2024-09-08 14:51:52.647 KST client backend[3075434] pg_regress/create_type ERROR:  type "bad" does not exist
2024-09-08 14:51:52.647 KST client backend[3075434] pg_regress/create_type STATEMENT:  COMMENT ON TYPE bad IS 'bad comment';
2024-09-08 14:51:52.648 KST client backend[3075434] pg_regress/create_type ERROR:  column "nope" of relation "default_test_row" does not exist
2024-09-08 14:51:52.648 KST client backend[3075434] pg_regress/create_type STATEMENT:  COMMENT ON COLUMN default_test_row.nope IS 'bad comment';
2024-09-08 14:51:52.648 KST client backend[3075434] pg_regress/create_type ERROR:  type "text_w_default" already exists
2024-09-08 14:51:52.648 KST client backend[3075434] pg_regress/create_type STATEMENT:  CREATE TYPE text_w_default;
2024-09-08 14:51:52.649 KST client backend[3075434] pg_regress/create_type ERROR:  cannot drop function base_fn_in(cstring) because other objects depend on it
2024-09-08 14:51:52.649 KST client backend[3075434] pg_regress/create_type DETAIL:  type base_type depends on function base_fn_in(cstring)
	function base_fn_out(base_type) depends on type base_type
2024-09-08 14:51:52.649 KST client backend[3075434] pg_regress/create_type HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:52.649 KST client backend[3075434] pg_regress/create_type STATEMENT:  DROP FUNCTION base_fn_in(cstring);
2024-09-08 14:51:52.649 KST client backend[3075434] pg_regress/create_type ERROR:  cannot drop function base_fn_out(base_type) because other objects depend on it
2024-09-08 14:51:52.649 KST client backend[3075434] pg_regress/create_type DETAIL:  type base_type depends on function base_fn_out(base_type)
	function base_fn_in(cstring) depends on type base_type
2024-09-08 14:51:52.649 KST client backend[3075434] pg_regress/create_type HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:52.649 KST client backend[3075434] pg_regress/create_type STATEMENT:  DROP FUNCTION base_fn_out(base_type);
2024-09-08 14:51:52.649 KST client backend[3075435] pg_regress/create_table ERROR:  only temporary relations may be created in temporary schemas at character 23
2024-09-08 14:51:52.649 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE UNLOGGED TABLE pg_temp.unlogged3 (a int primary key);
2024-09-08 14:51:52.649 KST client backend[3075434] pg_regress/create_type ERROR:  cannot drop type base_type because other objects depend on it
2024-09-08 14:51:52.649 KST client backend[3075434] pg_regress/create_type DETAIL:  function base_fn_in(cstring) depends on type base_type
	function base_fn_out(base_type) depends on type base_type
2024-09-08 14:51:52.649 KST client backend[3075434] pg_regress/create_type HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:52.649 KST client backend[3075434] pg_regress/create_type STATEMENT:  DROP TYPE base_type;
2024-09-08 14:51:52.650 KST client backend[3075434] pg_regress/create_type ERROR:  invalid NUMERIC type modifier at character 30
2024-09-08 14:51:52.650 KST client backend[3075434] pg_regress/create_type STATEMENT:  CREATE TEMP TABLE mytab (foo widget(42,13,7));
2024-09-08 14:51:52.651 KST client backend[3075435] pg_regress/create_table ERROR:  cannot create temporary relation in non-temporary schema at character 19
2024-09-08 14:51:52.651 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TEMP TABLE public.temp_to_perm (a int primary key);
2024-09-08 14:51:52.651 KST client backend[3075434] pg_regress/create_type ERROR:  invalid input syntax for type widget: "(1,2)"
2024-09-08 14:51:52.651 KST client backend[3075434] pg_regress/create_type STATEMENT:  SELECT pg_input_is_valid('(1,2)', 'widget');
2024-09-08 14:51:52.651 KST client backend[3075434] pg_regress/create_type ERROR:  invalid input syntax for type widget: "(1,2)"
2024-09-08 14:51:52.651 KST client backend[3075434] pg_regress/create_type STATEMENT:  SELECT pg_input_is_valid('{"(1,2)"}', 'widget[]');
2024-09-08 14:51:52.651 KST client backend[3075434] pg_regress/create_type ERROR:  invalid input syntax for type widget: "(1,2)"
2024-09-08 14:51:52.651 KST client backend[3075434] pg_regress/create_type STATEMENT:  SELECT pg_input_is_valid('("(1,2)")', 'mytab');
2024-09-08 14:51:52.652 KST client backend[3075433] pg_regress/create_procedure ERROR:  ptest1(unknown) is a procedure at character 8
2024-09-08 14:51:52.652 KST client backend[3075433] pg_regress/create_procedure HINT:  To call a procedure, use CALL.
2024-09-08 14:51:52.652 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  SELECT ptest1('x');
2024-09-08 14:51:52.664 KST client backend[3075435] pg_regress/create_table ERROR:  relation "as_select1" already exists
2024-09-08 14:51:52.664 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE as_select1 AS SELECT * FROM pg_class WHERE relkind = 'r';
2024-09-08 14:51:52.665 KST client backend[3075433] pg_regress/create_procedure ERROR:  CREATE TABLE is not yet supported in unquoted SQL function body
2024-09-08 14:51:52.665 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  CREATE PROCEDURE ptestx()
	LANGUAGE SQL
	BEGIN ATOMIC
	  CREATE TABLE x (a int);
	END;
2024-09-08 14:51:52.665 KST client backend[3075435] pg_regress/create_table ERROR:  relation "as_select1" already exists
2024-09-08 14:51:52.665 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE as_select1 AS EXECUTE select1;
2024-09-08 14:51:52.666 KST client backend[3075434] pg_regress/create_type ERROR:  type "myvarchar" is only a shell
2024-09-08 14:51:52.666 KST client backend[3075434] pg_regress/create_type STATEMENT:  ALTER TYPE myvarchar SET (storage = extended);
2024-09-08 14:51:52.666 KST client backend[3075433] pg_regress/create_procedure ERROR:  calling procedures with output arguments is not supported in SQL functions
2024-09-08 14:51:52.666 KST client backend[3075433] pg_regress/create_procedure CONTEXT:  SQL function "ptest4b"
2024-09-08 14:51:52.666 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  CREATE PROCEDURE ptest4b(INOUT b int, INOUT a int)
	LANGUAGE SQL
	AS $$
	CALL ptest4a(a, b);  -- error, not supported
	$$;
2024-09-08 14:51:52.666 KST client backend[3075434] pg_regress/create_type ERROR:  cannot change type's storage to PLAIN
2024-09-08 14:51:52.666 KST client backend[3075434] pg_regress/create_type STATEMENT:  ALTER TYPE myvarchar SET (storage = plain);
2024-09-08 14:51:52.669 KST client backend[3075433] pg_regress/create_procedure ERROR:  procedure ptest9(numeric) does not exist at character 6
2024-09-08 14:51:52.669 KST client backend[3075433] pg_regress/create_procedure HINT:  No procedure matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:52.669 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  CALL ptest9(1./0.);
2024-09-08 14:51:52.670 KST client backend[3075434] pg_regress/create_type ERROR:  cannot drop function myvarcharsend(myvarchar) because other objects depend on it
2024-09-08 14:51:52.670 KST client backend[3075434] pg_regress/create_type DETAIL:  type myvarchar depends on function myvarcharsend(myvarchar)
	function myvarcharin(cstring,oid,integer) depends on type myvarchar
	function myvarcharout(myvarchar) depends on type myvarchar
	function myvarcharrecv(internal,oid,integer) depends on type myvarchar
	type myvarchardom depends on function myvarcharsend(myvarchar)
2024-09-08 14:51:52.670 KST client backend[3075434] pg_regress/create_type HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:52.670 KST client backend[3075434] pg_regress/create_type STATEMENT:  DROP FUNCTION myvarcharsend(myvarchar);
2024-09-08 14:51:52.670 KST client backend[3075433] pg_regress/create_procedure ERROR:  procedure name "ptest10" is not unique
2024-09-08 14:51:52.670 KST client backend[3075433] pg_regress/create_procedure HINT:  Specify the argument list to select the procedure unambiguously.
2024-09-08 14:51:52.670 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  drop procedure ptest10;
2024-09-08 14:51:52.670 KST client backend[3075434] pg_regress/create_type ERROR:  cannot drop type myvarchar because other objects depend on it
2024-09-08 14:51:52.670 KST client backend[3075434] pg_regress/create_type DETAIL:  function myvarcharin(cstring,oid,integer) depends on type myvarchar
	function myvarcharout(myvarchar) depends on type myvarchar
	function myvarcharsend(myvarchar) depends on type myvarchar
	function myvarcharrecv(internal,oid,integer) depends on type myvarchar
	type myvarchardom depends on type myvarchar
2024-09-08 14:51:52.670 KST client backend[3075434] pg_regress/create_type HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:52.670 KST client backend[3075434] pg_regress/create_type STATEMENT:  DROP TYPE myvarchar;
2024-09-08 14:51:52.670 KST client backend[3075433] pg_regress/create_procedure ERROR:  procedure name "ptest10" is not unique
2024-09-08 14:51:52.670 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  drop procedure ptest10(int, int, int);
2024-09-08 14:51:52.671 KST client backend[3075433] pg_regress/create_procedure ERROR:  version() is not a procedure at character 6
2024-09-08 14:51:52.671 KST client backend[3075433] pg_regress/create_procedure HINT:  To call a function, use SELECT.
2024-09-08 14:51:52.671 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  CALL version();
2024-09-08 14:51:52.671 KST client backend[3075433] pg_regress/create_procedure ERROR:  sum(integer) is not a procedure at character 6
2024-09-08 14:51:52.671 KST client backend[3075433] pg_regress/create_procedure HINT:  To call a function, use SELECT.
2024-09-08 14:51:52.671 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  CALL sum(1);
2024-09-08 14:51:52.671 KST client backend[3075433] pg_regress/create_procedure ERROR:  invalid attribute in procedure definition at character 40
2024-09-08 14:51:52.671 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  CREATE PROCEDURE ptestx() LANGUAGE SQL WINDOW AS $$ INSERT INTO cp_test VALUES (1, 'a') $$;
2024-09-08 14:51:52.671 KST client backend[3075433] pg_regress/create_procedure ERROR:  invalid attribute in procedure definition at character 40
2024-09-08 14:51:52.671 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  CREATE PROCEDURE ptestx() LANGUAGE SQL STRICT AS $$ INSERT INTO cp_test VALUES (1, 'a') $$;
2024-09-08 14:51:52.671 KST client backend[3075433] pg_regress/create_procedure ERROR:  VARIADIC parameter must be the last parameter
2024-09-08 14:51:52.671 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  CREATE PROCEDURE ptestx(a VARIADIC int[], b OUT int) LANGUAGE SQL
	  AS $$ SELECT a[1] $$;
2024-09-08 14:51:52.672 KST client backend[3075433] pg_regress/create_procedure ERROR:  procedure OUT parameters cannot appear after one with a default value
2024-09-08 14:51:52.672 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  CREATE PROCEDURE ptestx(a int DEFAULT 42, b OUT int) LANGUAGE SQL
	  AS $$ SELECT a $$;
2024-09-08 14:51:52.672 KST client backend[3075433] pg_regress/create_procedure ERROR:  invalid attribute in procedure definition at character 30
2024-09-08 14:51:52.672 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  ALTER PROCEDURE ptest1(text) STRICT;
2024-09-08 14:51:52.672 KST client backend[3075433] pg_regress/create_procedure ERROR:  ptest1(text) is not a function
2024-09-08 14:51:52.672 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  ALTER FUNCTION ptest1(text) VOLATILE;
2024-09-08 14:51:52.672 KST client backend[3075433] pg_regress/create_procedure ERROR:  cp_testfunc1(integer) is not a procedure
2024-09-08 14:51:52.672 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  ALTER PROCEDURE cp_testfunc1(int) VOLATILE;
2024-09-08 14:51:52.672 KST client backend[3075433] pg_regress/create_procedure ERROR:  procedure nonexistent() does not exist
2024-09-08 14:51:52.672 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  ALTER PROCEDURE nonexistent() VOLATILE;
2024-09-08 14:51:52.672 KST client backend[3075433] pg_regress/create_procedure ERROR:  ptest1(text) is not a function
2024-09-08 14:51:52.672 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  DROP FUNCTION ptest1(text);
2024-09-08 14:51:52.672 KST client backend[3075433] pg_regress/create_procedure ERROR:  cp_testfunc1(integer) is not a procedure
2024-09-08 14:51:52.672 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  DROP PROCEDURE cp_testfunc1(int);
2024-09-08 14:51:52.672 KST client backend[3075433] pg_regress/create_procedure ERROR:  procedure nonexistent() does not exist
2024-09-08 14:51:52.672 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  DROP PROCEDURE nonexistent();
2024-09-08 14:51:52.672 KST client backend[3075433] pg_regress/create_procedure ERROR:  permission denied for procedure ptest1
2024-09-08 14:51:52.672 KST client backend[3075433] pg_regress/create_procedure STATEMENT:  CALL ptest1('a');
2024-09-08 14:51:52.688 KST client backend[3075435] pg_regress/create_table ERROR:  syntax error at or near "OIDS" at character 29
2024-09-08 14:51:52.688 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE withoid() WITH OIDS;
2024-09-08 14:51:52.688 KST client backend[3075435] pg_regress/create_table ERROR:  tables declared WITH OIDS are not supported
2024-09-08 14:51:52.688 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE withoid() WITH (oids);
2024-09-08 14:51:52.688 KST client backend[3075435] pg_regress/create_table ERROR:  tables declared WITH OIDS are not supported
2024-09-08 14:51:52.688 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE withoid() WITH (oids = true);
2024-09-08 14:51:52.689 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use column reference in DEFAULT expression at character 51
2024-09-08 14:51:52.689 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE default_expr_column (id int DEFAULT (id));
2024-09-08 14:51:52.689 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use column reference in DEFAULT expression at character 51
2024-09-08 14:51:52.689 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE default_expr_column (id int DEFAULT (bar.id));
2024-09-08 14:51:52.689 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use column reference in DEFAULT expression at character 59
2024-09-08 14:51:52.689 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE default_expr_agg_column (id int DEFAULT (avg(id)));
2024-09-08 14:51:52.690 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use column reference in DEFAULT expression at character 58
2024-09-08 14:51:52.690 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE default_expr_non_column (a int DEFAULT (avg(non_existent)));
2024-09-08 14:51:52.690 KST client backend[3075435] pg_regress/create_table ERROR:  aggregate functions are not allowed in DEFAULT expressions at character 47
2024-09-08 14:51:52.690 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE default_expr_agg (a int DEFAULT (avg(1)));
2024-09-08 14:51:52.690 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use subquery in DEFAULT expression at character 46
2024-09-08 14:51:52.690 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE default_expr_agg (a int DEFAULT (select 1));
2024-09-08 14:51:52.691 KST client backend[3075435] pg_regress/create_table ERROR:  set-returning functions are not allowed in DEFAULT expressions at character 47
2024-09-08 14:51:52.691 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE default_expr_agg (a int DEFAULT (generate_series(1,3)));
2024-09-08 14:51:52.693 KST client backend[3075435] pg_regress/create_table ERROR:  cannot create partitioned table as inheritance child
2024-09-08 14:51:52.693 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a int
	) INHERITS (some_table) PARTITION BY LIST (a);
2024-09-08 14:51:52.693 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use "list" partition strategy with more than one column
2024-09-08 14:51:52.693 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a1 int,
		a2 int
	) PARTITION BY LIST (a1, a2);
2024-09-08 14:51:52.693 KST client backend[3075435] pg_regress/create_table ERROR:  exclusion constraints are not supported on partitioned tables at character 37
2024-09-08 14:51:52.693 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a int,
		EXCLUDE USING gist (a WITH &&)
	) PARTITION BY RANGE (a);
2024-09-08 14:51:52.694 KST client backend[3075435] pg_regress/create_table ERROR:  set-returning functions are not allowed in partition key expressions
2024-09-08 14:51:52.694 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a int
	) PARTITION BY RANGE (retset(a));
2024-09-08 14:51:52.694 KST client backend[3075435] pg_regress/create_table ERROR:  aggregate functions are not allowed in partition key expressions
2024-09-08 14:51:52.694 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a int
	) PARTITION BY RANGE ((avg(a)));
2024-09-08 14:51:52.694 KST client backend[3075435] pg_regress/create_table ERROR:  window functions are not allowed in partition key expressions
2024-09-08 14:51:52.694 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a int,
		b int
	) PARTITION BY RANGE ((avg(a) OVER (PARTITION BY b)));
2024-09-08 14:51:52.694 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use subquery in partition key expression
2024-09-08 14:51:52.694 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a int
	) PARTITION BY LIST ((a LIKE (SELECT 1)));
2024-09-08 14:51:52.694 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use constant expression as partition key
2024-09-08 14:51:52.694 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a int
	) PARTITION BY RANGE ((42));
2024-09-08 14:51:52.695 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use constant expression as partition key
2024-09-08 14:51:52.695 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a int
	) PARTITION BY RANGE (const_func());
2024-09-08 14:51:52.695 KST client backend[3075435] pg_regress/create_table ERROR:  unrecognized partitioning strategy "magic"
2024-09-08 14:51:52.695 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
	    a int
	) PARTITION BY MAGIC (a);
2024-09-08 14:51:52.695 KST client backend[3075435] pg_regress/create_table ERROR:  column "b" named in partition key does not exist at character 57
2024-09-08 14:51:52.695 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a int
	) PARTITION BY RANGE (b);
2024-09-08 14:51:52.695 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use system column "xmin" in partition key at character 57
2024-09-08 14:51:52.695 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a int
	) PARTITION BY RANGE (xmin);
2024-09-08 14:51:52.696 KST client backend[3075435] pg_regress/create_table ERROR:  partition key column 1 has pseudo-type record
2024-09-08 14:51:52.696 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a int,
		b int
	) PARTITION BY RANGE (((a, b)));
2024-09-08 14:51:52.696 KST client backend[3075435] pg_regress/create_table ERROR:  partition key column 2 has pseudo-type unknown
2024-09-08 14:51:52.696 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a int,
		b int
	) PARTITION BY RANGE (a, ('unknown'));
2024-09-08 14:51:52.696 KST client backend[3075435] pg_regress/create_table ERROR:  functions in partition key expression must be marked IMMUTABLE
2024-09-08 14:51:52.696 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a int
	) PARTITION BY RANGE (immut_func(a));
2024-09-08 14:51:52.697 KST client backend[3075435] pg_regress/create_table ERROR:  data type point has no default operator class for access method "btree"
2024-09-08 14:51:52.697 KST client backend[3075435] pg_regress/create_table HINT:  You must specify a btree operator class or define a default btree operator class for the data type.
2024-09-08 14:51:52.697 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a point
	) PARTITION BY LIST (a);
2024-09-08 14:51:52.697 KST client backend[3075435] pg_regress/create_table ERROR:  operator class "point_ops" does not exist for access method "btree"
2024-09-08 14:51:52.697 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a point
	) PARTITION BY LIST (a point_ops);
2024-09-08 14:51:52.697 KST client backend[3075435] pg_regress/create_table ERROR:  data type point has no default operator class for access method "btree"
2024-09-08 14:51:52.697 KST client backend[3075435] pg_regress/create_table HINT:  You must specify a btree operator class or define a default btree operator class for the data type.
2024-09-08 14:51:52.697 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a point
	) PARTITION BY RANGE (a);
2024-09-08 14:51:52.697 KST client backend[3075435] pg_regress/create_table ERROR:  operator class "point_ops" does not exist for access method "btree"
2024-09-08 14:51:52.697 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a point
	) PARTITION BY RANGE (a point_ops);
2024-09-08 14:51:52.697 KST client backend[3075435] pg_regress/create_table ERROR:  cannot add NO INHERIT constraint to partitioned table "partitioned"
2024-09-08 14:51:52.697 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE partitioned (
		a int,
		CONSTRAINT check_a CHECK (a > 0) NO INHERIT
	) PARTITION BY RANGE (a);
2024-09-08 14:51:52.698 KST client backend[3075435] pg_regress/create_table ERROR:  cannot drop function plusone(integer) because other objects depend on it
2024-09-08 14:51:52.698 KST client backend[3075435] pg_regress/create_table DETAIL:  table partitioned depends on function plusone(integer)
2024-09-08 14:51:52.698 KST client backend[3075435] pg_regress/create_table HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:52.698 KST client backend[3075435] pg_regress/create_table STATEMENT:  DROP FUNCTION plusone(int);
2024-09-08 14:51:52.699 KST client backend[3075435] pg_regress/create_table ERROR:  cannot inherit from partitioned table "partitioned2"
2024-09-08 14:51:52.699 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail () INHERITS (partitioned2);
2024-09-08 14:51:52.707 KST client backend[3075435] pg_regress/create_table ERROR:  no partition of relation "partitioned2" found for row
2024-09-08 14:51:52.707 KST client backend[3075435] pg_regress/create_table DETAIL:  Partition key of the failing row contains ((a + 1), substr(b, 1, 5)) = (2, hello).
2024-09-08 14:51:52.707 KST client backend[3075435] pg_regress/create_table STATEMENT:  INSERT INTO partitioned2 VALUES (1, 'hello');
2024-09-08 14:51:52.717 KST client backend[3075435] pg_regress/create_table ERROR:  cannot drop column "a" because it is part of the partition key of relation "partitioned"
2024-09-08 14:51:52.717 KST client backend[3075435] pg_regress/create_table STATEMENT:  alter table partitioned drop column a;
2024-09-08 14:51:52.717 KST client backend[3075435] pg_regress/create_table ERROR:  cannot drop type intdom1 because other objects depend on it
2024-09-08 14:51:52.717 KST client backend[3075435] pg_regress/create_table DETAIL:  table partitioned depends on type intdom1
2024-09-08 14:51:52.717 KST client backend[3075435] pg_regress/create_table HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:52.717 KST client backend[3075435] pg_regress/create_table STATEMENT:  drop domain intdom1;
2024-09-08 14:51:52.718 KST client backend[3075435] pg_regress/create_table ERROR:  relation "partitioned" does not exist at character 7
2024-09-08 14:51:52.718 KST client backend[3075435] pg_regress/create_table STATEMENT:  table partitioned;
2024-09-08 14:51:52.718 KST client backend[3075435] pg_regress/create_table ERROR:  cannot drop column "a" because it is part of the partition key of relation "partitioned"
2024-09-08 14:51:52.718 KST client backend[3075435] pg_regress/create_table STATEMENT:  alter table partitioned drop column a;
2024-09-08 14:51:52.718 KST client backend[3075435] pg_regress/create_table ERROR:  cannot drop type intdom1 because other objects depend on it
2024-09-08 14:51:52.718 KST client backend[3075435] pg_regress/create_table DETAIL:  table partitioned depends on type intdom1
2024-09-08 14:51:52.718 KST client backend[3075435] pg_regress/create_table HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:52.718 KST client backend[3075435] pg_regress/create_table STATEMENT:  drop domain intdom1;
2024-09-08 14:51:52.719 KST client backend[3075435] pg_regress/create_table ERROR:  relation "partitioned" does not exist at character 7
2024-09-08 14:51:52.719 KST client backend[3075435] pg_regress/create_table STATEMENT:  table partitioned;
2024-09-08 14:51:52.723 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use column reference in partition bound expression at character 75
2024-09-08 14:51:52.723 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE part_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN (somename);
2024-09-08 14:51:52.723 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use column reference in partition bound expression at character 75
2024-09-08 14:51:52.723 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE part_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN (somename.somename);
2024-09-08 14:51:52.724 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use column reference in partition bound expression at character 75
2024-09-08 14:51:52.724 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE part_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN (a);
2024-09-08 14:51:52.724 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use column reference in partition bound expression at character 79
2024-09-08 14:51:52.724 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE part_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN (sum(a));
2024-09-08 14:51:52.725 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use column reference in partition bound expression at character 79
2024-09-08 14:51:52.725 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE part_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN (sum(somename));
2024-09-08 14:51:52.725 KST client backend[3075435] pg_regress/create_table ERROR:  aggregate functions are not allowed in partition bound at character 75
2024-09-08 14:51:52.725 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE part_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN (sum(1));
2024-09-08 14:51:52.725 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use subquery in partition bound at character 75
2024-09-08 14:51:52.725 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE part_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN ((select 1));
2024-09-08 14:51:52.726 KST client backend[3075435] pg_regress/create_table ERROR:  set-returning functions are not allowed in partition bound at character 75
2024-09-08 14:51:52.726 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE part_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN (generate_series(4, 6));
2024-09-08 14:51:52.726 KST client backend[3075435] pg_regress/create_table ERROR:  collations are not supported by type integer at character 81
2024-09-08 14:51:52.726 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE part_bogus_expr_fail PARTITION OF list_parted FOR VALUES IN ((1+1) collate "POSIX");
2024-09-08 14:51:52.726 KST client backend[3075435] pg_regress/create_table ERROR:  syntax error at or near ")" at character 64
2024-09-08 14:51:52.726 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF list_parted FOR VALUES IN ();
2024-09-08 14:51:52.727 KST client backend[3075435] pg_regress/create_table ERROR:  invalid bound specification for a list partition at character 60
2024-09-08 14:51:52.727 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF list_parted FOR VALUES FROM (1) TO (2);
2024-09-08 14:51:52.727 KST client backend[3075435] pg_regress/create_table ERROR:  invalid bound specification for a list partition at character 60
2024-09-08 14:51:52.727 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF list_parted FOR VALUES WITH (MODULUS 10, REMAINDER 1);
2024-09-08 14:51:52.728 KST client backend[3075435] pg_regress/create_table ERROR:  partition "fail_default_part" conflicts with existing default partition "part_default" at character 57
2024-09-08 14:51:52.728 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_default_part PARTITION OF list_parted DEFAULT;
2024-09-08 14:51:52.728 KST client backend[3075435] pg_regress/create_table ERROR:  specified value cannot be cast to type boolean for column "a" at character 59
2024-09-08 14:51:52.728 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE bools_true PARTITION OF bools FOR VALUES IN (1);
2024-09-08 14:51:52.732 KST client backend[3075435] pg_regress/create_table ERROR:  partition "bigintp_10_2" would overlap partition "bigintp_10" at character 63
2024-09-08 14:51:52.732 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE bigintp_10_2 PARTITION OF bigintp FOR VALUES IN ('10');
2024-09-08 14:51:52.733 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use column reference in partition bound expression at character 80
2024-09-08 14:51:52.733 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE part_bogus_expr_fail PARTITION OF range_parted
	  FOR VALUES FROM (somename) TO ('2019-01-01');
2024-09-08 14:51:52.733 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use column reference in partition bound expression at character 80
2024-09-08 14:51:52.733 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE part_bogus_expr_fail PARTITION OF range_parted
	  FOR VALUES FROM (somename.somename) TO ('2019-01-01');
2024-09-08 14:51:52.734 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use column reference in partition bound expression at character 80
2024-09-08 14:51:52.734 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE part_bogus_expr_fail PARTITION OF range_parted
	  FOR VALUES FROM (a) TO ('2019-01-01');
2024-09-08 14:51:52.734 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use column reference in partition bound expression at character 84
2024-09-08 14:51:52.734 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE part_bogus_expr_fail PARTITION OF range_parted
	  FOR VALUES FROM (max(a)) TO ('2019-01-01');
2024-09-08 14:51:52.734 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use column reference in partition bound expression at character 84
2024-09-08 14:51:52.734 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE part_bogus_expr_fail PARTITION OF range_parted
	  FOR VALUES FROM (max(somename)) TO ('2019-01-01');
2024-09-08 14:51:52.735 KST client backend[3075435] pg_regress/create_table ERROR:  aggregate functions are not allowed in partition bound at character 80
2024-09-08 14:51:52.735 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE part_bogus_expr_fail PARTITION OF range_parted
	  FOR VALUES FROM (max('2019-02-01'::date)) TO ('2019-01-01');
2024-09-08 14:51:52.735 KST client backend[3075435] pg_regress/create_table ERROR:  cannot use subquery in partition bound at character 80
2024-09-08 14:51:52.735 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE part_bogus_expr_fail PARTITION OF range_parted
	  FOR VALUES FROM ((select 1)) TO ('2019-01-01');
2024-09-08 14:51:52.736 KST client backend[3075435] pg_regress/create_table ERROR:  set-returning functions are not allowed in partition bound at character 80
2024-09-08 14:51:52.736 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE part_bogus_expr_fail PARTITION OF range_parted
	  FOR VALUES FROM (generate_series(1, 3)) TO ('2019-01-01');
2024-09-08 14:51:52.736 KST client backend[3075435] pg_regress/create_table ERROR:  invalid bound specification for a range partition at character 61
2024-09-08 14:51:52.736 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF range_parted FOR VALUES IN ('a');
2024-09-08 14:51:52.737 KST client backend[3075435] pg_regress/create_table ERROR:  invalid bound specification for a range partition at character 61
2024-09-08 14:51:52.737 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF range_parted FOR VALUES WITH (MODULUS 10, REMAINDER 1);
2024-09-08 14:51:52.737 KST client backend[3075435] pg_regress/create_table ERROR:  FROM must specify exactly one value per partitioning column
2024-09-08 14:51:52.737 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF range_parted FOR VALUES FROM ('a', 1) TO ('z');
2024-09-08 14:51:52.737 KST client backend[3075435] pg_regress/create_table ERROR:  TO must specify exactly one value per partitioning column
2024-09-08 14:51:52.737 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF range_parted FOR VALUES FROM ('a') TO ('z', 1);
2024-09-08 14:51:52.738 KST client backend[3075435] pg_regress/create_table ERROR:  cannot specify NULL in range bound
2024-09-08 14:51:52.738 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF range_parted FOR VALUES FROM (null) TO (maxvalue);
2024-09-08 14:51:52.738 KST client backend[3075435] pg_regress/create_table ERROR:  invalid bound specification for a range partition at character 61
2024-09-08 14:51:52.738 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF range_parted FOR VALUES WITH (MODULUS 10, REMAINDER 1);
2024-09-08 14:51:52.740 KST client backend[3075435] pg_regress/create_table ERROR:  every hash partition modulus must be a factor of the next larger modulus
2024-09-08 14:51:52.740 KST client backend[3075435] pg_regress/create_table DETAIL:  The new modulus 25 is not divisible by 10, the modulus of existing partition "hpart_4".
2024-09-08 14:51:52.740 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF hash_parted FOR VALUES WITH (MODULUS 25, REMAINDER 3);
2024-09-08 14:51:52.741 KST client backend[3075435] pg_regress/create_table ERROR:  every hash partition modulus must be a factor of the next larger modulus
2024-09-08 14:51:52.741 KST client backend[3075435] pg_regress/create_table DETAIL:  The new modulus 150 is not a factor of 200, the modulus of existing partition "hpart_3".
2024-09-08 14:51:52.741 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF hash_parted FOR VALUES WITH (MODULUS 150, REMAINDER 3);
2024-09-08 14:51:52.741 KST client backend[3075435] pg_regress/create_table ERROR:  partition "fail_part" would overlap partition "hpart_4" at character 60
2024-09-08 14:51:52.741 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF hash_parted FOR VALUES WITH (MODULUS 100, REMAINDER 3);
2024-09-08 14:51:52.741 KST client backend[3075435] pg_regress/create_table ERROR:  invalid bound specification for a hash partition at character 60
2024-09-08 14:51:52.741 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF hash_parted FOR VALUES FROM ('a', 1) TO ('z');
2024-09-08 14:51:52.742 KST client backend[3075435] pg_regress/create_table ERROR:  invalid bound specification for a hash partition at character 60
2024-09-08 14:51:52.742 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF hash_parted FOR VALUES IN (1000);
2024-09-08 14:51:52.742 KST client backend[3075435] pg_regress/create_table ERROR:  a hash-partitioned table may not have a default partition
2024-09-08 14:51:52.742 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_default_part PARTITION OF hash_parted DEFAULT;
2024-09-08 14:51:52.743 KST client backend[3075435] pg_regress/create_table ERROR:  "unparted" is not partitioned
2024-09-08 14:51:52.743 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF unparted FOR VALUES IN ('a');
2024-09-08 14:51:52.743 KST client backend[3075435] pg_regress/create_table ERROR:  "unparted" is not partitioned
2024-09-08 14:51:52.743 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF unparted FOR VALUES WITH (MODULUS 2, REMAINDER 1);
2024-09-08 14:51:52.744 KST client backend[3075435] pg_regress/create_table ERROR:  cannot create a permanent relation as partition of temporary relation "temp_parted"
2024-09-08 14:51:52.744 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF temp_parted FOR VALUES IN ('a');
2024-09-08 14:51:52.747 KST client backend[3075435] pg_regress/create_table ERROR:  partition "fail_part" would overlap partition "part_null_z" at character 65
2024-09-08 14:51:52.747 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF list_parted2 FOR VALUES IN (null);
2024-09-08 14:51:52.747 KST client backend[3075435] pg_regress/create_table ERROR:  partition "fail_part" would overlap partition "part_ab" at character 65
2024-09-08 14:51:52.747 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF list_parted2 FOR VALUES IN ('b', 'c');
2024-09-08 14:51:52.748 KST client backend[3075435] pg_regress/create_table ERROR:  updated partition constraint for default partition "list_parted2_def" would be violated by some row
2024-09-08 14:51:52.748 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF list_parted2 FOR VALUES IN ('W', 'X', 'Y');
2024-09-08 14:51:52.749 KST client backend[3075435] pg_regress/create_table ERROR:  empty range bound specified for partition "fail_part" at character 68
2024-09-08 14:51:52.749 KST client backend[3075435] pg_regress/create_table DETAIL:  Specified lower bound (1) is greater than or equal to upper bound (0).
2024-09-08 14:51:52.749 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF range_parted2 FOR VALUES FROM (1) TO (0);
2024-09-08 14:51:52.749 KST client backend[3075435] pg_regress/create_table ERROR:  empty range bound specified for partition "fail_part" at character 68
2024-09-08 14:51:52.749 KST client backend[3075435] pg_regress/create_table DETAIL:  Specified lower bound (1) is greater than or equal to upper bound (1).
2024-09-08 14:51:52.749 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF range_parted2 FOR VALUES FROM (1) TO (1);
2024-09-08 14:51:52.750 KST client backend[3075435] pg_regress/create_table ERROR:  partition "fail_part" would overlap partition "part0" at character 68
2024-09-08 14:51:52.750 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF range_parted2 FOR VALUES FROM (minvalue) TO (2);
2024-09-08 14:51:52.751 KST client backend[3075435] pg_regress/create_table ERROR:  partition "fail_part" would overlap partition "part0" at character 68
2024-09-08 14:51:52.751 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF range_parted2 FOR VALUES FROM (-1) TO (1);
2024-09-08 14:51:52.751 KST client backend[3075435] pg_regress/create_table ERROR:  partition "fail_part" would overlap partition "part1" at character 68
2024-09-08 14:51:52.751 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF range_parted2 FOR VALUES FROM (9) TO (maxvalue);
2024-09-08 14:51:52.752 KST client backend[3075435] pg_regress/create_table ERROR:  partition "fail_part" would overlap partition "part2" at character 76
2024-09-08 14:51:52.752 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF range_parted2 FOR VALUES FROM (10) TO (30);
2024-09-08 14:51:52.752 KST client backend[3075435] pg_regress/create_table ERROR:  partition "fail_part" would overlap partition "part2" at character 76
2024-09-08 14:51:52.752 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF range_parted2 FOR VALUES FROM (10) TO (50);
2024-09-08 14:51:52.753 KST client backend[3075435] pg_regress/create_table ERROR:  partition "fail_default_part" conflicts with existing default partition "range2_default" at character 59
2024-09-08 14:51:52.753 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_default_part PARTITION OF range_parted2 DEFAULT;
2024-09-08 14:51:52.754 KST client backend[3075435] pg_regress/create_table ERROR:  updated partition constraint for default partition "range2_default" would be violated by some row
2024-09-08 14:51:52.754 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF range_parted2 FOR VALUES FROM (80) TO (90);
2024-09-08 14:51:52.755 KST client backend[3075435] pg_regress/create_table ERROR:  partition "fail_part" would overlap partition "part00" at character 68
2024-09-08 14:51:52.755 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF range_parted3 FOR VALUES FROM (0, minvalue) TO (0, 1);
2024-09-08 14:51:52.757 KST client backend[3075435] pg_regress/create_table ERROR:  partition "fail_part" would overlap partition "part12" at character 71
2024-09-08 14:51:52.757 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF range_parted3 FOR VALUES FROM (1, 10) TO (1, 20);
2024-09-08 14:51:52.757 KST client backend[3075435] pg_regress/create_table ERROR:  partition "fail_part" would overlap partition "part10" at character 68
2024-09-08 14:51:52.757 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF range_parted3 FOR VALUES FROM (1, minvalue) TO (1, maxvalue);
2024-09-08 14:51:52.761 KST client backend[3075435] pg_regress/create_table ERROR:  partition "fail_part" would overlap partition "h2part_4" at character 61
2024-09-08 14:51:52.761 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF hash_parted2 FOR VALUES WITH (MODULUS 2, REMAINDER 1);
2024-09-08 14:51:52.761 KST client backend[3075435] pg_regress/create_table ERROR:  modulus for hash partition must be an integer value greater than zero
2024-09-08 14:51:52.761 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF hash_parted2 FOR VALUES WITH (MODULUS 0, REMAINDER 1);
2024-09-08 14:51:52.762 KST client backend[3075435] pg_regress/create_table ERROR:  remainder for hash partition must be less than modulus
2024-09-08 14:51:52.762 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part PARTITION OF hash_parted2 FOR VALUES WITH (MODULUS 8, REMAINDER 8);
2024-09-08 14:51:52.764 KST client backend[3075435] pg_regress/create_table ERROR:  column "b" specified more than once
2024-09-08 14:51:52.764 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE part_b PARTITION OF parted (
		b NOT NULL,
		b DEFAULT 1,
		b CHECK (b >= 0),
		CONSTRAINT check_a CHECK (length(a) > 0)
	) FOR VALUES IN ('b');
2024-09-08 14:51:52.765 KST client backend[3075435] pg_regress/create_table ERROR:  cannot drop inherited constraint "check_a" of relation "part_b"
2024-09-08 14:51:52.765 KST client backend[3075435] pg_regress/create_table STATEMENT:  ALTER TABLE part_b DROP CONSTRAINT check_a;
2024-09-08 14:51:52.765 KST client backend[3075435] pg_regress/create_table ERROR:  cannot drop inherited constraint "check_b" of relation "part_b"
2024-09-08 14:51:52.765 KST client backend[3075435] pg_regress/create_table STATEMENT:  ALTER TABLE part_b DROP CONSTRAINT check_b;
2024-09-08 14:51:52.766 KST client backend[3075435] pg_regress/create_table ERROR:  column "c" named in partition key does not exist at character 98
2024-09-08 14:51:52.766 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE fail_part_col_not_found PARTITION OF parted FOR VALUES IN ('c') PARTITION BY RANGE (c);
2024-09-08 14:51:52.768 KST client backend[3075435] pg_regress/create_table ERROR:  null value in column "b" of relation "parted_notnull_inh_test1" violates not-null constraint
2024-09-08 14:51:52.768 KST client backend[3075435] pg_regress/create_table DETAIL:  Failing row contains (1, null).
2024-09-08 14:51:52.768 KST client backend[3075435] pg_regress/create_table STATEMENT:  insert into parted_notnull_inh_test (b) values (null);
2024-09-08 14:51:52.821 KST client backend[3075435] pg_regress/create_table ERROR:  cannot specify storage parameters for a partitioned table
2024-09-08 14:51:52.821 KST client backend[3075435] pg_regress/create_table HINT:  Specify storage parameters for its leaf partitions instead.
2024-09-08 14:51:52.821 KST client backend[3075435] pg_regress/create_table STATEMENT:  CREATE TABLE parted_col_comment (a int, b text) PARTITION BY LIST (a) WITH (fillfactor=100);
2024-09-08 14:51:52.829 KST client backend[3075435] pg_regress/create_table ERROR:  cannot create a permanent relation as partition of temporary relation "temp_parted"
2024-09-08 14:51:52.829 KST client backend[3075435] pg_regress/create_table STATEMENT:  create table perm_part partition of temp_parted default;
2024-09-08 14:51:52.830 KST client backend[3075435] pg_regress/create_table ERROR:  cannot create a temporary relation as partition of permanent relation "perm_parted"
2024-09-08 14:51:52.830 KST client backend[3075435] pg_regress/create_table STATEMENT:  create temp table temp_part partition of perm_parted default;
2024-09-08 14:51:52.832 KST client backend[3075435] pg_regress/create_table ERROR:  cannot CREATE TABLE .. PARTITION OF "tab_part_create" because it is being used by active queries in this session
2024-09-08 14:51:52.832 KST client backend[3075435] pg_regress/create_table CONTEXT:  SQL statement "create table tab_part_create_1 partition of tab_part_create for values in (1)"
	PL/pgSQL function func_part_create() line 3 at EXECUTE
2024-09-08 14:51:52.832 KST client backend[3075435] pg_regress/create_table STATEMENT:  insert into tab_part_create values (1);
2024-09-08 14:51:52.836 KST client backend[3075435] pg_regress/create_table ERROR:  updated partition constraint for default partition "defcheck_def" would be violated by some row
2024-09-08 14:51:52.836 KST client backend[3075435] pg_regress/create_table STATEMENT:  create table defcheck_0 partition of defcheck for values in (0);
2024-09-08 14:51:52.872 KST client backend[3075456] pg_regress/create_index ERROR:  syntax error at or near "ON" at character 28
2024-09-08 14:51:52.872 KST client backend[3075456] pg_regress/create_index STATEMENT:  CREATE INDEX IF NOT EXISTS ON onek USING btree(unique1 int4_ops);
2024-09-08 14:51:52.884 KST client backend[3075459] pg_regress/create_view ERROR:  relation "noview" does not exist
2024-09-08 14:51:52.884 KST client backend[3075459] pg_regress/create_view STATEMENT:  COMMENT ON VIEW noview IS 'no view';
2024-09-08 14:51:52.884 KST client backend[3075457] pg_regress/index_including ERROR:  could not create unique index "tbl_include_unique2_idx_unique"
2024-09-08 14:51:52.884 KST client backend[3075457] pg_regress/index_including DETAIL:  Key (c1, c2)=(1, 2) is duplicated.
2024-09-08 14:51:52.884 KST client backend[3075457] pg_regress/index_including STATEMENT:  CREATE UNIQUE INDEX tbl_include_unique2_idx_unique ON tbl_include_unique2 using btree (c1, c2) INCLUDE (c3, c4);
2024-09-08 14:51:52.885 KST client backend[3075457] pg_regress/index_including ERROR:  could not create unique index "tbl_include_unique2_c1_c2_c3_c4_key"
2024-09-08 14:51:52.885 KST client backend[3075457] pg_regress/index_including DETAIL:  Key (c1, c2)=(1, 2) is duplicated.
2024-09-08 14:51:52.885 KST client backend[3075457] pg_regress/index_including STATEMENT:  ALTER TABLE tbl_include_unique2 add UNIQUE (c1, c2) INCLUDE (c3, c4);
2024-09-08 14:51:52.886 KST client backend[3075459] pg_regress/create_view ERROR:  cannot drop constraint view_base_table_pkey on table view_base_table because other objects depend on it
2024-09-08 14:51:52.886 KST client backend[3075459] pg_regress/create_view DETAIL:  view key_dependent_view depends on constraint view_base_table_pkey on table view_base_table
2024-09-08 14:51:52.886 KST client backend[3075459] pg_regress/create_view HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:52.886 KST client backend[3075459] pg_regress/create_view STATEMENT:  ALTER TABLE view_base_table DROP CONSTRAINT view_base_table_pkey;
2024-09-08 14:51:52.889 KST client backend[3075459] pg_regress/create_view ERROR:  cannot drop columns from view
2024-09-08 14:51:52.889 KST client backend[3075459] pg_regress/create_view STATEMENT:  CREATE OR REPLACE VIEW viewtest AS
		SELECT a FROM viewtest_tbl WHERE a <> 20;
2024-09-08 14:51:52.889 KST client backend[3075459] pg_regress/create_view ERROR:  cannot change name of view column "a" to "?column?"
2024-09-08 14:51:52.889 KST client backend[3075459] pg_regress/create_view HINT:  Use ALTER VIEW ... RENAME COLUMN ... to change name of view column instead.
2024-09-08 14:51:52.889 KST client backend[3075459] pg_regress/create_view STATEMENT:  CREATE OR REPLACE VIEW viewtest AS
		SELECT 1, * FROM viewtest_tbl;
2024-09-08 14:51:52.889 KST client backend[3075459] pg_regress/create_view ERROR:  cannot change data type of view column "b" from integer to numeric
2024-09-08 14:51:52.889 KST client backend[3075459] pg_regress/create_view STATEMENT:  CREATE OR REPLACE VIEW viewtest AS
		SELECT a, b::numeric, c, d FROM viewtest_tbl;
2024-09-08 14:51:52.889 KST client backend[3075459] pg_regress/create_view ERROR:  cannot change data type of view column "c" from numeric(10,1) to numeric(10,2)
2024-09-08 14:51:52.889 KST client backend[3075459] pg_regress/create_view STATEMENT:  CREATE OR REPLACE VIEW viewtest AS
		SELECT a, b, c::numeric(10,2), d FROM viewtest_tbl;
2024-09-08 14:51:52.890 KST client backend[3075459] pg_regress/create_view ERROR:  cannot change collation of view column "d" from "C" to "POSIX"
2024-09-08 14:51:52.890 KST client backend[3075459] pg_regress/create_view STATEMENT:  CREATE OR REPLACE VIEW viewtest AS
		SELECT a, b, c, d COLLATE "POSIX" FROM viewtest_tbl;
2024-09-08 14:51:52.890 KST client backend[3075457] pg_regress/index_including ERROR:  could not create unique index "tbl_include_box_pk_pkey"
2024-09-08 14:51:52.890 KST client backend[3075457] pg_regress/index_including DETAIL:  Key (c1, c2)=(1, 2) is duplicated.
2024-09-08 14:51:52.890 KST client backend[3075457] pg_regress/index_including STATEMENT:  ALTER TABLE tbl_include_box_pk add PRIMARY KEY (c1, c2) INCLUDE (c3, c4);
2024-09-08 14:51:52.892 KST client backend[3075457] pg_regress/index_including ERROR:  duplicate key value violates unique constraint "covering"
2024-09-08 14:51:52.892 KST client backend[3075457] pg_regress/index_including DETAIL:  Key (c1, c2)=(1, 2) already exists.
2024-09-08 14:51:52.892 KST client backend[3075457] pg_regress/index_including STATEMENT:  INSERT INTO tbl SELECT 1, 2, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x;
2024-09-08 14:51:52.893 KST client backend[3075459] pg_regress/create_view ERROR:  cannot create temporary relation in non-temporary schema
2024-09-08 14:51:52.893 KST client backend[3075459] pg_regress/create_view STATEMENT:  CREATE VIEW temp_view_test.v3_temp AS SELECT * FROM temp_table;
2024-09-08 14:51:52.893 KST client backend[3075459] pg_regress/create_view ERROR:  cannot create temporary relation in non-temporary schema
2024-09-08 14:51:52.893 KST client backend[3075459] pg_regress/create_view STATEMENT:  CREATE SCHEMA test_view_schema
	    CREATE TEMP VIEW testview AS SELECT 1;
2024-09-08 14:51:52.894 KST client backend[3075457] pg_regress/index_including ERROR:  duplicate key value violates unique constraint "covering"
2024-09-08 14:51:52.894 KST client backend[3075457] pg_regress/index_including DETAIL:  Key (c1, c2)=(1, 2) already exists.
2024-09-08 14:51:52.894 KST client backend[3075457] pg_regress/index_including STATEMENT:  INSERT INTO tbl SELECT 1, 2, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x;
2024-09-08 14:51:52.894 KST client backend[3075457] pg_regress/index_including ERROR:  null value in column "c2" of relation "tbl" violates not-null constraint
2024-09-08 14:51:52.894 KST client backend[3075457] pg_regress/index_including DETAIL:  Failing row contains (1, null, 3, (4,4),(4,4)).
2024-09-08 14:51:52.894 KST client backend[3075457] pg_regress/index_including STATEMENT:  INSERT INTO tbl SELECT 1, NULL, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x;
2024-09-08 14:51:52.897 KST client backend[3075457] pg_regress/index_including ERROR:  duplicate key value violates unique constraint "tbl_c1_c2_c3_c4_key"
2024-09-08 14:51:52.897 KST client backend[3075457] pg_regress/index_including DETAIL:  Key (c1, c2)=(1, 2) already exists.
2024-09-08 14:51:52.897 KST client backend[3075457] pg_regress/index_including STATEMENT:  INSERT INTO tbl SELECT 1, 2, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x;
2024-09-08 14:51:52.899 KST client backend[3075457] pg_regress/index_including ERROR:  duplicate key value violates unique constraint "tbl_pkey"
2024-09-08 14:51:52.899 KST client backend[3075457] pg_regress/index_including DETAIL:  Key (c1, c2)=(1, 2) already exists.
2024-09-08 14:51:52.899 KST client backend[3075457] pg_regress/index_including STATEMENT:  INSERT INTO tbl SELECT 1, 2, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x;
2024-09-08 14:51:52.899 KST client backend[3075457] pg_regress/index_including ERROR:  null value in column "c2" of relation "tbl" violates not-null constraint
2024-09-08 14:51:52.899 KST client backend[3075457] pg_regress/index_including DETAIL:  Failing row contains (1, null, 3, (4,4),(4,4)).
2024-09-08 14:51:52.899 KST client backend[3075457] pg_regress/index_including STATEMENT:  INSERT INTO tbl SELECT 1, NULL, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x;
2024-09-08 14:51:52.901 KST client backend[3075457] pg_regress/index_including ERROR:  conflicting key value violates exclusion constraint "tbl_c1_c3_c4_excl"
2024-09-08 14:51:52.901 KST client backend[3075457] pg_regress/index_including DETAIL:  Key (c1)=(1) conflicts with existing key (c1)=(1).
2024-09-08 14:51:52.901 KST client backend[3075457] pg_regress/index_including STATEMENT:  INSERT INTO tbl SELECT 1, 2, 3*x, box('4,4,4,4') FROM generate_series(1,10) AS x;
2024-09-08 14:51:52.913 KST client backend[3075459] pg_regress/create_view ERROR:  invalid value for boolean option "security_barrier": 100
2024-09-08 14:51:52.913 KST client backend[3075459] pg_regress/create_view STATEMENT:  CREATE VIEW mysecview5 WITH (security_barrier=100)	-- Error
	       AS SELECT * FROM tbl1 WHERE a > 100;
2024-09-08 14:51:52.913 KST client backend[3075459] pg_regress/create_view ERROR:  unrecognized parameter "invalid_option"
2024-09-08 14:51:52.913 KST client backend[3075459] pg_regress/create_view STATEMENT:  CREATE VIEW mysecview6 WITH (invalid_option)		-- Error
	       AS SELECT * FROM tbl1 WHERE a < 100;
2024-09-08 14:51:52.913 KST client backend[3075457] pg_regress/index_including ERROR:  cannot alter statistics on non-expression column "c1" of index "tbl_idx"
2024-09-08 14:51:52.913 KST client backend[3075457] pg_regress/index_including HINT:  Alter statistics on table column instead.
2024-09-08 14:51:52.913 KST client backend[3075457] pg_regress/index_including STATEMENT:  ALTER INDEX tbl_idx ALTER COLUMN 1 SET STATISTICS 1000;
2024-09-08 14:51:52.913 KST client backend[3075457] pg_regress/index_including ERROR:  cannot alter statistics on included column "c2" of index "tbl_idx"
2024-09-08 14:51:52.913 KST client backend[3075457] pg_regress/index_including STATEMENT:  ALTER INDEX tbl_idx ALTER COLUMN 3 SET STATISTICS 1000;
2024-09-08 14:51:52.913 KST client backend[3075457] pg_regress/index_including ERROR:  column number 4 of relation "tbl_idx" does not exist
2024-09-08 14:51:52.913 KST client backend[3075457] pg_regress/index_including STATEMENT:  ALTER INDEX tbl_idx ALTER COLUMN 4 SET STATISTICS 1000;
2024-09-08 14:51:52.914 KST client backend[3075459] pg_regress/create_view ERROR:  invalid value for boolean option "security_invoker": 100
2024-09-08 14:51:52.914 KST client backend[3075459] pg_regress/create_view STATEMENT:  CREATE VIEW mysecview10 WITH (security_invoker=100)	-- Error
	       AS SELECT * FROM tbl1 WHERE a <> 100;
2024-09-08 14:51:52.920 KST client backend[3075456] pg_regress/create_index ERROR:  relation "six_wrong" does not exist
2024-09-08 14:51:52.920 KST client backend[3075456] pg_regress/create_index STATEMENT:  COMMENT ON INDEX six_wrong IS 'bad index';
2024-09-08 14:51:52.942 KST client backend[3075457] pg_regress/index_including ERROR:  relation "tbl_c1_c2_c3_c4_key" does not exist
2024-09-08 14:51:52.942 KST client backend[3075457] pg_regress/index_including STATEMENT:  REINDEX INDEX tbl_c1_c2_c3_c4_key;
2024-09-08 14:51:52.944 KST client backend[3075457] pg_regress/index_including ERROR:  access method "brin" does not support included columns
2024-09-08 14:51:52.944 KST client backend[3075457] pg_regress/index_including STATEMENT:  CREATE INDEX on tbl USING brin(c1, c2) INCLUDE (c3, c4);
2024-09-08 14:51:52.945 KST client backend[3075457] pg_regress/index_including ERROR:  access method "gin" does not support included columns
2024-09-08 14:51:52.945 KST client backend[3075457] pg_regress/index_including STATEMENT:  CREATE INDEX on tbl USING gin(c1, c2) INCLUDE (c3, c4);
2024-09-08 14:51:52.945 KST client backend[3075457] pg_regress/index_including ERROR:  access method "hash" does not support included columns
2024-09-08 14:51:52.945 KST client backend[3075457] pg_regress/index_including STATEMENT:  CREATE INDEX on tbl USING hash(c1, c2) INCLUDE (c3, c4);
2024-09-08 14:51:52.948 KST client backend[3075457] pg_regress/index_including ERROR:  duplicate key value violates unique constraint "tbl_idx_unique"
2024-09-08 14:51:52.948 KST client backend[3075457] pg_regress/index_including DETAIL:  Key (c1, c2)=(1, 2) already exists.
2024-09-08 14:51:52.948 KST client backend[3075457] pg_regress/index_including STATEMENT:  UPDATE tbl SET c2 = 2 WHERE c1 = 1;
2024-09-08 14:51:52.978 KST client backend[3075459] pg_regress/create_view ERROR:  cannot drop column f3 of table tt14t because other objects depend on it
2024-09-08 14:51:52.978 KST client backend[3075459] pg_regress/create_view DETAIL:  view tt14v depends on column f3 of table tt14t
2024-09-08 14:51:52.978 KST client backend[3075459] pg_regress/create_view HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:52.978 KST client backend[3075459] pg_regress/create_view STATEMENT:  alter table tt14t drop column f3;
2024-09-08 14:51:52.980 KST client backend[3075459] pg_regress/create_view ERROR:  attribute 3 of type record has been dropped
2024-09-08 14:51:52.980 KST client backend[3075459] pg_regress/create_view STATEMENT:  select * from tt14v;
2024-09-08 14:51:52.980 KST client backend[3075459] pg_regress/create_view ERROR:  cannot alter type of a column used by a view or rule
2024-09-08 14:51:52.980 KST client backend[3075459] pg_regress/create_view DETAIL:  rule _RETURN on view tt14v depends on column "f4"
2024-09-08 14:51:52.980 KST client backend[3075459] pg_regress/create_view STATEMENT:  alter table tt14t alter column f4 type integer using f4::integer;
2024-09-08 14:51:52.982 KST client backend[3075459] pg_regress/create_view ERROR:  attribute 4 of type record has wrong type
2024-09-08 14:51:52.982 KST client backend[3075459] pg_regress/create_view DETAIL:  Table has type integer, but query expects text.
2024-09-08 14:51:52.982 KST client backend[3075459] pg_regress/create_view STATEMENT:  select * from tt14v;
2024-09-08 14:51:52.989 KST client backend[3075459] pg_regress/create_view ERROR:  operator does not exist: text = text[] at character 20
2024-09-08 14:51:52.989 KST client backend[3075459] pg_regress/create_view HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:52.989 KST client backend[3075459] pg_regress/create_view STATEMENT:  select 'foo'::text = any((select array['abc','def','foo']::text[]));
2024-09-08 14:51:53.017 KST client backend[3075460] pg_regress/index_including_gist ERROR:  conflicting key value violates exclusion constraint "tbl_gist_c4_c1_c2_c3_excl"
2024-09-08 14:51:53.017 KST client backend[3075460] pg_regress/index_including_gist DETAIL:  Key (c4)=((4,5),(2,3)) conflicts with existing key (c4)=((2,3),(1,2)).
2024-09-08 14:51:53.017 KST client backend[3075460] pg_regress/index_including_gist STATEMENT:  INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(x,x+1),point(2*x,2*x+1)) FROM generate_series(1,10) AS x;
2024-09-08 14:51:53.042 KST client backend[3075456] pg_regress/create_index ERROR:  duplicate key value violates unique constraint "unique_idx2"
2024-09-08 14:51:53.042 KST client backend[3075456] pg_regress/create_index DETAIL:  Key (i)=(null) already exists.
2024-09-08 14:51:53.042 KST client backend[3075456] pg_regress/create_index STATEMENT:  INSERT INTO unique_tbl (t) VALUES ('seven');
2024-09-08 14:51:53.043 KST client backend[3075456] pg_regress/create_index ERROR:  could not create unique index "unique_idx4"
2024-09-08 14:51:53.043 KST client backend[3075456] pg_regress/create_index DETAIL:  Key (i)=(null) is duplicated.
2024-09-08 14:51:53.043 KST client backend[3075456] pg_regress/create_index STATEMENT:  CREATE UNIQUE INDEX unique_idx4 ON unique_tbl (i) NULLS NOT DISTINCT;
2024-09-08 14:51:53.052 KST client backend[3075456] pg_regress/create_index ERROR:  duplicate key value violates unique constraint "func_index_index"
2024-09-08 14:51:53.052 KST client backend[3075456] pg_regress/create_index DETAIL:  Key (textcat(f1, f2))=(ABCDEF) already exists.
2024-09-08 14:51:53.052 KST client backend[3075456] pg_regress/create_index STATEMENT:  INSERT INTO func_index_heap VALUES('ABCD', 'EF');
2024-09-08 14:51:53.058 KST client backend[3075456] pg_regress/create_index ERROR:  duplicate key value violates unique constraint "func_index_index"
2024-09-08 14:51:53.058 KST client backend[3075456] pg_regress/create_index DETAIL:  Key ((f1 || f2))=(ABCDEF) already exists.
2024-09-08 14:51:53.058 KST client backend[3075456] pg_regress/create_index STATEMENT:  INSERT INTO func_index_heap VALUES('ABCD', 'EF');
2024-09-08 14:51:53.062 KST client backend[3075456] pg_regress/create_index ERROR:  column "row" has pseudo-type record
2024-09-08 14:51:53.062 KST client backend[3075456] pg_regress/create_index STATEMENT:  create index on func_index_heap ((f1 || f2), (row(f1, f2)));
2024-09-08 14:51:53.063 KST client backend[3075456] pg_regress/create_index ERROR:  duplicate key value violates unique constraint "covering_index_index"
2024-09-08 14:51:53.063 KST client backend[3075456] pg_regress/create_index DETAIL:  Key (f1, f2)=(1, 2) already exists.
2024-09-08 14:51:53.063 KST client backend[3075456] pg_regress/create_index STATEMENT:  INSERT INTO covering_index_heap VALUES(1,2,'BBB');
2024-09-08 14:51:53.084 KST client backend[3075456] pg_regress/create_index ERROR:  duplicate key value violates unique constraint "concur_index2"
2024-09-08 14:51:53.084 KST client backend[3075456] pg_regress/create_index DETAIL:  Key (f1)=(b) already exists.
2024-09-08 14:51:53.084 KST client backend[3075456] pg_regress/create_index STATEMENT:  INSERT INTO concur_heap VALUES ('b','x');
2024-09-08 14:51:53.084 KST client backend[3075456] pg_regress/create_index ERROR:  could not create unique index "concur_index3"
2024-09-08 14:51:53.084 KST client backend[3075456] pg_regress/create_index DETAIL:  Key (f2)=(b) is duplicated.
2024-09-08 14:51:53.084 KST client backend[3075456] pg_regress/create_index STATEMENT:  CREATE UNIQUE INDEX CONCURRENTLY concur_index3 ON concur_heap(f2);
2024-09-08 14:51:53.103 KST client backend[3075456] pg_regress/create_index ERROR:  CREATE INDEX CONCURRENTLY cannot run inside a transaction block
2024-09-08 14:51:53.103 KST client backend[3075456] pg_regress/create_index STATEMENT:  CREATE INDEX CONCURRENTLY concur_index7 ON concur_heap(f1);
2024-09-08 14:51:53.128 KST client backend[3075456] pg_regress/create_index ERROR:  could not create unique index "concur_index3"
2024-09-08 14:51:53.128 KST client backend[3075456] pg_regress/create_index DETAIL:  Key (f2)=(b) is duplicated.
2024-09-08 14:51:53.128 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX TABLE concur_heap;
2024-09-08 14:51:53.142 KST client backend[3075456] pg_regress/create_index ERROR:  CREATE INDEX CONCURRENTLY cannot run inside a transaction block
2024-09-08 14:51:53.142 KST client backend[3075456] pg_regress/create_index STATEMENT:  CREATE INDEX CONCURRENTLY concur_temp_ind ON concur_temp(f1);
2024-09-08 14:51:53.153 KST client backend[3075456] pg_regress/create_index ERROR:  DROP INDEX CONCURRENTLY does not support dropping multiple objects
2024-09-08 14:51:53.153 KST client backend[3075456] pg_regress/create_index STATEMENT:  DROP INDEX CONCURRENTLY "concur_index2", "concur_index3";
2024-09-08 14:51:53.153 KST client backend[3075456] pg_regress/create_index ERROR:  DROP INDEX CONCURRENTLY cannot run inside a transaction block
2024-09-08 14:51:53.153 KST client backend[3075456] pg_regress/create_index STATEMENT:  DROP INDEX CONCURRENTLY "concur_index5";
2024-09-08 14:51:53.168 KST client backend[3075456] pg_regress/create_index ERROR:  cannot drop index cwi_replaced_pkey because constraint cwi_replaced_pkey on table cwi_test requires it
2024-09-08 14:51:53.168 KST client backend[3075456] pg_regress/create_index HINT:  You can drop constraint cwi_replaced_pkey on table cwi_test instead.
2024-09-08 14:51:53.168 KST client backend[3075456] pg_regress/create_index STATEMENT:  DROP INDEX cwi_replaced_pkey;
2024-09-08 14:51:53.168 KST client backend[3075456] pg_regress/create_index ERROR:  index "cwi_uniq3_idx" column number 1 does not have default sorting behavior at character 26
2024-09-08 14:51:53.168 KST client backend[3075456] pg_regress/create_index DETAIL:  Cannot create a primary key or unique constraint using such an index.
2024-09-08 14:51:53.168 KST client backend[3075456] pg_regress/create_index STATEMENT:  ALTER TABLE cwi_test ADD UNIQUE USING INDEX cwi_uniq3_idx;
2024-09-08 14:51:53.169 KST client backend[3075456] pg_regress/create_index ERROR:  index "cwi_uniq4_idx" column number 1 does not have default sorting behavior at character 26
2024-09-08 14:51:53.169 KST client backend[3075456] pg_regress/create_index DETAIL:  Cannot create a primary key or unique constraint using such an index.
2024-09-08 14:51:53.169 KST client backend[3075456] pg_regress/create_index STATEMENT:  ALTER TABLE cwi_test ADD UNIQUE USING INDEX cwi_uniq4_idx;
2024-09-08 14:51:53.170 KST client backend[3075456] pg_regress/create_index ERROR:  ALTER TABLE / ADD CONSTRAINT USING INDEX is not supported on partitioned tables
2024-09-08 14:51:53.170 KST client backend[3075456] pg_regress/create_index STATEMENT:  alter table cwi_test add primary key using index cwi_test_a_idx ;
2024-09-08 14:51:53.171 KST client backend[3075456] pg_regress/create_index ERROR:  primary keys cannot use NULLS NOT DISTINCT indexes
2024-09-08 14:51:53.171 KST client backend[3075456] pg_regress/create_index STATEMENT:  ALTER TABLE cwi_test ADD PRIMARY KEY USING INDEX cwi_a_nnd;
2024-09-08 14:51:53.172 KST client backend[3075456] pg_regress/create_index ERROR:  relation "syscolcol_table" does not exist
2024-09-08 14:51:53.172 KST client backend[3075456] pg_regress/create_index STATEMENT:  CREATE INDEX ON syscolcol_table (ctid);
2024-09-08 14:51:53.172 KST client backend[3075456] pg_regress/create_index ERROR:  index creation on system columns is not supported
2024-09-08 14:51:53.172 KST client backend[3075456] pg_regress/create_index STATEMENT:  CREATE INDEX ON syscol_table ((ctid >= '(1000,0)'));
2024-09-08 14:51:53.172 KST client backend[3075456] pg_regress/create_index ERROR:  index creation on system columns is not supported
2024-09-08 14:51:53.172 KST client backend[3075456] pg_regress/create_index STATEMENT:  CREATE INDEX ON syscol_table (a) WHERE ctid >= '(1000,0)';
2024-09-08 14:51:53.218 KST client backend[3075456] pg_regress/create_index ERROR:  concurrent index creation for exclusion constraints is not supported
2024-09-08 14:51:53.218 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX INDEX CONCURRENTLY  concur_reindex_tab3_c2_excl;
2024-09-08 14:51:53.218 KST client backend[3075456] pg_regress/create_index WARNING:  cannot reindex exclusion constraint index "public.concur_reindex_tab3_c2_excl" concurrently, skipping
2024-09-08 14:51:53.219 KST client backend[3075456] pg_regress/create_index ERROR:  conflicting key value violates exclusion constraint "concur_reindex_tab3_c2_excl"
2024-09-08 14:51:53.219 KST client backend[3075456] pg_regress/create_index DETAIL:  Key (c2)=([2,5)) conflicts with existing key (c2)=([1,3)).
2024-09-08 14:51:53.219 KST client backend[3075456] pg_regress/create_index STATEMENT:  INSERT INTO concur_reindex_tab3 VALUES  (4, '[2,4]');
2024-09-08 14:51:53.247 KST client backend[3075456] pg_regress/create_index ERROR:  "concur_reindex_part_index" is not a table or materialized view
2024-09-08 14:51:53.247 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX TABLE concur_reindex_part_index;
2024-09-08 14:51:53.247 KST client backend[3075456] pg_regress/create_index ERROR:  "concur_reindex_part_index" is not a table or materialized view
2024-09-08 14:51:53.247 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX TABLE CONCURRENTLY concur_reindex_part_index;
2024-09-08 14:51:53.248 KST client backend[3075456] pg_regress/create_index ERROR:  "concur_reindex_part_index_10" is not a table or materialized view
2024-09-08 14:51:53.248 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX TABLE concur_reindex_part_index_10;
2024-09-08 14:51:53.248 KST client backend[3075456] pg_regress/create_index ERROR:  "concur_reindex_part_index_10" is not a table or materialized view
2024-09-08 14:51:53.248 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX TABLE CONCURRENTLY concur_reindex_part_index_10;
2024-09-08 14:51:53.248 KST client backend[3075456] pg_regress/create_index ERROR:  REINDEX INDEX cannot run inside a transaction block
2024-09-08 14:51:53.248 KST client backend[3075456] pg_regress/create_index CONTEXT:  while reindexing partitioned index "public.concur_reindex_part_index"
2024-09-08 14:51:53.248 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX INDEX concur_reindex_part_index;
2024-09-08 14:51:53.254 KST client backend[3075456] pg_regress/create_index ERROR:  "concur_reindex_part" is not an index
2024-09-08 14:51:53.254 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX INDEX concur_reindex_part;
2024-09-08 14:51:53.254 KST client backend[3075456] pg_regress/create_index ERROR:  "concur_reindex_part" is not an index
2024-09-08 14:51:53.254 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX INDEX CONCURRENTLY concur_reindex_part;
2024-09-08 14:51:53.254 KST client backend[3075456] pg_regress/create_index ERROR:  "concur_reindex_part_10" is not an index
2024-09-08 14:51:53.254 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX INDEX concur_reindex_part_10;
2024-09-08 14:51:53.254 KST client backend[3075456] pg_regress/create_index ERROR:  "concur_reindex_part_10" is not an index
2024-09-08 14:51:53.254 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX INDEX CONCURRENTLY concur_reindex_part_10;
2024-09-08 14:51:53.254 KST client backend[3075456] pg_regress/create_index ERROR:  REINDEX TABLE cannot run inside a transaction block
2024-09-08 14:51:53.254 KST client backend[3075456] pg_regress/create_index CONTEXT:  while reindexing partitioned table "public.concur_reindex_part"
2024-09-08 14:51:53.254 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX TABLE concur_reindex_part;
2024-09-08 14:51:53.260 KST client backend[3075456] pg_regress/create_index ERROR:  REINDEX CONCURRENTLY cannot run inside a transaction block
2024-09-08 14:51:53.260 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX TABLE CONCURRENTLY concur_reindex_tab;
2024-09-08 14:51:53.260 KST client backend[3075456] pg_regress/create_index ERROR:  cannot reindex system catalogs concurrently
2024-09-08 14:51:53.260 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX TABLE CONCURRENTLY pg_class;
2024-09-08 14:51:53.261 KST client backend[3075456] pg_regress/create_index ERROR:  cannot reindex system catalogs concurrently
2024-09-08 14:51:53.261 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX INDEX CONCURRENTLY pg_class_oid_index;
2024-09-08 14:51:53.261 KST client backend[3075456] pg_regress/create_index ERROR:  cannot reindex system catalogs concurrently
2024-09-08 14:51:53.261 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX TABLE CONCURRENTLY pg_toast.pg_toast_1260;
2024-09-08 14:51:53.261 KST client backend[3075456] pg_regress/create_index ERROR:  cannot reindex system catalogs concurrently
2024-09-08 14:51:53.261 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX INDEX CONCURRENTLY pg_toast.pg_toast_1260_index;
2024-09-08 14:51:53.261 KST client backend[3075456] pg_regress/create_index ERROR:  cannot reindex system catalogs concurrently
2024-09-08 14:51:53.261 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX SYSTEM CONCURRENTLY postgres;
2024-09-08 14:51:53.261 KST client backend[3075456] pg_regress/create_index ERROR:  cannot reindex system catalogs concurrently
2024-09-08 14:51:53.261 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX (CONCURRENTLY) SYSTEM postgres;
2024-09-08 14:51:53.261 KST client backend[3075456] pg_regress/create_index ERROR:  cannot reindex system catalogs concurrently
2024-09-08 14:51:53.261 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX (CONCURRENTLY) SYSTEM;
2024-09-08 14:51:53.261 KST client backend[3075456] pg_regress/create_index WARNING:  cannot reindex system catalogs concurrently, skipping all
2024-09-08 14:51:53.261 KST client backend[3075456] pg_regress/create_index ERROR:  can only reindex the currently open database
2024-09-08 14:51:53.261 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX DATABASE not_current_database;
2024-09-08 14:51:53.268 KST client backend[3075456] pg_regress/create_index ERROR:  could not create unique index "concur_reindex_ind5"
2024-09-08 14:51:53.268 KST client backend[3075456] pg_regress/create_index DETAIL:  Key (c1)=(1) is duplicated.
2024-09-08 14:51:53.268 KST client backend[3075456] pg_regress/create_index STATEMENT:  CREATE UNIQUE INDEX CONCURRENTLY concur_reindex_ind5 ON concur_reindex_tab4 (c1);
2024-09-08 14:51:53.268 KST client backend[3075456] pg_regress/create_index ERROR:  could not create unique index "concur_reindex_ind5_ccnew"
2024-09-08 14:51:53.268 KST client backend[3075456] pg_regress/create_index DETAIL:  Key (c1)=(1) is duplicated.
2024-09-08 14:51:53.268 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX INDEX CONCURRENTLY concur_reindex_ind5;
2024-09-08 14:51:53.271 KST client backend[3075456] pg_regress/create_index WARNING:  cannot reindex invalid index "public.concur_reindex_ind5" concurrently, skipping
2024-09-08 14:51:53.287 KST client backend[3075456] pg_regress/create_index ERROR:  REINDEX CONCURRENTLY cannot run inside a transaction block
2024-09-08 14:51:53.287 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX INDEX CONCURRENTLY concur_temp_ind_1;
2024-09-08 14:51:53.299 KST client backend[3075456] pg_regress/create_index ERROR:  REINDEX CONCURRENTLY cannot run inside a transaction block
2024-09-08 14:51:53.299 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX INDEX CONCURRENTLY concur_temp_ind_3;
2024-09-08 14:51:53.317 KST client backend[3075456] pg_regress/create_index ERROR:  schema "schema_to_reindex" does not exist
2024-09-08 14:51:53.317 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX SCHEMA schema_to_reindex;
2024-09-08 14:51:53.329 KST client backend[3075456] pg_regress/create_index ERROR:  REINDEX SCHEMA cannot run inside a transaction block
2024-09-08 14:51:53.329 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX SCHEMA schema_to_reindex;
2024-09-08 14:51:53.333 KST client backend[3075456] pg_regress/create_index ERROR:  must be owner of schema schema_to_reindex
2024-09-08 14:51:53.333 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX SCHEMA schema_to_reindex;
2024-09-08 14:51:53.333 KST client backend[3075456] pg_regress/create_index ERROR:  must be owner of table pg_toast_1260
2024-09-08 14:51:53.333 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX TABLE pg_toast.pg_toast_1260;
2024-09-08 14:51:53.333 KST client backend[3075456] pg_regress/create_index ERROR:  must be owner of index pg_toast_1260_index
2024-09-08 14:51:53.333 KST client backend[3075456] pg_regress/create_index STATEMENT:  REINDEX INDEX pg_toast.pg_toast_1260_index;
2024-09-08 14:51:53.355 KST client backend[3075481] pg_regress/create_aggregate ERROR:  aggregate newavg_wrong(integer) does not exist
2024-09-08 14:51:53.355 KST client backend[3075481] pg_regress/create_aggregate STATEMENT:  COMMENT ON AGGREGATE newavg_wrong (int4) IS 'an agg comment';
2024-09-08 14:51:53.355 KST client backend[3075481] pg_regress/create_aggregate ERROR:  aggregate nosuchagg(*) does not exist
2024-09-08 14:51:53.355 KST client backend[3075481] pg_regress/create_aggregate STATEMENT:  COMMENT ON AGGREGATE nosuchagg (*) IS 'should fail';
2024-09-08 14:51:53.357 KST client backend[3075481] pg_regress/create_aggregate ERROR:  function least_accum(bigint, bigint) requires run-time type coercion
2024-09-08 14:51:53.357 KST client backend[3075481] pg_regress/create_aggregate STATEMENT:  create aggregate least_agg(int4) (
	  stype = int8, sfunc = least_accum
	);
2024-09-08 14:51:53.357 KST client backend[3075481] pg_regress/create_aggregate ERROR:  function least_accum(bigint, bigint) requires run-time type coercion
2024-09-08 14:51:53.357 KST client backend[3075481] pg_regress/create_aggregate STATEMENT:  create aggregate least_agg(int4) (
	  stype = int8, sfunc = least_accum
	);
2024-09-08 14:51:53.358 KST client backend[3075490] pg_regress/create_cast ERROR:  function casttestfunc(text) does not exist at character 8
2024-09-08 14:51:53.358 KST client backend[3075490] pg_regress/create_cast HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:53.358 KST client backend[3075490] pg_regress/create_cast STATEMENT:  SELECT casttestfunc('foo'::text);
2024-09-08 14:51:53.358 KST client backend[3075490] pg_regress/create_cast ERROR:  function casttestfunc(text) does not exist at character 8
2024-09-08 14:51:53.358 KST client backend[3075490] pg_regress/create_cast HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:53.358 KST client backend[3075490] pg_regress/create_cast STATEMENT:  SELECT casttestfunc('foo'::text);
2024-09-08 14:51:53.358 KST client backend[3075494] pg_regress/typed_table ERROR:  type "nothing" does not exist
2024-09-08 14:51:53.358 KST client backend[3075494] pg_regress/typed_table STATEMENT:  CREATE TABLE ttable1 OF nothing;
2024-09-08 14:51:53.359 KST client backend[3075490] pg_regress/create_cast ERROR:  cannot cast type integer to casttesttype at character 18
2024-09-08 14:51:53.359 KST client backend[3075490] pg_regress/create_cast STATEMENT:  SELECT 1234::int4::casttesttype;
2024-09-08 14:51:53.359 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  table "test_exists" does not exist
2024-09-08 14:51:53.359 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP TABLE test_exists;
2024-09-08 14:51:53.360 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  view "test_view_exists" does not exist
2024-09-08 14:51:53.360 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP VIEW test_view_exists;
2024-09-08 14:51:53.361 KST client backend[3075488] pg_regress/constraints ERROR:  syntax error at or near ")" at character 45
2024-09-08 14:51:53.361 KST client backend[3075488] pg_regress/constraints STATEMENT:  CREATE TABLE error_tbl (i int DEFAULT (100, ));
2024-09-08 14:51:53.361 KST client backend[3075488] pg_regress/constraints ERROR:  syntax error at or near "IN" at character 43
2024-09-08 14:51:53.361 KST client backend[3075488] pg_regress/constraints STATEMENT:  CREATE TABLE error_tbl (b1 bool DEFAULT 1 IN (1, 2));
2024-09-08 14:51:53.361 KST client backend[3075481] pg_regress/create_aggregate ERROR:  must specify both or neither of serialization and deserialization functions
2024-09-08 14:51:53.361 KST client backend[3075481] pg_regress/create_aggregate STATEMENT:  CREATE AGGREGATE myavg (numeric)
	(
		stype = internal,
		sfunc = numeric_avg_accum,
		serialfunc = numeric_avg_serialize
	);
2024-09-08 14:51:53.361 KST client backend[3075481] pg_regress/create_aggregate ERROR:  function numeric_avg_deserialize(internal) does not exist
2024-09-08 14:51:53.361 KST client backend[3075481] pg_regress/create_aggregate STATEMENT:  CREATE AGGREGATE myavg (numeric)
	(
		stype = internal,
		sfunc = numeric_avg_accum,
		serialfunc = numeric_avg_deserialize,
		deserialfunc = numeric_avg_deserialize
	);
2024-09-08 14:51:53.361 KST client backend[3075500] pg_regress/create_am ERROR:  function int4in(internal) does not exist
2024-09-08 14:51:53.361 KST client backend[3075500] pg_regress/create_am STATEMENT:  CREATE ACCESS METHOD bogus TYPE INDEX HANDLER int4in;
2024-09-08 14:51:53.361 KST client backend[3075485] pg_regress/create_function_sql ERROR:  only superuser can define a leakproof function
2024-09-08 14:51:53.361 KST client backend[3075485] pg_regress/create_function_sql STATEMENT:  ALTER FUNCTION functest_E_2(int) LEAKPROOF;
2024-09-08 14:51:53.361 KST client backend[3075481] pg_regress/create_aggregate ERROR:  function numeric_avg_serialize(bytea, internal) does not exist
2024-09-08 14:51:53.361 KST client backend[3075481] pg_regress/create_aggregate STATEMENT:  CREATE AGGREGATE myavg (numeric)
	(
		stype = internal,
		sfunc = numeric_avg_accum,
		serialfunc = numeric_avg_serialize,
		deserialfunc = numeric_avg_serialize
	);
2024-09-08 14:51:53.361 KST client backend[3075500] pg_regress/create_am ERROR:  function heap_tableam_handler must return type index_am_handler
2024-09-08 14:51:53.361 KST client backend[3075500] pg_regress/create_am STATEMENT:  CREATE ACCESS METHOD bogus TYPE INDEX HANDLER heap_tableam_handler;
2024-09-08 14:51:53.361 KST client backend[3075485] pg_regress/create_function_sql ERROR:  only superuser can define a leakproof function
2024-09-08 14:51:53.361 KST client backend[3075485] pg_regress/create_function_sql STATEMENT:  CREATE FUNCTION functest_E_3(int) RETURNS bool LANGUAGE 'sql'
	       LEAKPROOF AS 'SELECT $1 < 200';
2024-09-08 14:51:53.361 KST client backend[3075481] pg_regress/create_aggregate ERROR:  function int4larger(internal, internal) does not exist
2024-09-08 14:51:53.361 KST client backend[3075481] pg_regress/create_aggregate STATEMENT:  CREATE AGGREGATE myavg (numeric)
	(
		stype = internal,
		sfunc = numeric_avg_accum,
		serialfunc = numeric_avg_serialize,
		deserialfunc = numeric_avg_deserialize,
		combinefunc = int4larger
	);
2024-09-08 14:51:53.361 KST client backend[3075500] pg_regress/create_am ERROR:  data type box has no default operator class for access method "gist2"
2024-09-08 14:51:53.361 KST client backend[3075500] pg_regress/create_am HINT:  You must specify an operator class for the index or define a default operator class for the data type.
2024-09-08 14:51:53.361 KST client backend[3075500] pg_regress/create_am STATEMENT:  CREATE INDEX grect2ind2 ON fast_emp4000 USING gist2 (home_base);
2024-09-08 14:51:53.362 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  view "test_view_exists" does not exist
2024-09-08 14:51:53.362 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP VIEW test_view_exists;
2024-09-08 14:51:53.362 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  index "test_index_exists" does not exist
2024-09-08 14:51:53.362 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP INDEX test_index_exists;
2024-09-08 14:51:53.362 KST client backend[3075502] pg_regress/errors ERROR:  relation "nonesuch" does not exist at character 15
2024-09-08 14:51:53.362 KST client backend[3075502] pg_regress/errors STATEMENT:  select * from nonesuch;
2024-09-08 14:51:53.362 KST client backend[3075502] pg_regress/errors ERROR:  column "nonesuch" does not exist at character 8
2024-09-08 14:51:53.362 KST client backend[3075502] pg_regress/errors STATEMENT:  select nonesuch from pg_database;
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "from" at character 17
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors STATEMENT:  select distinct from pg_database;
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors ERROR:  column "nonesuch" does not exist at character 33
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors STATEMENT:  select * from pg_database where nonesuch = pg_database.datname;
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors ERROR:  column "nonesuch" does not exist at character 55
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors STATEMENT:  select * from pg_database where pg_database.datname = nonesuch;
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors ERROR:  column "foobar" does not exist at character 21
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors STATEMENT:  select distinct on (foobar) * from pg_database;
2024-09-08 14:51:53.363 KST client backend[3075481] pg_regress/create_aggregate ERROR:  cannot change return type of existing function
2024-09-08 14:51:53.363 KST client backend[3075481] pg_regress/create_aggregate HINT:  Use DROP AGGREGATE myavg(numeric) first.
2024-09-08 14:51:53.363 KST client backend[3075481] pg_regress/create_aggregate STATEMENT:  CREATE OR REPLACE AGGREGATE myavg (numeric)
	(
		stype = numeric,
		sfunc = numeric_add,
		finalfunc = numeric_out
	);
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors ERROR:  FOR UPDATE is not allowed with GROUP BY clause
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors STATEMENT:  select null from pg_database group by datname for update;
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors ERROR:  FOR UPDATE is not allowed with GROUP BY clause
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors STATEMENT:  select null from pg_database group by grouping sets (()) for update;
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near ";" at character 12
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors STATEMENT:  delete from;
2024-09-08 14:51:53.363 KST client backend[3075481] pg_regress/create_aggregate ERROR:  cannot change routine kind
2024-09-08 14:51:53.363 KST client backend[3075481] pg_regress/create_aggregate DETAIL:  "myavg" is an ordinary aggregate function.
2024-09-08 14:51:53.363 KST client backend[3075481] pg_regress/create_aggregate STATEMENT:  CREATE OR REPLACE AGGREGATE myavg (order by numeric)
	(
		stype = numeric,
		sfunc = numeric_add
	);
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors ERROR:  relation "nonesuch" does not exist at character 13
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors STATEMENT:  delete from nonesuch;
2024-09-08 14:51:53.363 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "check_tbl" violates check constraint "check_con"
2024-09-08 14:51:53.363 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (3).
2024-09-08 14:51:53.363 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO CHECK_TBL VALUES (3);
2024-09-08 14:51:53.363 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  index "test_index_exists" does not exist
2024-09-08 14:51:53.363 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP INDEX test_index_exists;
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near ";" at character 11
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors STATEMENT:  drop table;
2024-09-08 14:51:53.363 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "check_tbl" violates check constraint "check_con"
2024-09-08 14:51:53.363 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (2).
2024-09-08 14:51:53.363 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO CHECK_TBL VALUES (2);
2024-09-08 14:51:53.363 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  sequence "test_sequence_exists" does not exist
2024-09-08 14:51:53.363 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP SEQUENCE test_sequence_exists;
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors ERROR:  table "nonesuch" does not exist
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors STATEMENT:  drop table nonesuch;
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near ";" at character 19
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors STATEMENT:  alter table rename;
2024-09-08 14:51:53.363 KST client backend[3075481] pg_regress/create_aggregate ERROR:  cannot change routine kind
2024-09-08 14:51:53.363 KST client backend[3075481] pg_regress/create_aggregate DETAIL:  "sum3" is a function.
2024-09-08 14:51:53.363 KST client backend[3075481] pg_regress/create_aggregate STATEMENT:  CREATE OR REPLACE AGGREGATE sum3 (int8,int8,int8)
	(
		stype = int8,
		sfunc = sum4
	);
2024-09-08 14:51:53.363 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "check_tbl" violates check constraint "check_con"
2024-09-08 14:51:53.363 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (1).
2024-09-08 14:51:53.363 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO CHECK_TBL VALUES (1);
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors ERROR:  relation "nonesuch" does not exist
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors STATEMENT:  alter table nonesuch rename to newnonesuch;
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors ERROR:  relation "nonesuch" does not exist
2024-09-08 14:51:53.363 KST client backend[3075502] pg_regress/errors STATEMENT:  alter table nonesuch rename to stud_emp;
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors ERROR:  relation "student" already exists
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors STATEMENT:  alter table stud_emp rename to student;
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate ERROR:  parameter "parallel" must be SAFE, RESTRICTED, or UNSAFE
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate STATEMENT:  CREATE AGGREGATE mysum (int)
	(
		stype = int,
		sfunc = int4pl,
		parallel = pear
	);
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors ERROR:  relation "stud_emp" already exists
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors STATEMENT:  alter table stud_emp rename to stud_emp;
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors ERROR:  relation "nonesuchrel" does not exist
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors STATEMENT:  alter table nonesuchrel rename column nonesuchatt to newnonesuchatt;
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate ERROR:  strictness of aggregate's forward and inverse transition functions must match
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate STATEMENT:  CREATE AGGREGATE invalidsumdouble (float8)
	(
	    stype = float8,
	    sfunc = float8pl,
	    mstype = float8,
	    msfunc = float8pl,
	    minvfunc = float8mi_n
	);
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors ERROR:  column "nonesuchatt" does not exist
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors STATEMENT:  alter table emp rename column nonesuchatt to newnonesuchatt;
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors ERROR:  column "manager" of relation "stud_emp" already exists
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors STATEMENT:  alter table emp rename column salary to manager;
2024-09-08 14:51:53.364 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  sequence "test_sequence_exists" does not exist
2024-09-08 14:51:53.364 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP SEQUENCE test_sequence_exists;
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate ERROR:  return type of inverse transition function float8mi_int is not double precision
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate STATEMENT:  CREATE AGGREGATE wrongreturntype (float8)
	(
	    stype = float8,
	    sfunc = float8pl,
	    mstype = float8,
	    msfunc = float8pl,
	    minvfunc = float8mi_int
	);
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors ERROR:  column name "ctid" conflicts with a system column name
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors STATEMENT:  alter table emp rename column salary to ctid;
2024-09-08 14:51:53.364 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  schema "test_schema_exists" does not exist
2024-09-08 14:51:53.364 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP SCHEMA test_schema_exists;
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate WARNING:  aggregate attribute "Sfunc1" not recognized
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate WARNING:  aggregate attribute "Basetype" not recognized
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate WARNING:  aggregate attribute "Stype1" not recognized
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate WARNING:  aggregate attribute "Initcond1" not recognized
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate WARNING:  aggregate attribute "Parallel" not recognized
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate ERROR:  aggregate stype must be specified
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate STATEMENT:  CREATE AGGREGATE case_agg ( -- old syntax
		"Sfunc1" = int4pl,
		"Basetype" = int4,
		"Stype1" = int4,
		"Initcond1" = '0',
		"Parallel" = safe
	);
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors WARNING:  there is no transaction in progress
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors WARNING:  there is no transaction in progress
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate WARNING:  aggregate attribute "Stype" not recognized
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate WARNING:  aggregate attribute "Sfunc" not recognized
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate WARNING:  aggregate attribute "Finalfunc" not recognized
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate WARNING:  aggregate attribute "Finalfunc_extra" not recognized
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate WARNING:  aggregate attribute "Finalfunc_modify" not recognized
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate WARNING:  aggregate attribute "Parallel" not recognized
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate ERROR:  aggregate stype must be specified
2024-09-08 14:51:53.364 KST client backend[3075481] pg_regress/create_aggregate STATEMENT:  CREATE AGGREGATE case_agg(float8)
	(
		"Stype" = internal,
		"Sfunc" = ordered_set_transition,
		"Finalfunc" = percentile_disc_final,
		"Finalfunc_extra" = true,
		"Finalfunc_modify" = read_write,
		"Parallel" = safe
	);
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors ERROR:  function int2um(integer) does not exist
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors STATEMENT:  create aggregate newavg2 (sfunc = int4pl,
				  basetype = int4,
				  stype = int4,
				  finalfunc = int2um,
				  initcond = '0');
2024-09-08 14:51:53.364 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  schema "test_schema_exists" does not exist
2024-09-08 14:51:53.364 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP SCHEMA test_schema_exists;
2024-09-08 14:51:53.364 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  type "test_type_exists" does not exist
2024-09-08 14:51:53.364 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP TYPE test_type_exists;
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors ERROR:  aggregate input type must be specified
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors STATEMENT:  create aggregate newcnt1 (sfunc = int4inc,
				  stype = int4,
				  initcond = '0');
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near ";" at character 11
2024-09-08 14:51:53.364 KST client backend[3075502] pg_regress/errors STATEMENT:  drop index;
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "314159" at character 12
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop index 314159;
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  index "nonesuch" does not exist
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop index nonesuch;
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near ";" at character 15
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop aggregate;
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near ";" at character 23
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop aggregate newcnt1;
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "314159" at character 16
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop aggregate 314159 (int);
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  type "nonesuch" does not exist
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop aggregate newcnt (nonesuch);
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  aggregate nonesuch(integer) does not exist
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop aggregate nonesuch (int4);
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  aggregate newcnt(real) does not exist
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop aggregate newcnt (float4);
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "(" at character 15
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop function ();
2024-09-08 14:51:53.365 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  type "test_type_exists" does not exist
2024-09-08 14:51:53.365 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP TYPE test_type_exists;
2024-09-08 14:51:53.365 KST client backend[3075485] pg_regress/create_function_sql ERROR:  duplicate function body specified
2024-09-08 14:51:53.365 KST client backend[3075485] pg_regress/create_function_sql STATEMENT:  CREATE FUNCTION functest_S_xxx(x int) RETURNS int
	    LANGUAGE SQL
	    AS $$ SELECT x * 2 $$
	    RETURN x * 3;
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "314159" at character 15
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop function 314159();
2024-09-08 14:51:53.365 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  type "test_domain_exists" does not exist
2024-09-08 14:51:53.365 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP DOMAIN test_domain_exists;
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  function nonesuch() does not exist
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop function nonesuch();
2024-09-08 14:51:53.365 KST client backend[3075485] pg_regress/create_function_sql ERROR:  SQL function with unquoted function body cannot have polymorphic arguments
2024-09-08 14:51:53.365 KST client backend[3075485] pg_regress/create_function_sql STATEMENT:  CREATE FUNCTION functest_S_xx(x anyarray) RETURNS anyelement
	    LANGUAGE SQL
	    RETURN x[1];
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near ";" at character 10
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop type;
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "314159" at character 11
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop type 314159;
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  type "nonesuch" does not exist
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop type nonesuch;
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near ";" at character 14
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop operator;
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near ";" at character 21
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop operator equals;
2024-09-08 14:51:53.365 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "check2_tbl" violates check constraint "sequence_con"
2024-09-08 14:51:53.365 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (1, x check failed, -2).
2024-09-08 14:51:53.365 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO CHECK2_TBL VALUES (1, 'x check failed', -2);
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near ";" at character 18
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop operator ===;
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "," at character 19
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop operator int4, int4;
2024-09-08 14:51:53.365 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "check2_tbl" violates check constraint "sequence_con"
2024-09-08 14:51:53.365 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (5, z check failed, 10).
2024-09-08 14:51:53.365 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO CHECK2_TBL VALUES (5, 'z check failed', 10);
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "(" at character 15
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop operator (int4, int4);
2024-09-08 14:51:53.365 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "check2_tbl" violates check constraint "sequence_con"
2024-09-08 14:51:53.365 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (0, check failed, -2).
2024-09-08 14:51:53.365 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO CHECK2_TBL VALUES (0, 'check failed', -2);
2024-09-08 14:51:53.365 KST client backend[3075485] pg_regress/create_function_sql ERROR:  operator does not exist: date > integer at character 85
2024-09-08 14:51:53.365 KST client backend[3075485] pg_regress/create_function_sql HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:53.365 KST client backend[3075485] pg_regress/create_function_sql STATEMENT:  CREATE FUNCTION functest_S_xx(x date) RETURNS boolean
	    LANGUAGE SQL
	    RETURN x > 1;
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near ")" at character 20
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop operator === ();
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  missing argument at character 24
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors HINT:  Use NONE to denote the missing argument of a unary operator.
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop operator === (int4);
2024-09-08 14:51:53.365 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "check2_tbl" violates check constraint "sequence_con"
2024-09-08 14:51:53.365 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (6, check failed, 11).
2024-09-08 14:51:53.365 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO CHECK2_TBL VALUES (6, 'check failed', 11);
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors ERROR:  operator does not exist: integer === integer
2024-09-08 14:51:53.365 KST client backend[3075502] pg_regress/errors STATEMENT:  drop operator === (int4, int4);
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors ERROR:  missing argument at character 26
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors HINT:  Use NONE to denote the missing argument of a unary operator.
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors STATEMENT:  drop operator = (nonesuch);
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "," at character 19
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors STATEMENT:  drop operator = ( , int4);
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors ERROR:  type "nonesuch" does not exist
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors STATEMENT:  drop operator = (nonesuch, int4);
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors ERROR:  type "nonesuch" does not exist
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors STATEMENT:  drop operator = (int4, nonesuch);
2024-09-08 14:51:53.366 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  type "test_domain_exists" does not exist
2024-09-08 14:51:53.366 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP DOMAIN test_domain_exists;
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near ")" at character 24
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors STATEMENT:  drop operator = (int4, );
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near ";" at character 10
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors STATEMENT:  drop rule;
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "314159" at character 11
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors STATEMENT:  drop rule 314159;
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors ERROR:  relation "noplace" does not exist
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors STATEMENT:  drop rule nonesuch on noplace;
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "tuple" at character 6
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors STATEMENT:  drop tuple rule nonesuch;
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "instance" at character 6
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors STATEMENT:  drop instance rule nonesuch on noplace;
2024-09-08 14:51:53.366 KST client backend[3075492] pg_regress/triggers ERROR:  trigger "check_fkeys2_pkey_bad" for table "fkeys2" does not exist
2024-09-08 14:51:53.366 KST client backend[3075492] pg_regress/triggers STATEMENT:  COMMENT ON TRIGGER check_fkeys2_pkey_bad ON fkeys2 IS 'wrong';
2024-09-08 14:51:53.366 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  role "regress_test_u2" does not exist
2024-09-08 14:51:53.366 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP USER regress_test_u2;
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "rewrite" at character 6
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors STATEMENT:  drop rewrite rule nonesuch;
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors ERROR:  division by zero
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors STATEMENT:  select 1/0;
2024-09-08 14:51:53.366 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  role "regress_test_u1" does not exist
2024-09-08 14:51:53.366 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP USER regress_test_u1;
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors ERROR:  division by zero
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors STATEMENT:  select 1::int8/0;
2024-09-08 14:51:53.366 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  role "regress_test_r2" does not exist
2024-09-08 14:51:53.366 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP ROLE regress_test_r2;
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors ERROR:  division by zero
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors STATEMENT:  select 1/0::int8;
2024-09-08 14:51:53.366 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  role "regress_test_r1" does not exist
2024-09-08 14:51:53.366 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP ROLE regress_test_r1;
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors ERROR:  division by zero
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors STATEMENT:  select 1::int2/0;
2024-09-08 14:51:53.366 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  role "regress_test_g2" does not exist
2024-09-08 14:51:53.366 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP GROUP regress_test_g2;
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors ERROR:  division by zero
2024-09-08 14:51:53.366 KST client backend[3075502] pg_regress/errors STATEMENT:  select 1/0::int2;
2024-09-08 14:51:53.366 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  role "regress_test_g1" does not exist
2024-09-08 14:51:53.366 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP GROUP regress_test_g1;
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors ERROR:  division by zero
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors STATEMENT:  select 1::numeric/0;
2024-09-08 14:51:53.367 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  conversion "test_conversion_exists" does not exist
2024-09-08 14:51:53.367 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP CONVERSION test_conversion_exists;
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors ERROR:  division by zero
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors STATEMENT:  select 1/0::numeric;
2024-09-08 14:51:53.367 KST client backend[3075501] pg_regress/hash_func ERROR:  could not identify a hash function for type money
2024-09-08 14:51:53.367 KST client backend[3075501] pg_regress/hash_func STATEMENT:  SELECT v as value, hash_array(v)::bit(32) as standard
	FROM   (VALUES ('{0}'::money[])) x(v);
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors ERROR:  division by zero
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors STATEMENT:  select 1::float8/0;
2024-09-08 14:51:53.367 KST client backend[3075501] pg_regress/hash_func ERROR:  could not identify an extended hash function for type money
2024-09-08 14:51:53.367 KST client backend[3075501] pg_regress/hash_func STATEMENT:  SELECT v as value, hash_array_extended(v, 0)::bit(32) as extended0
	FROM   (VALUES ('{0}'::money[])) x(v);
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors ERROR:  division by zero
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors STATEMENT:  select 1/0::float8;
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors ERROR:  division by zero
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors STATEMENT:  select 1::float4/0;
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors ERROR:  division by zero
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors STATEMENT:  select 1/0::float4;
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "xxx" at character 1
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors STATEMENT:  xxx;
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "foo" at character 8
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors STATEMENT:  CREATE foo;
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near ";" at character 14
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors STATEMENT:  CREATE TABLE ;
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at end of input at character 13
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors STATEMENT:  CREATE TABLE
2024-09-08 14:51:53.367 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  text search parser "test_tsparser_exists" does not exist
2024-09-08 14:51:53.367 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP TEXT SEARCH PARSER test_tsparser_exists;
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "foo" at character 29
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors STATEMENT:  INSERT INTO foo VALUES(123) foo;
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "123" at character 13
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors STATEMENT:  INSERT INTO 123
	VALUES(123);
2024-09-08 14:51:53.367 KST client backend[3075494] pg_regress/typed_table ERROR:  cannot add column to typed table
2024-09-08 14:51:53.367 KST client backend[3075494] pg_regress/typed_table STATEMENT:  ALTER TABLE persons ADD COLUMN comment text;
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "123" at character 29
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors STATEMENT:  INSERT INTO foo
	VALUES(123) 123
	;
2024-09-08 14:51:53.367 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  text search dictionary "test_tsdict_exists" does not exist
2024-09-08 14:51:53.367 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP TEXT SEARCH DICTIONARY test_tsdict_exists;
2024-09-08 14:51:53.367 KST client backend[3075494] pg_regress/typed_table ERROR:  cannot drop column from typed table
2024-09-08 14:51:53.367 KST client backend[3075494] pg_regress/typed_table STATEMENT:  ALTER TABLE persons DROP COLUMN name;
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "NUL" at character 94
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors STATEMENT:  CREATE TABLE foo
	  (id INT4 UNIQUE NOT NULL, id2 TEXT NOT NULL PRIMARY KEY,
		id3 INTEGER NOT NUL,
	   id4 INT4 UNIQUE NOT NULL, id5 TEXT UNIQUE NOT NULL);
2024-09-08 14:51:53.367 KST client backend[3075494] pg_regress/typed_table ERROR:  cannot rename column of typed table
2024-09-08 14:51:53.367 KST client backend[3075494] pg_regress/typed_table STATEMENT:  ALTER TABLE persons RENAME COLUMN id TO num;
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "NUL" at character 90
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors STATEMENT:  CREATE TABLE foo(id INT4 UNIQUE NOT NULL, id2 TEXT NOT NULL PRIMARY KEY, id3 INTEGER NOT NUL,
	id4 INT4 UNIQUE NOT NULL, id5 TEXT UNIQUE NOT NULL);
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "NUL" at character 35
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors STATEMENT:  CREATE TABLE foo(
	id3 INTEGER NOT NUL, id4 INT4 UNIQUE NOT NULL, id5 TEXT UNIQUE NOT NULL, id INT4 UNIQUE NOT NULL, id2 TEXT NOT NULL PRIMARY KEY);
2024-09-08 14:51:53.367 KST client backend[3075494] pg_regress/typed_table ERROR:  cannot alter column type of typed table
2024-09-08 14:51:53.367 KST client backend[3075494] pg_regress/typed_table STATEMENT:  ALTER TABLE persons ALTER COLUMN name TYPE varchar;
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "NUL" at character 90
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors STATEMENT:  CREATE TABLE foo(id INT4 UNIQUE NOT NULL, id2 TEXT NOT NULL PRIMARY KEY, id3 INTEGER NOT NUL, id4 INT4 UNIQUE NOT NULL, id5 TEXT UNIQUE NOT NULL);
2024-09-08 14:51:53.367 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "insert_tbl" violates check constraint "insert_tbl_con"
2024-09-08 14:51:53.367 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (2, -NULL-, -2).
2024-09-08 14:51:53.367 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO INSERT_TBL(x,z) VALUES (2, -2);
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "NUL" at character 100
2024-09-08 14:51:53.367 KST client backend[3075502] pg_regress/errors STATEMENT:  CREATE
	TEMPORARY
	TABLE
	foo(id INT4 UNIQUE NOT NULL, id2 TEXT NOT NULL PRIMARY KEY, id3 INTEGER NOT NUL,
	id4 INT4
	UNIQUE
	NOT
	NULL,
	id5 TEXT
	UNIQUE
	NOT
	NULL)
	;
2024-09-08 14:51:53.368 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "NUL" at character 45
2024-09-08 14:51:53.368 KST client backend[3075502] pg_regress/errors STATEMENT:  CREATE
	TEMPORARY
	TABLE
	foo(
	id3 INTEGER NOT NUL, id4 INT4 UNIQUE NOT NULL, id5 TEXT UNIQUE NOT NULL, id INT4 UNIQUE NOT NULL, id2 TEXT NOT NULL PRIMARY KEY)
	;
2024-09-08 14:51:53.368 KST client backend[3075492] pg_regress/triggers ERROR:  tuple references non-existent key
2024-09-08 14:51:53.368 KST client backend[3075492] pg_regress/triggers DETAIL:  Trigger "check_fkeys2_pkey_exist" found tuple referencing non-existent key in "pkeys".
2024-09-08 14:51:53.368 KST client backend[3075492] pg_regress/triggers STATEMENT:  insert into fkeys2 values (70, '5', 3);
2024-09-08 14:51:53.368 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "NUL" at character 153
2024-09-08 14:51:53.368 KST client backend[3075502] pg_regress/errors STATEMENT:  CREATE
	TEMPORARY
	TABLE
	foo
	(id
	INT4
	UNIQUE NOT NULL, idx INT4 UNIQUE NOT NULL, idy INT4 UNIQUE NOT NULL, id2 TEXT NOT NULL PRIMARY KEY, id3 INTEGER NOT NUL, id4 INT4 UNIQUE NOT NULL, id5 TEXT UNIQUE NOT NULL,
	idz INT4 UNIQUE NOT NULL,
	idv INT4 UNIQUE NOT NULL);
2024-09-08 14:51:53.368 KST client backend[3075502] pg_regress/errors ERROR:  syntax error at or near "NUL" at character 180
2024-09-08 14:51:53.368 KST client backend[3075502] pg_regress/errors STATEMENT:  CREATE
	TEMPORARY
	TABLE
	foo
	(id
	INT4
	UNIQUE
	NOT
	NULL
	,
	idm
	INT4
	UNIQUE
	NOT
	NULL,
	idx INT4 UNIQUE NOT NULL, idy INT4 UNIQUE NOT NULL, id2 TEXT NOT NULL PRIMARY KEY, id3 INTEGER NOT NUL, id4 INT4 UNIQUE NOT NULL, id5 TEXT UNIQUE NOT NULL,
	idz INT4 UNIQUE NOT NULL,
	idv
	INT4
	UNIQUE
	NOT
	NULL);
2024-09-08 14:51:53.368 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "insert_tbl" violates check constraint "insert_tbl_con"
2024-09-08 14:51:53.368 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (2, Y, -2).
2024-09-08 14:51:53.368 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO INSERT_TBL(y) VALUES ('Y');
2024-09-08 14:51:53.368 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  text search template "test_tstemplate_exists" does not exist
2024-09-08 14:51:53.368 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP TEXT SEARCH TEMPLATE test_tstemplate_exists;
2024-09-08 14:51:53.368 KST client backend[3075494] pg_regress/typed_table ERROR:  cannot change inheritance of typed table
2024-09-08 14:51:53.368 KST client backend[3075494] pg_regress/typed_table STATEMENT:  ALTER TABLE persons INHERIT stuff;
2024-09-08 14:51:53.368 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  text search configuration "test_tsconfig_exists" does not exist
2024-09-08 14:51:53.368 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP TEXT SEARCH CONFIGURATION test_tsconfig_exists;
2024-09-08 14:51:53.368 KST client backend[3075494] pg_regress/typed_table ERROR:  column "myname" does not exist
2024-09-08 14:51:53.368 KST client backend[3075494] pg_regress/typed_table STATEMENT:  CREATE TABLE personsx OF person_type (myname WITH OPTIONS NOT NULL);
2024-09-08 14:51:53.368 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "insert_tbl" violates check constraint "insert_tbl_check"
2024-09-08 14:51:53.368 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (1, -NULL-, -2).
2024-09-08 14:51:53.368 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO INSERT_TBL(x,z) VALUES (1, -2);
2024-09-08 14:51:53.368 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "insert_tbl" violates check constraint "insert_tbl_con"
2024-09-08 14:51:53.368 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (5, check failed, -5).
2024-09-08 14:51:53.368 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO INSERT_TBL VALUES (5, 'check failed', -5);
2024-09-08 14:51:53.368 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  extension "test_extension_exists" does not exist
2024-09-08 14:51:53.368 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP EXTENSION test_extension_exists;
2024-09-08 14:51:53.368 KST client backend[3075492] pg_regress/triggers ERROR:  tuple references non-existent key
2024-09-08 14:51:53.368 KST client backend[3075492] pg_regress/triggers DETAIL:  Trigger "check_fkeys_pkey_exist" found tuple referencing non-existent key in "pkeys".
2024-09-08 14:51:53.368 KST client backend[3075492] pg_regress/triggers STATEMENT:  insert into fkeys values (70, '5', 1);
2024-09-08 14:51:53.369 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "insert_tbl" violates check constraint "insert_tbl_check"
2024-09-08 14:51:53.369 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (5, check failed, 4).
2024-09-08 14:51:53.369 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO INSERT_TBL(y,z) VALUES ('check failed', 4);
2024-09-08 14:51:53.369 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  function test_function_exists() does not exist
2024-09-08 14:51:53.369 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP FUNCTION test_function_exists();
2024-09-08 14:51:53.369 KST client backend[3075492] pg_regress/triggers ERROR:  tuple references non-existent key
2024-09-08 14:51:53.369 KST client backend[3075492] pg_regress/triggers DETAIL:  Trigger "check_fkeys_pkey2_exist" found tuple referencing non-existent key in "fkeys2".
2024-09-08 14:51:53.369 KST client backend[3075492] pg_regress/triggers STATEMENT:  insert into fkeys values (60, '6', 4);
2024-09-08 14:51:53.369 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "insert_tbl" violates check constraint "insert_tbl_con"
2024-09-08 14:51:53.369 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (5, check failed, -5).
2024-09-08 14:51:53.369 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO INSERT_TBL(x,y) VALUES (5, 'check failed');
2024-09-08 14:51:53.369 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  function test_function_exists(integer, text, integer[]) does not exist
2024-09-08 14:51:53.369 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP FUNCTION test_function_exists(int, text, int[]);
2024-09-08 14:51:53.369 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  aggregate test_aggregate_exists(*) does not exist
2024-09-08 14:51:53.369 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP AGGREGATE test_aggregate_exists(*);
2024-09-08 14:51:53.369 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  aggregate test_aggregate_exists(integer) does not exist
2024-09-08 14:51:53.369 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP AGGREGATE test_aggregate_exists(int);
2024-09-08 14:51:53.369 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  operator does not exist: integer @#@ integer
2024-09-08 14:51:53.369 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP OPERATOR @#@ (int, int);
2024-09-08 14:51:53.369 KST client backend[3075492] pg_regress/triggers ERROR:  "check_fkeys2_fkey_restrict": tuple is referenced in "fkeys"
2024-09-08 14:51:53.369 KST client backend[3075492] pg_regress/triggers CONTEXT:  SQL statement "delete from fkeys2 where fkey21 = $1 and fkey22 = $2 "
2024-09-08 14:51:53.369 KST client backend[3075492] pg_regress/triggers STATEMENT:  delete from pkeys where pkey1 = 30 and pkey2 = '3';
2024-09-08 14:51:53.369 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "insert_tbl" violates check constraint "insert_tbl_con"
2024-09-08 14:51:53.369 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (8, Y, -8).
2024-09-08 14:51:53.369 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO INSERT_TBL(y) VALUES ('Y');
2024-09-08 14:51:53.369 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  language "test_language_exists" does not exist
2024-09-08 14:51:53.369 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP LANGUAGE test_language_exists;
2024-09-08 14:51:53.369 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  cast from type text to type text does not exist
2024-09-08 14:51:53.369 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP CAST (text AS text);
2024-09-08 14:51:53.369 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  trigger "test_trigger_exists" for table "test_exists" does not exist
2024-09-08 14:51:53.369 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP TRIGGER test_trigger_exists ON test_exists;
2024-09-08 14:51:53.370 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  relation "no_such_table" does not exist
2024-09-08 14:51:53.370 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP TRIGGER test_trigger_exists ON no_such_table;
2024-09-08 14:51:53.370 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  schema "no_such_schema" does not exist
2024-09-08 14:51:53.370 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP TRIGGER test_trigger_exists ON no_such_schema.no_such_table;
2024-09-08 14:51:53.370 KST client backend[3075492] pg_regress/triggers ERROR:  "check_fkeys2_fkey_restrict": tuple is referenced in "fkeys"
2024-09-08 14:51:53.370 KST client backend[3075492] pg_regress/triggers CONTEXT:  SQL statement "delete from fkeys2 where fkey21 = $1 and fkey22 = $2 "
2024-09-08 14:51:53.370 KST client backend[3075492] pg_regress/triggers STATEMENT:  update pkeys set pkey1 = 7, pkey2 = '70' where pkey1 = 50 and pkey2 = '5';
2024-09-08 14:51:53.370 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  rule "test_rule_exists" for relation "test_exists" does not exist
2024-09-08 14:51:53.370 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP RULE test_rule_exists ON test_exists;
2024-09-08 14:51:53.370 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  relation "no_such_table" does not exist
2024-09-08 14:51:53.370 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP RULE test_rule_exists ON no_such_table;
2024-09-08 14:51:53.370 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  schema "no_such_schema" does not exist
2024-09-08 14:51:53.370 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP RULE test_rule_exists ON no_such_schema.no_such_table;
2024-09-08 14:51:53.371 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "sys_col_check_tbl" violates check constraint "sys_col_check_tbl_check"
2024-09-08 14:51:53.371 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (Olympia, Washington, t, 100).
2024-09-08 14:51:53.371 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO SYS_COL_CHECK_TBL VALUES ('Olympia', 'Washington', true, 100);
2024-09-08 14:51:53.371 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  foreign-data wrapper "test_fdw_exists" does not exist
2024-09-08 14:51:53.371 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP FOREIGN DATA WRAPPER test_fdw_exists;
2024-09-08 14:51:53.371 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  server "test_server_exists" does not exist
2024-09-08 14:51:53.371 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP SERVER test_server_exists;
2024-09-08 14:51:53.371 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  operator class "test_operator_class" does not exist for access method "btree"
2024-09-08 14:51:53.371 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP OPERATOR CLASS test_operator_class USING btree;
2024-09-08 14:51:53.371 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  access method "no_such_am" does not exist
2024-09-08 14:51:53.371 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP OPERATOR CLASS test_operator_class USING no_such_am;
2024-09-08 14:51:53.371 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  access method "no_such_am" does not exist
2024-09-08 14:51:53.371 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP OPERATOR CLASS IF EXISTS test_operator_class USING no_such_am;
2024-09-08 14:51:53.371 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  operator family "test_operator_family" does not exist for access method "btree"
2024-09-08 14:51:53.371 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP OPERATOR FAMILY test_operator_family USING btree;
2024-09-08 14:51:53.371 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  access method "no_such_am" does not exist
2024-09-08 14:51:53.371 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP OPERATOR FAMILY test_operator_family USING no_such_am;
2024-09-08 14:51:53.371 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  access method "no_such_am" does not exist
2024-09-08 14:51:53.371 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP OPERATOR FAMILY IF EXISTS test_operator_family USING no_such_am;
2024-09-08 14:51:53.371 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  access method "no_such_am" does not exist
2024-09-08 14:51:53.371 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP ACCESS METHOD no_such_am;
2024-09-08 14:51:53.372 KST client backend[3075488] pg_regress/constraints ERROR:  system column "ctid" reference in check constraint is invalid at character 138
2024-09-08 14:51:53.372 KST client backend[3075488] pg_regress/constraints STATEMENT:  CREATE TABLE SYS_COL_CHECK_TBL (city text, state text, is_capital bool,
	                  altitude int,
					  CHECK (NOT (is_capital AND ctid::text = 'sys_col_check_tbl')));
2024-09-08 14:51:53.372 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  table "test_exists" does not exist
2024-09-08 14:51:53.372 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP TABLE test_exists;
2024-09-08 14:51:53.372 KST client backend[3075501] pg_regress/hash_func ERROR:  could not identify a hash function for type money
2024-09-08 14:51:53.372 KST client backend[3075501] pg_regress/hash_func STATEMENT:  SELECT v as value, hash_record(v)::bit(32) as standard
	FROM   (VALUES (row(1, 'aaa')::hash_test_t2)) x(v);
2024-09-08 14:51:53.372 KST client backend[3075501] pg_regress/hash_func ERROR:  could not identify an extended hash function for type money
2024-09-08 14:51:53.372 KST client backend[3075501] pg_regress/hash_func STATEMENT:  SELECT v as value, hash_record_extended(v, 0)::bit(32) as extended0
	FROM   (VALUES (row(1, 'aaa')::hash_test_t2)) x(v);
2024-09-08 14:51:53.373 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  function name "test_ambiguous_funcname" is not unique
2024-09-08 14:51:53.373 KST client backend[3075496] pg_regress/drop_if_exists HINT:  Specify the argument list to select the function unambiguously.
2024-09-08 14:51:53.373 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP FUNCTION test_ambiguous_funcname;
2024-09-08 14:51:53.373 KST client backend[3075493] pg_regress/inherit ERROR:  null value in column "aa" of relation "z" violates not-null constraint
2024-09-08 14:51:53.373 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (null, text).
2024-09-08 14:51:53.373 KST client backend[3075493] pg_regress/inherit STATEMENT:  INSERT INTO z VALUES (NULL, 'text');
2024-09-08 14:51:53.373 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  function name "test_ambiguous_funcname" is not unique
2024-09-08 14:51:53.373 KST client backend[3075496] pg_regress/drop_if_exists HINT:  Specify the argument list to select the function unambiguously.
2024-09-08 14:51:53.373 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP FUNCTION IF EXISTS test_ambiguous_funcname;
2024-09-08 14:51:53.374 KST client backend[3075500] pg_regress/create_am ERROR:  cannot drop access method gist2 because other objects depend on it
2024-09-08 14:51:53.374 KST client backend[3075500] pg_regress/create_am DETAIL:  index grect2ind2 depends on operator class box_ops for access method gist2
2024-09-08 14:51:53.374 KST client backend[3075500] pg_regress/create_am HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:53.374 KST client backend[3075500] pg_regress/create_am STATEMENT:  DROP ACCESS METHOD gist2;
2024-09-08 14:51:53.374 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  procedure name "test_ambiguous_procname" is not unique
2024-09-08 14:51:53.374 KST client backend[3075496] pg_regress/drop_if_exists HINT:  Specify the argument list to select the procedure unambiguously.
2024-09-08 14:51:53.374 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP PROCEDURE test_ambiguous_procname;
2024-09-08 14:51:53.374 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  procedure name "test_ambiguous_procname" is not unique
2024-09-08 14:51:53.374 KST client backend[3075496] pg_regress/drop_if_exists HINT:  Specify the argument list to select the procedure unambiguously.
2024-09-08 14:51:53.374 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP PROCEDURE IF EXISTS test_ambiguous_procname;
2024-09-08 14:51:53.374 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "insert_child" violates check constraint "insert_child_check"
2024-09-08 14:51:53.374 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (7, -NULL-, -7, 42, 6).
2024-09-08 14:51:53.374 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO INSERT_CHILD(x,z,cy) VALUES (7,-7,6);
2024-09-08 14:51:53.374 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  routine name "test_ambiguous_procname" is not unique
2024-09-08 14:51:53.374 KST client backend[3075496] pg_regress/drop_if_exists HINT:  Specify the argument list to select the routine unambiguously.
2024-09-08 14:51:53.374 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  DROP ROUTINE IF EXISTS test_ambiguous_procname;
2024-09-08 14:51:53.374 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "insert_child" violates check constraint "insert_tbl_check"
2024-09-08 14:51:53.374 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (6, -NULL-, -7, 42, 7).
2024-09-08 14:51:53.374 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO INSERT_CHILD(x,z,cy) VALUES (6,-7,7);
2024-09-08 14:51:53.374 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "insert_child" violates check constraint "insert_tbl_con"
2024-09-08 14:51:53.374 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (6, check failed, -6, 42, 7).
2024-09-08 14:51:53.374 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO INSERT_CHILD(x,y,z,cy) VALUES (6,'check failed',-6,7);
2024-09-08 14:51:53.374 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  database "test_database_exists" does not exist
2024-09-08 14:51:53.374 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  drop database test_database_exists (force);
2024-09-08 14:51:53.374 KST client backend[3075496] pg_regress/drop_if_exists ERROR:  database "test_database_exists" does not exist
2024-09-08 14:51:53.374 KST client backend[3075496] pg_regress/drop_if_exists STATEMENT:  drop database test_database_exists with (force);
2024-09-08 14:51:53.375 KST client backend[3075500] pg_regress/create_am ERROR:  invalid value for parameter "default_table_access_method": ""
2024-09-08 14:51:53.375 KST client backend[3075500] pg_regress/create_am DETAIL:  default_table_access_method cannot be empty.
2024-09-08 14:51:53.375 KST client backend[3075500] pg_regress/create_am STATEMENT:  SET default_table_access_method = '';
2024-09-08 14:51:53.375 KST client backend[3075500] pg_regress/create_am ERROR:  invalid value for parameter "default_table_access_method": "I do not exist AM"
2024-09-08 14:51:53.375 KST client backend[3075500] pg_regress/create_am DETAIL:  Table access method "I do not exist AM" does not exist.
2024-09-08 14:51:53.375 KST client backend[3075500] pg_regress/create_am STATEMENT:  SET default_table_access_method = 'I do not exist AM';
2024-09-08 14:51:53.375 KST client backend[3075500] pg_regress/create_am ERROR:  access method "btree" is not of type TABLE
2024-09-08 14:51:53.375 KST client backend[3075500] pg_regress/create_am STATEMENT:  SET default_table_access_method = 'btree';
2024-09-08 14:51:53.376 KST client backend[3075500] pg_regress/create_am ERROR:  function int4in(internal) does not exist
2024-09-08 14:51:53.376 KST client backend[3075500] pg_regress/create_am STATEMENT:  CREATE ACCESS METHOD bogus TYPE TABLE HANDLER int4in;
2024-09-08 14:51:53.376 KST client backend[3075500] pg_regress/create_am ERROR:  function bthandler must return type table_am_handler
2024-09-08 14:51:53.376 KST client backend[3075500] pg_regress/create_am STATEMENT:  CREATE ACCESS METHOD bogus TYPE TABLE HANDLER bthandler;
2024-09-08 14:51:53.377 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "atacc1" violates check constraint "atacc1_test_check"
2024-09-08 14:51:53.377 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (-3).
2024-09-08 14:51:53.377 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO ATACC1 (TEST) VALUES (-3);
2024-09-08 14:51:53.377 KST client backend[3075500] pg_regress/create_am ERROR:  syntax error at or near "USING" at character 41
2024-09-08 14:51:53.377 KST client backend[3075500] pg_regress/create_am STATEMENT:  SELECT INTO tableam_tblselectinto_heap2 USING heap2 FROM tableam_tbl_heap2;
2024-09-08 14:51:53.377 KST client backend[3075500] pg_regress/create_am ERROR:  syntax error at or near "USING" at character 32
2024-09-08 14:51:53.377 KST client backend[3075500] pg_regress/create_am STATEMENT:  CREATE VIEW tableam_view_heap2 USING heap2 AS SELECT * FROM tableam_tbl_heap2;
2024-09-08 14:51:53.377 KST client backend[3075500] pg_regress/create_am ERROR:  syntax error at or near "USING" at character 35
2024-09-08 14:51:53.377 KST client backend[3075500] pg_regress/create_am STATEMENT:  CREATE SEQUENCE tableam_seq_heap2 USING heap2;
2024-09-08 14:51:53.378 KST client backend[3075494] pg_regress/typed_table ERROR:  column "name" specified more than once
2024-09-08 14:51:53.378 KST client backend[3075494] pg_regress/typed_table STATEMENT:  CREATE TABLE persons4 OF person_type (
	    name WITH OPTIONS NOT NULL,
	    name WITH OPTIONS DEFAULT ''  -- error, specified more than once
	);
2024-09-08 14:51:53.378 KST client backend[3075494] pg_regress/typed_table ERROR:  cannot drop type person_type because other objects depend on it
2024-09-08 14:51:53.378 KST client backend[3075494] pg_regress/typed_table DETAIL:  table persons depends on type person_type
	function get_all_persons() depends on type person_type
	table persons2 depends on type person_type
	table persons3 depends on type person_type
2024-09-08 14:51:53.378 KST client backend[3075494] pg_regress/typed_table HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:53.378 KST client backend[3075494] pg_regress/typed_table STATEMENT:  DROP TYPE person_type RESTRICT;
2024-09-08 14:51:53.378 KST client backend[3075500] pg_regress/create_am ERROR:  specifying a table access method is not supported on a partitioned table
2024-09-08 14:51:53.378 KST client backend[3075500] pg_regress/create_am STATEMENT:  CREATE TABLE tableam_parted_heap2 (a text, b int) PARTITION BY list (a) USING heap2;
2024-09-08 14:51:53.378 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "atacc2" violates check constraint "atacc1_test_check"
2024-09-08 14:51:53.378 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (-3, null).
2024-09-08 14:51:53.378 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO ATACC2 (TEST) VALUES (-3);
2024-09-08 14:51:53.379 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "atacc1" violates check constraint "atacc1_test_check"
2024-09-08 14:51:53.379 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (-3, null).
2024-09-08 14:51:53.379 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO ATACC1 (TEST) VALUES (-3);
2024-09-08 14:51:53.379 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "atacc1" violates check constraint "atacc1_test2_check"
2024-09-08 14:51:53.379 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (null, 3).
2024-09-08 14:51:53.379 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO ATACC1 (TEST2) VALUES (3);
2024-09-08 14:51:53.381 KST client backend[3075494] pg_regress/typed_table ERROR:  type stuff is not a composite type
2024-09-08 14:51:53.381 KST client backend[3075494] pg_regress/typed_table STATEMENT:  CREATE TABLE persons5 OF stuff;
2024-09-08 14:51:53.382 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "insert_tbl" violates check constraint "insert_tbl_con"
2024-09-08 14:51:53.382 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (8, try again, -8).
2024-09-08 14:51:53.382 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO INSERT_TBL(y,z) SELECT yd, -8 FROM tmp WHERE yd = 'try again';
2024-09-08 14:51:53.382 KST client backend[3075495] pg_regress/vacuum ERROR:  ANALYZE cannot be executed from VACUUM or ANALYZE
2024-09-08 14:51:53.382 KST client backend[3075495] pg_regress/vacuum CONTEXT:  SQL function "do_analyze" statement 1
	SQL function "wrap_do_analyze" statement 1
2024-09-08 14:51:53.382 KST client backend[3075495] pg_regress/vacuum STATEMENT:  ANALYZE vaccluster;
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot delete from view "ro_view1"
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views containing DISTINCT are not automatically updatable.
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable deleting from the view, provide an INSTEAD OF DELETE trigger or an unconditional ON DELETE DO INSTEAD rule.
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  DELETE FROM ro_view1;
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot delete from view "ro_view2"
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views containing GROUP BY are not automatically updatable.
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable deleting from the view, provide an INSTEAD OF DELETE trigger or an unconditional ON DELETE DO INSTEAD rule.
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  DELETE FROM ro_view2;
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot delete from view "ro_view3"
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views containing HAVING are not automatically updatable.
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable deleting from the view, provide an INSTEAD OF DELETE trigger or an unconditional ON DELETE DO INSTEAD rule.
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  DELETE FROM ro_view3;
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot delete from view "ro_view4"
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views that return aggregate functions are not automatically updatable.
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable deleting from the view, provide an INSTEAD OF DELETE trigger or an unconditional ON DELETE DO INSTEAD rule.
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  DELETE FROM ro_view4;
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot delete from view "ro_view5"
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views that return window functions are not automatically updatable.
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable deleting from the view, provide an INSTEAD OF DELETE trigger or an unconditional ON DELETE DO INSTEAD rule.
2024-09-08 14:51:53.382 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  DELETE FROM ro_view5;
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot delete from view "ro_view6"
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views containing UNION, INTERSECT, or EXCEPT are not automatically updatable.
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable deleting from the view, provide an INSTEAD OF DELETE trigger or an unconditional ON DELETE DO INSTEAD rule.
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  DELETE FROM ro_view6;
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot update view "ro_view7"
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views containing WITH are not automatically updatable.
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable updating the view, provide an INSTEAD OF UPDATE trigger or an unconditional ON UPDATE DO INSTEAD rule.
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE ro_view7 SET a=a+1;
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot update view "ro_view8"
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views containing LIMIT or OFFSET are not automatically updatable.
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable updating the view, provide an INSTEAD OF UPDATE trigger or an unconditional ON UPDATE DO INSTEAD rule.
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE ro_view8 SET a=a+1;
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot update view "ro_view9"
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views containing LIMIT or OFFSET are not automatically updatable.
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable updating the view, provide an INSTEAD OF UPDATE trigger or an unconditional ON UPDATE DO INSTEAD rule.
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE ro_view9 SET a=a+1;
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot update view "ro_view10"
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views that do not select from a single table or view are not automatically updatable.
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable updating the view, provide an INSTEAD OF UPDATE trigger or an unconditional ON UPDATE DO INSTEAD rule.
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE ro_view10 SET a=a+1;
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot update view "ro_view11"
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views that do not select from a single table or view are not automatically updatable.
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable updating the view, provide an INSTEAD OF UPDATE trigger or an unconditional ON UPDATE DO INSTEAD rule.
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE ro_view11 SET a=a+1;
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot update view "ro_view12"
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views that do not select from a single table or view are not automatically updatable.
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable updating the view, provide an INSTEAD OF UPDATE trigger or an unconditional ON UPDATE DO INSTEAD rule.
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE ro_view12 SET a=a+1;
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot insert into view "ro_view13"
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views that do not select from a single table or view are not automatically updatable.
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable inserting into the view, provide an INSTEAD OF INSERT trigger or an unconditional ON INSERT DO INSTEAD rule.
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO ro_view13 VALUES (3, 'Row 3');
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot insert into column "ctid" of view "rw_view14"
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views DETAIL:  View columns that refer to system columns are not updatable.
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view14 VALUES (null, 3, 'Row 3');
2024-09-08 14:51:53.383 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "insert_tbl" violates check constraint "insert_tbl_con"
2024-09-08 14:51:53.383 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (-4, Y, 4).
2024-09-08 14:51:53.383 KST client backend[3075488] pg_regress/constraints STATEMENT:  UPDATE INSERT_TBL SET x = z, z = x;
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot update column "ctid" of view "rw_view14"
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views DETAIL:  View columns that refer to system columns are not updatable.
2024-09-08 14:51:53.383 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view14 SET ctid=null WHERE a=3;
2024-09-08 14:51:53.384 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot insert into column "upper" of view "rw_view15"
2024-09-08 14:51:53.384 KST client backend[3075497] pg_regress/updatable_views DETAIL:  View columns that are not columns of their base relation are not updatable.
2024-09-08 14:51:53.384 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view15 VALUES (3, 'ROW 3');
2024-09-08 14:51:53.384 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot insert into column "upper" of view "rw_view15"
2024-09-08 14:51:53.384 KST client backend[3075497] pg_regress/updatable_views DETAIL:  View columns that are not columns of their base relation are not updatable.
2024-09-08 14:51:53.384 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view15 (a) VALUES (3) ON CONFLICT (a) DO UPDATE set upper = 'blarg';
2024-09-08 14:51:53.385 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot insert into column "upper" of view "rw_view15"
2024-09-08 14:51:53.385 KST client backend[3075497] pg_regress/updatable_views DETAIL:  View columns that are not columns of their base relation are not updatable.
2024-09-08 14:51:53.385 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view15 (a) VALUES (4);
2024-09-08 14:51:53.385 KST client backend[3075488] pg_regress/constraints ERROR:  new row for relation "copy_tbl" violates check constraint "copy_con"
2024-09-08 14:51:53.385 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (7, check failed, 6).
2024-09-08 14:51:53.385 KST client backend[3075488] pg_regress/constraints CONTEXT:  COPY copy_tbl, line 2: "7	check failed	6"
2024-09-08 14:51:53.385 KST client backend[3075488] pg_regress/constraints STATEMENT:  COPY COPY_TBL FROM '/home/vldb/postgresql-16.2/src/test/regress/data/constrf.data';
2024-09-08 14:51:53.385 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot update column "upper" of view "rw_view15"
2024-09-08 14:51:53.385 KST client backend[3075497] pg_regress/updatable_views DETAIL:  View columns that are not columns of their base relation are not updatable.
2024-09-08 14:51:53.385 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view15 SET upper='ROW 3' WHERE a=3;
2024-09-08 14:51:53.385 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot update column "upper" of view "rw_view15"
2024-09-08 14:51:53.385 KST client backend[3075497] pg_regress/updatable_views DETAIL:  View columns that are not columns of their base relation are not updatable.
2024-09-08 14:51:53.385 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view15 SET upper=DEFAULT WHERE a=3;
2024-09-08 14:51:53.385 KST client backend[3075497] pg_regress/updatable_views ERROR:  multiple assignments to same column "a"
2024-09-08 14:51:53.385 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view16 VALUES (3, 'Row 3', 3);
2024-09-08 14:51:53.385 KST client backend[3075497] pg_regress/updatable_views ERROR:  multiple assignments to same column "a"
2024-09-08 14:51:53.385 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view16 SET a=3, aa=-3 WHERE a=3;
2024-09-08 14:51:53.386 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot insert into view "ro_view1"
2024-09-08 14:51:53.386 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views containing DISTINCT are not automatically updatable.
2024-09-08 14:51:53.386 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable inserting into the view, provide an INSTEAD OF INSERT trigger or an unconditional ON INSERT DO INSTEAD rule.
2024-09-08 14:51:53.386 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO ro_view17 VALUES (3, 'ROW 3');
2024-09-08 14:51:53.386 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot delete from view "ro_view18"
2024-09-08 14:51:53.386 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views that do not select from a single table or view are not automatically updatable.
2024-09-08 14:51:53.386 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable deleting from the view, provide an INSTEAD OF DELETE trigger or an unconditional ON DELETE DO INSTEAD rule.
2024-09-08 14:51:53.386 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  DELETE FROM ro_view18;
2024-09-08 14:51:53.386 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot update view "ro_view19"
2024-09-08 14:51:53.386 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views that do not select from a single table or view are not automatically updatable.
2024-09-08 14:51:53.386 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable updating the view, provide an INSTEAD OF UPDATE trigger or an unconditional ON UPDATE DO INSTEAD rule.
2024-09-08 14:51:53.386 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE ro_view19 SET last_value=1000;
2024-09-08 14:51:53.386 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot update view "ro_view20"
2024-09-08 14:51:53.386 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views that return set-returning functions are not automatically updatable.
2024-09-08 14:51:53.386 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable updating the view, provide an INSTEAD OF UPDATE trigger or an unconditional ON UPDATE DO INSTEAD rule.
2024-09-08 14:51:53.386 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE ro_view20 SET b=upper(b);
2024-09-08 14:51:53.392 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot insert into view "rw_view16"
2024-09-08 14:51:53.392 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views with conditional DO INSTEAD rules are not automatically updatable.
2024-09-08 14:51:53.392 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable inserting into the view, provide an INSTEAD OF INSERT trigger or an unconditional ON INSERT DO INSTEAD rule.
2024-09-08 14:51:53.392 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view16 (a, b) VALUES (3, 'Row 3');
2024-09-08 14:51:53.392 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot update view "rw_view16"
2024-09-08 14:51:53.392 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views with conditional DO INSTEAD rules are not automatically updatable.
2024-09-08 14:51:53.392 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable updating the view, provide an INSTEAD OF UPDATE trigger or an unconditional ON UPDATE DO INSTEAD rule.
2024-09-08 14:51:53.392 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view16 SET b='ROW 2' WHERE a=2;
2024-09-08 14:51:53.392 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot delete from view "rw_view16"
2024-09-08 14:51:53.392 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Views with conditional DO INSTEAD rules are not automatically updatable.
2024-09-08 14:51:53.392 KST client backend[3075497] pg_regress/updatable_views HINT:  To enable deleting from the view, provide an INSTEAD OF DELETE trigger or an unconditional ON DELETE DO INSTEAD rule.
2024-09-08 14:51:53.392 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  DELETE FROM rw_view16 WHERE a=2;
2024-09-08 14:51:53.392 KST client backend[3075488] pg_regress/constraints ERROR:  duplicate key value violates unique constraint "primary_tbl_pkey"
2024-09-08 14:51:53.392 KST client backend[3075488] pg_regress/constraints DETAIL:  Key (i)=(1) already exists.
2024-09-08 14:51:53.392 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO PRIMARY_TBL VALUES (1, 'three');
2024-09-08 14:51:53.392 KST client backend[3075488] pg_regress/constraints ERROR:  null value in column "i" of relation "primary_tbl" violates not-null constraint
2024-09-08 14:51:53.392 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (null, six).
2024-09-08 14:51:53.392 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO PRIMARY_TBL (t) VALUES ('six');
2024-09-08 14:51:53.392 KST client backend[3075492] pg_regress/triggers ERROR:  ttdummy (tttest): you cannot change price_on and/or price_off columns (use set_ttdummy)
2024-09-08 14:51:53.392 KST client backend[3075492] pg_regress/triggers STATEMENT:  update tttest set price_on = -1 where price_id = 1;
2024-09-08 14:51:53.393 KST client backend[3075485] pg_regress/create_function_sql ERROR:  could not find a function named "functest_b_1"
2024-09-08 14:51:53.393 KST client backend[3075485] pg_regress/create_function_sql STATEMENT:  DROP FUNCTION functest_b_1;
2024-09-08 14:51:53.393 KST client backend[3075485] pg_regress/create_function_sql ERROR:  function name "functest_b_2" is not unique
2024-09-08 14:51:53.393 KST client backend[3075485] pg_regress/create_function_sql HINT:  Specify the argument list to select the function unambiguously.
2024-09-08 14:51:53.393 KST client backend[3075485] pg_regress/create_function_sql STATEMENT:  DROP FUNCTION functest_b_2;
2024-09-08 14:51:53.393 KST client backend[3075485] pg_regress/create_function_sql ERROR:  cannot change routine kind
2024-09-08 14:51:53.393 KST client backend[3075485] pg_regress/create_function_sql DETAIL:  "functest1" is a function.
2024-09-08 14:51:53.393 KST client backend[3075485] pg_regress/create_function_sql STATEMENT:  CREATE OR REPLACE FUNCTION functest1(a int) RETURNS int LANGUAGE SQL WINDOW AS 'SELECT $1';
2024-09-08 14:51:53.393 KST client backend[3075485] pg_regress/create_function_sql ERROR:  cannot change routine kind
2024-09-08 14:51:53.393 KST client backend[3075485] pg_regress/create_function_sql DETAIL:  "functest1" is a function.
2024-09-08 14:51:53.393 KST client backend[3075485] pg_regress/create_function_sql STATEMENT:  CREATE OR REPLACE PROCEDURE functest1(a int) LANGUAGE SQL AS 'SELECT $1';
2024-09-08 14:51:53.394 KST client backend[3075495] pg_regress/vacuum ERROR:  ANALYZE cannot be executed from VACUUM or ANALYZE
2024-09-08 14:51:53.394 KST client backend[3075495] pg_regress/vacuum CONTEXT:  SQL function "do_analyze" statement 1
	SQL function "wrap_do_analyze" statement 1
2024-09-08 14:51:53.394 KST client backend[3075495] pg_regress/vacuum STATEMENT:  VACUUM FULL vaccluster;
2024-09-08 14:51:53.395 KST client backend[3075488] pg_regress/constraints ERROR:  null value in column "i" of relation "primary_tbl" violates not-null constraint
2024-09-08 14:51:53.395 KST client backend[3075488] pg_regress/constraints DETAIL:  Failing row contains (null, six).
2024-09-08 14:51:53.395 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO PRIMARY_TBL (t) VALUES ('six');
2024-09-08 14:51:53.397 KST client backend[3075488] pg_regress/constraints ERROR:  duplicate key value violates unique constraint "unique_tbl_i_key"
2024-09-08 14:51:53.397 KST client backend[3075488] pg_regress/constraints DETAIL:  Key (i)=(1) already exists.
2024-09-08 14:51:53.397 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO UNIQUE_TBL VALUES (1, 'three');
2024-09-08 14:51:53.397 KST client backend[3075485] pg_regress/create_function_sql ERROR:  return type mismatch in function declared to return integer
2024-09-08 14:51:53.397 KST client backend[3075485] pg_regress/create_function_sql DETAIL:  Actual return type is text.
2024-09-08 14:51:53.397 KST client backend[3075485] pg_regress/create_function_sql CONTEXT:  SQL function "test1"
2024-09-08 14:51:53.397 KST client backend[3075485] pg_regress/create_function_sql STATEMENT:  CREATE FUNCTION test1 (int) RETURNS int LANGUAGE SQL
	    AS 'SELECT ''not an integer'';';
2024-09-08 14:51:53.397 KST client backend[3075485] pg_regress/create_function_sql ERROR:  syntax error at or near "not" at character 62
2024-09-08 14:51:53.397 KST client backend[3075485] pg_regress/create_function_sql STATEMENT:  CREATE FUNCTION test1 (int) RETURNS int LANGUAGE SQL
	    AS 'not even SQL';
2024-09-08 14:51:53.397 KST client backend[3075485] pg_regress/create_function_sql ERROR:  return type mismatch in function declared to return integer
2024-09-08 14:51:53.397 KST client backend[3075485] pg_regress/create_function_sql DETAIL:  Final statement must return exactly one column.
2024-09-08 14:51:53.397 KST client backend[3075485] pg_regress/create_function_sql CONTEXT:  SQL function "test1"
2024-09-08 14:51:53.397 KST client backend[3075485] pg_regress/create_function_sql STATEMENT:  CREATE FUNCTION test1 (int) RETURNS int LANGUAGE SQL
	    AS 'SELECT 1, 2, 3;';
2024-09-08 14:51:53.397 KST client backend[3075485] pg_regress/create_function_sql ERROR:  there is no parameter $2 at character 69
2024-09-08 14:51:53.397 KST client backend[3075485] pg_regress/create_function_sql STATEMENT:  CREATE FUNCTION test1 (int) RETURNS int LANGUAGE SQL
	    AS 'SELECT $2;';
2024-09-08 14:51:53.397 KST client backend[3075485] pg_regress/create_function_sql ERROR:  only one AS item needed for language "sql"
2024-09-08 14:51:53.397 KST client backend[3075485] pg_regress/create_function_sql STATEMENT:  CREATE FUNCTION test1 (int) RETURNS int LANGUAGE SQL
	    AS 'a', 'b';
2024-09-08 14:51:53.398 KST client backend[3075488] pg_regress/constraints ERROR:  ON CONFLICT DO UPDATE command cannot affect row a second time
2024-09-08 14:51:53.398 KST client backend[3075488] pg_regress/constraints HINT:  Ensure that no rows proposed for insertion within the same command have duplicate constrained values.
2024-09-08 14:51:53.398 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO UNIQUE_TBL VALUES (1, 'a'), (2, 'b'), (2, 'b') ON CONFLICT (i) DO UPDATE SET t = 'fails';
2024-09-08 14:51:53.400 KST client backend[3075488] pg_regress/constraints ERROR:  duplicate key value violates unique constraint "unique_tbl_i_key"
2024-09-08 14:51:53.400 KST client backend[3075488] pg_regress/constraints DETAIL:  Key (i)=(1) already exists.
2024-09-08 14:51:53.400 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO UNIQUE_TBL VALUES (1, 'three');
2024-09-08 14:51:53.400 KST client backend[3075488] pg_regress/constraints ERROR:  duplicate key value violates unique constraint "unique_tbl_i_key"
2024-09-08 14:51:53.400 KST client backend[3075488] pg_regress/constraints DETAIL:  Key (i)=(null) already exists.
2024-09-08 14:51:53.400 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO UNIQUE_TBL (t) VALUES ('seven');
2024-09-08 14:51:53.402 KST client backend[3075500] pg_regress/create_am ERROR:  cannot have multiple SET ACCESS METHOD subcommands
2024-09-08 14:51:53.402 KST client backend[3075500] pg_regress/create_am STATEMENT:  ALTER TABLE heaptable SET ACCESS METHOD heap, SET ACCESS METHOD heap2;
2024-09-08 14:51:53.402 KST client backend[3075500] pg_regress/create_am ERROR:  cannot have multiple SET ACCESS METHOD subcommands
2024-09-08 14:51:53.402 KST client backend[3075500] pg_regress/create_am STATEMENT:  ALTER MATERIALIZED VIEW heapmv SET ACCESS METHOD heap, SET ACCESS METHOD heap2;
2024-09-08 14:51:53.403 KST client backend[3075488] pg_regress/constraints ERROR:  duplicate key value violates unique constraint "unique_tbl_i_t_key"
2024-09-08 14:51:53.403 KST client backend[3075488] pg_regress/constraints DETAIL:  Key (i, t)=(1, one) already exists.
2024-09-08 14:51:53.403 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO UNIQUE_TBL VALUES (1, 'one');
2024-09-08 14:51:53.404 KST client backend[3075500] pg_regress/create_am ERROR:  cannot change access method of a partitioned table
2024-09-08 14:51:53.404 KST client backend[3075500] pg_regress/create_am STATEMENT:  ALTER TABLE am_partitioned SET ACCESS METHOD heap2;
2024-09-08 14:51:53.406 KST client backend[3075488] pg_regress/constraints ERROR:  duplicate key value violates unique constraint "unique_tbl_i_key"
2024-09-08 14:51:53.406 KST client backend[3075488] pg_regress/constraints DETAIL:  Key (i)=(1) already exists.
2024-09-08 14:51:53.406 KST client backend[3075488] pg_regress/constraints STATEMENT:  UPDATE unique_tbl SET i = 1 WHERE i = 0;
2024-09-08 14:51:53.407 KST client backend[3075493] pg_regress/inherit ERROR:  column "tomorrow" inherits conflicting default values
2024-09-08 14:51:53.407 KST client backend[3075493] pg_regress/inherit HINT:  To resolve the conflict, specify a default explicitly.
2024-09-08 14:51:53.407 KST client backend[3075493] pg_regress/inherit STATEMENT:  CREATE TABLE otherchild () INHERITS (firstparent, thirdparent);
2024-09-08 14:51:53.408 KST client backend[3075488] pg_regress/constraints ERROR:  duplicate key value violates unique constraint "unique_tbl_i_key"
2024-09-08 14:51:53.408 KST client backend[3075488] pg_regress/constraints DETAIL:  Key (i)=(3) already exists.
2024-09-08 14:51:53.408 KST client backend[3075488] pg_regress/constraints STATEMENT:  COMMIT;
2024-09-08 14:51:53.408 KST client backend[3075488] pg_regress/constraints ERROR:  duplicate key value violates unique constraint "unique_tbl_i_key"
2024-09-08 14:51:53.408 KST client backend[3075488] pg_regress/constraints DETAIL:  Key (i)=(3) already exists.
2024-09-08 14:51:53.408 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO unique_tbl VALUES (3, 'Three');
2024-09-08 14:51:53.409 KST client backend[3075488] pg_regress/constraints ERROR:  duplicate key value violates unique constraint "unique_tbl_i_key"
2024-09-08 14:51:53.409 KST client backend[3075488] pg_regress/constraints DETAIL:  Key (i)=(3) already exists.
2024-09-08 14:51:53.409 KST client backend[3075488] pg_regress/constraints STATEMENT:  SET CONSTRAINTS ALL IMMEDIATE;
2024-09-08 14:51:53.409 KST client backend[3075492] pg_regress/triggers ERROR:  duplicate trigger events specified at or near "ON" at character 63
2024-09-08 14:51:53.409 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER error_upd_and_col BEFORE UPDATE OR UPDATE OF a ON main_table
	FOR EACH ROW EXECUTE PROCEDURE trigger_func('error_upd_and_col');
2024-09-08 14:51:53.409 KST client backend[3075492] pg_regress/triggers ERROR:  column "a" specified more than once
2024-09-08 14:51:53.409 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER error_upd_a_a BEFORE UPDATE OF a, a ON main_table
	FOR EACH ROW EXECUTE PROCEDURE trigger_func('error_upd_a_a');
2024-09-08 14:51:53.409 KST client backend[3075492] pg_regress/triggers ERROR:  syntax error at or near "OF" at character 42
2024-09-08 14:51:53.409 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER error_ins_a BEFORE INSERT OF a ON main_table
	FOR EACH ROW EXECUTE PROCEDURE trigger_func('error_ins_a');
2024-09-08 14:51:53.409 KST client backend[3075492] pg_regress/triggers ERROR:  INSERT trigger's WHEN condition cannot reference OLD values at character 88
2024-09-08 14:51:53.409 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER error_ins_when BEFORE INSERT OR UPDATE ON main_table
	FOR EACH ROW WHEN (OLD.a <> NEW.a)
	EXECUTE PROCEDURE trigger_func('error_ins_old');
2024-09-08 14:51:53.409 KST client backend[3075492] pg_regress/triggers ERROR:  DELETE trigger's WHEN condition cannot reference NEW values at character 97
2024-09-08 14:51:53.409 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER error_del_when BEFORE DELETE OR UPDATE ON main_table
	FOR EACH ROW WHEN (OLD.a <> NEW.a)
	EXECUTE PROCEDURE trigger_func('error_del_new');
2024-09-08 14:51:53.410 KST client backend[3075492] pg_regress/triggers ERROR:  BEFORE trigger's WHEN condition cannot reference NEW system columns at character 88
2024-09-08 14:51:53.410 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER error_del_when BEFORE INSERT OR UPDATE ON main_table
	FOR EACH ROW WHEN (NEW.tableoid <> 0)
	EXECUTE PROCEDURE trigger_func('error_when_sys_column');
2024-09-08 14:51:53.410 KST client backend[3075492] pg_regress/triggers ERROR:  statement trigger's WHEN condition cannot reference column values at character 90
2024-09-08 14:51:53.410 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER error_stmt_when BEFORE UPDATE OF a ON main_table
	FOR EACH STATEMENT WHEN (OLD.* IS DISTINCT FROM NEW.*)
	EXECUTE PROCEDURE trigger_func('error_stmt_when');
2024-09-08 14:51:53.410 KST client backend[3075492] pg_regress/triggers ERROR:  cannot drop column b of table main_table because other objects depend on it
2024-09-08 14:51:53.410 KST client backend[3075492] pg_regress/triggers DETAIL:  trigger after_upd_b_row_trig on table main_table depends on column b of table main_table
	trigger after_upd_a_b_row_trig on table main_table depends on column b of table main_table
	trigger after_upd_b_stmt_trig on table main_table depends on column b of table main_table
2024-09-08 14:51:53.410 KST client backend[3075492] pg_regress/triggers HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:53.410 KST client backend[3075492] pg_regress/triggers STATEMENT:  ALTER TABLE main_table DROP COLUMN b;
2024-09-08 14:51:53.410 KST client backend[3075500] pg_regress/create_am ERROR:  zero-length delimited identifier at or near """" at character 37
2024-09-08 14:51:53.410 KST client backend[3075500] pg_regress/create_am STATEMENT:  CREATE TABLE i_am_a_failure() USING "";
2024-09-08 14:51:53.410 KST client backend[3075500] pg_regress/create_am ERROR:  access method "i_do_not_exist_am" does not exist
2024-09-08 14:51:53.410 KST client backend[3075500] pg_regress/create_am STATEMENT:  CREATE TABLE i_am_a_failure() USING i_do_not_exist_am;
2024-09-08 14:51:53.411 KST client backend[3075500] pg_regress/create_am ERROR:  access method "I do not exist AM" does not exist
2024-09-08 14:51:53.411 KST client backend[3075500] pg_regress/create_am STATEMENT:  CREATE TABLE i_am_a_failure() USING "I do not exist AM";
2024-09-08 14:51:53.411 KST client backend[3075500] pg_regress/create_am ERROR:  access method "btree" is not of type TABLE
2024-09-08 14:51:53.411 KST client backend[3075500] pg_regress/create_am STATEMENT:  CREATE TABLE i_am_a_failure() USING "btree";
2024-09-08 14:51:53.411 KST client backend[3075500] pg_regress/create_am ERROR:  cannot drop access method heap2 because other objects depend on it
2024-09-08 14:51:53.411 KST client backend[3075500] pg_regress/create_am DETAIL:  table tableam_tbl_heap2 depends on access method heap2
	table tableam_tblas_heap2 depends on access method heap2
	materialized view tableam_tblmv_heap2 depends on access method heap2
	table tableam_parted_b_heap2 depends on access method heap2
	table tableam_parted_d_heap2 depends on access method heap2
2024-09-08 14:51:53.411 KST client backend[3075500] pg_regress/create_am HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:53.411 KST client backend[3075500] pg_regress/create_am STATEMENT:  DROP ACCESS METHOD heap2;
2024-09-08 14:51:53.412 KST client backend[3075488] pg_regress/constraints ERROR:  duplicate key value violates unique constraint "parted_uniq_tbl_1_i_key"
2024-09-08 14:51:53.412 KST client backend[3075488] pg_regress/constraints DETAIL:  Key (i)=(1) already exists.
2024-09-08 14:51:53.412 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO parted_uniq_tbl VALUES (1);
2024-09-08 14:51:53.412 KST client backend[3075488] pg_regress/constraints ERROR:  duplicate key value violates unique constraint "parted_uniq_tbl_1_i_key"
2024-09-08 14:51:53.412 KST client backend[3075488] pg_regress/constraints DETAIL:  Key (i)=(1) already exists.
2024-09-08 14:51:53.412 KST client backend[3075488] pg_regress/constraints STATEMENT:  COMMIT;
2024-09-08 14:51:53.416 KST client backend[3075493] pg_regress/inherit ERROR:  cannot alter inherited column "f1" of relation "childtab"
2024-09-08 14:51:53.416 KST client backend[3075493] pg_regress/inherit STATEMENT:  alter table parent1 alter column f1 type bigint;
2024-09-08 14:51:53.418 KST client backend[3075488] pg_regress/constraints ERROR:  duplicate key value violates unique constraint "unique_tbl_i_key"
2024-09-08 14:51:53.418 KST client backend[3075488] pg_regress/constraints DETAIL:  Key (i)=(3) already exists.
2024-09-08 14:51:53.418 KST client backend[3075488] pg_regress/constraints STATEMENT:  COMMIT;
2024-09-08 14:51:53.422 KST client backend[3075488] pg_regress/constraints ERROR:  conflicting key value violates exclusion constraint "circles_c1_c2_excl"
2024-09-08 14:51:53.422 KST client backend[3075488] pg_regress/constraints DETAIL:  Key (c1, (c2::circle))=(<(20,20),10>, <(0,0),4>) conflicts with existing key (c1, (c2::circle))=(<(10,10),10>, <(0,0),5>).
2024-09-08 14:51:53.422 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO circles VALUES('<(20,20), 10>', '<(0,0), 4>');
2024-09-08 14:51:53.422 KST client backend[3075488] pg_regress/constraints ERROR:  ON CONFLICT DO UPDATE not supported with exclusion constraints
2024-09-08 14:51:53.422 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO circles VALUES('<(20,20), 10>', '<(0,0), 4>')
	  ON CONFLICT ON CONSTRAINT circles_c1_c2_excl DO UPDATE SET c2 = EXCLUDED.c2;
2024-09-08 14:51:53.423 KST client backend[3075488] pg_regress/constraints ERROR:  could not create exclusion constraint "circles_c1_c2_excl1"
2024-09-08 14:51:53.423 KST client backend[3075488] pg_regress/constraints DETAIL:  Key (c1, (c2::circle))=(<(0,0),5>, <(0,0),5>) conflicts with key (c1, (c2::circle))=(<(0,0),5>, <(0,0),4>).
2024-09-08 14:51:53.423 KST client backend[3075488] pg_regress/constraints STATEMENT:  ALTER TABLE circles ADD EXCLUDE USING gist
	  (c1 WITH &&, (c2::circle) WITH &&);
2024-09-08 14:51:53.424 KST client backend[3075493] pg_regress/inherit ERROR:  constraint "p2chk" conflicts with inherited constraint on relation "c2"
2024-09-08 14:51:53.424 KST client backend[3075493] pg_regress/inherit STATEMENT:  create table c2 (constraint p2chk check (ff1 > 10) no inherit) inherits (p1);
2024-09-08 14:51:53.425 KST client backend[3075488] pg_regress/constraints ERROR:  conflicting key value violates exclusion constraint "deferred_excl_con"
2024-09-08 14:51:53.425 KST client backend[3075488] pg_regress/constraints DETAIL:  Key (f1)=(1) conflicts with existing key (f1)=(1).
2024-09-08 14:51:53.425 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO deferred_excl VALUES(1);
2024-09-08 14:51:53.425 KST client backend[3075488] pg_regress/constraints ERROR:  ON CONFLICT does not support deferrable unique constraints/exclusion constraints as arbiters
2024-09-08 14:51:53.425 KST client backend[3075488] pg_regress/constraints STATEMENT:  INSERT INTO deferred_excl VALUES(1) ON CONFLICT ON CONSTRAINT deferred_excl_con DO NOTHING;
2024-09-08 14:51:53.425 KST client backend[3075488] pg_regress/constraints ERROR:  conflicting key value violates exclusion constraint "deferred_excl_con"
2024-09-08 14:51:53.425 KST client backend[3075488] pg_regress/constraints DETAIL:  Key (f1)=(2) conflicts with existing key (f1)=(2).
2024-09-08 14:51:53.425 KST client backend[3075488] pg_regress/constraints STATEMENT:  COMMIT;
2024-09-08 14:51:53.425 KST client backend[3075488] pg_regress/constraints ERROR:  conflicting key value violates exclusion constraint "deferred_excl_con"
2024-09-08 14:51:53.425 KST client backend[3075488] pg_regress/constraints DETAIL:  Key (f1)=(3) conflicts with existing key (f1)=(3).
2024-09-08 14:51:53.425 KST client backend[3075488] pg_regress/constraints STATEMENT:  COMMIT;
2024-09-08 14:51:53.427 KST client backend[3075488] pg_regress/constraints ERROR:  could not create exclusion constraint "deferred_excl_f1_excl"
2024-09-08 14:51:53.427 KST client backend[3075488] pg_regress/constraints DETAIL:  Key (f1)=(3) conflicts with key (f1)=(3).
2024-09-08 14:51:53.427 KST client backend[3075488] pg_regress/constraints STATEMENT:  ALTER TABLE deferred_excl ADD EXCLUDE (f1 WITH =);
2024-09-08 14:51:53.428 KST client backend[3075488] pg_regress/constraints ERROR:  constraint "no_constraint" for table "constraint_comments_tbl" does not exist
2024-09-08 14:51:53.428 KST client backend[3075488] pg_regress/constraints STATEMENT:  COMMENT ON CONSTRAINT no_constraint ON constraint_comments_tbl IS 'yes, the comment';
2024-09-08 14:51:53.428 KST client backend[3075488] pg_regress/constraints ERROR:  constraint "no_constraint" for domain constraint_comments_dom does not exist
2024-09-08 14:51:53.428 KST client backend[3075488] pg_regress/constraints STATEMENT:  COMMENT ON CONSTRAINT no_constraint ON DOMAIN constraint_comments_dom IS 'yes, another comment';
2024-09-08 14:51:53.428 KST client backend[3075488] pg_regress/constraints ERROR:  relation "no_comments_tbl" does not exist
2024-09-08 14:51:53.428 KST client backend[3075488] pg_regress/constraints STATEMENT:  COMMENT ON CONSTRAINT the_constraint ON no_comments_tbl IS 'bad comment';
2024-09-08 14:51:53.428 KST client backend[3075488] pg_regress/constraints ERROR:  type "no_comments_dom" does not exist
2024-09-08 14:51:53.428 KST client backend[3075488] pg_regress/constraints STATEMENT:  COMMENT ON CONSTRAINT the_constraint ON DOMAIN no_comments_dom IS 'another bad comment';
2024-09-08 14:51:53.429 KST client backend[3075488] pg_regress/constraints ERROR:  must be owner of relation constraint_comments_tbl
2024-09-08 14:51:53.429 KST client backend[3075488] pg_regress/constraints STATEMENT:  COMMENT ON CONSTRAINT the_constraint ON constraint_comments_tbl IS 'no, the comment';
2024-09-08 14:51:53.429 KST client backend[3075488] pg_regress/constraints ERROR:  must be owner of type constraint_comments_dom
2024-09-08 14:51:53.429 KST client backend[3075488] pg_regress/constraints STATEMENT:  COMMENT ON CONSTRAINT the_constraint ON DOMAIN constraint_comments_dom IS 'no, another comment';
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers ERROR:  "main_view" is a view
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers DETAIL:  Views cannot have row-level BEFORE or AFTER triggers.
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER invalid_trig BEFORE INSERT ON main_view
	FOR EACH ROW EXECUTE PROCEDURE trigger_func('before_ins_row');
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers ERROR:  "main_view" is a view
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers DETAIL:  Views cannot have row-level BEFORE or AFTER triggers.
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER invalid_trig BEFORE UPDATE ON main_view
	FOR EACH ROW EXECUTE PROCEDURE trigger_func('before_upd_row');
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers ERROR:  "main_view" is a view
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers DETAIL:  Views cannot have row-level BEFORE or AFTER triggers.
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER invalid_trig BEFORE DELETE ON main_view
	FOR EACH ROW EXECUTE PROCEDURE trigger_func('before_del_row');
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers ERROR:  "main_view" is a view
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers DETAIL:  Views cannot have row-level BEFORE or AFTER triggers.
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER invalid_trig AFTER INSERT ON main_view
	FOR EACH ROW EXECUTE PROCEDURE trigger_func('before_ins_row');
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers ERROR:  "main_view" is a view
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers DETAIL:  Views cannot have row-level BEFORE or AFTER triggers.
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER invalid_trig AFTER UPDATE ON main_view
	FOR EACH ROW EXECUTE PROCEDURE trigger_func('before_upd_row');
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers ERROR:  "main_view" is a view
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers DETAIL:  Views cannot have row-level BEFORE or AFTER triggers.
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER invalid_trig AFTER DELETE ON main_view
	FOR EACH ROW EXECUTE PROCEDURE trigger_func('before_del_row');
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers ERROR:  "main_view" is a view
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers DETAIL:  Views cannot have TRUNCATE triggers.
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER invalid_trig BEFORE TRUNCATE ON main_view
	EXECUTE PROCEDURE trigger_func('before_tru_row');
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers ERROR:  "main_view" is a view
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers DETAIL:  Views cannot have TRUNCATE triggers.
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER invalid_trig AFTER TRUNCATE ON main_view
	EXECUTE PROCEDURE trigger_func('before_tru_row');
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers ERROR:  "main_table" is a table
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers DETAIL:  Tables cannot have INSTEAD OF triggers.
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER invalid_trig INSTEAD OF INSERT ON main_table
	FOR EACH ROW EXECUTE PROCEDURE view_trigger('instead_of_ins');
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers ERROR:  "main_table" is a table
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers DETAIL:  Tables cannot have INSTEAD OF triggers.
2024-09-08 14:51:53.431 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER invalid_trig INSTEAD OF UPDATE ON main_table
	FOR EACH ROW EXECUTE PROCEDURE view_trigger('instead_of_upd');
2024-09-08 14:51:53.432 KST client backend[3075492] pg_regress/triggers ERROR:  "main_table" is a table
2024-09-08 14:51:53.432 KST client backend[3075492] pg_regress/triggers DETAIL:  Tables cannot have INSTEAD OF triggers.
2024-09-08 14:51:53.432 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER invalid_trig INSTEAD OF DELETE ON main_table
	FOR EACH ROW EXECUTE PROCEDURE view_trigger('instead_of_del');
2024-09-08 14:51:53.432 KST client backend[3075492] pg_regress/triggers ERROR:  INSTEAD OF triggers cannot have WHEN conditions
2024-09-08 14:51:53.432 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER invalid_trig INSTEAD OF UPDATE ON main_view
	FOR EACH ROW WHEN (OLD.a <> NEW.a) EXECUTE PROCEDURE view_trigger('instead_of_upd');
2024-09-08 14:51:53.432 KST client backend[3075492] pg_regress/triggers ERROR:  INSTEAD OF triggers cannot have column lists
2024-09-08 14:51:53.432 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER invalid_trig INSTEAD OF UPDATE OF a ON main_view
	FOR EACH ROW EXECUTE PROCEDURE view_trigger('instead_of_upd');
2024-09-08 14:51:53.432 KST client backend[3075492] pg_regress/triggers ERROR:  INSTEAD OF triggers must be FOR EACH ROW
2024-09-08 14:51:53.432 KST client backend[3075492] pg_regress/triggers STATEMENT:  CREATE TRIGGER invalid_trig INSTEAD OF UPDATE ON main_view
	EXECUTE PROCEDURE view_trigger('instead_of_upd');
2024-09-08 14:51:53.432 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "ac" violates check constraint "ac_check"
2024-09-08 14:51:53.432 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (null).
2024-09-08 14:51:53.432 KST client backend[3075493] pg_regress/inherit STATEMENT:  insert into ac (aa) values (NULL);
2024-09-08 14:51:53.432 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "bc" violates check constraint "ac_check"
2024-09-08 14:51:53.432 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (null, null).
2024-09-08 14:51:53.432 KST client backend[3075493] pg_regress/inherit STATEMENT:  insert into bc (aa) values (NULL);
2024-09-08 14:51:53.432 KST client backend[3075493] pg_regress/inherit ERROR:  cannot drop inherited constraint "ac_check" of relation "bc"
2024-09-08 14:51:53.432 KST client backend[3075493] pg_regress/inherit STATEMENT:  alter table bc drop constraint ac_check;
2024-09-08 14:51:53.433 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "ac" violates check constraint "ac_aa_check"
2024-09-08 14:51:53.433 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (null).
2024-09-08 14:51:53.433 KST client backend[3075493] pg_regress/inherit STATEMENT:  insert into ac (aa) values (NULL);
2024-09-08 14:51:53.433 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "bc" violates check constraint "ac_aa_check"
2024-09-08 14:51:53.433 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (null, null).
2024-09-08 14:51:53.433 KST client backend[3075493] pg_regress/inherit STATEMENT:  insert into bc (aa) values (NULL);
2024-09-08 14:51:53.433 KST client backend[3075493] pg_regress/inherit ERROR:  cannot drop inherited constraint "ac_aa_check" of relation "bc"
2024-09-08 14:51:53.433 KST client backend[3075493] pg_regress/inherit STATEMENT:  alter table bc drop constraint ac_aa_check;
2024-09-08 14:51:53.442 KST client backend[3075493] pg_regress/inherit ERROR:  check constraint "cc" of relation "c1" is violated by some row
2024-09-08 14:51:53.442 KST client backend[3075493] pg_regress/inherit STATEMENT:  alter table p2 add constraint cc check (f2>0);
2024-09-08 14:51:53.442 KST client backend[3075493] pg_regress/inherit ERROR:  check constraint "p2_f2_check" of relation "c1" is violated by some row
2024-09-08 14:51:53.442 KST client backend[3075493] pg_regress/inherit STATEMENT:  alter table p2 add check (f2>0);
2024-09-08 14:51:53.442 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "c1" violates check constraint "p2_f2_check"
2024-09-08 14:51:53.442 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (1, -1, 2).
2024-09-08 14:51:53.442 KST client backend[3075493] pg_regress/inherit STATEMENT:  insert into c1 values(1,-1,2);
2024-09-08 14:51:53.443 KST client backend[3075495] pg_regress/vacuum ERROR:  parallel workers for vacuum must be between 0 and 1024 at character 9
2024-09-08 14:51:53.443 KST client backend[3075495] pg_regress/vacuum STATEMENT:  VACUUM (PARALLEL -1) pvactst;
2024-09-08 14:51:53.444 KST client backend[3075495] pg_regress/vacuum ERROR:  VACUUM FULL cannot be performed in parallel
2024-09-08 14:51:53.444 KST client backend[3075495] pg_regress/vacuum STATEMENT:  VACUUM (PARALLEL 2, FULL TRUE) pvactst;
2024-09-08 14:51:53.444 KST client backend[3075495] pg_regress/vacuum ERROR:  parallel option requires a value between 0 and 1024 at character 9
2024-09-08 14:51:53.444 KST client backend[3075495] pg_regress/vacuum STATEMENT:  VACUUM (PARALLEL) pvactst;
2024-09-08 14:51:53.445 KST client backend[3075495] pg_regress/vacuum WARNING:  disabling parallel option of vacuum on "tmp" --- cannot vacuum temporary tables in parallel
2024-09-08 14:51:53.451 KST client backend[3075492] pg_regress/triggers ERROR:  No such country: "Japon"
2024-09-08 14:51:53.451 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function city_update() line 9 at RAISE
2024-09-08 14:51:53.451 KST client backend[3075492] pg_regress/triggers STATEMENT:  UPDATE city_view SET country_name = 'Japon' WHERE city_name = 'Tokyo';
2024-09-08 14:51:53.453 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.453 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO base_tbl VALUES (3, 'Row 3', 3.0);
2024-09-08 14:51:53.453 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.453 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view1 VALUES ('Row 3', 3.0, 3);
2024-09-08 14:51:53.453 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.453 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view2 VALUES ('Row 3', 3.0, 3);
2024-09-08 14:51:53.453 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.453 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE base_tbl SET b=b;
2024-09-08 14:51:53.453 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.453 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view1 SET aa=aa;
2024-09-08 14:51:53.453 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.453 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET bb=bb;
2024-09-08 14:51:53.453 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.453 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  DELETE FROM base_tbl;
2024-09-08 14:51:53.453 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.453 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  DELETE FROM rw_view1;
2024-09-08 14:51:53.453 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.453 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  DELETE FROM rw_view2;
2024-09-08 14:51:53.454 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.454 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view1 VALUES ('Row 4', 4.0, 4);
2024-09-08 14:51:53.454 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.454 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  DELETE FROM rw_view1 WHERE aa=2;
2024-09-08 14:51:53.455 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.455 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO base_tbl VALUES (5, 'Row 5', 5.0);
2024-09-08 14:51:53.455 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.455 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view2 VALUES ('Row 6', 6.0, 6);
2024-09-08 14:51:53.455 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.455 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  DELETE FROM base_tbl WHERE a=3;
2024-09-08 14:51:53.455 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.455 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  DELETE FROM rw_view2 WHERE aa=4;
2024-09-08 14:51:53.457 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.457 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view1;
2024-09-08 14:51:53.457 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.457 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view1 FOR UPDATE;
2024-09-08 14:51:53.457 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.457 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view1 SET b = 'foo' WHERE a = 1;
2024-09-08 14:51:53.458 KST client backend[3075493] pg_regress/inherit ERROR:  cannot rename inherited column "b"
2024-09-08 14:51:53.458 KST client backend[3075493] pg_regress/inherit STATEMENT:  ALTER TABLE inht1 RENAME b TO bb;
2024-09-08 14:51:53.458 KST client backend[3075493] pg_regress/inherit ERROR:  cannot rename inherited column "aa"
2024-09-08 14:51:53.458 KST client backend[3075493] pg_regress/inherit STATEMENT:  ALTER TABLE inhts RENAME aa TO aaa;
2024-09-08 14:51:53.458 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.458 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view2;
2024-09-08 14:51:53.458 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.458 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view2 FOR UPDATE;
2024-09-08 14:51:53.458 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.458 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET b = 'bar' WHERE a = 1;
2024-09-08 14:51:53.458 KST client backend[3075495] pg_regress/vacuum ERROR:  null value in column "i" of relation "vac_truncate_test" violates not-null constraint
2024-09-08 14:51:53.458 KST client backend[3075495] pg_regress/vacuum DETAIL:  Failing row contains (null, null).
2024-09-08 14:51:53.458 KST client backend[3075495] pg_regress/vacuum STATEMENT:  INSERT INTO vac_truncate_test VALUES (1, NULL), (NULL, NULL);
2024-09-08 14:51:53.458 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.458 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view1 FOR UPDATE;
2024-09-08 14:51:53.459 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.459 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view1 SET b = 'foo' WHERE a = 1;
2024-09-08 14:51:53.459 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.459 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view2;
2024-09-08 14:51:53.459 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.459 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view2 FOR UPDATE;
2024-09-08 14:51:53.459 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.459 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET b = 'bar' WHERE a = 1;
2024-09-08 14:51:53.459 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.459 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view2 FOR UPDATE;
2024-09-08 14:51:53.459 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.459 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET b = 'bar' WHERE a = 1;
2024-09-08 14:51:53.460 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.460 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view2 FOR UPDATE;
2024-09-08 14:51:53.460 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.460 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET b = 'bar' WHERE a = 1;
2024-09-08 14:51:53.461 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.461 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view1 FOR UPDATE;
2024-09-08 14:51:53.461 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.461 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view1 SET b = 'foo' WHERE a = 1;
2024-09-08 14:51:53.461 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.461 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view2 FOR UPDATE;
2024-09-08 14:51:53.461 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.461 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET b = 'bar' WHERE a = 1;
2024-09-08 14:51:53.463 KST client backend[3075495] pg_regress/vacuum ERROR:  column "a" of relation "vacparted" appears more than once
2024-09-08 14:51:53.463 KST client backend[3075495] pg_regress/vacuum STATEMENT:  VACUUM ANALYZE vacparted(a,b,a);
2024-09-08 14:51:53.463 KST client backend[3075495] pg_regress/vacuum ERROR:  column "b" of relation "vacparted" appears more than once
2024-09-08 14:51:53.463 KST client backend[3075495] pg_regress/vacuum STATEMENT:  ANALYZE vacparted(a,b,b);
2024-09-08 14:51:53.464 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.464 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM base_tbl;
2024-09-08 14:51:53.464 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.464 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view1;
2024-09-08 14:51:53.464 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.464 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO base_tbl VALUES (3, 'Row 3', 3.0);
2024-09-08 14:51:53.464 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.464 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view1 VALUES ('Row 3', 3.0, 3);
2024-09-08 14:51:53.464 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.464 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE base_tbl SET a=a;
2024-09-08 14:51:53.464 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.464 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view1 SET bb=bb, cc=cc;
2024-09-08 14:51:53.464 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.464 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  DELETE FROM base_tbl;
2024-09-08 14:51:53.464 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.464 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  DELETE FROM rw_view1;
2024-09-08 14:51:53.465 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.465 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE base_tbl SET b=b;
2024-09-08 14:51:53.465 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.465 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view1 SET aa=aa;
2024-09-08 14:51:53.465 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.465 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view1 SET bb=bb;
2024-09-08 14:51:53.466 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.466 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view1 VALUES ('Row 4', 4.0, 4);
2024-09-08 14:51:53.466 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.466 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  DELETE FROM rw_view1 WHERE aa=2;
2024-09-08 14:51:53.466 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.466 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view1 VALUES ('Row 4', 4.0, 4);
2024-09-08 14:51:53.466 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.466 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  DELETE FROM rw_view1 WHERE aa=2;
2024-09-08 14:51:53.467 KST client backend[3075492] pg_regress/triggers ERROR:  U9999
2024-09-08 14:51:53.467 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function depth_c_tf() line 5 at RAISE
	SQL statement "insert into depth_c values (1)"
	PL/pgSQL function depth_b_tf() line 12 at EXECUTE
	SQL statement "insert into depth_b values (new.id)"
	PL/pgSQL function depth_a_tf() line 4 at SQL statement
2024-09-08 14:51:53.467 KST client backend[3075492] pg_regress/triggers STATEMENT:  insert into depth_a values (1);
2024-09-08 14:51:53.468 KST client backend[3075493] pg_regress/inherit ERROR:  cannot rename inherited column "b"
2024-09-08 14:51:53.468 KST client backend[3075493] pg_regress/inherit STATEMENT:  ALTER TABLE inht1 RENAME b TO bb;
2024-09-08 14:51:53.469 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.469 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view1;
2024-09-08 14:51:53.469 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.469 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view1 SET aa=aa;
2024-09-08 14:51:53.469 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.469 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view2;
2024-09-08 14:51:53.470 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.470 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET aaa=aaa;
2024-09-08 14:51:53.470 KST client backend[3075495] pg_regress/vacuum ERROR:  relation "does_not_exist" does not exist
2024-09-08 14:51:53.470 KST client backend[3075495] pg_regress/vacuum STATEMENT:  VACUUM vacparted, does_not_exist;
2024-09-08 14:51:53.470 KST client backend[3075495] pg_regress/vacuum ERROR:  relation "does_not_exist" does not exist
2024-09-08 14:51:53.470 KST client backend[3075495] pg_regress/vacuum STATEMENT:  VACUUM (FREEZE) does_not_exist, vaccluster;
2024-09-08 14:51:53.470 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.470 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view1 SET cc=cc;
2024-09-08 14:51:53.470 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.470 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view2;
2024-09-08 14:51:53.470 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.470 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET aaa=aaa;
2024-09-08 14:51:53.470 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.470 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view2;
2024-09-08 14:51:53.470 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.470 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET aaa=aaa;
2024-09-08 14:51:53.471 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.471 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view2;
2024-09-08 14:51:53.471 KST client backend[3075495] pg_regress/vacuum ERROR:  column "does_not_exist" of relation "vactst" does not exist
2024-09-08 14:51:53.471 KST client backend[3075495] pg_regress/vacuum STATEMENT:  VACUUM ANALYZE vactst (does_not_exist), vacparted (b);
2024-09-08 14:51:53.471 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.471 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET bbb=bbb;
2024-09-08 14:51:53.471 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.471 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view2;
2024-09-08 14:51:53.471 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.471 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET bbb=bbb;
2024-09-08 14:51:53.472 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.472 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET aaa=aaa;
2024-09-08 14:51:53.472 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.472 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET bbb=bbb;
2024-09-08 14:51:53.472 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.472 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view2;
2024-09-08 14:51:53.472 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.472 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET aaa=aaa;
2024-09-08 14:51:53.472 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.472 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET bbb=bbb;
2024-09-08 14:51:53.472 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.472 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET ccc=ccc;
2024-09-08 14:51:53.473 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.473 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET aaa=aaa;
2024-09-08 14:51:53.473 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.473 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET bbb=bbb;
2024-09-08 14:51:53.473 KST client backend[3075495] pg_regress/vacuum ERROR:  ANALYZE option must be specified when a column list is provided
2024-09-08 14:51:53.473 KST client backend[3075495] pg_regress/vacuum STATEMENT:  VACUUM FULL vactst, vacparted (a, b), vaccluster (i);
2024-09-08 14:51:53.473 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.473 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view1;
2024-09-08 14:51:53.473 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.473 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view1 SET aa=aa;
2024-09-08 14:51:53.473 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.473 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET aaa=aaa;
2024-09-08 14:51:53.473 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.473 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET bbb=bbb;
2024-09-08 14:51:53.474 KST client backend[3075495] pg_regress/vacuum ERROR:  relation "does_not_exist" does not exist
2024-09-08 14:51:53.474 KST client backend[3075495] pg_regress/vacuum STATEMENT:  ANALYZE vactst, does_not_exist, vacparted;
2024-09-08 14:51:53.474 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.474 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET aaa=aaa;
2024-09-08 14:51:53.474 KST client backend[3075492] pg_regress/triggers ERROR:  tuple to be updated was already modified by an operation triggered by the current command
2024-09-08 14:51:53.474 KST client backend[3075492] pg_regress/triggers HINT:  Consider using an AFTER trigger instead of a BEFORE trigger to propagate changes to other rows.
2024-09-08 14:51:53.474 KST client backend[3075492] pg_regress/triggers STATEMENT:  update parent set val1 = 'b' where aid = 1;
2024-09-08 14:51:53.474 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.474 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET bbb=bbb;
2024-09-08 14:51:53.474 KST client backend[3075495] pg_regress/vacuum ERROR:  column "does_not_exist" of relation "vacparted" does not exist
2024-09-08 14:51:53.474 KST client backend[3075495] pg_regress/vacuum STATEMENT:  ANALYZE vactst (i), vacparted (does_not_exist);
2024-09-08 14:51:53.474 KST client backend[3075492] pg_regress/triggers ERROR:  tuple to be deleted was already modified by an operation triggered by the current command
2024-09-08 14:51:53.474 KST client backend[3075492] pg_regress/triggers HINT:  Consider using an AFTER trigger instead of a BEFORE trigger to propagate changes to other rows.
2024-09-08 14:51:53.474 KST client backend[3075492] pg_regress/triggers STATEMENT:  delete from parent where aid = 1;
2024-09-08 14:51:53.474 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.474 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  SELECT * FROM rw_view2;
2024-09-08 14:51:53.474 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.474 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET aaa=aaa;
2024-09-08 14:51:53.474 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.474 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET bbb=bbb;
2024-09-08 14:51:53.474 KST client backend[3075495] pg_regress/vacuum ERROR:  relation "does_not_exist" does not exist
2024-09-08 14:51:53.474 KST client backend[3075495] pg_regress/vacuum STATEMENT:  ANALYZE (VERBOSE) does_not_exist;
2024-09-08 14:51:53.474 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.474 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET ccc=ccc;
2024-09-08 14:51:53.474 KST client backend[3075495] pg_regress/vacuum ERROR:  syntax error at or near "arg" at character 22
2024-09-08 14:51:53.474 KST client backend[3075495] pg_regress/vacuum STATEMENT:  ANALYZE (nonexistent-arg) does_not_exist;
2024-09-08 14:51:53.474 KST client backend[3075495] pg_regress/vacuum ERROR:  unrecognized ANALYZE option "nonexistentarg" at character 10
2024-09-08 14:51:53.474 KST client backend[3075495] pg_regress/vacuum STATEMENT:  ANALYZE (nonexistentarg) does_not_exit;
2024-09-08 14:51:53.475 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.475 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET aaa=aaa;
2024-09-08 14:51:53.475 KST client backend[3075495] pg_regress/vacuum ERROR:  relation "does_not_exist" does not exist
2024-09-08 14:51:53.475 KST client backend[3075495] pg_regress/vacuum STATEMENT:  ANALYZE (SKIP_LOCKED, VERBOSE) does_not_exist;
2024-09-08 14:51:53.475 KST client backend[3075495] pg_regress/vacuum ERROR:  relation "does_not_exist" does not exist
2024-09-08 14:51:53.475 KST client backend[3075495] pg_regress/vacuum STATEMENT:  ANALYZE (VERBOSE, SKIP_LOCKED) does_not_exist;
2024-09-08 14:51:53.475 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.475 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET bbb=bbb;
2024-09-08 14:51:53.481 KST client backend[3075492] pg_regress/triggers ERROR:  tuple to be updated was already modified by an operation triggered by the current command
2024-09-08 14:51:53.481 KST client backend[3075492] pg_regress/triggers HINT:  Consider using an AFTER trigger instead of a BEFORE trigger to propagate changes to other rows.
2024-09-08 14:51:53.481 KST client backend[3075492] pg_regress/triggers STATEMENT:  delete from self_ref_trigger;
2024-09-08 14:51:53.484 KST client backend[3075495] pg_regress/vacuum ERROR:  PROCESS_TOAST required with VACUUM FULL
2024-09-08 14:51:53.484 KST client backend[3075495] pg_regress/vacuum STATEMENT:  VACUUM (PROCESS_TOAST FALSE, FULL) vac_option_tab;
2024-09-08 14:51:53.485 KST client backend[3075492] pg_regress/triggers ERROR:  cannot ALTER TABLE "trigger_ddl_table" because it is being used by active queries in this session
2024-09-08 14:51:53.485 KST client backend[3075492] pg_regress/triggers CONTEXT:  SQL statement "alter table trigger_ddl_table add primary key (col1)"
	PL/pgSQL function trigger_ddl_func() line 3 at SQL statement
2024-09-08 14:51:53.485 KST client backend[3075492] pg_regress/triggers STATEMENT:  insert into trigger_ddl_table values (1, 42);
2024-09-08 14:51:53.486 KST client backend[3075492] pg_regress/triggers ERROR:  cannot CREATE INDEX "trigger_ddl_table" because it is being used by active queries in this session
2024-09-08 14:51:53.486 KST client backend[3075492] pg_regress/triggers CONTEXT:  SQL statement "create index on trigger_ddl_table (col2)"
	PL/pgSQL function trigger_ddl_func() line 3 at SQL statement
2024-09-08 14:51:53.486 KST client backend[3075492] pg_regress/triggers STATEMENT:  insert into trigger_ddl_table values (1, 42);
2024-09-08 14:51:53.486 KST client backend[3075498] pg_regress/infinite_recurse ERROR:  stack depth limit exceeded
2024-09-08 14:51:53.486 KST client backend[3075498] pg_regress/infinite_recurse HINT:  Increase the configuration parameter "max_stack_depth" (currently 2048kB), after ensuring the platform's stack depth limit is adequate.
2024-09-08 14:51:53.486 KST client backend[3075498] pg_regress/infinite_recurse CONTEXT:  SQL function "infinite_recurse" during inlining
	SQL function "infinite_recurse" during startup
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
	SQL function "infinite_recurse" statement 1
2024-09-08 14:51:53.486 KST client backend[3075498] pg_regress/infinite_recurse STATEMENT:  select infinite_recurse();
2024-09-08 14:51:53.488 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot insert into column "ctid" of view "rw_view1"
2024-09-08 14:51:53.488 KST client backend[3075497] pg_regress/updatable_views DETAIL:  View columns that refer to system columns are not updatable.
2024-09-08 14:51:53.488 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view1 VALUES (null, null, 1.1, null);
2024-09-08 14:51:53.488 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot insert into column "s" of view "rw_view1"
2024-09-08 14:51:53.488 KST client backend[3075497] pg_regress/updatable_views DETAIL:  View columns that are not columns of their base relation are not updatable.
2024-09-08 14:51:53.488 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view1 (s, c, a) VALUES (null, null, 1.1);
2024-09-08 14:51:53.488 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot update column "s" of view "rw_view1"
2024-09-08 14:51:53.488 KST client backend[3075497] pg_regress/updatable_views DETAIL:  View columns that are not columns of their base relation are not updatable.
2024-09-08 14:51:53.488 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view1 SET s = s WHERE a = 1.1;
2024-09-08 14:51:53.488 KST client backend[3075495] pg_regress/vacuum ERROR:  BUFFER_USAGE_LIMIT option must be 0 or between 128 kB and 16777216 kB
2024-09-08 14:51:53.488 KST client backend[3075495] pg_regress/vacuum STATEMENT:  VACUUM (BUFFER_USAGE_LIMIT 16777220) vac_option_tab;
2024-09-08 14:51:53.488 KST client backend[3075495] pg_regress/vacuum ERROR:  BUFFER_USAGE_LIMIT option must be 0 or between 128 kB and 16777216 kB
2024-09-08 14:51:53.488 KST client backend[3075495] pg_regress/vacuum STATEMENT:  VACUUM (BUFFER_USAGE_LIMIT 120) vac_option_tab;
2024-09-08 14:51:53.488 KST client backend[3075495] pg_regress/vacuum ERROR:  BUFFER_USAGE_LIMIT option must be 0 or between 128 kB and 16777216 kB
2024-09-08 14:51:53.488 KST client backend[3075495] pg_regress/vacuum HINT:  Value exceeds integer range.
2024-09-08 14:51:53.488 KST client backend[3075495] pg_regress/vacuum STATEMENT:  VACUUM (BUFFER_USAGE_LIMIT 10000000000) vac_option_tab;
2024-09-08 14:51:53.488 KST client backend[3075492] pg_regress/triggers WARNING:  before insert (new): (1,black)
2024-09-08 14:51:53.488 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_before_func() line 7 at RAISE
2024-09-08 14:51:53.488 KST client backend[3075495] pg_regress/vacuum ERROR:  BUFFER_USAGE_LIMIT cannot be specified for VACUUM FULL
2024-09-08 14:51:53.488 KST client backend[3075495] pg_regress/vacuum STATEMENT:  VACUUM (BUFFER_USAGE_LIMIT '512 kB', FULL) vac_option_tab;
2024-09-08 14:51:53.488 KST client backend[3075492] pg_regress/triggers WARNING:  after insert (new): (1,black)
2024-09-08 14:51:53.488 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_after_func() line 7 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  before insert (new): (2,red)
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_before_func() line 7 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  before insert (new, modified): (3,"red trig modified")
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_before_func() line 11 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  after insert (new): (3,"red trig modified")
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_after_func() line 7 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075495] pg_regress/vacuum ERROR:  ONLY_DATABASE_STATS cannot be specified with a list of tables
2024-09-08 14:51:53.489 KST client backend[3075495] pg_regress/vacuum STATEMENT:  VACUUM (ONLY_DATABASE_STATS) vactst;
2024-09-08 14:51:53.489 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot insert into column "t" of view "rw_view2"
2024-09-08 14:51:53.489 KST client backend[3075497] pg_regress/updatable_views DETAIL:  View columns that are not columns of their base relation are not updatable.
2024-09-08 14:51:53.489 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view2 VALUES (null, null, null, 1.1, null);
2024-09-08 14:51:53.489 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot insert into column "s" of view "rw_view1"
2024-09-08 14:51:53.489 KST client backend[3075497] pg_regress/updatable_views DETAIL:  View columns that are not columns of their base relation are not updatable.
2024-09-08 14:51:53.489 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view2(s, c, base_a) VALUES (null, null, 1.1);
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  before insert (new): (3,orange)
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_before_func() line 7 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  before update (old): (3,"red trig modified")
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_before_func() line 4 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  before update (new): (3,"updated red trig modified")
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_before_func() line 5 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  after update (old): (3,"red trig modified")
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_after_func() line 4 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  after update (new): (3,"updated red trig modified")
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_after_func() line 5 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot update column "s" of view "rw_view1"
2024-09-08 14:51:53.489 KST client backend[3075497] pg_regress/updatable_views DETAIL:  View columns that are not columns of their base relation are not updatable.
2024-09-08 14:51:53.489 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET s = s WHERE base_a = 1.1;
2024-09-08 14:51:53.489 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot update column "t" of view "rw_view2"
2024-09-08 14:51:53.489 KST client backend[3075497] pg_regress/updatable_views DETAIL:  View columns that are not columns of their base relation are not updatable.
2024-09-08 14:51:53.489 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET t = t WHERE base_a = 1.1;
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  before insert (new): (4,green)
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_before_func() line 7 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  before insert (new, modified): (5,"green trig modified")
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_before_func() line 11 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  after insert (new): (5,"green trig modified")
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_after_func() line 7 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  before insert (new): (5,purple)
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_before_func() line 7 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  before update (old): (5,"green trig modified")
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_before_func() line 4 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  before update (new): (5,"updated green trig modified")
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_before_func() line 5 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  after update (old): (5,"green trig modified")
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_after_func() line 4 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  after update (new): (5,"updated green trig modified")
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_after_func() line 5 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  before insert (new): (6,white)
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_before_func() line 7 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  before insert (new, modified): (7,"white trig modified")
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_before_func() line 11 at RAISE
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers WARNING:  after insert (new): (7,"white trig modified")
2024-09-08 14:51:53.489 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_after_func() line 7 at RAISE
2024-09-08 14:51:53.490 KST client backend[3075492] pg_regress/triggers WARNING:  before insert (new): (7,pink)
2024-09-08 14:51:53.490 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_before_func() line 7 at RAISE
2024-09-08 14:51:53.490 KST client backend[3075492] pg_regress/triggers WARNING:  before update (old): (7,"white trig modified")
2024-09-08 14:51:53.490 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_before_func() line 4 at RAISE
2024-09-08 14:51:53.490 KST client backend[3075492] pg_regress/triggers WARNING:  before update (new): (7,"updated white trig modified")
2024-09-08 14:51:53.490 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_before_func() line 5 at RAISE
2024-09-08 14:51:53.490 KST client backend[3075492] pg_regress/triggers WARNING:  after update (old): (7,"white trig modified")
2024-09-08 14:51:53.490 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_after_func() line 4 at RAISE
2024-09-08 14:51:53.490 KST client backend[3075492] pg_regress/triggers WARNING:  after update (new): (7,"updated white trig modified")
2024-09-08 14:51:53.490 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_after_func() line 5 at RAISE
2024-09-08 14:51:53.490 KST client backend[3075492] pg_regress/triggers WARNING:  before insert (new): (8,yellow)
2024-09-08 14:51:53.490 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_before_func() line 7 at RAISE
2024-09-08 14:51:53.490 KST client backend[3075492] pg_regress/triggers WARNING:  before insert (new, modified): (9,"yellow trig modified")
2024-09-08 14:51:53.490 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_before_func() line 11 at RAISE
2024-09-08 14:51:53.490 KST client backend[3075492] pg_regress/triggers WARNING:  after insert (new): (9,"yellow trig modified")
2024-09-08 14:51:53.490 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function upsert_after_func() line 7 at RAISE
2024-09-08 14:51:53.490 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot insert into column "t" of view "rw_view3"
2024-09-08 14:51:53.490 KST client backend[3075497] pg_regress/updatable_views DETAIL:  View columns that are not columns of their base relation are not updatable.
2024-09-08 14:51:53.490 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view3 VALUES (null, null, null, null);
2024-09-08 14:51:53.490 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot insert into column "s" of view "rw_view1"
2024-09-08 14:51:53.490 KST client backend[3075497] pg_regress/updatable_views DETAIL:  View columns that are not columns of their base relation are not updatable.
2024-09-08 14:51:53.490 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view3(s) VALUES (null);
2024-09-08 14:51:53.490 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot update column "s" of view "rw_view1"
2024-09-08 14:51:53.490 KST client backend[3075497] pg_regress/updatable_views DETAIL:  View columns that are not columns of their base relation are not updatable.
2024-09-08 14:51:53.490 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view3 SET s = s;
2024-09-08 14:51:53.492 KST client backend[3075492] pg_regress/triggers ERROR:  "my_view" is a view
2024-09-08 14:51:53.492 KST client backend[3075492] pg_regress/triggers DETAIL:  Triggers on views cannot have transition tables.
2024-09-08 14:51:53.492 KST client backend[3075492] pg_regress/triggers STATEMENT:  create trigger my_trigger after update on my_view referencing old table as old_table
	   for each statement execute procedure my_trigger_function();
2024-09-08 14:51:53.492 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned", skipping it
2024-09-08 14:51:53.493 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to analyze "vacowned", skipping it
2024-09-08 14:51:53.493 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned", skipping it
2024-09-08 14:51:53.493 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "pg_class", skipping it
2024-09-08 14:51:53.493 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to analyze "pg_class", skipping it
2024-09-08 14:51:53.493 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "pg_class", skipping it
2024-09-08 14:51:53.493 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "pg_authid", skipping it
2024-09-08 14:51:53.493 KST client backend[3075492] pg_regress/triggers ERROR:  "parted_trig" is a table
2024-09-08 14:51:53.493 KST client backend[3075492] pg_regress/triggers DETAIL:  Tables cannot have INSTEAD OF triggers.
2024-09-08 14:51:53.493 KST client backend[3075492] pg_regress/triggers STATEMENT:  create trigger failed instead of update on parted_trig
	  for each row execute procedure trigger_nothing();
2024-09-08 14:51:53.493 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to analyze "pg_authid", skipping it
2024-09-08 14:51:53.493 KST client backend[3075492] pg_regress/triggers ERROR:  "parted_trig" is a partitioned table
2024-09-08 14:51:53.493 KST client backend[3075492] pg_regress/triggers DETAIL:  ROW triggers with transition tables are not supported on partitioned tables.
2024-09-08 14:51:53.493 KST client backend[3075492] pg_regress/triggers STATEMENT:  create trigger failed after update on parted_trig
	  referencing old table as old_table
	  for each row execute procedure trigger_nothing();
2024-09-08 14:51:53.493 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "pg_authid", skipping it
2024-09-08 14:51:53.493 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_parted", skipping it
2024-09-08 14:51:53.493 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part1", skipping it
2024-09-08 14:51:53.493 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part2", skipping it
2024-09-08 14:51:53.493 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part1", skipping it
2024-09-08 14:51:53.494 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part2", skipping it
2024-09-08 14:51:53.494 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to analyze "vacowned_parted", skipping it
2024-09-08 14:51:53.494 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to analyze "vacowned_part1", skipping it
2024-09-08 14:51:53.494 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to analyze "vacowned_part2", skipping it
2024-09-08 14:51:53.494 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to analyze "vacowned_part1", skipping it
2024-09-08 14:51:53.494 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to analyze "vacowned_part2", skipping it
2024-09-08 14:51:53.494 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_parted", skipping it
2024-09-08 14:51:53.494 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part1", skipping it
2024-09-08 14:51:53.494 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part2", skipping it
2024-09-08 14:51:53.494 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part1", skipping it
2024-09-08 14:51:53.494 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part2", skipping it
2024-09-08 14:51:53.495 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part2", skipping it
2024-09-08 14:51:53.495 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot insert a non-DEFAULT value into column "idplus1"
2024-09-08 14:51:53.495 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Column "idplus1" is a generated column.
2024-09-08 14:51:53.495 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO base_tbl (id, idplus1) VALUES (5, 6);
2024-09-08 14:51:53.495 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot insert a non-DEFAULT value into column "idplus1"
2024-09-08 14:51:53.495 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Column "idplus1" is a generated column.
2024-09-08 14:51:53.495 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view1 (id, idplus1) VALUES (6, 7);
2024-09-08 14:51:53.495 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part2", skipping it
2024-09-08 14:51:53.495 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to analyze "vacowned_part2", skipping it
2024-09-08 14:51:53.495 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to analyze "vacowned_part2", skipping it
2024-09-08 14:51:53.495 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part2", skipping it
2024-09-08 14:51:53.495 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part2", skipping it
2024-09-08 14:51:53.496 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_parted", skipping it
2024-09-08 14:51:53.496 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part2", skipping it
2024-09-08 14:51:53.496 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part2", skipping it
2024-09-08 14:51:53.496 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to analyze "vacowned_parted", skipping it
2024-09-08 14:51:53.496 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to analyze "vacowned_part2", skipping it
2024-09-08 14:51:53.496 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to analyze "vacowned_part2", skipping it
2024-09-08 14:51:53.496 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_parted", skipping it
2024-09-08 14:51:53.496 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part2", skipping it
2024-09-08 14:51:53.496 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part2", skipping it
2024-09-08 14:51:53.497 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part1", skipping it
2024-09-08 14:51:53.497 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part2", skipping it
2024-09-08 14:51:53.497 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part1", skipping it
2024-09-08 14:51:53.497 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part2", skipping it
2024-09-08 14:51:53.497 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to analyze "vacowned_part1", skipping it
2024-09-08 14:51:53.497 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to analyze "vacowned_part2", skipping it
2024-09-08 14:51:53.497 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to analyze "vacowned_part1", skipping it
2024-09-08 14:51:53.497 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to analyze "vacowned_part2", skipping it
2024-09-08 14:51:53.497 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part1", skipping it
2024-09-08 14:51:53.497 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part2", skipping it
2024-09-08 14:51:53.497 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part1", skipping it
2024-09-08 14:51:53.498 KST client backend[3075495] pg_regress/vacuum WARNING:  permission denied to vacuum "vacowned_part2", skipping it
2024-09-08 14:51:53.498 KST client backend[3075492] pg_regress/triggers ERROR:  cannot drop trigger trg1 on table trigpart1 because trigger trg1 on table trigpart requires it
2024-09-08 14:51:53.498 KST client backend[3075492] pg_regress/triggers HINT:  You can drop trigger trg1 on table trigpart instead.
2024-09-08 14:51:53.498 KST client backend[3075492] pg_regress/triggers STATEMENT:  drop trigger trg1 on trigpart1;
2024-09-08 14:51:53.498 KST client backend[3075492] pg_regress/triggers ERROR:  cannot drop trigger trg1 on table trigpart2 because trigger trg1 on table trigpart requires it
2024-09-08 14:51:53.498 KST client backend[3075492] pg_regress/triggers HINT:  You can drop trigger trg1 on table trigpart instead.
2024-09-08 14:51:53.498 KST client backend[3075492] pg_regress/triggers STATEMENT:  drop trigger trg1 on trigpart2;
2024-09-08 14:51:53.498 KST client backend[3075492] pg_regress/triggers ERROR:  cannot drop trigger trg1 on table trigpart3 because trigger trg1 on table trigpart requires it
2024-09-08 14:51:53.498 KST client backend[3075492] pg_regress/triggers HINT:  You can drop trigger trg1 on table trigpart instead.
2024-09-08 14:51:53.498 KST client backend[3075492] pg_regress/triggers STATEMENT:  drop trigger trg1 on trigpart3;
2024-09-08 14:51:53.504 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view1"
2024-09-08 14:51:53.504 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (4, 3).
2024-09-08 14:51:53.504 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view1 VALUES(4,3);
2024-09-08 14:51:53.504 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view1"
2024-09-08 14:51:53.504 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (5, null).
2024-09-08 14:51:53.504 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view1 VALUES(5,null);
2024-09-08 14:51:53.504 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view1"
2024-09-08 14:51:53.504 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (3, -5).
2024-09-08 14:51:53.504 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view1 SET b = -5 WHERE a = 3;
2024-09-08 14:51:53.504 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view1"
2024-09-08 14:51:53.504 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (10, 10).
2024-09-08 14:51:53.504 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view1(a) VALUES (10);
2024-09-08 14:51:53.504 KST client backend[3075492] pg_regress/triggers ERROR:  trigger "trg1" for table "trigpart3" does not exist
2024-09-08 14:51:53.504 KST client backend[3075492] pg_regress/triggers STATEMENT:  drop trigger trg1 on trigpart3;
2024-09-08 14:51:53.505 KST client backend[3075492] pg_regress/triggers ERROR:  trigger "trg1" for table "trigpart41" does not exist
2024-09-08 14:51:53.505 KST client backend[3075492] pg_regress/triggers STATEMENT:  drop trigger trg1 on trigpart41;
2024-09-08 14:51:53.508 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view1"
2024-09-08 14:51:53.508 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (-5).
2024-09-08 14:51:53.508 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view2 VALUES (-5);
2024-09-08 14:51:53.508 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view2"
2024-09-08 14:51:53.508 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (15).
2024-09-08 14:51:53.508 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view2 VALUES (15);
2024-09-08 14:51:53.508 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view1"
2024-09-08 14:51:53.508 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (-5).
2024-09-08 14:51:53.508 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET a = a - 10;
2024-09-08 14:51:53.508 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view2"
2024-09-08 14:51:53.508 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (15).
2024-09-08 14:51:53.508 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET a = a + 10;
2024-09-08 14:51:53.510 KST client backend[3075493] pg_regress/inherit ERROR:  constraint "inh_check_constraint" conflicts with NOT VALID constraint on relation "invalid_check_con_child"
2024-09-08 14:51:53.510 KST client backend[3075493] pg_regress/inherit STATEMENT:  alter table invalid_check_con add constraint inh_check_constraint check(f1 > 0);
2024-09-08 14:51:53.510 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view2"
2024-09-08 14:51:53.510 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (20).
2024-09-08 14:51:53.510 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view2 VALUES (20);
2024-09-08 14:51:53.510 KST client backend[3075497] pg_regress/updatable_views ERROR:  invalid value for enum option "check_option": here
2024-09-08 14:51:53.510 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Valid values are "local" and "cascaded".
2024-09-08 14:51:53.510 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  ALTER VIEW rw_view1 SET (check_option=here);
2024-09-08 14:51:53.510 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view1"
2024-09-08 14:51:53.510 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (-20).
2024-09-08 14:51:53.510 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view2 VALUES (-20);
2024-09-08 14:51:53.510 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view2"
2024-09-08 14:51:53.510 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (30).
2024-09-08 14:51:53.510 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view2 VALUES (30);
2024-09-08 14:51:53.510 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "invalid_check_con" violates check constraint "inh_check_constraint"
2024-09-08 14:51:53.510 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (0).
2024-09-08 14:51:53.510 KST client backend[3075493] pg_regress/inherit STATEMENT:  insert into invalid_check_con values(0);
2024-09-08 14:51:53.511 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "invalid_check_con_child" violates check constraint "inh_check_constraint"
2024-09-08 14:51:53.511 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (0).
2024-09-08 14:51:53.511 KST client backend[3075493] pg_regress/inherit STATEMENT:  insert into invalid_check_con_child values(0);
2024-09-08 14:51:53.511 KST client backend[3075492] pg_regress/triggers ERROR:  trigger "trg1" for relation "trigpart3" already exists
2024-09-08 14:51:53.511 KST client backend[3075492] pg_regress/triggers STATEMENT:  alter table trigpart attach partition trigpart3 FOR VALUES FROM (2000) to (3000);
2024-09-08 14:51:53.515 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view2"
2024-09-08 14:51:53.515 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (-3).
2024-09-08 14:51:53.515 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view3 VALUES (-3);
2024-09-08 14:51:53.516 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view1"
2024-09-08 14:51:53.516 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (10, {4,5}).
2024-09-08 14:51:53.516 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view1 VALUES (10, ARRAY[4,5]);
2024-09-08 14:51:53.517 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view1"
2024-09-08 14:51:53.517 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (1, {-1,-2,3}).
2024-09-08 14:51:53.517 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view1 SET b[1] = -b[1] WHERE a = 1;
2024-09-08 14:51:53.517 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view1"
2024-09-08 14:51:53.517 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (10, {4,5}).
2024-09-08 14:51:53.517 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  EXECUTE ins(10, ARRAY[4,5]);
2024-09-08 14:51:53.519 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view1"
2024-09-08 14:51:53.519 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (15).
2024-09-08 14:51:53.519 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view1 VALUES (15);
2024-09-08 14:51:53.519 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view1"
2024-09-08 14:51:53.519 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (15).
2024-09-08 14:51:53.519 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view1 SET a = a + 5;
2024-09-08 14:51:53.522 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view1"
2024-09-08 14:51:53.522 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (15, 10).
2024-09-08 14:51:53.522 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view1 VALUES (15, 20);
2024-09-08 14:51:53.522 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view1"
2024-09-08 14:51:53.522 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (20, 10).
2024-09-08 14:51:53.522 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view1 SET a = 20, b = 30;
2024-09-08 14:51:53.524 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view2"
2024-09-08 14:51:53.524 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (-5).
2024-09-08 14:51:53.524 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO rw_view2 VALUES (-5);
2024-09-08 14:51:53.524 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "rw_view2"
2024-09-08 14:51:53.524 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (-5).
2024-09-08 14:51:53.524 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE rw_view2 SET a = a - 10;
2024-09-08 14:51:53.539 KST client backend[3075493] pg_regress/inherit ERROR:  cannot inherit from temporary relation "inh_temp_parent"
2024-09-08 14:51:53.539 KST client backend[3075493] pg_regress/inherit STATEMENT:  create table inh_perm_child () inherits (inh_temp_parent);
2024-09-08 14:51:53.555 KST client backend[3075492] pg_regress/triggers ERROR:  moving row to another partition during a BEFORE FOR EACH ROW trigger is not supported
2024-09-08 14:51:53.555 KST client backend[3075492] pg_regress/triggers DETAIL:  Before executing trigger "t", the row was to be in partition "public.parted_1_1".
2024-09-08 14:51:53.555 KST client backend[3075492] pg_regress/triggers STATEMENT:  insert into parted values (1, 1, 'uno uno v2');
2024-09-08 14:51:53.555 KST client backend[3075492] pg_regress/triggers ERROR:  no partition of relation "parted" found for row
2024-09-08 14:51:53.555 KST client backend[3075492] pg_regress/triggers DETAIL:  Partition key of the failing row contains (a) = (2).
2024-09-08 14:51:53.555 KST client backend[3075492] pg_regress/triggers STATEMENT:  update parted set c = c || 'v3';
2024-09-08 14:51:53.555 KST client backend[3075492] pg_regress/triggers ERROR:  moving row to another partition during a BEFORE FOR EACH ROW trigger is not supported
2024-09-08 14:51:53.555 KST client backend[3075492] pg_regress/triggers DETAIL:  Before executing trigger "t", the row was to be in partition "public.parted_1_1".
2024-09-08 14:51:53.555 KST client backend[3075492] pg_regress/triggers STATEMENT:  insert into parted values (1, 1, 'uno uno v4');
2024-09-08 14:51:53.555 KST client backend[3075492] pg_regress/triggers ERROR:  no partition of relation "parted_1" found for row
2024-09-08 14:51:53.555 KST client backend[3075492] pg_regress/triggers DETAIL:  Partition key of the failing row contains (b) = (2).
2024-09-08 14:51:53.555 KST client backend[3075492] pg_regress/triggers STATEMENT:  update parted set c = c || 'v5';
2024-09-08 14:51:53.560 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "v1"
2024-09-08 14:51:53.560 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (-2, minus two, 20).
2024-09-08 14:51:53.560 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO v2 VALUES (-2, 'minus two', 20);
2024-09-08 14:51:53.561 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "v2"
2024-09-08 14:51:53.561 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (3, three, 30).
2024-09-08 14:51:53.561 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO v2 VALUES (3, 'three', 30);
2024-09-08 14:51:53.561 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "v1"
2024-09-08 14:51:53.561 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (-1, ONE, 10).
2024-09-08 14:51:53.561 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE v2 SET a = -1 WHERE a = 1;
2024-09-08 14:51:53.561 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "v2"
2024-09-08 14:51:53.561 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (1, ONE, 30).
2024-09-08 14:51:53.561 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  UPDATE v2 SET c = 30 WHERE a = 1;
2024-09-08 14:51:53.566 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "v1"
2024-09-08 14:51:53.566 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (-1, invalid).
2024-09-08 14:51:53.566 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  INSERT INTO v1 VALUES (-1, 'invalid');
2024-09-08 14:51:53.571 KST client backend[3075492] pg_regress/triggers ERROR:  moving row to another partition during a BEFORE FOR EACH ROW trigger is not supported
2024-09-08 14:51:53.571 KST client backend[3075492] pg_regress/triggers DETAIL:  Before executing trigger "t", the row was to be in partition "public.parted_1".
2024-09-08 14:51:53.571 KST client backend[3075492] pg_regress/triggers STATEMENT:  insert into parted values (1, 1, 'one fail');
2024-09-08 14:51:53.571 KST client backend[3075492] pg_regress/triggers ERROR:  moving row to another partition during a BEFORE FOR EACH ROW trigger is not supported
2024-09-08 14:51:53.571 KST client backend[3075492] pg_regress/triggers DETAIL:  Before executing trigger "t", the row was to be in partition "public.parted_2".
2024-09-08 14:51:53.571 KST client backend[3075492] pg_regress/triggers STATEMENT:  insert into parted values (1, 2, 'two fail');
2024-09-08 14:51:53.571 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "uv_ptv_wco"
2024-09-08 14:51:53.571 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (1, 2, null).
2024-09-08 14:51:53.571 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  insert into uv_ptv_wco values (1, 2);
2024-09-08 14:51:53.573 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "wcowrtest_v"
2024-09-08 14:51:53.573 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (1).
2024-09-08 14:51:53.573 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  insert into wcowrtest_v values (1);
2024-09-08 14:51:53.576 KST client backend[3075497] pg_regress/updatable_views ERROR:  new row violates check option for view "wcowrtest_v2"
2024-09-08 14:51:53.576 KST client backend[3075497] pg_regress/updatable_views DETAIL:  Failing row contains (2, no such row in sometable).
2024-09-08 14:51:53.576 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  insert into wcowrtest_v2 values (2, 'no such row in sometable');
2024-09-08 14:51:53.584 KST client backend[3075497] pg_regress/updatable_views ERROR:  cannot insert into column "cc" of view "uv_iocu_view"
2024-09-08 14:51:53.584 KST client backend[3075497] pg_regress/updatable_views DETAIL:  View columns that are not columns of their base relation are not updatable.
2024-09-08 14:51:53.584 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  insert into uv_iocu_view (aa) values (1)
	   on conflict (aa) do update set cc = 'XXX';
2024-09-08 14:51:53.586 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.586 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  insert into rw_view1 values ('yyy',2.0,1)
	  on conflict (aa) do update set bb = excluded.cc;
2024-09-08 14:51:53.587 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.587 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  insert into rw_view1 values ('yyy',2.0,1)
	  on conflict (aa) do update set bb = rw_view1.cc;
2024-09-08 14:51:53.587 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.587 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  insert into rw_view1 values ('zzz',2.0,1)
	  on conflict (aa) do update set cc = 3.0;
2024-09-08 14:51:53.588 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for table base_tbl
2024-09-08 14:51:53.588 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  insert into rw_view2 (aa,bb) values (1,'xxx')
	  on conflict (aa) do update set bb = excluded.bb;
2024-09-08 14:51:53.589 KST client backend[3075497] pg_regress/updatable_views ERROR:  permission denied for view rw_view1
2024-09-08 14:51:53.589 KST client backend[3075497] pg_regress/updatable_views STATEMENT:  insert into rw_view4 (aa,bb) values (1,'yyy')
	  on conflict (aa) do update set bb = excluded.bb;
2024-09-08 14:51:53.600 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "errtst_child_fastdef" violates check constraint "errtest_child_fastdef_data_check"
2024-09-08 14:51:53.600 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (0, 1, 10).
2024-09-08 14:51:53.600 KST client backend[3075493] pg_regress/inherit STATEMENT:  INSERT INTO errtst_parent(partid, shdata, data) VALUES ( '0', '1', '10');
2024-09-08 14:51:53.600 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "errtst_child_plaindef" violates check constraint "errtst_child_plaindef_data_check"
2024-09-08 14:51:53.600 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (10, 1, 10).
2024-09-08 14:51:53.600 KST client backend[3075493] pg_regress/inherit STATEMENT:  INSERT INTO errtst_parent(partid, shdata, data) VALUES ('10', '1', '10');
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "errtst_child_reorder" violates check constraint "errtst_child_reorder_data_check"
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (20, 1, 10).
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit STATEMENT:  INSERT INTO errtst_parent(partid, shdata, data) VALUES ('20', '1', '10');
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit ERROR:  null value in column "data" of relation "errtst_child_fastdef" violates not-null constraint
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (0, 1, null).
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit STATEMENT:  INSERT INTO errtst_parent(partid, shdata, data) VALUES ( '0', '1', NULL);
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit ERROR:  null value in column "data" of relation "errtst_child_plaindef" violates not-null constraint
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (10, 1, null).
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit STATEMENT:  INSERT INTO errtst_parent(partid, shdata, data) VALUES ('10', '1', NULL);
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit ERROR:  null value in column "data" of relation "errtst_child_reorder" violates not-null constraint
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (20, 1, null).
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit STATEMENT:  INSERT INTO errtst_parent(partid, shdata, data) VALUES ('20', '1', NULL);
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "errtst_child_fastdef" violates check constraint "shdata_small"
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (0, 5, 5).
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit STATEMENT:  INSERT INTO errtst_parent(partid, shdata, data) VALUES ( '0', '5', '5');
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "errtst_child_plaindef" violates check constraint "shdata_small"
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (10, 5, 5).
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit STATEMENT:  INSERT INTO errtst_parent(partid, shdata, data) VALUES ('10', '5', '5');
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "errtst_child_reorder" violates check constraint "shdata_small"
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (20, 5, 5).
2024-09-08 14:51:53.601 KST client backend[3075493] pg_regress/inherit STATEMENT:  INSERT INTO errtst_parent(partid, shdata, data) VALUES ('20', '5', '5');
2024-09-08 14:51:53.602 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "errtst_child_fastdef" violates check constraint "errtest_child_fastdef_data_check"
2024-09-08 14:51:53.602 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (0, 1, 15).
2024-09-08 14:51:53.602 KST client backend[3075493] pg_regress/inherit STATEMENT:  UPDATE errtst_parent SET data = data + 10 WHERE partid = 0;
2024-09-08 14:51:53.602 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "errtst_child_plaindef" violates check constraint "errtst_child_plaindef_data_check"
2024-09-08 14:51:53.602 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (10, 1, 15).
2024-09-08 14:51:53.602 KST client backend[3075493] pg_regress/inherit STATEMENT:  UPDATE errtst_parent SET data = data + 10 WHERE partid = 10;
2024-09-08 14:51:53.602 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "errtst_child_reorder" violates check constraint "errtst_child_reorder_data_check"
2024-09-08 14:51:53.602 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (20, 1, 15).
2024-09-08 14:51:53.602 KST client backend[3075493] pg_regress/inherit STATEMENT:  UPDATE errtst_parent SET data = data + 10 WHERE partid = 20;
2024-09-08 14:51:53.602 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "errtst_child_fastdef" violates partition constraint
2024-09-08 14:51:53.602 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (10, 1, 5).
2024-09-08 14:51:53.602 KST client backend[3075493] pg_regress/inherit STATEMENT:  UPDATE errtst_child_fastdef SET partid = partid + 10 WHERE partid = 0;
2024-09-08 14:51:53.602 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "errtst_child_plaindef" violates partition constraint
2024-09-08 14:51:53.602 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (20, 1, 5).
2024-09-08 14:51:53.602 KST client backend[3075493] pg_regress/inherit STATEMENT:  UPDATE errtst_child_plaindef SET partid = partid + 10 WHERE partid = 10;
2024-09-08 14:51:53.602 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "errtst_child_reorder" violates partition constraint
2024-09-08 14:51:53.602 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (5, 1, 30).
2024-09-08 14:51:53.602 KST client backend[3075493] pg_regress/inherit STATEMENT:  UPDATE errtst_child_reorder SET partid = partid + 10 WHERE partid = 20;
2024-09-08 14:51:53.603 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "errtst_child_plaindef" violates check constraint "errtst_child_plaindef_data_check"
2024-09-08 14:51:53.603 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (10, 1, 15).
2024-09-08 14:51:53.603 KST client backend[3075493] pg_regress/inherit STATEMENT:  UPDATE errtst_parent SET partid = 10, data = data + 10 WHERE partid = 0;
2024-09-08 14:51:53.603 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "errtst_child_reorder" violates check constraint "errtst_child_reorder_data_check"
2024-09-08 14:51:53.603 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (20, 1, 15).
2024-09-08 14:51:53.603 KST client backend[3075493] pg_regress/inherit STATEMENT:  UPDATE errtst_parent SET partid = 20, data = data + 10 WHERE partid = 10;
2024-09-08 14:51:53.603 KST client backend[3075493] pg_regress/inherit ERROR:  new row for relation "errtst_child_fastdef" violates check constraint "errtest_child_fastdef_data_check"
2024-09-08 14:51:53.603 KST client backend[3075493] pg_regress/inherit DETAIL:  Failing row contains (0, 1, 15).
2024-09-08 14:51:53.603 KST client backend[3075493] pg_regress/inherit STATEMENT:  UPDATE errtst_parent SET partid = 0, data = data + 10 WHERE partid = 20;
2024-09-08 14:51:53.603 KST client backend[3075493] pg_regress/inherit ERROR:  no partition of relation "errtst_parent" found for row
2024-09-08 14:51:53.603 KST client backend[3075493] pg_regress/inherit DETAIL:  Partition key of the failing row contains (partid) = (30).
2024-09-08 14:51:53.603 KST client backend[3075493] pg_regress/inherit STATEMENT:  UPDATE errtst_parent SET partid = 30, data = data + 10 WHERE partid = 20;
2024-09-08 14:51:53.633 KST client backend[3075492] pg_regress/triggers ERROR:  except
2024-09-08 14:51:53.633 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function tgf() line 1 at RAISE
2024-09-08 14:51:53.633 KST client backend[3075492] pg_regress/triggers STATEMENT:  INSERT INTO trgfire VALUES (1);
2024-09-08 14:51:53.639 KST client backend[3075492] pg_regress/triggers ERROR:  except
2024-09-08 14:51:53.639 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function tgf() line 1 at RAISE
2024-09-08 14:51:53.639 KST client backend[3075492] pg_regress/triggers STATEMENT:  INSERT INTO trgfire VALUES (1);
2024-09-08 14:51:53.639 KST client backend[3075492] pg_regress/triggers ERROR:  except
2024-09-08 14:51:53.639 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function tgf() line 1 at RAISE
2024-09-08 14:51:53.639 KST client backend[3075492] pg_regress/triggers STATEMENT:  INSERT INTO trgfire VALUES (11);
2024-09-08 14:51:53.639 KST client backend[3075492] pg_regress/triggers ERROR:  except
2024-09-08 14:51:53.639 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function tgf() line 1 at RAISE
2024-09-08 14:51:53.639 KST client backend[3075492] pg_regress/triggers STATEMENT:  INSERT INTO trgfire VALUES (21);
2024-09-08 14:51:53.639 KST client backend[3075492] pg_regress/triggers ERROR:  except
2024-09-08 14:51:53.639 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function tgf() line 1 at RAISE
2024-09-08 14:51:53.639 KST client backend[3075492] pg_regress/triggers STATEMENT:  INSERT INTO trgfire VALUES (30);
2024-09-08 14:51:53.639 KST client backend[3075492] pg_regress/triggers ERROR:  except
2024-09-08 14:51:53.639 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function tgf() line 1 at RAISE
2024-09-08 14:51:53.639 KST client backend[3075492] pg_regress/triggers STATEMENT:  INSERT INTO trgfire VALUES (40);
2024-09-08 14:51:53.657 KST client backend[3075492] pg_regress/triggers ERROR:  ROW triggers with transition tables are not supported on partitions
2024-09-08 14:51:53.657 KST client backend[3075492] pg_regress/triggers STATEMENT:  create trigger child_row_trig
	  after insert on child referencing new table as new_table
	  for each row execute procedure dump_insert();
2024-09-08 14:51:53.657 KST client backend[3075492] pg_regress/triggers ERROR:  trigger "child_row_trig" prevents table "child" from becoming a partition
2024-09-08 14:51:53.657 KST client backend[3075492] pg_regress/triggers DETAIL:  ROW triggers with transition tables are not supported on partitions.
2024-09-08 14:51:53.657 KST client backend[3075492] pg_regress/triggers STATEMENT:  alter table parent attach partition child for values in ('AAA');
2024-09-08 14:51:53.673 KST client backend[3075492] pg_regress/triggers ERROR:  ROW triggers with transition tables are not supported on inheritance children
2024-09-08 14:51:53.673 KST client backend[3075492] pg_regress/triggers STATEMENT:  create trigger child_row_trig
	  after insert on child referencing new table as new_table
	  for each row execute procedure dump_insert();
2024-09-08 14:51:53.673 KST client backend[3075492] pg_regress/triggers ERROR:  trigger "child_row_trig" prevents table "child" from becoming an inheritance child
2024-09-08 14:51:53.673 KST client backend[3075492] pg_regress/triggers DETAIL:  ROW triggers with transition tables are not supported in inheritance hierarchies.
2024-09-08 14:51:53.673 KST client backend[3075492] pg_regress/triggers STATEMENT:  alter table child inherit parent;
2024-09-08 14:51:53.692 KST client backend[3075492] pg_regress/triggers ERROR:  transition tables cannot be specified for triggers with more than one event
2024-09-08 14:51:53.692 KST client backend[3075492] pg_regress/triggers STATEMENT:  create trigger my_table_multievent_trig
	  after insert or update on my_table referencing new table as new_table
	  for each statement execute procedure dump_insert();
2024-09-08 14:51:53.692 KST client backend[3075492] pg_regress/triggers ERROR:  transition tables cannot be specified for triggers with column lists
2024-09-08 14:51:53.692 KST client backend[3075492] pg_regress/triggers STATEMENT:  create trigger my_table_col_update_trig
	  after update of b on my_table referencing new table as new_table
	  for each statement execute procedure dump_insert();
2024-09-08 14:51:53.711 KST client backend[3075492] pg_regress/triggers ERROR:  trigger "my_trig" for relation "my_table" already exists
2024-09-08 14:51:53.711 KST client backend[3075492] pg_regress/triggers STATEMENT:  create trigger my_trig
	  before insert on my_table
	  for each row execute procedure funcB();
2024-09-08 14:51:53.717 KST client backend[3075492] pg_regress/triggers ERROR:  trigger "my_trig" for relation "parted_trig_1" is an internal or a child trigger
2024-09-08 14:51:53.717 KST client backend[3075492] pg_regress/triggers STATEMENT:  create or replace trigger my_trig
	  after insert on parted_trig_1
	  for each row execute procedure funcB();
2024-09-08 14:51:53.718 KST client backend[3075492] pg_regress/triggers ERROR:  trigger "my_trig" for relation "parted_trig_1" already exists
2024-09-08 14:51:53.718 KST client backend[3075492] pg_regress/triggers STATEMENT:  create trigger my_trig
	  after insert on parted_trig
	  for each row execute procedure funcB();
2024-09-08 14:51:53.737 KST client backend[3075492] pg_regress/triggers ERROR:  BOOM!
2024-09-08 14:51:53.737 KST client backend[3075492] pg_regress/triggers CONTEXT:  PL/pgSQL function convslot_trig4() line 1 at RAISE
2024-09-08 14:51:53.737 KST client backend[3075492] pg_regress/triggers STATEMENT:  update convslot_test_parent set val = 3;
2024-09-08 14:51:53.744 KST client backend[3075492] pg_regress/triggers ERROR:  syntax error at or near "only" at character 20
2024-09-08 14:51:53.744 KST client backend[3075492] pg_regress/triggers STATEMENT:  alter trigger a on only grandparent rename to b;
2024-09-08 14:51:53.744 KST client backend[3075492] pg_regress/triggers ERROR:  cannot rename trigger "b" on table "middle"
2024-09-08 14:51:53.744 KST client backend[3075492] pg_regress/triggers HINT:  Rename the trigger on the partitioned table "grandparent" instead.
2024-09-08 14:51:53.744 KST client backend[3075492] pg_regress/triggers STATEMENT:  alter trigger b on middle rename to c;
2024-09-08 14:51:53.744 KST client backend[3075492] pg_regress/triggers ERROR:  trigger "c" for relation "middle" already exists
2024-09-08 14:51:53.744 KST client backend[3075492] pg_regress/triggers STATEMENT:  alter trigger b on grandparent rename to c;
2024-09-08 14:51:53.871 KST client backend[3075553] pg_regress/select_into ERROR:  permission denied for table tbl_withdata1
2024-09-08 14:51:53.871 KST client backend[3075553] pg_regress/select_into STATEMENT:  INSERT INTO selinto_schema.tbl_withdata1 VALUES (4);
2024-09-08 14:51:53.873 KST client backend[3075574] pg_regress/join ERROR:  column reference "i" is ambiguous at character 8
2024-09-08 14:51:53.873 KST client backend[3075574] pg_regress/join STATEMENT:  SELECT i, k, t
	  FROM J1_TBL CROSS JOIN J2_TBL;
2024-09-08 14:51:53.873 KST client backend[3075579] pg_regress/delete ERROR:  invalid reference to FROM-clause entry for table "delete_test" at character 34
2024-09-08 14:51:53.873 KST client backend[3075579] pg_regress/delete HINT:  Perhaps you meant to reference the table alias "dt".
2024-09-08 14:51:53.873 KST client backend[3075579] pg_regress/delete STATEMENT:  DELETE FROM delete_test dt WHERE delete_test.a > 25;
2024-09-08 14:51:53.874 KST client backend[3075581] pg_regress/namespace ERROR:  column "c" does not exist at character 70
2024-09-08 14:51:53.874 KST client backend[3075581] pg_regress/namespace STATEMENT:  CREATE SCHEMA test_ns_schema_2
	       CREATE VIEW abc_view AS SELECT c FROM abc;
2024-09-08 14:51:53.875 KST client backend[3075573] pg_regress/arrays ERROR:  value too long for type character(5)
2024-09-08 14:51:53.875 KST client backend[3075573] pg_regress/arrays STATEMENT:  INSERT INTO arrtest (f)
	   VALUES ('{"too long"}');
2024-09-08 14:51:53.875 KST client backend[3075582] pg_regress/prepared_xacts ERROR:  transaction identifier "foo3" is already in use
2024-09-08 14:51:53.875 KST client backend[3075582] pg_regress/prepared_xacts STATEMENT:  PREPARE TRANSACTION 'foo3';
2024-09-08 14:51:53.875 KST client backend[3075580] pg_regress/update ERROR:  column "a" is of type integer but expression is of type record at character 28
2024-09-08 14:51:53.875 KST client backend[3075580] pg_regress/update HINT:  You will need to rewrite or cast the expression.
2024-09-08 14:51:53.875 KST client backend[3075580] pg_regress/update STATEMENT:  UPDATE update_test SET a = v.* FROM (VALUES(100, 20)) AS v(i, j)
	  WHERE update_test.b = v.j;
2024-09-08 14:51:53.876 KST client backend[3075559] pg_regress/select_distinct_on ERROR:  SELECT DISTINCT ON expressions must match initial ORDER BY expressions at character 30
2024-09-08 14:51:53.876 KST client backend[3075559] pg_regress/select_distinct_on STATEMENT:  SELECT DISTINCT ON (string4, ten) string4, two, ten
	   FROM onek
	   ORDER BY string4 using <, two using <, ten using <;
2024-09-08 14:51:53.876 KST client backend[3075574] pg_regress/join ERROR:  invalid reference to FROM-clause entry for table "j1_tbl" at character 57
2024-09-08 14:51:53.876 KST client backend[3075574] pg_regress/join DETAIL:  There is an entry for table "j1_tbl", but it cannot be referenced from this part of the query.
2024-09-08 14:51:53.876 KST client backend[3075574] pg_regress/join STATEMENT:  SELECT * FROM (J1_TBL JOIN J2_TBL USING (i)) AS x WHERE J1_TBL.t = 'one';
2024-09-08 14:51:53.877 KST client backend[3075574] pg_regress/join ERROR:  column x.t does not exist at character 55
2024-09-08 14:51:53.877 KST client backend[3075574] pg_regress/join STATEMENT:  SELECT * FROM J1_TBL JOIN J2_TBL USING (i) AS x WHERE x.t = 'one';
2024-09-08 14:51:53.877 KST client backend[3075574] pg_regress/join ERROR:  missing FROM-clause entry for table "x" at character 63
2024-09-08 14:51:53.877 KST client backend[3075574] pg_regress/join STATEMENT:  SELECT * FROM (J1_TBL JOIN J2_TBL USING (i) AS x) AS xx WHERE x.i = 1;
2024-09-08 14:51:53.877 KST client backend[3075574] pg_regress/join ERROR:  table name "a1" specified more than once
2024-09-08 14:51:53.877 KST client backend[3075574] pg_regress/join STATEMENT:  SELECT * FROM J1_TBL a1 JOIN J2_TBL a2 USING (i) AS a1;
2024-09-08 14:51:53.878 KST client backend[3075576] pg_regress/portals ERROR:  cursor can only scan forward
2024-09-08 14:51:53.878 KST client backend[3075576] pg_regress/portals HINT:  Declare it with SCROLL option to enable backward scan.
2024-09-08 14:51:53.878 KST client backend[3075576] pg_regress/portals STATEMENT:  FETCH BACKWARD 1 FROM foo24;
2024-09-08 14:51:53.878 KST client backend[3075576] pg_regress/portals ERROR:  cursor can only scan forward
2024-09-08 14:51:53.878 KST client backend[3075576] pg_regress/portals HINT:  Declare it with SCROLL option to enable backward scan.
2024-09-08 14:51:53.878 KST client backend[3075576] pg_regress/portals STATEMENT:  FETCH ABSOLUTE 1 FROM foo24;
2024-09-08 14:51:53.881 KST client backend[3075566] pg_regress/union ERROR:  FOR NO KEY UPDATE is not allowed with UNION/INTERSECT/EXCEPT
2024-09-08 14:51:53.881 KST client backend[3075566] pg_regress/union STATEMENT:  SELECT q1 FROM int8_tbl EXCEPT ALL SELECT q1 FROM int8_tbl FOR NO KEY UPDATE;
2024-09-08 14:51:53.888 KST client backend[3075573] pg_regress/arrays ERROR:  subscripted assignment to "b" requires type integer but expression is of type timestamp with time zone at character 22
2024-09-08 14:51:53.888 KST client backend[3075573] pg_regress/arrays HINT:  You will need to rewrite or cast the expression.
2024-09-08 14:51:53.888 KST client backend[3075573] pg_regress/arrays STATEMENT:  INSERT INTO arrtest (b[2]) VALUES(now());
2024-09-08 14:51:53.888 KST client backend[3075573] pg_regress/arrays ERROR:  subscripted assignment to "b" requires type integer[] but expression is of type timestamp with time zone at character 22
2024-09-08 14:51:53.888 KST client backend[3075573] pg_regress/arrays HINT:  You will need to rewrite or cast the expression.
2024-09-08 14:51:53.888 KST client backend[3075573] pg_regress/arrays STATEMENT:  INSERT INTO arrtest (b[1:2]) VALUES(now());
2024-09-08 14:51:53.889 KST client backend[3075562] pg_regress/select_distinct LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075562.1", size 147456
2024-09-08 14:51:53.889 KST client backend[3075562] pg_regress/select_distinct STATEMENT:  CREATE TABLE distinct_group_1 AS
	SELECT DISTINCT g%1000 FROM generate_series(0,9999) g;
2024-09-08 14:51:53.889 KST client backend[3075562] pg_regress/select_distinct LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075562.0", size 140000
2024-09-08 14:51:53.889 KST client backend[3075562] pg_regress/select_distinct STATEMENT:  CREATE TABLE distinct_group_1 AS
	SELECT DISTINCT g%1000 FROM generate_series(0,9999) g;
2024-09-08 14:51:53.889 KST client backend[3075580] pg_regress/update ERROR:  multiple assignments to same column "b"
2024-09-08 14:51:53.889 KST client backend[3075580] pg_regress/update STATEMENT:  UPDATE update_test SET (c,b) = ('car', a+b), b = a + 1 WHERE a = 10;
2024-09-08 14:51:53.889 KST client backend[3075582] pg_regress/prepared_xacts ERROR:  could not serialize access due to read/write dependencies among transactions
2024-09-08 14:51:53.889 KST client backend[3075582] pg_regress/prepared_xacts DETAIL:  Reason code: Canceled on identification as a pivot, during write.
2024-09-08 14:51:53.889 KST client backend[3075582] pg_regress/prepared_xacts HINT:  The transaction might succeed if retried.
2024-09-08 14:51:53.889 KST client backend[3075582] pg_regress/prepared_xacts STATEMENT:  INSERT INTO pxtest1 VALUES ('fff');
2024-09-08 14:51:53.889 KST client backend[3075580] pg_regress/update ERROR:  more than one row returned by a subquery used as an expression
2024-09-08 14:51:53.889 KST client backend[3075580] pg_regress/update STATEMENT:  UPDATE update_test SET (b,a) = (select a+1,b from update_test);
2024-09-08 14:51:53.890 KST client backend[3075553] pg_regress/select_into ERROR:  too many column names were specified
2024-09-08 14:51:53.890 KST client backend[3075553] pg_regress/select_into STATEMENT:  CREATE TABLE ctas_nodata (ii, jj, kk) AS SELECT i, j FROM ctas_base;
2024-09-08 14:51:53.890 KST client backend[3075553] pg_regress/select_into ERROR:  too many column names were specified
2024-09-08 14:51:53.890 KST client backend[3075553] pg_regress/select_into STATEMENT:  CREATE TABLE ctas_nodata (ii, jj, kk) AS SELECT i, j FROM ctas_base WITH NO DATA;
2024-09-08 14:51:53.890 KST client backend[3075580] pg_regress/update ERROR:  source for a multiple-column UPDATE item must be a sub-SELECT or ROW() expression at character 33
2024-09-08 14:51:53.890 KST client backend[3075580] pg_regress/update STATEMENT:  UPDATE update_test SET (a,b) = (v.*) FROM (VALUES(21, 101)) AS v(i, j)
	  WHERE update_test.a = v.i;
2024-09-08 14:51:53.890 KST client backend[3075580] pg_regress/update ERROR:  invalid reference to FROM-clause entry for table "update_test" at character 33
2024-09-08 14:51:53.890 KST client backend[3075580] pg_regress/update HINT:  Perhaps you meant to reference the table alias "t".
2024-09-08 14:51:53.890 KST client backend[3075580] pg_regress/update STATEMENT:  UPDATE update_test AS t SET b = update_test.b + 10 WHERE t.a = 10;
2024-09-08 14:51:53.890 KST client backend[3075581] pg_regress/namespace ERROR:  schema "test_ns_schema_renamed" already exists
2024-09-08 14:51:53.890 KST client backend[3075581] pg_regress/namespace STATEMENT:  CREATE SCHEMA test_ns_schema_renamed;
2024-09-08 14:51:53.890 KST client backend[3075570] pg_regress/transactions ERROR:  parameter "transaction_isolation" cannot be reset
2024-09-08 14:51:53.890 KST client backend[3075570] pg_regress/transactions STATEMENT:  RESET transaction_isolation;
2024-09-08 14:51:53.890 KST client backend[3075581] pg_regress/namespace ERROR:  CREATE SCHEMA IF NOT EXISTS cannot include schema elements at character 79
2024-09-08 14:51:53.890 KST client backend[3075581] pg_regress/namespace STATEMENT:  CREATE SCHEMA IF NOT EXISTS test_ns_schema_renamed -- fail, disallowed
	       CREATE TABLE abc (
	              a serial,
	              b int UNIQUE
	       );
2024-09-08 14:51:53.890 KST client backend[3075576] pg_regress/portals LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075576.0", size 2580000
2024-09-08 14:51:53.890 KST client backend[3075576] pg_regress/portals STATEMENT:  CLOSE foo25;
2024-09-08 14:51:53.890 KST client backend[3075570] pg_regress/transactions ERROR:  parameter "transaction_read_only" cannot be reset
2024-09-08 14:51:53.890 KST client backend[3075570] pg_regress/transactions STATEMENT:  RESET transaction_read_only;
2024-09-08 14:51:53.890 KST client backend[3075582] pg_regress/prepared_xacts ERROR:  cannot PREPARE while holding both session-level and transaction-level locks on the same object
2024-09-08 14:51:53.890 KST client backend[3075582] pg_regress/prepared_xacts STATEMENT:  PREPARE TRANSACTION 'foo6';
2024-09-08 14:51:53.890 KST client backend[3075570] pg_regress/transactions ERROR:  parameter "transaction_deferrable" cannot be reset
2024-09-08 14:51:53.890 KST client backend[3075570] pg_regress/transactions STATEMENT:  RESET transaction_deferrable;
2024-09-08 14:51:53.891 KST client backend[3075570] pg_regress/transactions ERROR:  parameter "transaction_read_only" cannot be set locally in functions
2024-09-08 14:51:53.891 KST client backend[3075570] pg_regress/transactions STATEMENT:  CREATE FUNCTION errfunc() RETURNS int LANGUAGE SQL AS 'SELECT 1'
	SET transaction_read_only = on;
2024-09-08 14:51:53.891 KST client backend[3075557] pg_regress/select_implicit ERROR:  column "test_missing_target.b" must appear in the GROUP BY clause or be used in an aggregate function at character 62
2024-09-08 14:51:53.891 KST client backend[3075557] pg_regress/select_implicit STATEMENT:  SELECT count(*) FROM test_missing_target GROUP BY a ORDER BY b;
2024-09-08 14:51:53.891 KST client backend[3075569] pg_regress/case ERROR:  division by zero
2024-09-08 14:51:53.891 KST client backend[3075569] pg_regress/case STATEMENT:  SELECT CASE WHEN i > 100 THEN 1/0 ELSE 0 END FROM case_tbl;
2024-09-08 14:51:53.891 KST client backend[3075557] pg_regress/select_implicit ERROR:  GROUP BY position 3 is not in select list at character 54
2024-09-08 14:51:53.891 KST client backend[3075557] pg_regress/select_implicit STATEMENT:  SELECT c, count(*) FROM test_missing_target GROUP BY 3;
2024-09-08 14:51:53.892 KST client backend[3075573] pg_regress/arrays ERROR:  number of array dimensions (7) exceeds the maximum allowed (6)
2024-09-08 14:51:53.892 KST client backend[3075573] pg_regress/arrays STATEMENT:  SELECT ('{}'::int[])[1][2][3][4][5][6][7];
2024-09-08 14:51:53.892 KST client backend[3075557] pg_regress/select_implicit ERROR:  column reference "b" is ambiguous at character 105
2024-09-08 14:51:53.892 KST client backend[3075557] pg_regress/select_implicit STATEMENT:  SELECT count(*) FROM test_missing_target x, test_missing_target y
		WHERE x.a = y.a
		GROUP BY b ORDER BY b;
2024-09-08 14:51:53.892 KST client backend[3075564] pg_regress/select_having ERROR:  column "test_having.a" must appear in the GROUP BY clause or be used in an aggregate function at character 8
2024-09-08 14:51:53.892 KST client backend[3075564] pg_regress/select_having STATEMENT:  SELECT a FROM test_having HAVING min(a) < max(a);
2024-09-08 14:51:53.892 KST client backend[3075573] pg_regress/arrays ERROR:  array subscript in assignment must not be null
2024-09-08 14:51:53.892 KST client backend[3075573] pg_regress/arrays STATEMENT:  UPDATE arrtest
	  SET c[NULL] = '{"can''t assign"}'
	  WHERE array_dims(c) is not null;
2024-09-08 14:51:53.892 KST client backend[3075564] pg_regress/select_having ERROR:  column "test_having.a" must appear in the GROUP BY clause or be used in an aggregate function at character 41
2024-09-08 14:51:53.892 KST client backend[3075564] pg_regress/select_having STATEMENT:  SELECT 1 AS one FROM test_having HAVING a > 1;
2024-09-08 14:51:53.892 KST client backend[3075573] pg_regress/arrays ERROR:  array subscript in assignment must not be null
2024-09-08 14:51:53.892 KST client backend[3075573] pg_regress/arrays STATEMENT:  UPDATE arrtest
	  SET c[NULL:1] = '{"can''t assign"}'
	  WHERE array_dims(c) is not null;
2024-09-08 14:51:53.892 KST client backend[3075573] pg_regress/arrays ERROR:  array subscript in assignment must not be null
2024-09-08 14:51:53.892 KST client backend[3075573] pg_regress/arrays STATEMENT:  UPDATE arrtest
	  SET c[1:NULL] = '{"can''t assign"}'
	  WHERE array_dims(c) is not null;
2024-09-08 14:51:53.892 KST client backend[3075573] pg_regress/arrays ERROR:  cannot subscript type timestamp with time zone because it does not support subscripting at character 9
2024-09-08 14:51:53.892 KST client backend[3075573] pg_regress/arrays STATEMENT:  SELECT (now())[1];
2024-09-08 14:51:53.893 KST client backend[3075582] pg_regress/prepared_xacts ERROR:  cursor "foo" does not exist
2024-09-08 14:51:53.893 KST client backend[3075582] pg_regress/prepared_xacts STATEMENT:  FETCH 1 FROM foo;
2024-09-08 14:51:53.893 KST client backend[3075582] pg_regress/prepared_xacts ERROR:  relation "pxtest2" does not exist at character 15
2024-09-08 14:51:53.893 KST client backend[3075582] pg_regress/prepared_xacts STATEMENT:  SELECT * FROM pxtest2;
2024-09-08 14:51:53.893 KST client backend[3075582] pg_regress/prepared_xacts ERROR:  could not obtain lock on relation "pxtest3"
2024-09-08 14:51:53.893 KST client backend[3075582] pg_regress/prepared_xacts STATEMENT:  lock table pxtest3 in access share mode nowait;
2024-09-08 14:51:53.894 KST client backend[3075557] pg_regress/select_implicit ERROR:  column "test_missing_target.b" must appear in the GROUP BY clause or be used in an aggregate function at character 62
2024-09-08 14:51:53.894 KST client backend[3075557] pg_regress/select_implicit STATEMENT:  SELECT count(a) FROM test_missing_target GROUP BY a ORDER BY b;
2024-09-08 14:51:53.894 KST client backend[3075573] pg_regress/arrays ERROR:  source array too small
2024-09-08 14:51:53.894 KST client backend[3075573] pg_regress/arrays STATEMENT:  UPDATE arrtest_s SET a[:] = '{23, 24, 25}';
2024-09-08 14:51:53.894 KST client backend[3075573] pg_regress/arrays ERROR:  array slice subscript must provide both boundaries
2024-09-08 14:51:53.894 KST client backend[3075573] pg_regress/arrays DETAIL:  When assigning to a slice of an empty array value, slice boundaries must be fully specified.
2024-09-08 14:51:53.894 KST client backend[3075573] pg_regress/arrays STATEMENT:  UPDATE arrtest_s SET a[:] = '{11, 12, 13, 14, 15}';
2024-09-08 14:51:53.894 KST client backend[3075575] pg_regress/aggregates ERROR:  aggregate functions are not allowed in WHERE at character 114
2024-09-08 14:51:53.894 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select ten, sum(distinct four) from onek a
	group by ten
	having exists (select 1 from onek b
	               where sum(distinct a.four + b.four) = b.four);
2024-09-08 14:51:53.894 KST client backend[3075557] pg_regress/select_implicit ERROR:  column reference "b" is ambiguous at character 109
2024-09-08 14:51:53.894 KST client backend[3075557] pg_regress/select_implicit STATEMENT:  SELECT count(x.a) FROM test_missing_target x, test_missing_target y
		WHERE x.a = y.a
		GROUP BY b/2 ORDER BY b/2;
2024-09-08 14:51:53.895 KST client backend[3075557] pg_regress/select_implicit ERROR:  column reference "b" is ambiguous at character 14
2024-09-08 14:51:53.895 KST client backend[3075557] pg_regress/select_implicit STATEMENT:  SELECT count(b) FROM test_missing_target x, test_missing_target y
		WHERE x.a = y.a
		GROUP BY x.b/2;
2024-09-08 14:51:53.895 KST client backend[3075573] pg_regress/arrays ERROR:  slices of fixed-length arrays not implemented
2024-09-08 14:51:53.895 KST client backend[3075573] pg_regress/arrays STATEMENT:  SELECT f1[0:1] FROM POINT_TBL;
2024-09-08 14:51:53.895 KST client backend[3075573] pg_regress/arrays ERROR:  slices of fixed-length arrays not implemented
2024-09-08 14:51:53.895 KST client backend[3075573] pg_regress/arrays STATEMENT:  SELECT f1[0:] FROM POINT_TBL;
2024-09-08 14:51:53.895 KST client backend[3075573] pg_regress/arrays ERROR:  slices of fixed-length arrays not implemented
2024-09-08 14:51:53.895 KST client backend[3075573] pg_regress/arrays STATEMENT:  SELECT f1[:1] FROM POINT_TBL;
2024-09-08 14:51:53.895 KST client backend[3075573] pg_regress/arrays ERROR:  slices of fixed-length arrays not implemented
2024-09-08 14:51:53.895 KST client backend[3075573] pg_regress/arrays STATEMENT:  SELECT f1[:] FROM POINT_TBL;
2024-09-08 14:51:53.896 KST client backend[3075573] pg_regress/arrays ERROR:  array subscript out of range
2024-09-08 14:51:53.896 KST client backend[3075573] pg_regress/arrays STATEMENT:  UPDATE point_tbl SET f1[3] = 10 WHERE f1::text = '(-10,-10)'::point::text RETURNING *;
2024-09-08 14:51:53.897 KST client backend[3075553] pg_regress/select_into ERROR:  SELECT ... INTO is not allowed here at character 38
2024-09-08 14:51:53.897 KST client backend[3075553] pg_regress/select_into STATEMENT:  DECLARE foo CURSOR FOR SELECT 1 INTO int4_tbl;
2024-09-08 14:51:53.897 KST client backend[3075553] pg_regress/select_into ERROR:  COPY (SELECT INTO) is not supported
2024-09-08 14:51:53.897 KST client backend[3075553] pg_regress/select_into STATEMENT:  COPY (SELECT 1 INTO frak UNION SELECT 2) TO 'blob';
2024-09-08 14:51:53.897 KST client backend[3075576] pg_regress/portals ERROR:  cursor can only scan forward
2024-09-08 14:51:53.897 KST client backend[3075576] pg_regress/portals HINT:  Declare it with SCROLL option to enable backward scan.
2024-09-08 14:51:53.897 KST client backend[3075576] pg_regress/portals STATEMENT:  FETCH ABSOLUTE 4 FROM foo25ns;
2024-09-08 14:51:53.897 KST client backend[3075553] pg_regress/select_into ERROR:  SELECT ... INTO is not allowed here at character 30
2024-09-08 14:51:53.897 KST client backend[3075553] pg_regress/select_into STATEMENT:  SELECT * FROM (SELECT 1 INTO f) bar;
2024-09-08 14:51:53.897 KST client backend[3075553] pg_regress/select_into ERROR:  views must not contain SELECT INTO
2024-09-08 14:51:53.897 KST client backend[3075553] pg_regress/select_into STATEMENT:  CREATE VIEW foo AS SELECT 1 INTO int4_tbl;
2024-09-08 14:51:53.897 KST client backend[3075583] pg_regress/prepared_xacts ERROR:  could not obtain lock on relation "pxtest3"
2024-09-08 14:51:53.897 KST client backend[3075583] pg_regress/prepared_xacts STATEMENT:  lock table pxtest3 in access share mode nowait;
2024-09-08 14:51:53.897 KST client backend[3075553] pg_regress/select_into ERROR:  SELECT ... INTO is not allowed here at character 36
2024-09-08 14:51:53.897 KST client backend[3075553] pg_regress/select_into STATEMENT:  INSERT INTO int4_tbl SELECT 1 INTO f;
2024-09-08 14:51:53.898 KST client backend[3075570] pg_regress/transactions ERROR:  transaction read-write mode must be set before any query
2024-09-08 14:51:53.898 KST client backend[3075570] pg_regress/transactions STATEMENT:  SET TRANSACTION READ WRITE;
2024-09-08 14:51:53.898 KST client backend[3075553] pg_regress/select_into ERROR:  relation "ctas_ine_tbl" already exists
2024-09-08 14:51:53.898 KST client backend[3075553] pg_regress/select_into STATEMENT:  CREATE TABLE ctas_ine_tbl AS SELECT 1 / 0;
2024-09-08 14:51:53.898 KST client backend[3075553] pg_regress/select_into ERROR:  relation "ctas_ine_tbl" already exists
2024-09-08 14:51:53.898 KST client backend[3075553] pg_regress/select_into STATEMENT:  CREATE TABLE ctas_ine_tbl AS SELECT 1 / 0 WITH NO DATA;
2024-09-08 14:51:53.898 KST client backend[3075576] pg_regress/portals LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075576.1", size 2539492
2024-09-08 14:51:53.898 KST client backend[3075576] pg_regress/portals STATEMENT:  CLOSE foo25ns;
2024-09-08 14:51:53.898 KST client backend[3075553] pg_regress/select_into ERROR:  relation "ctas_ine_tbl" already exists
2024-09-08 14:51:53.898 KST client backend[3075553] pg_regress/select_into STATEMENT:  EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
	  CREATE TABLE ctas_ine_tbl AS SELECT 1 / 0;
2024-09-08 14:51:53.898 KST client backend[3075570] pg_regress/transactions ERROR:  cannot set transaction read-write mode inside a read-only transaction
2024-09-08 14:51:53.898 KST client backend[3075570] pg_regress/transactions STATEMENT:  SET TRANSACTION READ WRITE;
2024-09-08 14:51:53.898 KST client backend[3075553] pg_regress/select_into ERROR:  relation "ctas_ine_tbl" already exists
2024-09-08 14:51:53.898 KST client backend[3075553] pg_regress/select_into STATEMENT:  EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
	  CREATE TABLE ctas_ine_tbl AS SELECT 1 / 0 WITH NO DATA;
2024-09-08 14:51:53.898 KST client backend[3075553] pg_regress/select_into ERROR:  relation "ctas_ine_tbl" already exists
2024-09-08 14:51:53.898 KST client backend[3075553] pg_regress/select_into STATEMENT:  EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
	  CREATE TABLE ctas_ine_tbl AS EXECUTE ctas_ine_query;
2024-09-08 14:51:53.899 KST client backend[3075570] pg_regress/transactions ERROR:  cannot set transaction read-write mode inside a read-only transaction
2024-09-08 14:51:53.899 KST client backend[3075570] pg_regress/transactions STATEMENT:  SET TRANSACTION READ WRITE;
2024-09-08 14:51:53.899 KST client backend[3075576] pg_regress/portals ERROR:  cursor "foo26" does not exist
2024-09-08 14:51:53.899 KST client backend[3075576] pg_regress/portals STATEMENT:  FETCH FROM foo26;
2024-09-08 14:51:53.899 KST client backend[3075570] pg_regress/transactions ERROR:  cannot execute DROP TABLE in a read-only transaction
2024-09-08 14:51:53.899 KST client backend[3075570] pg_regress/transactions STATEMENT:  DROP TABLE writetest;
2024-09-08 14:51:53.899 KST client backend[3075570] pg_regress/transactions ERROR:  cannot execute INSERT in a read-only transaction
2024-09-08 14:51:53.899 KST client backend[3075570] pg_regress/transactions STATEMENT:  INSERT INTO writetest VALUES (1);
2024-09-08 14:51:53.900 KST client backend[3075570] pg_regress/transactions ERROR:  cannot execute UPDATE in a read-only transaction
2024-09-08 14:51:53.900 KST client backend[3075570] pg_regress/transactions STATEMENT:  EXECUTE test;
2024-09-08 14:51:53.900 KST client backend[3075570] pg_regress/transactions ERROR:  cannot execute CREATE TABLE AS in a read-only transaction
2024-09-08 14:51:53.900 KST client backend[3075570] pg_regress/transactions STATEMENT:  CREATE TABLE test AS SELECT * FROM writetest;
2024-09-08 14:51:53.903 KST client backend[3075570] pg_regress/transactions ERROR:  relation "trans_bar" does not exist at character 15
2024-09-08 14:51:53.903 KST client backend[3075570] pg_regress/transactions STATEMENT:  SELECT * FROM trans_bar;
2024-09-08 14:51:53.903 KST client backend[3075573] pg_regress/arrays ERROR:  searching for elements in multidimensional arrays is not supported
2024-09-08 14:51:53.903 KST client backend[3075573] pg_regress/arrays STATEMENT:  SELECT array_position(ARRAY[[1,2],[3,4]], 3);
2024-09-08 14:51:53.903 KST client backend[3075570] pg_regress/transactions ERROR:  relation "trans_bar" does not exist at character 13
2024-09-08 14:51:53.903 KST client backend[3075570] pg_regress/transactions STATEMENT:  INSERT into trans_bar VALUES (1);
2024-09-08 14:51:53.903 KST client backend[3075573] pg_regress/arrays ERROR:  searching for elements in multidimensional arrays is not supported
2024-09-08 14:51:53.903 KST client backend[3075573] pg_regress/arrays STATEMENT:  SELECT array_positions(ARRAY[[1,2],[3,4]], 4);
2024-09-08 14:51:53.904 KST client backend[3075570] pg_regress/transactions ERROR:  column "trans_foo" does not exist at character 8
2024-09-08 14:51:53.904 KST client backend[3075570] pg_regress/transactions STATEMENT:  SELECT trans_foo;
2024-09-08 14:51:53.904 KST client backend[3075583] pg_regress/prepared_xacts ERROR:  relation "pxtest3" does not exist at character 15
2024-09-08 14:51:53.904 KST client backend[3075583] pg_regress/prepared_xacts STATEMENT:  SELECT * FROM pxtest3;
2024-09-08 14:51:53.904 KST client backend[3075570] pg_regress/transactions WARNING:  there is no transaction in progress
2024-09-08 14:51:53.905 KST client backend[3075570] pg_regress/transactions WARNING:  there is no transaction in progress
2024-09-08 14:51:53.905 KST client backend[3075583] pg_regress/prepared_xacts ERROR:  table "pxtest3" does not exist
2024-09-08 14:51:53.905 KST client backend[3075583] pg_regress/prepared_xacts STATEMENT:  DROP TABLE pxtest3;
2024-09-08 14:51:53.905 KST client backend[3075570] pg_regress/transactions ERROR:  column "trans_foo" does not exist at character 8
2024-09-08 14:51:53.905 KST client backend[3075570] pg_regress/transactions STATEMENT:  SELECT trans_foo;
2024-09-08 14:51:53.906 KST client backend[3075562] pg_regress/select_distinct LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075562.3", size 147456
2024-09-08 14:51:53.906 KST client backend[3075562] pg_regress/select_distinct STATEMENT:  CREATE TABLE distinct_group_2 AS
	SELECT DISTINCT (g%1000)::text FROM generate_series(0,9999) g;
2024-09-08 14:51:53.906 KST client backend[3075562] pg_regress/select_distinct LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075562.2", size 140000
2024-09-08 14:51:53.906 KST client backend[3075562] pg_regress/select_distinct STATEMENT:  CREATE TABLE distinct_group_2 AS
	SELECT DISTINCT (g%1000)::text FROM generate_series(0,9999) g;
2024-09-08 14:51:53.908 KST client backend[3075570] pg_regress/transactions ERROR:  SAVEPOINT can only be used in transaction blocks
2024-09-08 14:51:53.908 KST client backend[3075570] pg_regress/transactions STATEMENT:  SAVEPOINT one;
2024-09-08 14:51:53.908 KST client backend[3075570] pg_regress/transactions ERROR:  ROLLBACK TO SAVEPOINT can only be used in transaction blocks
2024-09-08 14:51:53.908 KST client backend[3075570] pg_regress/transactions STATEMENT:  ROLLBACK TO SAVEPOINT one;
2024-09-08 14:51:53.908 KST client backend[3075570] pg_regress/transactions ERROR:  RELEASE SAVEPOINT can only be used in transaction blocks
2024-09-08 14:51:53.908 KST client backend[3075570] pg_regress/transactions STATEMENT:  RELEASE SAVEPOINT one;
2024-09-08 14:51:53.908 KST client backend[3075570] pg_regress/transactions ERROR:  division by zero
2024-09-08 14:51:53.908 KST client backend[3075570] pg_regress/transactions STATEMENT:  SELECT 0/0;
2024-09-08 14:51:53.908 KST client backend[3075570] pg_regress/transactions ERROR:  current transaction is aborted, commands ignored until end of transaction block
2024-09-08 14:51:53.908 KST client backend[3075570] pg_regress/transactions STATEMENT:  SAVEPOINT two;
2024-09-08 14:51:53.908 KST client backend[3075570] pg_regress/transactions ERROR:  current transaction is aborted, commands ignored until end of transaction block
2024-09-08 14:51:53.908 KST client backend[3075570] pg_regress/transactions STATEMENT:  RELEASE SAVEPOINT one;
2024-09-08 14:51:53.909 KST client backend[3075570] pg_regress/transactions ERROR:  division by zero
2024-09-08 14:51:53.909 KST client backend[3075570] pg_regress/transactions STATEMENT:  FETCH 10 FROM c;
2024-09-08 14:51:53.909 KST client backend[3075570] pg_regress/transactions ERROR:  portal "c" cannot be run
2024-09-08 14:51:53.909 KST client backend[3075570] pg_regress/transactions STATEMENT:  FETCH 10 FROM c;
2024-09-08 14:51:53.909 KST client backend[3075570] pg_regress/transactions ERROR:  portal "c" cannot be run
2024-09-08 14:51:53.909 KST client backend[3075570] pg_regress/transactions STATEMENT:  FETCH 10 FROM c;
2024-09-08 14:51:53.910 KST client backend[3075562] pg_regress/select_distinct LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075562.4", size 140000
2024-09-08 14:51:53.910 KST client backend[3075562] pg_regress/select_distinct STATEMENT:  CREATE TABLE distinct_hash_1 AS
	SELECT DISTINCT g%1000 FROM generate_series(0,9999) g;
2024-09-08 14:51:53.911 KST client backend[3075576] pg_regress/portals ERROR:  cursor can only scan forward
2024-09-08 14:51:53.911 KST client backend[3075576] pg_regress/portals HINT:  Declare it with SCROLL option to enable backward scan.
2024-09-08 14:51:53.911 KST client backend[3075576] pg_regress/portals STATEMENT:  FETCH RELATIVE 0 FROM c1;
2024-09-08 14:51:53.912 KST client backend[3075573] pg_regress/arrays ERROR:  op ANY/ALL (array) requires operator to yield boolean at character 11
2024-09-08 14:51:53.912 KST client backend[3075573] pg_regress/arrays STATEMENT:  select 33 * any ('{1,2,3}');
2024-09-08 14:51:53.912 KST client backend[3075573] pg_regress/arrays ERROR:  op ANY/ALL (array) requires array on right side at character 11
2024-09-08 14:51:53.912 KST client backend[3075573] pg_regress/arrays STATEMENT:  select 33 * any (44);
2024-09-08 14:51:53.913 KST client backend[3075570] pg_regress/transactions ERROR:  duplicate key value violates unique constraint "koju_a_key"
2024-09-08 14:51:53.913 KST client backend[3075570] pg_regress/transactions DETAIL:  Key (a)=(1) already exists.
2024-09-08 14:51:53.913 KST client backend[3075570] pg_regress/transactions STATEMENT:  INSERT INTO koju VALUES (1);
2024-09-08 14:51:53.914 KST client backend[3075573] pg_regress/arrays ERROR:  duplicate key value violates unique constraint "arr_tbl_f1_key"
2024-09-08 14:51:53.914 KST client backend[3075573] pg_regress/arrays DETAIL:  Key (f1)=({1,2,3}) already exists.
2024-09-08 14:51:53.914 KST client backend[3075573] pg_regress/arrays STATEMENT:  insert into arr_tbl values ('{1,2,3}');
2024-09-08 14:51:53.914 KST client backend[3075570] pg_regress/transactions ERROR:  duplicate key value violates unique constraint "koju_a_key"
2024-09-08 14:51:53.914 KST client backend[3075570] pg_regress/transactions DETAIL:  Key (a)=(1) already exists.
2024-09-08 14:51:53.914 KST client backend[3075570] pg_regress/transactions STATEMENT:  INSERT INTO koju VALUES (1);
2024-09-08 14:51:53.915 KST client backend[3075576] pg_regress/portals ERROR:  cursor "c1" is not a simply updatable scan of table "uctest"
2024-09-08 14:51:53.915 KST client backend[3075576] pg_regress/portals STATEMENT:  UPDATE uctest SET f1 = f1 + 10 WHERE CURRENT OF c1;
2024-09-08 14:51:53.915 KST client backend[3075576] pg_regress/portals ERROR:  cursor "c1" has multiple FOR UPDATE/SHARE references to table "uctest"
2024-09-08 14:51:53.915 KST client backend[3075576] pg_regress/portals STATEMENT:  UPDATE uctest SET f1 = f1 + 10 WHERE CURRENT OF c1;
2024-09-08 14:51:53.916 KST client backend[3075562] pg_regress/select_distinct LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075562.5", size 140000
2024-09-08 14:51:53.916 KST client backend[3075562] pg_regress/select_distinct STATEMENT:  CREATE TABLE distinct_hash_2 AS
	SELECT DISTINCT (g%1000)::text FROM generate_series(0,9999) g;
2024-09-08 14:51:53.916 KST client backend[3075576] pg_regress/portals ERROR:  cursor "c1" does not exist
2024-09-08 14:51:53.916 KST client backend[3075576] pg_regress/portals STATEMENT:  DELETE FROM uctest WHERE CURRENT OF c1;
2024-09-08 14:51:53.916 KST client backend[3075573] pg_regress/arrays ERROR:  array size exceeds the maximum allowed (134217727)
2024-09-08 14:51:53.916 KST client backend[3075573] pg_regress/arrays STATEMENT:  update arr_pk_tbl set f1[2147483647] = 42 where pk = 10;
2024-09-08 14:51:53.916 KST client backend[3075576] pg_regress/portals ERROR:  cursor "cx" is held from a previous transaction
2024-09-08 14:51:53.916 KST client backend[3075576] pg_regress/portals STATEMENT:  DELETE FROM uctest WHERE CURRENT OF cx;
2024-09-08 14:51:53.916 KST client backend[3075573] pg_regress/arrays ERROR:  array size exceeds the maximum allowed (134217727)
2024-09-08 14:51:53.916 KST client backend[3075573] pg_regress/arrays STATEMENT:  update arr_pk_tbl set f1[2147483646:2147483647] = array[4,2] where pk = 10;
2024-09-08 14:51:53.916 KST client backend[3075580] pg_regress/update ERROR:  new row for relation "part_c_100_200" violates partition constraint
2024-09-08 14:51:53.916 KST client backend[3075580] pg_regress/update DETAIL:  Failing row contains (105, 85, null, b, 15).
2024-09-08 14:51:53.916 KST client backend[3075580] pg_regress/update STATEMENT:  UPDATE part_c_100_200 set c = c - 20, d = c WHERE c = 105;
2024-09-08 14:51:53.916 KST client backend[3075573] pg_regress/arrays ERROR:  array size exceeds the maximum allowed (134217727)
2024-09-08 14:51:53.916 KST client backend[3075573] pg_regress/arrays CONTEXT:  PL/pgSQL function inline_code_block line 4 at assignment
2024-09-08 14:51:53.916 KST client backend[3075573] pg_regress/arrays STATEMENT:  do $$ declare a int[];
	begin
	  a := '[-2147483648:-2147483647]={1,2}'::int[];
	  a[2147483647] := 42;
	end $$;
2024-09-08 14:51:53.916 KST client backend[3075580] pg_regress/update ERROR:  new row for relation "part_b_10_b_20" violates partition constraint
2024-09-08 14:51:53.916 KST client backend[3075580] pg_regress/update DETAIL:  Failing row contains (null, 96, a, 12, 1).
2024-09-08 14:51:53.916 KST client backend[3075580] pg_regress/update STATEMENT:  UPDATE part_b_10_b_20 set a = 'a';
2024-09-08 14:51:53.916 KST client backend[3075576] pg_regress/portals ERROR:  cursor "c" is not a simply updatable scan of table "uctest"
2024-09-08 14:51:53.916 KST client backend[3075576] pg_regress/portals STATEMENT:  DELETE FROM uctest WHERE CURRENT OF c;
2024-09-08 14:51:53.917 KST client backend[3075576] pg_regress/portals ERROR:  cursor "c" does not have a FOR UPDATE/SHARE reference to table "uctest"
2024-09-08 14:51:53.917 KST client backend[3075576] pg_regress/portals STATEMENT:  DELETE FROM uctest WHERE CURRENT OF c;
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays ERROR:  malformed array literal: "{{1,{2}},{2,3}}" at character 8
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays DETAIL:  Unexpected "{" character.
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays STATEMENT:  select '{{1,{2}},{2,3}}'::text[];
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays ERROR:  malformed array literal: "{{},{}}" at character 8
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays DETAIL:  Unexpected "}" character.
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays STATEMENT:  select '{{},{}}'::text[];
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays ERROR:  malformed array literal: "{{1,2},\{2,3}}" at character 8
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays DETAIL:  Unexpected "\" character.
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays STATEMENT:  select E'{{1,2},\\{2,3}}'::text[];
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays ERROR:  malformed array literal: "{{"1 2" x},{3}}" at character 8
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays DETAIL:  Unexpected array element.
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays STATEMENT:  select '{{"1 2" x},{3}}'::text[];
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays ERROR:  malformed array literal: "{}}" at character 8
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays DETAIL:  Junk after closing right brace.
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays STATEMENT:  select '{}}'::text[];
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays ERROR:  malformed array literal: "{ }}" at character 8
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays DETAIL:  Junk after closing right brace.
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays STATEMENT:  select '{ }}'::text[];
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays ERROR:  cannot determine type of empty array at character 8
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays HINT:  Explicitly cast to the desired type, for example ARRAY[]::integer[].
2024-09-08 14:51:53.917 KST client backend[3075573] pg_regress/arrays STATEMENT:  select array[];
2024-09-08 14:51:53.917 KST client backend[3075576] pg_regress/portals ERROR:  cursor "c" is not a simply updatable scan of table "tenk1"
2024-09-08 14:51:53.917 KST client backend[3075576] pg_regress/portals STATEMENT:  DELETE FROM tenk1 WHERE CURRENT OF c;
2024-09-08 14:51:53.917 KST client backend[3075576] pg_regress/portals ERROR:  cursor "c" is not a simply updatable scan of table "uctest"
2024-09-08 14:51:53.917 KST client backend[3075576] pg_regress/portals STATEMENT:  DELETE FROM uctest WHERE CURRENT OF c;
2024-09-08 14:51:53.918 KST client backend[3075580] pg_regress/update ERROR:  new row for relation "part_b_10_b_20" violates partition constraint
2024-09-08 14:51:53.918 KST client backend[3075580] pg_regress/update DETAIL:  Failing row contains (2, 117, b, 7, 2).
2024-09-08 14:51:53.918 KST client backend[3075580] pg_regress/update STATEMENT:  UPDATE part_b_10_b_20 set b = b - 6 WHERE c > 116 returning *;
2024-09-08 14:51:53.918 KST client backend[3075576] pg_regress/portals ERROR:  cursor "c1" is not positioned on a row
2024-09-08 14:51:53.918 KST client backend[3075576] pg_regress/portals STATEMENT:  DELETE FROM uctest WHERE CURRENT OF c1;
2024-09-08 14:51:53.918 KST client backend[3075570] pg_regress/transactions ERROR:  cursor "foo" does not exist
2024-09-08 14:51:53.918 KST client backend[3075570] pg_regress/transactions STATEMENT:  fetch from foo;
2024-09-08 14:51:53.918 KST client backend[3075576] pg_regress/portals ERROR:  FOR UPDATE is not allowed with aggregate functions
2024-09-08 14:51:53.918 KST client backend[3075576] pg_regress/portals STATEMENT:  DECLARE c1 CURSOR FOR SELECT MIN(f1) FROM uctest FOR UPDATE;
2024-09-08 14:51:53.919 KST client backend[3075576] pg_regress/portals ERROR:  WHERE CURRENT OF on a view is not implemented
2024-09-08 14:51:53.919 KST client backend[3075576] pg_regress/portals STATEMENT:  DELETE FROM ucview WHERE CURRENT OF c1;
2024-09-08 14:51:53.920 KST client backend[3075570] pg_regress/transactions ERROR:  division by zero
2024-09-08 14:51:53.920 KST client backend[3075570] pg_regress/transactions CONTEXT:  PL/pgSQL function invert(double precision) line 1 at RETURN
	SQL statement "INSERT INTO new_table SELECT invert(0.0)"
	PL/pgSQL function create_temp_tab() line 6 at SQL statement
2024-09-08 14:51:53.920 KST client backend[3075570] pg_regress/transactions STATEMENT:  FETCH ctt;
2024-09-08 14:51:53.920 KST client backend[3075570] pg_regress/transactions ERROR:  portal "ctt" cannot be run
2024-09-08 14:51:53.920 KST client backend[3075570] pg_regress/transactions STATEMENT:  FETCH ctt;
2024-09-08 14:51:53.920 KST client backend[3075580] pg_regress/update ERROR:  new row violates check option for view "upview"
2024-09-08 14:51:53.920 KST client backend[3075580] pg_regress/update DETAIL:  Failing row contains (a, 4, 120, 1, 1).
2024-09-08 14:51:53.920 KST client backend[3075580] pg_regress/update STATEMENT:  UPDATE upview set c = 120 WHERE b = 4;
2024-09-08 14:51:53.921 KST client backend[3075580] pg_regress/update ERROR:  new row violates check option for view "upview"
2024-09-08 14:51:53.921 KST client backend[3075580] pg_regress/update DETAIL:  Failing row contains (b, 15, 120, 1, 1).
2024-09-08 14:51:53.921 KST client backend[3075580] pg_regress/update STATEMENT:  UPDATE upview set a = 'b', b = 15, c = 120 WHERE b = 4;
2024-09-08 14:51:53.921 KST client backend[3075570] pg_regress/transactions ERROR:  invalid input syntax for type integer: "error" at character 31
2024-09-08 14:51:53.921 KST client backend[3075570] pg_regress/transactions STATEMENT:  INSERT INTO trans_abc VALUES ('error');
2024-09-08 14:51:53.921 KST client backend[3075570] pg_regress/transactions ERROR:  current transaction is aborted, commands ignored until end of transaction block
2024-09-08 14:51:53.921 KST client backend[3075570] pg_regress/transactions STATEMENT:  INSERT INTO trans_abc VALUES (3);
2024-09-08 14:51:53.922 KST client backend[3075570] pg_regress/transactions ERROR:  invalid input syntax for type integer: "error" at character 31
2024-09-08 14:51:53.922 KST client backend[3075570] pg_regress/transactions STATEMENT:  INSERT INTO trans_abc VALUES ('error');
2024-09-08 14:51:53.923 KST client backend[3075570] pg_regress/transactions ERROR:  invalid input syntax for type integer: "error" at character 31
2024-09-08 14:51:53.923 KST client backend[3075570] pg_regress/transactions STATEMENT:  INSERT INTO trans_abc VALUES ('error');
2024-09-08 14:51:53.923 KST client backend[3075575] pg_regress/aggregates ERROR:  aggregate function calls cannot be nested at character 12
2024-09-08 14:51:53.923 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select max(min(unique1)) from tenk1;
2024-09-08 14:51:53.923 KST client backend[3075570] pg_regress/transactions ERROR:  COMMIT AND CHAIN can only be used in transaction blocks
2024-09-08 14:51:53.923 KST client backend[3075570] pg_regress/transactions STATEMENT:  COMMIT AND CHAIN;
2024-09-08 14:51:53.923 KST client backend[3075570] pg_regress/transactions ERROR:  ROLLBACK AND CHAIN can only be used in transaction blocks
2024-09-08 14:51:53.923 KST client backend[3075570] pg_regress/transactions STATEMENT:  ROLLBACK AND CHAIN;
2024-09-08 14:51:53.923 KST client backend[3075575] pg_regress/aggregates ERROR:  aggregate function calls cannot be nested at character 20
2024-09-08 14:51:53.923 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select (select max(min(unique1)) from int8_tbl) from tenk1;
2024-09-08 14:51:53.923 KST client backend[3075575] pg_regress/aggregates ERROR:  aggregate function calls cannot be nested at character 49
2024-09-08 14:51:53.923 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select avg((select avg(a1.col1 order by (select avg(a2.col2) from tenk1 a3))
	            from tenk1 a1(col1)))
	from tenk1 a2(col2);
2024-09-08 14:51:53.923 KST client backend[3075573] pg_regress/arrays ERROR:  dimension array or low bound array cannot be null
2024-09-08 14:51:53.923 KST client backend[3075573] pg_regress/arrays STATEMENT:  select array_fill(1, null, array[2,2]);
2024-09-08 14:51:53.923 KST client backend[3075573] pg_regress/arrays ERROR:  dimension array or low bound array cannot be null
2024-09-08 14:51:53.923 KST client backend[3075573] pg_regress/arrays STATEMENT:  select array_fill(1, array[2,2], null);
2024-09-08 14:51:53.923 KST client backend[3075573] pg_regress/arrays ERROR:  wrong number of array subscripts
2024-09-08 14:51:53.923 KST client backend[3075573] pg_regress/arrays DETAIL:  Low bound array has different size than dimensions array.
2024-09-08 14:51:53.923 KST client backend[3075573] pg_regress/arrays STATEMENT:  select array_fill(1, array[2,2], '{}');
2024-09-08 14:51:53.924 KST client backend[3075573] pg_regress/arrays ERROR:  wrong number of array subscripts
2024-09-08 14:51:53.924 KST client backend[3075573] pg_regress/arrays DETAIL:  Low bound array has different size than dimensions array.
2024-09-08 14:51:53.924 KST client backend[3075573] pg_regress/arrays STATEMENT:  select array_fill(1, array[3,3], array[1,1,1]);
2024-09-08 14:51:53.924 KST client backend[3075573] pg_regress/arrays ERROR:  dimension values cannot be null
2024-09-08 14:51:53.924 KST client backend[3075573] pg_regress/arrays STATEMENT:  select array_fill(1, array[1,2,null]);
2024-09-08 14:51:53.924 KST client backend[3075573] pg_regress/arrays ERROR:  wrong number of array subscripts
2024-09-08 14:51:53.924 KST client backend[3075573] pg_regress/arrays DETAIL:  Dimension array must be one dimensional.
2024-09-08 14:51:53.924 KST client backend[3075573] pg_regress/arrays STATEMENT:  select array_fill(1, array[[1,2],[3,4]]);
2024-09-08 14:51:53.924 KST client backend[3075570] pg_regress/transactions ERROR:  division by zero
2024-09-08 14:51:53.924 KST client backend[3075570] pg_regress/transactions STATEMENT:  insert into i_table values(2); select * from i_table; select 1/0;
2024-09-08 14:51:53.924 KST client backend[3075570] pg_regress/transactions WARNING:  there is no transaction in progress
2024-09-08 14:51:53.924 KST client backend[3075570] pg_regress/transactions WARNING:  there is no transaction in progress
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions WARNING:  there is no transaction in progress
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions WARNING:  there is no transaction in progress
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions ERROR:  division by zero
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions STATEMENT:  insert into i_table values(7); commit; insert into i_table values(8); select 1/0;
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions WARNING:  there is no transaction in progress
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions WARNING:  there is no transaction in progress
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions ERROR:  VACUUM cannot run inside a transaction block
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions STATEMENT:  SELECT 1; VACUUM;
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions WARNING:  there is no transaction in progress
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions ERROR:  VACUUM cannot run inside a transaction block
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions STATEMENT:  SELECT 1; COMMIT; VACUUM;
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions ERROR:  SAVEPOINT can only be used in transaction blocks
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions STATEMENT:  SELECT 1; SAVEPOINT sp;
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions WARNING:  there is no transaction in progress
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions ERROR:  SAVEPOINT can only be used in transaction blocks
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions STATEMENT:  SELECT 1; COMMIT; SAVEPOINT sp;
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions ERROR:  ROLLBACK TO SAVEPOINT can only be used in transaction blocks
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions STATEMENT:  ROLLBACK TO SAVEPOINT sp; SELECT 2;
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions ERROR:  RELEASE SAVEPOINT can only be used in transaction blocks
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions STATEMENT:  SELECT 2; RELEASE SAVEPOINT sp; SELECT 3;
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions ERROR:  COMMIT AND CHAIN can only be used in transaction blocks
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions STATEMENT:  SET TRANSACTION READ ONLY; COMMIT AND CHAIN;
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions ERROR:  ROLLBACK AND CHAIN can only be used in transaction blocks
2024-09-08 14:51:53.925 KST client backend[3075570] pg_regress/transactions STATEMENT:  SET TRANSACTION READ ONLY; ROLLBACK AND CHAIN;
2024-09-08 14:51:53.926 KST client backend[3075570] pg_regress/transactions WARNING:  there is no transaction in progress
2024-09-08 14:51:53.926 KST client backend[3075570] pg_regress/transactions ERROR:  COMMIT AND CHAIN can only be used in transaction blocks
2024-09-08 14:51:53.926 KST client backend[3075570] pg_regress/transactions STATEMENT:  INSERT INTO trans_abc VALUES (7); COMMIT; INSERT INTO trans_abc VALUES (8); COMMIT AND CHAIN;
2024-09-08 14:51:53.926 KST client backend[3075570] pg_regress/transactions WARNING:  there is no transaction in progress
2024-09-08 14:51:53.926 KST client backend[3075570] pg_regress/transactions ERROR:  ROLLBACK AND CHAIN can only be used in transaction blocks
2024-09-08 14:51:53.926 KST client backend[3075570] pg_regress/transactions STATEMENT:  INSERT INTO trans_abc VALUES (9); ROLLBACK; INSERT INTO trans_abc VALUES (10); ROLLBACK AND CHAIN;
2024-09-08 14:51:53.926 KST client backend[3075570] pg_regress/transactions ERROR:  COMMIT AND CHAIN can only be used in transaction blocks
2024-09-08 14:51:53.926 KST client backend[3075570] pg_regress/transactions STATEMENT:  INSERT INTO trans_abc VALUES (11); COMMIT AND CHAIN; INSERT INTO trans_abc VALUES (12); COMMIT;
2024-09-08 14:51:53.926 KST client backend[3075570] pg_regress/transactions ERROR:  ROLLBACK AND CHAIN can only be used in transaction blocks
2024-09-08 14:51:53.926 KST client backend[3075570] pg_regress/transactions STATEMENT:  INSERT INTO trans_abc VALUES (13); ROLLBACK AND CHAIN; INSERT INTO trans_abc VALUES (14); ROLLBACK;
2024-09-08 14:51:53.927 KST client backend[3075570] pg_regress/transactions ERROR:  COMMIT AND CHAIN can only be used in transaction blocks
2024-09-08 14:51:53.927 KST client backend[3075570] pg_regress/transactions STATEMENT:  START TRANSACTION ISOLATION LEVEL REPEATABLE READ; INSERT INTO trans_abc VALUES (17); COMMIT; INSERT INTO trans_abc VALUES (18); COMMIT AND CHAIN;
2024-09-08 14:51:53.927 KST client backend[3075570] pg_regress/transactions ERROR:  ROLLBACK AND CHAIN can only be used in transaction blocks
2024-09-08 14:51:53.927 KST client backend[3075570] pg_regress/transactions STATEMENT:  START TRANSACTION ISOLATION LEVEL REPEATABLE READ; INSERT INTO trans_abc VALUES (19); ROLLBACK; INSERT INTO trans_abc VALUES (20); ROLLBACK AND CHAIN;
2024-09-08 14:51:53.927 KST client backend[3075570] pg_regress/transactions ERROR:  division by zero
2024-09-08 14:51:53.927 KST client backend[3075570] pg_regress/transactions STATEMENT:  select 1/0;
2024-09-08 14:51:53.927 KST client backend[3075570] pg_regress/transactions ERROR:  savepoint "x" does not exist
2024-09-08 14:51:53.927 KST client backend[3075570] pg_regress/transactions STATEMENT:  rollback to X;
2024-09-08 14:51:53.927 KST client backend[3075573] pg_regress/arrays ERROR:  cannot accumulate empty arrays
2024-09-08 14:51:53.927 KST client backend[3075573] pg_regress/arrays STATEMENT:  select array_agg('{}'::int[]) from generate_series(1,2);
2024-09-08 14:51:53.927 KST client backend[3075573] pg_regress/arrays ERROR:  cannot accumulate null arrays
2024-09-08 14:51:53.927 KST client backend[3075573] pg_regress/arrays STATEMENT:  select array_agg(null::int[]) from generate_series(1,2);
2024-09-08 14:51:53.928 KST client backend[3075573] pg_regress/arrays ERROR:  cannot accumulate arrays of different dimensionality
2024-09-08 14:51:53.928 KST client backend[3075573] pg_regress/arrays STATEMENT:  select array_agg(ar)
	  from (values ('{1,2}'::int[]), ('{3}'::int[])) v(ar);
2024-09-08 14:51:53.928 KST client backend[3075573] pg_regress/arrays ERROR:  removing elements from multidimensional arrays is not supported
2024-09-08 14:51:53.928 KST client backend[3075573] pg_regress/arrays STATEMENT:  select array_remove('{{1,2,2},{1,4,3}}', 2);
2024-09-08 14:51:53.929 KST client backend[3075566] pg_regress/union ERROR:  column "q2" does not exist at character 65
2024-09-08 14:51:53.929 KST client backend[3075566] pg_regress/union DETAIL:  There is a column named "q2" in table "*SELECT* 2", but it cannot be referenced from this part of the query.
2024-09-08 14:51:53.929 KST client backend[3075566] pg_regress/union STATEMENT:  SELECT q1 FROM int8_tbl EXCEPT SELECT q2 FROM int8_tbl ORDER BY q2 LIMIT 1;
2024-09-08 14:51:53.931 KST client backend[3075566] pg_regress/union ERROR:  invalid input syntax for type numeric: "foo" at character 36
2024-09-08 14:51:53.931 KST client backend[3075566] pg_regress/union STATEMENT:  SELECT '3.4'::numeric UNION SELECT 'foo';
2024-09-08 14:51:53.933 KST client backend[3075575] pg_regress/aggregates ERROR:  column "t1.f1" must appear in the GROUP BY clause or be used in an aggregate function at character 8
2024-09-08 14:51:53.933 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select t1.f1 from t1 left join t2 using (f1) group by f1;
2024-09-08 14:51:53.945 KST client backend[3075575] pg_regress/aggregates ERROR:  in an aggregate with DISTINCT, ORDER BY expressions must appear in argument list at character 39
2024-09-08 14:51:53.945 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select aggfns(distinct a,b,c order by i)
	  from (values (1,1,'foo')) v(a,b,c), generate_series(1,2) i;
2024-09-08 14:51:53.945 KST client backend[3075575] pg_regress/aggregates ERROR:  in an aggregate with DISTINCT, ORDER BY expressions must appear in argument list at character 41
2024-09-08 14:51:53.945 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select aggfns(distinct a,b,c order by a,b+1)
	  from (values (1,1,'foo')) v(a,b,c), generate_series(1,2) i;
2024-09-08 14:51:53.945 KST client backend[3075575] pg_regress/aggregates ERROR:  in an aggregate with DISTINCT, ORDER BY expressions must appear in argument list at character 43
2024-09-08 14:51:53.945 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select aggfns(distinct a,b,c order by a,b,i,c)
	  from (values (1,1,'foo')) v(a,b,c), generate_series(1,2) i;
2024-09-08 14:51:53.946 KST client backend[3075575] pg_regress/aggregates ERROR:  in an aggregate with DISTINCT, ORDER BY expressions must appear in argument list at character 41
2024-09-08 14:51:53.946 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select aggfns(distinct a,a,c order by a,b)
	  from (values (1,1,'foo')) v(a,b,c), generate_series(1,2) i;
2024-09-08 14:51:53.946 KST client backend[3075574] pg_regress/join ERROR:  column t1.x does not exist at character 8
2024-09-08 14:51:53.946 KST client backend[3075574] pg_regress/join HINT:  Perhaps you meant to reference the column "t3.x".
2024-09-08 14:51:53.946 KST client backend[3075574] pg_regress/join STATEMENT:  select t1.x from t1 join t3 on (t1.a = t3.x);
2024-09-08 14:51:53.946 KST client backend[3075575] pg_regress/aggregates ERROR:  in an aggregate with DISTINCT, ORDER BY expressions must appear in argument list at character 51
2024-09-08 14:51:53.946 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select string_agg(distinct f1::text, ',' order by f1) from varchar_tbl;
2024-09-08 14:51:53.946 KST client backend[3075574] pg_regress/join ERROR:  FOR UPDATE cannot be applied to a join at character 101
2024-09-08 14:51:53.946 KST client backend[3075574] pg_regress/join STATEMENT:  select foo.*, unnamed_join.* from
	  t1 join t2 using (a) as foo, t3 as unnamed_join
	  for update of foo;
2024-09-08 14:51:53.946 KST client backend[3075575] pg_regress/aggregates ERROR:  in an aggregate with DISTINCT, ORDER BY expressions must appear in argument list at character 45
2024-09-08 14:51:53.946 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select string_agg(distinct f1, ',' order by f1::text) from varchar_tbl;
2024-09-08 14:51:53.946 KST client backend[3075574] pg_regress/join ERROR:  relation "foo" in FOR UPDATE clause not found in FROM clause at character 110
2024-09-08 14:51:53.946 KST client backend[3075574] pg_regress/join STATEMENT:  select bar.*, unnamed_join.* from
	  (t1 join t2 using (a) as foo) as bar, t3 as unnamed_join
	  for update of foo;
2024-09-08 14:51:53.947 KST client backend[3075574] pg_regress/join ERROR:  FOR UPDATE cannot be applied to a join at character 110
2024-09-08 14:51:53.947 KST client backend[3075574] pg_regress/join STATEMENT:  select bar.*, unnamed_join.* from
	  (t1 join t2 using (a) as foo) as bar, t3 as unnamed_join
	  for update of bar;
2024-09-08 14:51:53.947 KST client backend[3075572] pg_regress/subselect ERROR:  operator does not exist: bigint = text at character 33
2024-09-08 14:51:53.947 KST client backend[3075572] pg_regress/subselect HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:53.947 KST client backend[3075572] pg_regress/subselect STATEMENT:  select * from int8_tbl where q1 in (select c1 from inner_text);
2024-09-08 14:51:53.958 KST client backend[3075580] pg_regress/update ERROR:  new row violates row-level security policy for table "range_parted"
2024-09-08 14:51:53.958 KST client backend[3075580] pg_regress/update STATEMENT:  UPDATE range_parted set a = 'b', c = 151 WHERE a = 'a' and c = 200;
2024-09-08 14:51:53.967 KST client backend[3075580] pg_regress/update ERROR:  new row violates row-level security policy for table "range_parted"
2024-09-08 14:51:53.967 KST client backend[3075580] pg_regress/update STATEMENT:  UPDATE range_parted set a = 'b', c = 150 WHERE a = 'a' and c = 200;
2024-09-08 14:51:53.971 KST client backend[3075580] pg_regress/update ERROR:  new row violates row-level security policy "policy_range_parted_subplan" for table "range_parted"
2024-09-08 14:51:53.971 KST client backend[3075580] pg_regress/update STATEMENT:  UPDATE range_parted set a = 'b', c = 122 WHERE a = 'a' and c = 200;
2024-09-08 14:51:53.980 KST client backend[3075573] pg_regress/arrays ERROR:  function width_bucket(text, integer[]) does not exist at character 8
2024-09-08 14:51:53.980 KST client backend[3075573] pg_regress/arrays HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:53.980 KST client backend[3075573] pg_regress/arrays STATEMENT:  SELECT width_bucket('5'::text, ARRAY[3, 4]::integer[]);
2024-09-08 14:51:53.980 KST client backend[3075573] pg_regress/arrays ERROR:  thresholds array must not contain NULLs
2024-09-08 14:51:53.980 KST client backend[3075573] pg_regress/arrays STATEMENT:  SELECT width_bucket(5, ARRAY[3, 4, NULL]);
2024-09-08 14:51:53.980 KST client backend[3075580] pg_regress/update ERROR:  new row violates row-level security policy "policy_range_parted_wholerow" for table "range_parted"
2024-09-08 14:51:53.980 KST client backend[3075580] pg_regress/update STATEMENT:  UPDATE range_parted set a = 'b', c = 116 WHERE a = 'a' and c = 200;
2024-09-08 14:51:53.980 KST client backend[3075573] pg_regress/arrays ERROR:  thresholds must be one-dimensional array
2024-09-08 14:51:53.980 KST client backend[3075573] pg_regress/arrays STATEMENT:  SELECT width_bucket(5, ARRAY[ARRAY[1, 2], ARRAY[3, 4]]);
2024-09-08 14:51:53.980 KST client backend[3075573] pg_regress/arrays ERROR:  number of elements to trim must be between 0 and 3
2024-09-08 14:51:53.980 KST client backend[3075573] pg_regress/arrays STATEMENT:  SELECT trim_array(ARRAY[1, 2, 3], -1);
2024-09-08 14:51:53.980 KST client backend[3075573] pg_regress/arrays ERROR:  number of elements to trim must be between 0 and 3
2024-09-08 14:51:53.980 KST client backend[3075573] pg_regress/arrays STATEMENT:  SELECT trim_array(ARRAY[1, 2, 3], 10);
2024-09-08 14:51:53.981 KST client backend[3075573] pg_regress/arrays ERROR:  number of elements to trim must be between 0 and 0
2024-09-08 14:51:53.981 KST client backend[3075573] pg_regress/arrays STATEMENT:  SELECT trim_array(ARRAY[]::int[], 1);
2024-09-08 14:51:53.981 KST client backend[3075573] pg_regress/arrays ERROR:  sample size must be between 0 and 6
2024-09-08 14:51:53.981 KST client backend[3075573] pg_regress/arrays STATEMENT:  SELECT array_sample('{1,2,3,4,5,6}'::int[], -1);
2024-09-08 14:51:53.981 KST client backend[3075573] pg_regress/arrays ERROR:  sample size must be between 0 and 6
2024-09-08 14:51:53.981 KST client backend[3075573] pg_regress/arrays STATEMENT:  SELECT array_sample('{1,2,3,4,5,6}'::int[], 7);
2024-09-08 14:51:53.999 KST client backend[3075580] pg_regress/update ERROR:  new row for relation "part_def" violates partition constraint
2024-09-08 14:51:53.999 KST client backend[3075580] pg_regress/update DETAIL:  Failing row contains (a, 9, null, null, null).
2024-09-08 14:51:53.999 KST client backend[3075580] pg_regress/update STATEMENT:  update part_def set a = 'a' where a = 'd';
2024-09-08 14:51:53.999 KST client backend[3075575] pg_regress/aggregates ERROR:  aggregate functions are not allowed in FILTER at character 35
2024-09-08 14:51:53.999 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select max(unique1) filter (where sum(ten) > 0) from tenk1;
2024-09-08 14:51:53.999 KST client backend[3075580] pg_regress/update ERROR:  new row for relation "part_a_10_a_20" violates partition constraint
2024-09-08 14:51:53.999 KST client backend[3075580] pg_regress/update DETAIL:  Failing row contains (ad, 10, 200, 1, null).
2024-09-08 14:51:53.999 KST client backend[3075580] pg_regress/update STATEMENT:  UPDATE part_a_10_a_20 set a = 'ad' WHERE a = 'a';
2024-09-08 14:51:53.999 KST client backend[3075575] pg_regress/aggregates ERROR:  aggregate function calls cannot be nested at character 43
2024-09-08 14:51:53.999 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select (select max(unique1) filter (where sum(ten) > 0) from int8_tbl) from tenk1;
2024-09-08 14:51:54.000 KST client backend[3075575] pg_regress/aggregates ERROR:  aggregate functions are not allowed in FILTER at character 35
2024-09-08 14:51:54.000 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select max(unique1) filter (where bool_or(ten > 0)) from tenk1;
2024-09-08 14:51:54.000 KST client backend[3075575] pg_regress/aggregates ERROR:  aggregate function calls cannot be nested at character 43
2024-09-08 14:51:54.000 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select (select max(unique1) filter (where bool_or(ten > 0)) from int8_tbl) from tenk1;
2024-09-08 14:51:54.000 KST client backend[3075575] pg_regress/aggregates ERROR:  cannot use multiple ORDER BY clauses with WITHIN GROUP at character 41
2024-09-08 14:51:54.000 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select p, percentile_cont(p order by p) within group (order by x)  -- error
	from generate_series(1,5) x,
	     (values (0::float8),(0.1),(0.25),(0.4),(0.5),(0.6),(0.75),(0.9),(1)) v(p)
	group by p order by p;
2024-09-08 14:51:54.000 KST client backend[3075575] pg_regress/aggregates ERROR:  sum is not an ordered-set aggregate, so it cannot have WITHIN GROUP at character 11
2024-09-08 14:51:54.000 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select p, sum() within group (order by x::float8)  -- error
	from generate_series(1,5) x,
	     (values (0::float8),(0.1),(0.25),(0.4),(0.5),(0.6),(0.75),(0.9),(1)) v(p)
	group by p order by p;
2024-09-08 14:51:54.000 KST client backend[3075575] pg_regress/aggregates ERROR:  WITHIN GROUP is required for ordered-set aggregate percentile_cont at character 11
2024-09-08 14:51:54.000 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select p, percentile_cont(p,p)  -- error
	from generate_series(1,5) x,
	     (values (0::float8),(0.1),(0.25),(0.4),(0.5),(0.6),(0.75),(0.9),(1)) v(p)
	group by p order by p;
2024-09-08 14:51:54.007 KST client backend[3075580] pg_regress/update ERROR:  new row for relation "list_default" violates partition constraint
2024-09-08 14:51:54.007 KST client backend[3075580] pg_regress/update DETAIL:  Failing row contains (a, 10).
2024-09-08 14:51:54.007 KST client backend[3075580] pg_regress/update STATEMENT:  UPDATE list_default set a = 'a' WHERE a = 'd';
2024-09-08 14:51:54.011 KST client backend[3075580] pg_regress/update ERROR:  cannot retrieve a system column in this context
2024-09-08 14:51:54.011 KST client backend[3075580] pg_regress/update STATEMENT:  insert into utrtest values (2, 'bar')
	  returning *, tableoid::regclass, xmin = pg_current_xact_id()::xid as xmin_ok;
2024-09-08 14:51:54.012 KST client backend[3075580] pg_regress/update ERROR:  cannot retrieve a system column in this context
2024-09-08 14:51:54.012 KST client backend[3075580] pg_regress/update STATEMENT:  update utrtest set a = 3 - a from (values (1), (2)) s(x) where a = s.x
	  returning *, tableoid::regclass, xmin = pg_current_xact_id()::xid as xmin_ok;
2024-09-08 14:51:54.014 KST client backend[3075575] pg_regress/aggregates ERROR:  column "x.x" must appear in the GROUP BY clause or be used in an aggregate function at character 13
2024-09-08 14:51:54.014 KST client backend[3075575] pg_regress/aggregates DETAIL:  Direct arguments of an ordered-set aggregate must use only grouped columns.
2024-09-08 14:51:54.014 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select rank(x) within group (order by x) from generate_series(1,5) x;
2024-09-08 14:51:54.014 KST client backend[3075575] pg_regress/aggregates ERROR:  outer-level aggregate cannot contain a lower-level variable in its direct arguments at character 37
2024-09-08 14:51:54.014 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select array(select percentile_disc(a) within group (order by x)
	               from (values (0.3),(0.7)) v(a) group by a)
	  from generate_series(1,5) g(x);
2024-09-08 14:51:54.014 KST client backend[3075575] pg_regress/aggregates ERROR:  aggregate function calls cannot be nested at character 13
2024-09-08 14:51:54.014 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select rank(sum(x)) within group (order by x) from generate_series(1,5) x;
2024-09-08 14:51:54.015 KST client backend[3075575] pg_regress/aggregates ERROR:  WITHIN GROUP types text and integer cannot be matched at character 13
2024-09-08 14:51:54.015 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select rank(3) within group (order by x) from (values ('fred'),('jim')) v(x);
2024-09-08 14:51:54.015 KST client backend[3075575] pg_regress/aggregates ERROR:  function rank(integer, name, name) does not exist at character 8
2024-09-08 14:51:54.015 KST client backend[3075575] pg_regress/aggregates HINT:  To use the hypothetical-set aggregate rank, the number of hypothetical direct arguments (here 1) must match the number of ordering columns (here 2).
2024-09-08 14:51:54.015 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select rank(3) within group (order by stringu1,stringu2) from tenk1;
2024-09-08 14:51:54.015 KST client backend[3075575] pg_regress/aggregates ERROR:  invalid input syntax for type integer: "fred" at character 13
2024-09-08 14:51:54.015 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select rank('fred') within group (order by x) from generate_series(1,5) x;
2024-09-08 14:51:54.015 KST client backend[3075575] pg_regress/aggregates ERROR:  collation mismatch between explicit collations "C" and "POSIX" at character 64
2024-09-08 14:51:54.015 KST client backend[3075575] pg_regress/aggregates STATEMENT:  select rank('adam'::text collate "C") within group (order by x collate "POSIX")
	  from (values ('fred'),('jim')) v(x);
2024-09-08 14:51:54.018 KST client backend[3075580] pg_regress/update ERROR:  new row for relation "sub_parted" violates partition constraint
2024-09-08 14:51:54.018 KST client backend[3075580] pg_regress/update DETAIL:  Failing row contains (2, 2, 10).
2024-09-08 14:51:54.018 KST client backend[3075580] pg_regress/update STATEMENT:  UPDATE sub_parted set a = 2 WHERE c = 10;
2024-09-08 14:51:54.026 KST client backend[3075580] pg_regress/update ERROR:  new row for relation "hpart1" violates partition constraint
2024-09-08 14:51:54.026 KST client backend[3075580] pg_regress/update DETAIL:  Failing row contains (3, 4).
2024-09-08 14:51:54.026 KST client backend[3075580] pg_regress/update STATEMENT:  update hpart1 set a = 3, b=4 where a = 1;
2024-09-08 14:51:54.076 KST client backend[3075575] pg_regress/aggregates LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075575.1", size 280000
2024-09-08 14:51:54.076 KST client backend[3075575] pg_regress/aggregates STATEMENT:  create table agg_data_20k as
	select g from generate_series(0, 19999) g;
2024-09-08 14:51:54.092 KST client backend[3075574] pg_regress/join ERROR:  column reference "f1" is ambiguous at character 78
2024-09-08 14:51:54.092 KST client backend[3075574] pg_regress/join STATEMENT:  select * from
	  int8_tbl x join (int4_tbl x cross join int4_tbl y) j on q1 = f1;
2024-09-08 14:51:54.092 KST client backend[3075574] pg_regress/join ERROR:  invalid reference to FROM-clause entry for table "y" at character 78
2024-09-08 14:51:54.092 KST client backend[3075574] pg_regress/join DETAIL:  There is an entry for table "y", but it cannot be referenced from this part of the query.
2024-09-08 14:51:54.092 KST client backend[3075574] pg_regress/join STATEMENT:  select * from
	  int8_tbl x join (int4_tbl x cross join int4_tbl y) j on q1 = y.f1;
2024-09-08 14:51:54.093 KST client backend[3075574] pg_regress/join ERROR:  column t1.uunique1 does not exist at character 8
2024-09-08 14:51:54.093 KST client backend[3075574] pg_regress/join HINT:  Perhaps you meant to reference the column "t1.unique1".
2024-09-08 14:51:54.093 KST client backend[3075574] pg_regress/join STATEMENT:  select t1.uunique1 from
	  tenk1 t1 join tenk2 t2 on t1.two = t2.two;
2024-09-08 14:51:54.093 KST client backend[3075574] pg_regress/join ERROR:  column t2.uunique1 does not exist at character 8
2024-09-08 14:51:54.093 KST client backend[3075574] pg_regress/join HINT:  Perhaps you meant to reference the column "t2.unique1".
2024-09-08 14:51:54.093 KST client backend[3075574] pg_regress/join STATEMENT:  select t2.uunique1 from
	  tenk1 t1 join tenk2 t2 on t1.two = t2.two;
2024-09-08 14:51:54.093 KST client backend[3075574] pg_regress/join ERROR:  column "uunique1" does not exist at character 8
2024-09-08 14:51:54.093 KST client backend[3075574] pg_regress/join HINT:  Perhaps you meant to reference the column "t1.unique1" or the column "t2.unique1".
2024-09-08 14:51:54.093 KST client backend[3075574] pg_regress/join STATEMENT:  select uunique1 from
	  tenk1 t1 join tenk2 t2 on t1.two = t2.two;
2024-09-08 14:51:54.093 KST client backend[3075574] pg_regress/join ERROR:  column "ctid" does not exist at character 8
2024-09-08 14:51:54.093 KST client backend[3075574] pg_regress/join DETAIL:  There are columns named "ctid", but they are in tables that cannot be referenced from this part of the query.
2024-09-08 14:51:54.093 KST client backend[3075574] pg_regress/join HINT:  Try using a table-qualified name.
2024-09-08 14:51:54.093 KST client backend[3075574] pg_regress/join STATEMENT:  select ctid from
	  tenk1 t1 join tenk2 t2 on t1.two = t2.two;
2024-09-08 14:51:54.093 KST client backend[3075574] pg_regress/join ERROR:  column atts.relid does not exist at character 8
2024-09-08 14:51:54.093 KST client backend[3075574] pg_regress/join STATEMENT:  select atts.relid::regclass, s.* from pg_stats s join
	    pg_attribute a on s.attname = a.attname and s.tablename =
	    a.attrelid::regclass::text join (select unnest(indkey) attnum,
	    indexrelid from pg_index i) atts on atts.attnum = a.attnum where
	    schemaname != 'pg_catalog';
2024-09-08 14:51:54.095 KST client backend[3075578] pg_regress/hash_index ERROR:  value 9 out of bounds for option "fillfactor"
2024-09-08 14:51:54.095 KST client backend[3075578] pg_regress/hash_index DETAIL:  Valid values are between "10" and "100".
2024-09-08 14:51:54.095 KST client backend[3075578] pg_regress/hash_index STATEMENT:  CREATE INDEX hash_f8_index2 ON hash_f8_heap USING hash (random float8_ops)
		WITH (fillfactor=9);
2024-09-08 14:51:54.095 KST client backend[3075578] pg_regress/hash_index ERROR:  value 101 out of bounds for option "fillfactor"
2024-09-08 14:51:54.095 KST client backend[3075578] pg_regress/hash_index DETAIL:  Valid values are between "10" and "100".
2024-09-08 14:51:54.095 KST client backend[3075578] pg_regress/hash_index STATEMENT:  CREATE INDEX hash_f8_index2 ON hash_f8_heap USING hash (random float8_ops)
		WITH (fillfactor=101);
2024-09-08 14:51:54.109 KST client backend[3075575] pg_regress/aggregates LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075575.2", size 376832
2024-09-08 14:51:54.109 KST client backend[3075575] pg_regress/aggregates STATEMENT:  create table agg_group_1 as
	select g%10000 as c1, sum(g::numeric) as c2, count(*) as c3
	  from agg_data_20k group by g%10000;
2024-09-08 14:51:54.131 KST client backend[3075574] pg_regress/join ERROR:  join expression "ss" has 3 columns available but 4 columns specified
2024-09-08 14:51:54.131 KST client backend[3075574] pg_regress/join STATEMENT:  SELECT * FROM (int8_tbl i cross join int4_tbl j) ss(a,b,c,d);
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join ERROR:  column "f1" does not exist at character 38
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join DETAIL:  There is a column named "f1" in table "a", but it cannot be referenced from this part of the query.
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join HINT:  To reference that column, you must mark this subquery with LATERAL.
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join STATEMENT:  select f1,g from int4_tbl a, (select f1 as g) ss;
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join ERROR:  invalid reference to FROM-clause entry for table "a" at character 38
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join DETAIL:  There is an entry for table "a", but it cannot be referenced from this part of the query.
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join HINT:  To reference that table, you must mark this subquery with LATERAL.
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join STATEMENT:  select f1,g from int4_tbl a, (select a.f1 as g) ss;
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join ERROR:  column "f1" does not exist at character 48
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join DETAIL:  There is a column named "f1" in table "a", but it cannot be referenced from this part of the query.
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join HINT:  To reference that column, you must mark this subquery with LATERAL.
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join STATEMENT:  select f1,g from int4_tbl a cross join (select f1 as g) ss;
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join ERROR:  invalid reference to FROM-clause entry for table "a" at character 48
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join DETAIL:  There is an entry for table "a", but it cannot be referenced from this part of the query.
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join HINT:  To reference that table, you must mark this subquery with LATERAL.
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join STATEMENT:  select f1,g from int4_tbl a cross join (select a.f1 as g) ss;
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join ERROR:  invalid reference to FROM-clause entry for table "a" at character 67
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join DETAIL:  The combining JOIN type must be INNER or LEFT for a LATERAL reference.
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join STATEMENT:  select f1,g from int4_tbl a right join lateral generate_series(0, a.f1) g on true;
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join ERROR:  invalid reference to FROM-clause entry for table "a" at character 66
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join DETAIL:  The combining JOIN type must be INNER or LEFT for a LATERAL reference.
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join STATEMENT:  select f1,g from int4_tbl a full join lateral generate_series(0, a.f1) g on true;
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join ERROR:  table reference "x" is ambiguous at character 78
2024-09-08 14:51:54.133 KST client backend[3075574] pg_regress/join STATEMENT:  select * from
	  int8_tbl x cross join (int4_tbl x cross join lateral (select x.f1) ss);
2024-09-08 14:51:54.134 KST client backend[3075574] pg_regress/join ERROR:  aggregate functions are not allowed in FROM clause of their own query level at character 40
2024-09-08 14:51:54.134 KST client backend[3075574] pg_regress/join STATEMENT:  select 1 from tenk1 a, lateral (select max(a.unique1) from int4_tbl b) ss;
2024-09-08 14:51:54.134 KST client backend[3075574] pg_regress/join ERROR:  column "x1" does not exist at character 64
2024-09-08 14:51:54.134 KST client backend[3075574] pg_regress/join DETAIL:  There is a column named "x1" in table "xx1", but it cannot be referenced from this part of the query.
2024-09-08 14:51:54.134 KST client backend[3075574] pg_regress/join STATEMENT:  update xx1 set x2 = f1 from (select * from int4_tbl where f1 = x1) ss;
2024-09-08 14:51:54.134 KST client backend[3075574] pg_regress/join ERROR:  invalid reference to FROM-clause entry for table "xx1" at character 64
2024-09-08 14:51:54.134 KST client backend[3075574] pg_regress/join DETAIL:  There is an entry for table "xx1", but it cannot be referenced from this part of the query.
2024-09-08 14:51:54.134 KST client backend[3075574] pg_regress/join STATEMENT:  update xx1 set x2 = f1 from (select * from int4_tbl where f1 = xx1.x1) ss;
2024-09-08 14:51:54.134 KST client backend[3075574] pg_regress/join ERROR:  invalid reference to FROM-clause entry for table "xx1" at character 72
2024-09-08 14:51:54.134 KST client backend[3075574] pg_regress/join HINT:  There is an entry for table "xx1", but it cannot be referenced from this part of the query.
2024-09-08 14:51:54.134 KST client backend[3075574] pg_regress/join STATEMENT:  update xx1 set x2 = f1 from lateral (select * from int4_tbl where f1 = x1) ss;
2024-09-08 14:51:54.134 KST client backend[3075574] pg_regress/join ERROR:  table name "xx1" specified more than once
2024-09-08 14:51:54.134 KST client backend[3075574] pg_regress/join STATEMENT:  update xx1 set x2 = f1 from xx1, lateral (select * from int4_tbl where f1 = x1) ss;
2024-09-08 14:51:54.135 KST client backend[3075574] pg_regress/join ERROR:  column "x1" does not exist at character 58
2024-09-08 14:51:54.135 KST client backend[3075574] pg_regress/join DETAIL:  There is a column named "x1" in table "xx1", but it cannot be referenced from this part of the query.
2024-09-08 14:51:54.135 KST client backend[3075574] pg_regress/join STATEMENT:  delete from xx1 using (select * from int4_tbl where f1 = x1) ss;
2024-09-08 14:51:54.135 KST client backend[3075574] pg_regress/join ERROR:  invalid reference to FROM-clause entry for table "xx1" at character 58
2024-09-08 14:51:54.135 KST client backend[3075574] pg_regress/join DETAIL:  There is an entry for table "xx1", but it cannot be referenced from this part of the query.
2024-09-08 14:51:54.135 KST client backend[3075574] pg_regress/join STATEMENT:  delete from xx1 using (select * from int4_tbl where f1 = xx1.x1) ss;
2024-09-08 14:51:54.135 KST client backend[3075574] pg_regress/join ERROR:  invalid reference to FROM-clause entry for table "xx1" at character 66
2024-09-08 14:51:54.135 KST client backend[3075574] pg_regress/join HINT:  There is an entry for table "xx1", but it cannot be referenced from this part of the query.
2024-09-08 14:51:54.135 KST client backend[3075574] pg_regress/join STATEMENT:  delete from xx1 using lateral (select * from int4_tbl where f1 = x1) ss;
2024-09-08 14:51:54.135 KST client backend[3075575] pg_regress/aggregates LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075575.5", size 786432
2024-09-08 14:51:54.135 KST client backend[3075575] pg_regress/aggregates STATEMENT:  create table agg_hash_1 as
	select g%10000 as c1, sum(g::numeric) as c2, count(*) as c3
	  from agg_data_20k group by g%10000;
2024-09-08 14:51:54.137 KST client backend[3075575] pg_regress/aggregates LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075575.6", size 204800
2024-09-08 14:51:54.137 KST client backend[3075575] pg_regress/aggregates STATEMENT:  create table agg_hash_2 as
	select * from
	  (values (100), (300), (500)) as r(a),
	  lateral (
	    select (g/2)::numeric as c1,
	           array_agg(g::numeric) as c2,
		   count(*) as c3
	    from agg_data_2k
	    where g < r.a
	    group by g/2) as s;
2024-09-08 14:51:54.137 KST client backend[3075575] pg_regress/aggregates LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075575.7", size 204800
2024-09-08 14:51:54.137 KST client backend[3075575] pg_regress/aggregates STATEMENT:  create table agg_hash_2 as
	select * from
	  (values (100), (300), (500)) as r(a),
	  lateral (
	    select (g/2)::numeric as c1,
	           array_agg(g::numeric) as c2,
		   count(*) as c3
	    from agg_data_2k
	    where g < r.a
	    group by g/2) as s;
2024-09-08 14:51:54.138 KST client backend[3075575] pg_regress/aggregates LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075575.8", size 204800
2024-09-08 14:51:54.138 KST client backend[3075575] pg_regress/aggregates STATEMENT:  create table agg_hash_2 as
	select * from
	  (values (100), (300), (500)) as r(a),
	  lateral (
	    select (g/2)::numeric as c1,
	           array_agg(g::numeric) as c2,
		   count(*) as c3
	    from agg_data_2k
	    where g < r.a
	    group by g/2) as s;
2024-09-08 14:51:54.140 KST client backend[3075575] pg_regress/aggregates LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075575.9", size 204800
2024-09-08 14:51:54.140 KST client backend[3075575] pg_regress/aggregates STATEMENT:  create table agg_hash_3 as
	select (g/2)::numeric as c1, sum(7::int4) as c2, count(*) as c3
	  from agg_data_2k group by g/2;
2024-09-08 14:51:54.143 KST client backend[3075575] pg_regress/aggregates LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075575.10", size 212992
2024-09-08 14:51:54.143 KST client backend[3075575] pg_regress/aggregates STATEMENT:  create table agg_hash_4 as
	select (g/2)::numeric as c1, array_agg(g::numeric) as c2, count(*) as c3
	  from agg_data_2k group by g/2;
2024-09-08 14:51:54.523 KST client backend[3075577] pg_regress/btree_index ERROR:  operator class int4_ops has no options
2024-09-08 14:51:54.523 KST client backend[3075577] pg_regress/btree_index STATEMENT:  create index on btree_tall_tbl (id int4_ops(foo=1));
2024-09-08 14:51:54.523 KST client backend[3075577] pg_regress/btree_index ERROR:  ALTER action ALTER COLUMN ... SET cannot be performed on relation "btree_tall_idx2"
2024-09-08 14:51:54.523 KST client backend[3075577] pg_regress/btree_index DETAIL:  This operation is not supported for indexes.
2024-09-08 14:51:54.523 KST client backend[3075577] pg_regress/btree_index STATEMENT:  ALTER INDEX btree_tall_idx2 ALTER COLUMN id SET (n_distinct=100);
2024-09-08 14:51:54.524 KST client backend[3075577] pg_regress/btree_index ERROR:  ALTER action ALTER COLUMN ... SET cannot be performed on relation "btree_part_idx"
2024-09-08 14:51:54.524 KST client backend[3075577] pg_regress/btree_index DETAIL:  This operation is not supported for partitioned indexes.
2024-09-08 14:51:54.524 KST client backend[3075577] pg_regress/btree_index STATEMENT:  ALTER INDEX btree_part_idx ALTER COLUMN id SET (n_distinct=100);
2024-09-08 14:51:54.584 KST client backend[3075654] pg_regress/gist ERROR:  invalid value for enum option "buffering": invalid_value
2024-09-08 14:51:54.584 KST client backend[3075654] pg_regress/gist DETAIL:  Valid values are "on", "off", and "auto".
2024-09-08 14:51:54.584 KST client backend[3075654] pg_regress/gist STATEMENT:  create index gist_pointidx5 on gist_point_tbl using gist(p) with (buffering = invalid_value);
2024-09-08 14:51:54.584 KST client backend[3075654] pg_regress/gist ERROR:  value 9 out of bounds for option "fillfactor"
2024-09-08 14:51:54.584 KST client backend[3075654] pg_regress/gist DETAIL:  Valid values are between "10" and "100".
2024-09-08 14:51:54.584 KST client backend[3075654] pg_regress/gist STATEMENT:  create index gist_pointidx5 on gist_point_tbl using gist(p) with (fillfactor=9);
2024-09-08 14:51:54.584 KST client backend[3075654] pg_regress/gist ERROR:  value 101 out of bounds for option "fillfactor"
2024-09-08 14:51:54.584 KST client backend[3075654] pg_regress/gist DETAIL:  Valid values are between "10" and "100".
2024-09-08 14:51:54.584 KST client backend[3075654] pg_regress/gist STATEMENT:  create index gist_pointidx5 on gist_point_tbl using gist(p) with (fillfactor=101);
2024-09-08 14:51:54.588 KST client backend[3075661] pg_regress/matview ERROR:  materialized view "mvtest_tm" has not been populated
2024-09-08 14:51:54.588 KST client backend[3075661] pg_regress/matview HINT:  Use the REFRESH MATERIALIZED VIEW command.
2024-09-08 14:51:54.588 KST client backend[3075661] pg_regress/matview STATEMENT:  SELECT * FROM mvtest_tm ORDER BY type;
2024-09-08 14:51:54.589 KST client backend[3075665] pg_regress/security_label ERROR:  no security label providers have been loaded
2024-09-08 14:51:54.589 KST client backend[3075665] pg_regress/security_label STATEMENT:  SECURITY LABEL ON TABLE seclabel_tbl1 IS 'classified';
2024-09-08 14:51:54.589 KST client backend[3075665] pg_regress/security_label ERROR:  security label provider "dummy" is not loaded
2024-09-08 14:51:54.589 KST client backend[3075665] pg_regress/security_label STATEMENT:  SECURITY LABEL FOR 'dummy' ON TABLE seclabel_tbl1 IS 'classified';
2024-09-08 14:51:54.589 KST client backend[3075665] pg_regress/security_label ERROR:  no security label providers have been loaded
2024-09-08 14:51:54.589 KST client backend[3075665] pg_regress/security_label STATEMENT:  SECURITY LABEL ON TABLE seclabel_tbl1 IS '...invalid label...';
2024-09-08 14:51:54.589 KST client backend[3075665] pg_regress/security_label ERROR:  no security label providers have been loaded
2024-09-08 14:51:54.589 KST client backend[3075665] pg_regress/security_label STATEMENT:  SECURITY LABEL ON TABLE seclabel_tbl3 IS 'unclassified';
2024-09-08 14:51:54.589 KST client backend[3075665] pg_regress/security_label ERROR:  no security label providers have been loaded
2024-09-08 14:51:54.589 KST client backend[3075665] pg_regress/security_label STATEMENT:  SECURITY LABEL ON ROLE regress_seclabel_user1 IS 'classified';
2024-09-08 14:51:54.589 KST client backend[3075665] pg_regress/security_label ERROR:  security label provider "dummy" is not loaded
2024-09-08 14:51:54.589 KST client backend[3075665] pg_regress/security_label STATEMENT:  SECURITY LABEL FOR 'dummy' ON ROLE regress_seclabel_user1 IS 'classified';
2024-09-08 14:51:54.589 KST client backend[3075665] pg_regress/security_label ERROR:  no security label providers have been loaded
2024-09-08 14:51:54.589 KST client backend[3075665] pg_regress/security_label STATEMENT:  SECURITY LABEL ON ROLE regress_seclabel_user1 IS '...invalid label...';
2024-09-08 14:51:54.589 KST client backend[3075665] pg_regress/security_label ERROR:  no security label providers have been loaded
2024-09-08 14:51:54.589 KST client backend[3075665] pg_regress/security_label STATEMENT:  SECURITY LABEL ON ROLE regress_seclabel_user3 IS 'unclassified';
2024-09-08 14:51:54.593 KST client backend[3075667] pg_regress/replica_identity ERROR:  cannot use non-unique index "test_replica_identity_keyab" as replica identity
2024-09-08 14:51:54.593 KST client backend[3075667] pg_regress/replica_identity STATEMENT:  ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_keyab;
2024-09-08 14:51:54.593 KST client backend[3075667] pg_regress/replica_identity ERROR:  index "test_replica_identity_nonkey" cannot be used as replica identity because column "nonkey" is nullable
2024-09-08 14:51:54.593 KST client backend[3075667] pg_regress/replica_identity STATEMENT:  ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_nonkey;
2024-09-08 14:51:54.593 KST client backend[3075667] pg_regress/replica_identity ERROR:  cannot use non-unique index "test_replica_identity_hash" as replica identity
2024-09-08 14:51:54.593 KST client backend[3075667] pg_regress/replica_identity STATEMENT:  ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_hash;
2024-09-08 14:51:54.594 KST client backend[3075667] pg_regress/replica_identity ERROR:  cannot use expression index "test_replica_identity_expr" as replica identity
2024-09-08 14:51:54.594 KST client backend[3075667] pg_regress/replica_identity STATEMENT:  ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_expr;
2024-09-08 14:51:54.594 KST client backend[3075667] pg_regress/replica_identity ERROR:  cannot use partial index "test_replica_identity_partial" as replica identity
2024-09-08 14:51:54.594 KST client backend[3075667] pg_regress/replica_identity STATEMENT:  ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_partial;
2024-09-08 14:51:54.594 KST client backend[3075667] pg_regress/replica_identity ERROR:  "test_replica_identity_othertable_pkey" is not an index for table "test_replica_identity"
2024-09-08 14:51:54.594 KST client backend[3075667] pg_regress/replica_identity STATEMENT:  ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_othertable_pkey;
2024-09-08 14:51:54.594 KST client backend[3075667] pg_regress/replica_identity ERROR:  cannot use non-immediate index "test_replica_identity_unique_defer" as replica identity
2024-09-08 14:51:54.594 KST client backend[3075667] pg_regress/replica_identity STATEMENT:  ALTER TABLE test_replica_identity REPLICA IDENTITY USING INDEX test_replica_identity_unique_defer;
2024-09-08 14:51:54.597 KST client backend[3075668] pg_regress/privileges ERROR:  role "regress_priv_user5" already exists
2024-09-08 14:51:54.597 KST client backend[3075668] pg_regress/privileges STATEMENT:  CREATE USER regress_priv_user5;
2024-09-08 14:51:54.597 KST client backend[3075674] pg_regress/password ERROR:  invalid value for parameter "password_encryption": "novalue"
2024-09-08 14:51:54.597 KST client backend[3075674] pg_regress/password HINT:  Available values: md5, scram-sha-256.
2024-09-08 14:51:54.597 KST client backend[3075674] pg_regress/password STATEMENT:  SET password_encryption = 'novalue';
2024-09-08 14:51:54.597 KST client backend[3075674] pg_regress/password ERROR:  invalid value for parameter "password_encryption": "true"
2024-09-08 14:51:54.597 KST client backend[3075674] pg_regress/password HINT:  Available values: md5, scram-sha-256.
2024-09-08 14:51:54.597 KST client backend[3075674] pg_regress/password STATEMENT:  SET password_encryption = true;
2024-09-08 14:51:54.598 KST client backend[3075668] pg_regress/privileges ERROR:  ADMIN option cannot be granted back to your own grantor
2024-09-08 14:51:54.598 KST client backend[3075668] pg_regress/privileges STATEMENT:  GRANT regress_priv_user1 TO regress_priv_user2 WITH ADMIN OPTION GRANTED BY regress_priv_user3;
2024-09-08 14:51:54.598 KST client backend[3075668] pg_regress/privileges ERROR:  dependent privileges exist
2024-09-08 14:51:54.598 KST client backend[3075668] pg_regress/privileges HINT:  Use CASCADE to revoke them too.
2024-09-08 14:51:54.598 KST client backend[3075668] pg_regress/privileges STATEMENT:  REVOKE ADMIN OPTION FOR regress_priv_user1 FROM regress_priv_user2;
2024-09-08 14:51:54.598 KST client backend[3075668] pg_regress/privileges ERROR:  dependent privileges exist
2024-09-08 14:51:54.598 KST client backend[3075668] pg_regress/privileges HINT:  Use CASCADE to revoke them too.
2024-09-08 14:51:54.598 KST client backend[3075668] pg_regress/privileges STATEMENT:  REVOKE regress_priv_user1 FROM regress_priv_user2;
2024-09-08 14:51:54.600 KST client backend[3075668] pg_regress/privileges ERROR:  role "regress_priv_user2" cannot be dropped because some objects depend on it
2024-09-08 14:51:54.600 KST client backend[3075668] pg_regress/privileges DETAIL:  privileges for membership of role regress_priv_user3 in role regress_priv_user1
2024-09-08 14:51:54.600 KST client backend[3075668] pg_regress/privileges STATEMENT:  DROP ROLE regress_priv_user2;
2024-09-08 14:51:54.600 KST client backend[3075668] pg_regress/privileges ERROR:  role "regress_priv_user2" cannot be dropped because some objects depend on it
2024-09-08 14:51:54.600 KST client backend[3075668] pg_regress/privileges DETAIL:  privileges for membership of role regress_priv_user3 in role regress_priv_user1
2024-09-08 14:51:54.600 KST client backend[3075668] pg_regress/privileges STATEMENT:  DROP ROLE regress_priv_user2;
2024-09-08 14:51:54.601 KST client backend[3075668] pg_regress/privileges ERROR:  role "regress_priv_user3" cannot be dropped because some objects depend on it
2024-09-08 14:51:54.601 KST client backend[3075668] pg_regress/privileges DETAIL:  privileges for membership of role regress_priv_user4 in role regress_priv_user1
2024-09-08 14:51:54.601 KST client backend[3075668] pg_regress/privileges STATEMENT:  DROP ROLE regress_priv_user3;
2024-09-08 14:51:54.601 KST client backend[3075668] pg_regress/privileges ERROR:  role "regress_priv_user5" cannot be dropped because some objects depend on it
2024-09-08 14:51:54.601 KST client backend[3075668] pg_regress/privileges DETAIL:  privileges for membership of role regress_priv_user6 in role regress_priv_user1
2024-09-08 14:51:54.601 KST client backend[3075668] pg_regress/privileges STATEMENT:  DROP ROLE regress_priv_user5;
2024-09-08 14:51:54.603 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied to set role "pg_read_all_settings"
2024-09-08 14:51:54.603 KST client backend[3075668] pg_regress/privileges STATEMENT:  SET ROLE pg_read_all_settings;
2024-09-08 14:51:54.603 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied to set role "pg_read_all_stats"
2024-09-08 14:51:54.603 KST client backend[3075668] pg_regress/privileges STATEMENT:  SET ROLE pg_read_all_stats;
2024-09-08 14:51:54.604 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied to alter role
2024-09-08 14:51:54.604 KST client backend[3075668] pg_regress/privileges DETAIL:  To change another role's password, the current user must have the CREATEROLE attribute and the ADMIN option on the role.
2024-09-08 14:51:54.604 KST client backend[3075668] pg_regress/privileges STATEMENT:  ALTER USER regress_priv_user2 PASSWORD 'verysecret';
2024-09-08 14:51:54.605 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied to grant privileges as role "regress_priv_role"
2024-09-08 14:51:54.605 KST client backend[3075668] pg_regress/privileges DETAIL:  The grantor must have the ADMIN option on role "regress_priv_role".
2024-09-08 14:51:54.605 KST client backend[3075668] pg_regress/privileges STATEMENT:  GRANT regress_priv_role TO regress_priv_user1 WITH ADMIN OPTION GRANTED BY regress_priv_role;
2024-09-08 14:51:54.605 KST client backend[3075668] pg_regress/privileges ERROR:  role "foo" does not exist
2024-09-08 14:51:54.605 KST client backend[3075668] pg_regress/privileges STATEMENT:  REVOKE ADMIN OPTION FOR regress_priv_role FROM regress_priv_user1 GRANTED BY foo;
2024-09-08 14:51:54.605 KST client backend[3075668] pg_regress/privileges WARNING:  role "regress_priv_user1" has not been granted membership in role "regress_priv_role" by role "regress_priv_user2"
2024-09-08 14:51:54.606 KST client backend[3075675] pg_regress/rowsecurity ERROR:  unrecognized row security option "ugly" at character 33
2024-09-08 14:51:54.606 KST client backend[3075675] pg_regress/rowsecurity HINT:  Only PERMISSIVE or RESTRICTIVE policies are supported currently.
2024-09-08 14:51:54.606 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  CREATE POLICY p1 ON document AS UGLY
	    USING (dlevel <= (SELECT seclv FROM uaccount WHERE pguser = current_user));
2024-09-08 14:51:54.606 KST client backend[3075679] pg_regress/identity ERROR:  column "a" of relation "itest3" is already an identity column
2024-09-08 14:51:54.606 KST client backend[3075679] pg_regress/identity STATEMENT:  ALTER TABLE itest3 ALTER COLUMN a ADD GENERATED ALWAYS AS IDENTITY;
2024-09-08 14:51:54.607 KST client backend[3075670] pg_regress/lock ERROR:  permission denied for table lock_tbl2
2024-09-08 14:51:54.607 KST client backend[3075670] pg_regress/lock STATEMENT:  LOCK TABLE lock_tbl2;
2024-09-08 14:51:54.607 KST client backend[3075670] pg_regress/lock ERROR:  permission denied for view lock_view1
2024-09-08 14:51:54.607 KST client backend[3075670] pg_regress/lock STATEMENT:  LOCK TABLE lock_view1;
2024-09-08 14:51:54.608 KST client backend[3075670] pg_regress/lock ERROR:  permission denied for view lock_view8
2024-09-08 14:51:54.608 KST client backend[3075670] pg_regress/lock STATEMENT:  LOCK TABLE lock_view8;
2024-09-08 14:51:54.609 KST client backend[3075670] pg_regress/lock ERROR:  permission denied for table lock_tbl1
2024-09-08 14:51:54.609 KST client backend[3075670] pg_regress/lock STATEMENT:  LOCK TABLE lock_view8;
2024-09-08 14:51:54.610 KST client backend[3075668] pg_regress/privileges ERROR:  grantor must be current user
2024-09-08 14:51:54.610 KST client backend[3075668] pg_regress/privileges STATEMENT:  GRANT TRUNCATE ON atest2 TO regress_priv_user4 GRANTED BY regress_priv_user5;
2024-09-08 14:51:54.611 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.611 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO atest2 VALUES ('foo', true);
2024-09-08 14:51:54.612 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.612 KST client backend[3075668] pg_regress/privileges STATEMENT:  UPDATE atest2 SET col2 = NOT col2;
2024-09-08 14:51:54.612 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.612 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM atest2 FOR UPDATE;
2024-09-08 14:51:54.612 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.612 KST client backend[3075668] pg_regress/privileges STATEMENT:  DELETE FROM atest2;
2024-09-08 14:51:54.612 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.612 KST client backend[3075668] pg_regress/privileges STATEMENT:  TRUNCATE atest2;
2024-09-08 14:51:54.612 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.612 KST client backend[3075668] pg_regress/privileges STATEMENT:  LOCK atest2 IN ACCESS EXCLUSIVE MODE;
2024-09-08 14:51:54.612 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.612 KST client backend[3075668] pg_regress/privileges STATEMENT:  COPY atest2 FROM stdin;
2024-09-08 14:51:54.612 KST client backend[3075668] pg_regress/privileges WARNING:  no privileges were granted for "atest1"
2024-09-08 14:51:54.613 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.613 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO atest2 VALUES ('foo', true);
2024-09-08 14:51:54.613 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest1
2024-09-08 14:51:54.613 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM atest1;
2024-09-08 14:51:54.613 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.613 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM atest2;
2024-09-08 14:51:54.613 KST client backend[3075669] pg_regress/collate ERROR:  collations are not supported by type integer at character 44
2024-09-08 14:51:54.613 KST client backend[3075669] pg_regress/collate STATEMENT:  CREATE TABLE collate_test_fail (
	    a int COLLATE "C",
	    b text
	);
2024-09-08 14:51:54.613 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table pg_class
2024-09-08 14:51:54.613 KST client backend[3075668] pg_regress/privileges STATEMENT:  UPDATE pg_catalog.pg_class SET relname = '123';
2024-09-08 14:51:54.613 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table pg_class
2024-09-08 14:51:54.613 KST client backend[3075668] pg_regress/privileges STATEMENT:  DELETE FROM pg_catalog.pg_class;
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table pg_toast_1213
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges STATEMENT:  UPDATE pg_toast.pg_toast_1213 SET chunk_id = 1;
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM atest2;
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest1
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO atest1 VALUES (2, 'two');
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO atest2 VALUES ('foo', true);
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest1
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO atest1 SELECT 1, b FROM atest1;
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest1
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges STATEMENT:  UPDATE atest1 SET a = 1 WHERE a = 2;
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges STATEMENT:  UPDATE atest2 SET col2 = NOT col2;
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest1
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM atest1 FOR UPDATE;
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM atest2 FOR UPDATE;
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges STATEMENT:  DELETE FROM atest2;
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.614 KST client backend[3075668] pg_regress/privileges STATEMENT:  TRUNCATE atest2;
2024-09-08 14:51:54.615 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.615 KST client backend[3075668] pg_regress/privileges STATEMENT:  COPY atest2 FROM stdin;
2024-09-08 14:51:54.615 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.615 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM atest1 WHERE ( b IN ( SELECT col1 FROM atest2 ) );
2024-09-08 14:51:54.615 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.615 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM atest2 WHERE ( col1 IN ( SELECT b FROM atest1 ) );
2024-09-08 14:51:54.616 KST client backend[3075679] pg_regress/identity ERROR:  column "a" of relation "itest4" must be declared NOT NULL before identity can be added
2024-09-08 14:51:54.616 KST client backend[3075679] pg_regress/identity STATEMENT:  ALTER TABLE itest4 ALTER COLUMN a ADD GENERATED ALWAYS AS IDENTITY;
2024-09-08 14:51:54.617 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy "p1r" for table "document"
2024-09-08 14:51:54.617 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO document VALUES (100, 44, 1, 'regress_rls_dave', 'testing sorting of policies');
2024-09-08 14:51:54.617 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy "p2r" for table "document"
2024-09-08 14:51:54.617 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO document VALUES (100, 55, 1, 'regress_rls_dave', 'testing sorting of policies');
2024-09-08 14:51:54.617 KST client backend[3075679] pg_regress/identity ERROR:  column "a" of relation "itest4" is an identity column
2024-09-08 14:51:54.617 KST client backend[3075679] pg_regress/identity STATEMENT:  ALTER TABLE itest4 ALTER COLUMN a DROP NOT NULL;
2024-09-08 14:51:54.617 KST client backend[3075675] pg_regress/rowsecurity ERROR:  must be owner of table document
2024-09-08 14:51:54.617 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  ALTER POLICY p1 ON document USING (true);
2024-09-08 14:51:54.617 KST client backend[3075672] pg_regress/groupingsets ERROR:  aggregate functions are not allowed in FROM clause of their own query level at character 69
2024-09-08 14:51:54.617 KST client backend[3075672] pg_regress/groupingsets STATEMENT:  select *
	  from (values (1),(2)) v(x),
	       lateral (select a, b, sum(v.x) from gstest_data(v.x) group by rollup (a,b)) s;
2024-09-08 14:51:54.617 KST client backend[3075675] pg_regress/rowsecurity ERROR:  must be owner of relation document
2024-09-08 14:51:54.617 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  DROP POLICY p1 ON document;
2024-09-08 14:51:54.617 KST client backend[3075679] pg_regress/identity ERROR:  column "a" of relation "itest4" is already an identity column
2024-09-08 14:51:54.617 KST client backend[3075679] pg_regress/identity STATEMENT:  ALTER TABLE itest4 ALTER COLUMN a ADD GENERATED ALWAYS AS IDENTITY;
2024-09-08 14:51:54.617 KST client backend[3075673] pg_regress/tablesample ERROR:  tablesample method foobar does not exist at character 45
2024-09-08 14:51:54.617 KST client backend[3075673] pg_regress/tablesample STATEMENT:  SELECT id FROM test_tablesample TABLESAMPLE FOOBAR (1);
2024-09-08 14:51:54.617 KST client backend[3075679] pg_regress/identity ERROR:  identity column type must be smallint, integer, or bigint
2024-09-08 14:51:54.617 KST client backend[3075679] pg_regress/identity STATEMENT:  ALTER TABLE itest4 ALTER COLUMN b ADD GENERATED ALWAYS AS IDENTITY;
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample ERROR:  TABLESAMPLE parameter cannot be null
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample STATEMENT:  SELECT id FROM test_tablesample TABLESAMPLE SYSTEM (NULL);
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample ERROR:  TABLESAMPLE REPEATABLE parameter cannot be null
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample STATEMENT:  SELECT id FROM test_tablesample TABLESAMPLE SYSTEM (50) REPEATABLE (NULL);
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample ERROR:  sample percentage must be between 0 and 100
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample STATEMENT:  SELECT id FROM test_tablesample TABLESAMPLE BERNOULLI (-1);
2024-09-08 14:51:54.618 KST client backend[3075677] pg_regress/generated ERROR:  multiple generation clauses specified for column "b" of table "gtest_err_1" at character 87
2024-09-08 14:51:54.618 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_err_1 (a int PRIMARY KEY, b int GENERATED ALWAYS AS (a * 2) STORED GENERATED ALWAYS AS (a * 3) STORED);
2024-09-08 14:51:54.618 KST client backend[3075679] pg_regress/identity ERROR:  identity column type must be smallint, integer, or bigint
2024-09-08 14:51:54.618 KST client backend[3075679] pg_regress/identity STATEMENT:  CREATE TABLE itest_err_1 (a text generated by default as identity);
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample ERROR:  sample percentage must be between 0 and 100
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample STATEMENT:  SELECT id FROM test_tablesample TABLESAMPLE BERNOULLI (200);
2024-09-08 14:51:54.618 KST client backend[3075679] pg_regress/identity ERROR:  multiple identity specifications for column "a" of table "itest_err_2" at character 62
2024-09-08 14:51:54.618 KST client backend[3075679] pg_regress/identity STATEMENT:  CREATE TABLE itest_err_2 (a int generated always as identity generated by default as identity);
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample ERROR:  sample percentage must be between 0 and 100
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample STATEMENT:  SELECT id FROM test_tablesample TABLESAMPLE SYSTEM (-1);
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample ERROR:  sample percentage must be between 0 and 100
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample STATEMENT:  SELECT id FROM test_tablesample TABLESAMPLE SYSTEM (200);
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample ERROR:  TABLESAMPLE clause can only be applied to tables and materialized views at character 16
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample STATEMENT:  SELECT id FROM test_tablesample_v1 TABLESAMPLE BERNOULLI (1);
2024-09-08 14:51:54.618 KST client backend[3075679] pg_regress/identity ERROR:  both default and identity specified for column "a" of table "itest_err_3" at character 43
2024-09-08 14:51:54.618 KST client backend[3075679] pg_regress/identity STATEMENT:  CREATE TABLE itest_err_3 (a int default 5 generated by default as identity);
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample ERROR:  cannot insert into view "test_tablesample_v1"
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample DETAIL:  Views containing TABLESAMPLE are not automatically updatable.
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample HINT:  To enable inserting into the view, provide an INSTEAD OF INSERT trigger or an unconditional ON INSERT DO INSTEAD rule.
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample STATEMENT:  INSERT INTO test_tablesample_v1 VALUES(1);
2024-09-08 14:51:54.618 KST client backend[3075679] pg_regress/identity ERROR:  both default and identity specified for column "a" of table "itest_err_4"
2024-09-08 14:51:54.618 KST client backend[3075679] pg_regress/identity STATEMENT:  CREATE TABLE itest_err_4 (a serial generated by default as identity);
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample ERROR:  TABLESAMPLE clause can only be applied to tables and materialized views at character 69
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample STATEMENT:  WITH query_select AS (SELECT * FROM test_tablesample)
	SELECT * FROM query_select TABLESAMPLE BERNOULLI (5.5) REPEATABLE (1);
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample ERROR:  syntax error at or near "TABLESAMPLE" at character 55
2024-09-08 14:51:54.618 KST client backend[3075673] pg_regress/tablesample STATEMENT:  SELECT q.* FROM (SELECT * FROM test_tablesample) as q TABLESAMPLE BERNOULLI (5);
2024-09-08 14:51:54.618 KST client backend[3075677] pg_regress/generated ERROR:  cannot use generated column "b" in column generation expression at character 74
2024-09-08 14:51:54.618 KST client backend[3075677] pg_regress/generated DETAIL:  A generated column cannot reference another generated column.
2024-09-08 14:51:54.618 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_err_2a (a int PRIMARY KEY, b int GENERATED ALWAYS AS (b * 2) STORED);
2024-09-08 14:51:54.619 KST client backend[3075677] pg_regress/generated ERROR:  cannot use generated column "b" in column generation expression at character 116
2024-09-08 14:51:54.619 KST client backend[3075677] pg_regress/generated DETAIL:  A generated column cannot reference another generated column.
2024-09-08 14:51:54.619 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_err_2b (a int PRIMARY KEY, b int GENERATED ALWAYS AS (a * 2) STORED, c int GENERATED ALWAYS AS (b * 3) STORED);
2024-09-08 14:51:54.619 KST client backend[3075675] pg_regress/rowsecurity ERROR:  update or delete on table "category" violates foreign key constraint "document_cid_fkey" on table "document"
2024-09-08 14:51:54.619 KST client backend[3075675] pg_regress/rowsecurity DETAIL:  Key is still referenced from table "document".
2024-09-08 14:51:54.619 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  DELETE FROM category WHERE cid = 33;
2024-09-08 14:51:54.619 KST client backend[3075677] pg_regress/generated ERROR:  cannot use whole-row variable in column generation expression at character 88
2024-09-08 14:51:54.619 KST client backend[3075677] pg_regress/generated DETAIL:  This would cause the generated column to depend on its own value.
2024-09-08 14:51:54.619 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_err_2c (a int PRIMARY KEY,
	    b int GENERATED ALWAYS AS (num_nulls(gtest_err_2c)) STORED);
2024-09-08 14:51:54.619 KST client backend[3075675] pg_regress/rowsecurity ERROR:  duplicate key value violates unique constraint "document_pkey"
2024-09-08 14:51:54.619 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO document VALUES (8, 44, 1, 'regress_rls_bob', 'my third manga');
2024-09-08 14:51:54.620 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "document"
2024-09-08 14:51:54.620 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO document VALUES (8, 44, 1, 'regress_rls_carol', 'my third manga');
2024-09-08 14:51:54.620 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "document"
2024-09-08 14:51:54.620 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  UPDATE document SET did = 8, dauthor = 'regress_rls_carol' WHERE did = 5;
2024-09-08 14:51:54.620 KST client backend[3075672] pg_regress/groupingsets ERROR:  arguments to GROUPING must be grouping expressions of the associated query level at character 25
2024-09-08 14:51:54.620 KST client backend[3075672] pg_regress/groupingsets STATEMENT:  select (select grouping(a,b) from gstest2) from gstest2 group by a,b;
2024-09-08 14:51:54.620 KST client backend[3075677] pg_regress/generated ERROR:  column "c" does not exist at character 73
2024-09-08 14:51:54.620 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_err_3 (a int PRIMARY KEY, b int GENERATED ALWAYS AS (c * 2) STORED);
2024-09-08 14:51:54.621 KST client backend[3075677] pg_regress/generated ERROR:  generation expression is not immutable
2024-09-08 14:51:54.621 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_err_4 (a int PRIMARY KEY, b double precision GENERATED ALWAYS AS (random()) STORED);
2024-09-08 14:51:54.622 KST client backend[3075679] pg_regress/identity ERROR:  cannot insert a non-DEFAULT value into column "a"
2024-09-08 14:51:54.622 KST client backend[3075679] pg_regress/identity DETAIL:  Column "a" is an identity column defined as GENERATED ALWAYS.
2024-09-08 14:51:54.622 KST client backend[3075679] pg_regress/identity HINT:  Use OVERRIDING SYSTEM VALUE to override.
2024-09-08 14:51:54.622 KST client backend[3075679] pg_regress/identity STATEMENT:  INSERT INTO itest5 VALUES (1, 'a');
2024-09-08 14:51:54.622 KST client backend[3075679] pg_regress/identity ERROR:  cannot insert a non-DEFAULT value into column "a"
2024-09-08 14:51:54.622 KST client backend[3075679] pg_regress/identity DETAIL:  Column "a" is an identity column defined as GENERATED ALWAYS.
2024-09-08 14:51:54.622 KST client backend[3075679] pg_regress/identity HINT:  Use OVERRIDING SYSTEM VALUE to override.
2024-09-08 14:51:54.622 KST client backend[3075679] pg_regress/identity STATEMENT:  INSERT INTO itest5 VALUES (2, 'b'), (3, 'c');
2024-09-08 14:51:54.622 KST client backend[3075679] pg_regress/identity ERROR:  cannot insert a non-DEFAULT value into column "a"
2024-09-08 14:51:54.622 KST client backend[3075679] pg_regress/identity DETAIL:  Column "a" is an identity column defined as GENERATED ALWAYS.
2024-09-08 14:51:54.622 KST client backend[3075679] pg_regress/identity HINT:  Use OVERRIDING SYSTEM VALUE to override.
2024-09-08 14:51:54.622 KST client backend[3075679] pg_regress/identity STATEMENT:  INSERT INTO itest5 VALUES (DEFAULT, 'b'), (3, 'c');
2024-09-08 14:51:54.622 KST client backend[3075679] pg_regress/identity ERROR:  cannot insert a non-DEFAULT value into column "a"
2024-09-08 14:51:54.622 KST client backend[3075679] pg_regress/identity DETAIL:  Column "a" is an identity column defined as GENERATED ALWAYS.
2024-09-08 14:51:54.622 KST client backend[3075679] pg_regress/identity HINT:  Use OVERRIDING SYSTEM VALUE to override.
2024-09-08 14:51:54.622 KST client backend[3075679] pg_regress/identity STATEMENT:  INSERT INTO itest5 VALUES (2, 'b'), (DEFAULT, 'c');
2024-09-08 14:51:54.623 KST client backend[3075669] pg_regress/collate ERROR:  collation mismatch between explicit collations "C" and "POSIX" at character 58
2024-09-08 14:51:54.623 KST client backend[3075669] pg_regress/collate STATEMENT:  SELECT * FROM collate_test1 WHERE b COLLATE "C" >= 'bbc' COLLATE "POSIX";
2024-09-08 14:51:54.623 KST client backend[3075669] pg_regress/collate ERROR:  collations are not supported by type integer
2024-09-08 14:51:54.623 KST client backend[3075669] pg_regress/collate STATEMENT:  CREATE DOMAIN testdomain_i AS int COLLATE "POSIX";
2024-09-08 14:51:54.623 KST client backend[3075677] pg_regress/generated ERROR:  both default and generation expression specified for column "b" of table "gtest_err_5a" at character 63
2024-09-08 14:51:54.623 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_err_5a (a int PRIMARY KEY, b int DEFAULT 5 GENERATED ALWAYS AS (a * 2) STORED);
2024-09-08 14:51:54.623 KST client backend[3075671] pg_regress/object_address WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:54.623 KST client backend[3075671] pg_regress/object_address HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:54.623 KST client backend[3075677] pg_regress/generated ERROR:  both identity and generation expression specified for column "b" of table "gtest_err_5b" at character 82
2024-09-08 14:51:54.623 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_err_5b (a int PRIMARY KEY, b int GENERATED ALWAYS AS identity GENERATED ALWAYS AS (a * 2) STORED);
2024-09-08 14:51:54.624 KST client backend[3075677] pg_regress/generated ERROR:  cannot use system column "xmin" in column generation expression at character 75
2024-09-08 14:51:54.624 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_err_6a (a int PRIMARY KEY, b bool GENERATED ALWAYS AS (xmin <> 37) STORED);
2024-09-08 14:51:54.624 KST client backend[3075677] pg_regress/generated ERROR:  aggregate functions are not allowed in column generation expressions at character 74
2024-09-08 14:51:54.624 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_err_7a (a int PRIMARY KEY, b int GENERATED ALWAYS AS (avg(a)) STORED);
2024-09-08 14:51:54.624 KST client backend[3075671] pg_regress/object_address WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:54.624 KST client backend[3075671] pg_regress/object_address HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:54.625 KST client backend[3075677] pg_regress/generated ERROR:  window functions are not allowed in column generation expressions at character 74
2024-09-08 14:51:54.625 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_err_7b (a int PRIMARY KEY, b int GENERATED ALWAYS AS (row_number() OVER (ORDER BY a)) STORED);
2024-09-08 14:51:54.625 KST client backend[3075677] pg_regress/generated ERROR:  cannot use subquery in column generation expression at character 74
2024-09-08 14:51:54.625 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_err_7c (a int PRIMARY KEY, b int GENERATED ALWAYS AS ((SELECT a)) STORED);
2024-09-08 14:51:54.625 KST client backend[3075679] pg_regress/identity ERROR:  cannot insert a non-DEFAULT value into column "a"
2024-09-08 14:51:54.625 KST client backend[3075679] pg_regress/identity DETAIL:  Column "a" is an identity column defined as GENERATED ALWAYS.
2024-09-08 14:51:54.625 KST client backend[3075679] pg_regress/identity HINT:  Use OVERRIDING SYSTEM VALUE to override.
2024-09-08 14:51:54.625 KST client backend[3075679] pg_regress/identity STATEMENT:  INSERT INTO itest2 VALUES (10, 'xyz');
2024-09-08 14:51:54.626 KST client backend[3075667] pg_regress/replica_identity ERROR:  column "id" is in index used as replica identity
2024-09-08 14:51:54.626 KST client backend[3075667] pg_regress/replica_identity STATEMENT:  ALTER TABLE test_replica_identity3 ALTER COLUMN id DROP NOT NULL;
2024-09-08 14:51:54.626 KST client backend[3075671] pg_regress/object_address WARNING:  subscription was created, but is not connected
2024-09-08 14:51:54.626 KST client backend[3075671] pg_regress/object_address HINT:  To initiate replication, you must manually create the replication slot, enable the subscription, and refresh the subscription.
2024-09-08 14:51:54.626 KST client backend[3075677] pg_regress/generated ERROR:  set-returning functions are not allowed in column generation expressions at character 74
2024-09-08 14:51:54.626 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_err_7d (a int PRIMARY KEY, b int GENERATED ALWAYS AS (generate_series(1, a)) STORED);
2024-09-08 14:51:54.626 KST client backend[3075679] pg_regress/identity ERROR:  column "a" can only be updated to DEFAULT
2024-09-08 14:51:54.626 KST client backend[3075679] pg_regress/identity DETAIL:  Column "a" is an identity column defined as GENERATED ALWAYS.
2024-09-08 14:51:54.626 KST client backend[3075679] pg_regress/identity STATEMENT:  UPDATE itest2 SET a = 101 WHERE a = 1;
2024-09-08 14:51:54.626 KST client backend[3075677] pg_regress/generated ERROR:  for a generated column, GENERATED ALWAYS must be specified at character 62
2024-09-08 14:51:54.626 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_err_8 (a int PRIMARY KEY, b int GENERATED BY DEFAULT AS (a * 2) STORED);
2024-09-08 14:51:54.627 KST client backend[3075677] pg_regress/generated ERROR:  cannot insert a non-DEFAULT value into column "b"
2024-09-08 14:51:54.627 KST client backend[3075677] pg_regress/generated DETAIL:  Column "b" is a generated column.
2024-09-08 14:51:54.627 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest1 VALUES (3, 33);
2024-09-08 14:51:54.627 KST client backend[3075677] pg_regress/generated ERROR:  cannot insert a non-DEFAULT value into column "b"
2024-09-08 14:51:54.627 KST client backend[3075677] pg_regress/generated DETAIL:  Column "b" is a generated column.
2024-09-08 14:51:54.627 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest1 VALUES (3, 33), (4, 44);
2024-09-08 14:51:54.627 KST client backend[3075677] pg_regress/generated ERROR:  cannot insert a non-DEFAULT value into column "b"
2024-09-08 14:51:54.627 KST client backend[3075677] pg_regress/generated DETAIL:  Column "b" is a generated column.
2024-09-08 14:51:54.627 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest1 VALUES (3, DEFAULT), (4, 44);
2024-09-08 14:51:54.627 KST client backend[3075677] pg_regress/generated ERROR:  cannot insert a non-DEFAULT value into column "b"
2024-09-08 14:51:54.627 KST client backend[3075677] pg_regress/generated DETAIL:  Column "b" is a generated column.
2024-09-08 14:51:54.627 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest1 VALUES (3, 33), (4, DEFAULT);
2024-09-08 14:51:54.627 KST client backend[3075671] pg_regress/object_address ERROR:  unrecognized object type "stone"
2024-09-08 14:51:54.627 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('stone', '{}', '{}');
2024-09-08 14:51:54.627 KST client backend[3075671] pg_regress/object_address ERROR:  name list length must be at least 1
2024-09-08 14:51:54.627 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('table', '{}', '{}');
2024-09-08 14:51:54.627 KST client backend[3075677] pg_regress/generated ERROR:  column "b" can only be updated to DEFAULT
2024-09-08 14:51:54.627 KST client backend[3075677] pg_regress/generated DETAIL:  Column "b" is a generated column.
2024-09-08 14:51:54.627 KST client backend[3075677] pg_regress/generated STATEMENT:  UPDATE gtest1 SET b = 11 WHERE a = 1;
2024-09-08 14:51:54.627 KST client backend[3075671] pg_regress/object_address ERROR:  name or argument lists may not contain nulls
2024-09-08 14:51:54.627 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('table', '{NULL}', '{}');
2024-09-08 14:51:54.628 KST client backend[3075677] pg_regress/generated ERROR:  integer out of range
2024-09-08 14:51:54.628 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest1 VALUES (2000000000);
2024-09-08 14:51:54.628 KST client backend[3075671] pg_regress/object_address WARNING:  error for toast table: unsupported object type "toast table"
2024-09-08 14:51:54.628 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 11 at RAISE
2024-09-08 14:51:54.628 KST client backend[3075671] pg_regress/object_address WARNING:  error for index column: unsupported object type "index column"
2024-09-08 14:51:54.628 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 11 at RAISE
2024-09-08 14:51:54.628 KST client backend[3075671] pg_regress/object_address WARNING:  error for sequence column: unsupported object type "sequence column"
2024-09-08 14:51:54.628 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 11 at RAISE
2024-09-08 14:51:54.628 KST client backend[3075671] pg_regress/object_address WARNING:  error for toast table column: unsupported object type "toast table column"
2024-09-08 14:51:54.628 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 11 at RAISE
2024-09-08 14:51:54.628 KST client backend[3075671] pg_regress/object_address WARNING:  error for view column: unsupported object type "view column"
2024-09-08 14:51:54.628 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 11 at RAISE
2024-09-08 14:51:54.628 KST client backend[3075672] pg_regress/groupingsets ERROR:  could not implement GROUP BY
2024-09-08 14:51:54.628 KST client backend[3075672] pg_regress/groupingsets DETAIL:  Some of the datatypes only support hashing, while others only support sorting.
2024-09-08 14:51:54.628 KST client backend[3075672] pg_regress/groupingsets STATEMENT:  select count(*) from gstest4 group by rollup(unhashable_col,unsortable_col);
2024-09-08 14:51:54.628 KST client backend[3075671] pg_regress/object_address WARNING:  error for materialized view column: unsupported object type "materialized view column"
2024-09-08 14:51:54.628 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 11 at RAISE
2024-09-08 14:51:54.628 KST client backend[3075672] pg_regress/groupingsets ERROR:  could not implement GROUP BY
2024-09-08 14:51:54.628 KST client backend[3075672] pg_regress/groupingsets DETAIL:  Some of the datatypes only support hashing, while others only support sorting.
2024-09-08 14:51:54.628 KST client backend[3075672] pg_regress/groupingsets STATEMENT:  select array_agg(v order by v) from gstest4 group by grouping sets ((id,unsortable_col),(id));
2024-09-08 14:51:54.628 KST client backend[3075671] pg_regress/object_address ERROR:  operator 1 (int4, bool) of operator family integer_ops for access method btree does not exist
2024-09-08 14:51:54.628 KST client backend[3075671] pg_regress/object_address STATEMENT:  select * from pg_get_object_address('operator of access method', '{btree,integer_ops,1}', '{int4,bool}');
2024-09-08 14:51:54.628 KST client backend[3075679] pg_regress/identity ERROR:  column "a" of relation "itest4" is not an identity column
2024-09-08 14:51:54.628 KST client backend[3075679] pg_regress/identity STATEMENT:  ALTER TABLE itest4 ALTER COLUMN a DROP IDENTITY;
2024-09-08 14:51:54.629 KST client backend[3075671] pg_regress/object_address ERROR:  operator 99 (int4, int4) of operator family integer_ops for access method btree does not exist
2024-09-08 14:51:54.629 KST client backend[3075671] pg_regress/object_address STATEMENT:  select * from pg_get_object_address('operator of access method', '{btree,integer_ops,99}', '{int4,int4}');
2024-09-08 14:51:54.629 KST client backend[3075671] pg_regress/object_address ERROR:  function 1 (int4, bool) of operator family integer_ops for access method btree does not exist
2024-09-08 14:51:54.629 KST client backend[3075671] pg_regress/object_address STATEMENT:  select * from pg_get_object_address('function of access method', '{btree,integer_ops,1}', '{int4,bool}');
2024-09-08 14:51:54.629 KST client backend[3075671] pg_regress/object_address ERROR:  function 99 (int4, int4) of operator family integer_ops for access method btree does not exist
2024-09-08 14:51:54.629 KST client backend[3075671] pg_regress/object_address STATEMENT:  select * from pg_get_object_address('function of access method', '{btree,integer_ops,99}', '{int4,int4}');
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address WARNING:  error for table,{eins},{}: relation "eins" does not exist
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address WARNING:  error for table,{eins},{integer}: relation "eins" does not exist
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address WARNING:  error for table,{addr_nsp,zwei},{}: relation "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address WARNING:  error for table,{addr_nsp,zwei},{integer}: relation "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address WARNING:  error for table,{eins,zwei,drei},{}: cross-database references are not implemented: "eins.zwei.drei"
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address WARNING:  error for table,{eins,zwei,drei},{integer}: cross-database references are not implemented: "eins.zwei.drei"
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address WARNING:  error for index,{eins},{}: relation "eins" does not exist
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address WARNING:  error for index,{eins},{integer}: relation "eins" does not exist
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address WARNING:  error for index,{addr_nsp,zwei},{}: relation "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address WARNING:  error for index,{addr_nsp,zwei},{integer}: relation "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.630 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for index,{eins,zwei,drei},{}: cross-database references are not implemented: "eins.zwei.drei"
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for index,{eins,zwei,drei},{integer}: cross-database references are not implemented: "eins.zwei.drei"
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for sequence,{eins},{}: relation "eins" does not exist
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for sequence,{eins},{integer}: relation "eins" does not exist
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for sequence,{addr_nsp,zwei},{}: relation "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for sequence,{addr_nsp,zwei},{integer}: relation "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for sequence,{eins,zwei,drei},{}: cross-database references are not implemented: "eins.zwei.drei"
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for sequence,{eins,zwei,drei},{integer}: cross-database references are not implemented: "eins.zwei.drei"
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for view,{eins},{}: relation "eins" does not exist
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for view,{eins},{integer}: relation "eins" does not exist
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for view,{addr_nsp,zwei},{}: relation "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for view,{addr_nsp,zwei},{integer}: relation "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for view,{eins,zwei,drei},{}: cross-database references are not implemented: "eins.zwei.drei"
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for view,{eins,zwei,drei},{integer}: cross-database references are not implemented: "eins.zwei.drei"
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for materialized view,{eins},{}: relation "eins" does not exist
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075672] pg_regress/groupingsets ERROR:  aggregate functions are not allowed in FROM clause of their own query level at character 69
2024-09-08 14:51:54.631 KST client backend[3075672] pg_regress/groupingsets STATEMENT:  select *
	  from (values (1),(2)) v(x),
	       lateral (select a, b, sum(v.x) from gstest_data(v.x) group by grouping sets (a,b)) s;
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for materialized view,{eins},{integer}: relation "eins" does not exist
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075672] pg_regress/groupingsets ERROR:  aggregate functions are not allowed in FROM clause of their own query level at character 95
2024-09-08 14:51:54.631 KST client backend[3075672] pg_regress/groupingsets STATEMENT:  explain (costs off)
	  select *
	    from (values (1),(2)) v(x),
	         lateral (select a, b, sum(v.x) from gstest_data(v.x) group by grouping sets (a,b)) s;
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for materialized view,{addr_nsp,zwei},{}: relation "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for materialized view,{addr_nsp,zwei},{integer}: relation "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for materialized view,{eins,zwei,drei},{}: cross-database references are not implemented: "eins.zwei.drei"
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for materialized view,{eins,zwei,drei},{integer}: cross-database references are not implemented: "eins.zwei.drei"
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for foreign table,{eins},{}: relation "eins" does not exist
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for foreign table,{eins},{integer}: relation "eins" does not exist
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address WARNING:  error for foreign table,{addr_nsp,zwei},{}: relation "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.631 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for foreign table,{addr_nsp,zwei},{integer}: relation "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for foreign table,{eins,zwei,drei},{}: cross-database references are not implemented: "eins.zwei.drei"
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for foreign table,{eins,zwei,drei},{integer}: cross-database references are not implemented: "eins.zwei.drei"
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for table column,{eins},{}: column name must be qualified
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for table column,{eins},{integer}: column name must be qualified
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for table column,{addr_nsp,zwei},{}: relation "addr_nsp" does not exist
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for table column,{addr_nsp,zwei},{integer}: relation "addr_nsp" does not exist
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for table column,{eins,zwei,drei},{}: schema "eins" does not exist
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for table column,{eins,zwei,drei},{integer}: schema "eins" does not exist
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for foreign table column,{eins},{}: column name must be qualified
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for foreign table column,{eins},{integer}: column name must be qualified
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for foreign table column,{addr_nsp,zwei},{}: relation "addr_nsp" does not exist
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for foreign table column,{addr_nsp,zwei},{integer}: relation "addr_nsp" does not exist
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for foreign table column,{eins,zwei,drei},{}: schema "eins" does not exist
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for foreign table column,{eins,zwei,drei},{integer}: schema "eins" does not exist
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for aggregate,{eins},{}: aggregate eins(*) does not exist
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for aggregate,{eins},{integer}: aggregate eins(integer) does not exist
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for aggregate,{addr_nsp,zwei},{}: aggregate addr_nsp.zwei(*) does not exist
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for aggregate,{addr_nsp,zwei},{integer}: aggregate addr_nsp.zwei(integer) does not exist
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for aggregate,{eins,zwei,drei},{}: cross-database references are not implemented: eins.zwei.drei
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for aggregate,{eins,zwei,drei},{integer}: cross-database references are not implemented: eins.zwei.drei
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address WARNING:  error for function,{eins},{}: function eins() does not exist
2024-09-08 14:51:54.632 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for function,{eins},{integer}: function eins(integer) does not exist
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for function,{addr_nsp,zwei},{}: function addr_nsp.zwei() does not exist
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for function,{addr_nsp,zwei},{integer}: function addr_nsp.zwei(integer) does not exist
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for function,{eins,zwei,drei},{}: cross-database references are not implemented: eins.zwei.drei
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for function,{eins,zwei,drei},{integer}: cross-database references are not implemented: eins.zwei.drei
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for procedure,{eins},{}: procedure eins() does not exist
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for procedure,{eins},{integer}: procedure eins(integer) does not exist
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for procedure,{addr_nsp,zwei},{}: procedure addr_nsp.zwei() does not exist
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for procedure,{addr_nsp,zwei},{integer}: procedure addr_nsp.zwei(integer) does not exist
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for procedure,{eins,zwei,drei},{}: cross-database references are not implemented: eins.zwei.drei
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for procedure,{eins,zwei,drei},{integer}: cross-database references are not implemented: eins.zwei.drei
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for type,{eins},{}: type "eins" does not exist
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for type,{eins},{integer}: type "eins" does not exist
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for type,{addr_nsp,zwei},{}: name list length must be exactly 1
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for type,{addr_nsp,zwei},{integer}: name list length must be exactly 1
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for type,{eins,zwei,drei},{}: name list length must be exactly 1
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for type,{eins,zwei,drei},{integer}: name list length must be exactly 1
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for cast,{eins},{}: argument list length must be exactly 1
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for cast,{eins},{integer}: type "eins" does not exist
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for cast,{addr_nsp,zwei},{}: name list length must be exactly 1
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for cast,{addr_nsp,zwei},{integer}: name list length must be exactly 1
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for cast,{eins,zwei,drei},{}: name list length must be exactly 1
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address WARNING:  error for cast,{eins,zwei,drei},{integer}: name list length must be exactly 1
2024-09-08 14:51:54.633 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for table constraint,{eins},{}: must specify relation and object name
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for table constraint,{eins},{integer}: must specify relation and object name
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for table constraint,{addr_nsp,zwei},{}: relation "addr_nsp" does not exist
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for table constraint,{addr_nsp,zwei},{integer}: relation "addr_nsp" does not exist
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for table constraint,{eins,zwei,drei},{}: schema "eins" does not exist
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for table constraint,{eins,zwei,drei},{integer}: schema "eins" does not exist
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for domain constraint,{eins},{}: argument list length must be exactly 1
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for domain constraint,{eins},{integer}: type "eins" does not exist
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for domain constraint,{addr_nsp,zwei},{}: name list length must be exactly 1
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for domain constraint,{addr_nsp,zwei},{integer}: name list length must be exactly 1
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for domain constraint,{eins,zwei,drei},{}: name list length must be exactly 1
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for domain constraint,{eins,zwei,drei},{integer}: name list length must be exactly 1
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for conversion,{eins},{}: conversion "eins" does not exist
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for conversion,{eins},{integer}: conversion "eins" does not exist
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for conversion,{addr_nsp,zwei},{}: conversion "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for conversion,{addr_nsp,zwei},{integer}: conversion "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for conversion,{eins,zwei,drei},{}: cross-database references are not implemented: eins.zwei.drei
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for conversion,{eins,zwei,drei},{integer}: cross-database references are not implemented: eins.zwei.drei
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for default value,{eins},{}: column name must be qualified
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for default value,{eins},{integer}: column name must be qualified
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for default value,{addr_nsp,zwei},{}: relation "addr_nsp" does not exist
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address WARNING:  error for default value,{addr_nsp,zwei},{integer}: relation "addr_nsp" does not exist
2024-09-08 14:51:54.634 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for default value,{eins,zwei,drei},{}: schema "eins" does not exist
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for default value,{eins,zwei,drei},{integer}: schema "eins" does not exist
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator,{eins},{}: argument list length must be exactly 2
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator,{eins},{integer}: argument list length must be exactly 2
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator,{addr_nsp,zwei},{}: argument list length must be exactly 2
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator,{addr_nsp,zwei},{integer}: argument list length must be exactly 2
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator,{eins,zwei,drei},{}: argument list length must be exactly 2
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator,{eins,zwei,drei},{integer}: argument list length must be exactly 2
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator class,{eins},{}: name list length must be at least 2
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator class,{eins},{integer}: name list length must be at least 2
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator class,{addr_nsp,zwei},{}: access method "addr_nsp" does not exist
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator class,{addr_nsp,zwei},{integer}: access method "addr_nsp" does not exist
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator class,{eins,zwei,drei},{}: access method "eins" does not exist
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator class,{eins,zwei,drei},{integer}: access method "eins" does not exist
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator family,{eins},{}: name list length must be at least 2
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator family,{eins},{integer}: name list length must be at least 2
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator family,{addr_nsp,zwei},{}: access method "addr_nsp" does not exist
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator family,{addr_nsp,zwei},{integer}: access method "addr_nsp" does not exist
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator family,{eins,zwei,drei},{}: access method "eins" does not exist
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator family,{eins,zwei,drei},{integer}: access method "eins" does not exist
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for rule,{eins},{}: must specify relation and object name
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for rule,{eins},{integer}: must specify relation and object name
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for rule,{addr_nsp,zwei},{}: relation "addr_nsp" does not exist
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address WARNING:  error for rule,{addr_nsp,zwei},{integer}: relation "addr_nsp" does not exist
2024-09-08 14:51:54.635 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for rule,{eins,zwei,drei},{}: schema "eins" does not exist
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for rule,{eins,zwei,drei},{integer}: schema "eins" does not exist
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for trigger,{eins},{}: must specify relation and object name
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for trigger,{eins},{integer}: must specify relation and object name
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for trigger,{addr_nsp,zwei},{}: relation "addr_nsp" does not exist
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for trigger,{addr_nsp,zwei},{integer}: relation "addr_nsp" does not exist
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for trigger,{eins,zwei,drei},{}: schema "eins" does not exist
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for trigger,{eins,zwei,drei},{integer}: schema "eins" does not exist
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search parser,{eins},{}: text search parser "eins" does not exist
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search parser,{eins},{integer}: text search parser "eins" does not exist
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search parser,{addr_nsp,zwei},{}: text search parser "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search parser,{addr_nsp,zwei},{integer}: text search parser "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search parser,{eins,zwei,drei},{}: cross-database references are not implemented: eins.zwei.drei
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search parser,{eins,zwei,drei},{integer}: cross-database references are not implemented: eins.zwei.drei
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search dictionary,{eins},{}: text search dictionary "eins" does not exist
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search dictionary,{eins},{integer}: text search dictionary "eins" does not exist
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search dictionary,{addr_nsp,zwei},{}: text search dictionary "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search dictionary,{addr_nsp,zwei},{integer}: text search dictionary "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search dictionary,{eins,zwei,drei},{}: cross-database references are not implemented: eins.zwei.drei
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search dictionary,{eins,zwei,drei},{integer}: cross-database references are not implemented: eins.zwei.drei
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search template,{eins},{}: text search template "eins" does not exist
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search template,{eins},{integer}: text search template "eins" does not exist
2024-09-08 14:51:54.636 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search template,{addr_nsp,zwei},{}: text search template "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search template,{addr_nsp,zwei},{integer}: text search template "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search template,{eins,zwei,drei},{}: cross-database references are not implemented: eins.zwei.drei
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search template,{eins,zwei,drei},{integer}: cross-database references are not implemented: eins.zwei.drei
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search configuration,{eins},{}: text search configuration "eins" does not exist
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search configuration,{eins},{integer}: text search configuration "eins" does not exist
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search configuration,{addr_nsp,zwei},{}: text search configuration "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search configuration,{addr_nsp,zwei},{integer}: text search configuration "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search configuration,{eins,zwei,drei},{}: cross-database references are not implemented: eins.zwei.drei
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for text search configuration,{eins,zwei,drei},{integer}: cross-database references are not implemented: eins.zwei.drei
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for policy,{eins},{}: must specify relation and object name
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for policy,{eins},{integer}: must specify relation and object name
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for policy,{addr_nsp,zwei},{}: relation "addr_nsp" does not exist
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for policy,{addr_nsp,zwei},{integer}: relation "addr_nsp" does not exist
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for policy,{eins,zwei,drei},{}: schema "eins" does not exist
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for policy,{eins,zwei,drei},{integer}: schema "eins" does not exist
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for user mapping,{eins},{}: argument list length must be exactly 1
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for user mapping,{eins},{integer}: user mapping for user "eins" on server "integer" does not exist
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for user mapping,{addr_nsp,zwei},{}: name list length must be exactly 1
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for user mapping,{addr_nsp,zwei},{integer}: name list length must be exactly 1
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for user mapping,{eins,zwei,drei},{}: name list length must be exactly 1
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for user mapping,{eins,zwei,drei},{integer}: name list length must be exactly 1
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address WARNING:  error for default acl,{eins},{}: argument list length must be exactly 1
2024-09-08 14:51:54.637 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for default acl,{eins},{integer}: unrecognized default ACL object type "i"
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for default acl,{addr_nsp,zwei},{}: argument list length must be exactly 1
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for default acl,{addr_nsp,zwei},{integer}: unrecognized default ACL object type "i"
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for default acl,{eins,zwei,drei},{}: argument list length must be exactly 1
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for default acl,{eins,zwei,drei},{integer}: unrecognized default ACL object type "i"
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for transform,{eins},{}: argument list length must be exactly 1
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for transform,{eins},{integer}: type "eins" does not exist
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for transform,{addr_nsp,zwei},{}: name list length must be exactly 1
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for transform,{addr_nsp,zwei},{integer}: name list length must be exactly 1
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for transform,{eins,zwei,drei},{}: name list length must be exactly 1
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for transform,{eins,zwei,drei},{integer}: name list length must be exactly 1
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator of access method,{eins},{}: name list length must be at least 3
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator of access method,{eins},{integer}: name list length must be at least 3
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator of access method,{addr_nsp,zwei},{}: name list length must be at least 3
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator of access method,{addr_nsp,zwei},{integer}: name list length must be at least 3
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator of access method,{eins,zwei,drei},{}: argument list length must be exactly 2
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for operator of access method,{eins,zwei,drei},{integer}: argument list length must be exactly 2
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for function of access method,{eins},{}: name list length must be at least 3
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for function of access method,{eins},{integer}: name list length must be at least 3
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for function of access method,{addr_nsp,zwei},{}: name list length must be at least 3
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for function of access method,{addr_nsp,zwei},{integer}: name list length must be at least 3
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for function of access method,{eins,zwei,drei},{}: argument list length must be exactly 2
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for function of access method,{eins,zwei,drei},{integer}: argument list length must be exactly 2
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address WARNING:  error for publication namespace,{eins},{}: argument list length must be exactly 1
2024-09-08 14:51:54.638 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address WARNING:  error for publication namespace,{eins},{integer}: schema "eins" does not exist
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address WARNING:  error for publication namespace,{addr_nsp,zwei},{}: name list length must be exactly 1
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address WARNING:  error for publication namespace,{addr_nsp,zwei},{integer}: name list length must be exactly 1
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address WARNING:  error for publication namespace,{eins,zwei,drei},{}: name list length must be exactly 1
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address WARNING:  error for publication namespace,{eins,zwei,drei},{integer}: name list length must be exactly 1
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address WARNING:  error for publication relation,{eins},{}: argument list length must be exactly 1
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address WARNING:  error for publication relation,{eins},{integer}: relation "eins" does not exist
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address WARNING:  error for publication relation,{addr_nsp,zwei},{}: argument list length must be exactly 1
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address WARNING:  error for publication relation,{addr_nsp,zwei},{integer}: relation "addr_nsp.zwei" does not exist
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address WARNING:  error for publication relation,{eins,zwei,drei},{}: argument list length must be exactly 1
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address WARNING:  error for publication relation,{eins,zwei,drei},{integer}: cross-database references are not implemented: "eins.zwei.drei"
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address CONTEXT:  PL/pgSQL function inline_code_block line 27 at RAISE
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address ERROR:  language "one" does not exist
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('language', '{one}', '{}');
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address ERROR:  name list length must be exactly 1
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('language', '{one,two}', '{}');
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address ERROR:  large object 123 does not exist
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('large object', '{123}', '{}');
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address ERROR:  name list length must be exactly 1
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('large object', '{123,456}', '{}');
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address ERROR:  invalid input syntax for type oid: "blargh"
2024-09-08 14:51:54.639 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('large object', '{blargh}', '{}');
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address ERROR:  schema "one" does not exist
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('schema', '{one}', '{}');
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address ERROR:  name list length must be exactly 1
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('schema', '{one,two}', '{}');
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address ERROR:  role "one" does not exist
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('role', '{one}', '{}');
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address ERROR:  name list length must be exactly 1
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('role', '{one,two}', '{}');
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address ERROR:  database "one" does not exist
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('database', '{one}', '{}');
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address ERROR:  name list length must be exactly 1
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('database', '{one,two}', '{}');
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address ERROR:  tablespace "one" does not exist
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('tablespace', '{one}', '{}');
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address ERROR:  name list length must be exactly 1
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('tablespace', '{one,two}', '{}');
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address ERROR:  foreign-data wrapper "one" does not exist
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('foreign-data wrapper', '{one}', '{}');
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address ERROR:  name list length must be exactly 1
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('foreign-data wrapper', '{one,two}', '{}');
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address ERROR:  server "one" does not exist
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('server', '{one}', '{}');
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address ERROR:  name list length must be exactly 1
2024-09-08 14:51:54.640 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('server', '{one,two}', '{}');
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address ERROR:  extension "one" does not exist
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('extension', '{one}', '{}');
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address ERROR:  name list length must be exactly 1
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('extension', '{one,two}', '{}');
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address ERROR:  event trigger "one" does not exist
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('event trigger', '{one}', '{}');
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address ERROR:  name list length must be exactly 1
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('event trigger', '{one,two}', '{}');
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address ERROR:  access method "one" does not exist
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('access method', '{one}', '{}');
2024-09-08 14:51:54.641 KST client backend[3075679] pg_regress/identity ERROR:  null value in column "a" of relation "itest4" violates not-null constraint
2024-09-08 14:51:54.641 KST client backend[3075679] pg_regress/identity DETAIL:  Failing row contains (null, ).
2024-09-08 14:51:54.641 KST client backend[3075679] pg_regress/identity STATEMENT:  INSERT INTO itest4 DEFAULT VALUES;
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address ERROR:  name list length must be exactly 1
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('access method', '{one,two}', '{}');
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address ERROR:  publication "one" does not exist
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('publication', '{one}', '{}');
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address ERROR:  name list length must be exactly 1
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('publication', '{one,two}', '{}');
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address ERROR:  subscription "one" does not exist
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('subscription', '{one}', '{}');
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address ERROR:  name list length must be exactly 1
2024-09-08 14:51:54.641 KST client backend[3075671] pg_regress/object_address STATEMENT:  SELECT pg_get_object_address('subscription', '{one,two}', '{}');
2024-09-08 14:51:54.643 KST client backend[3075679] pg_regress/identity ERROR:  relation "itest4_a_seq" does not exist at character 27
2024-09-08 14:51:54.643 KST client backend[3075679] pg_regress/identity STATEMENT:  SELECT sequence_name FROM itest4_a_seq;
2024-09-08 14:51:54.643 KST client backend[3075661] pg_regress/matview ERROR:  cannot refresh materialized view "public.mvtest_tvmm" concurrently
2024-09-08 14:51:54.643 KST client backend[3075661] pg_regress/matview HINT:  Create a unique index with no WHERE clause on one or more columns of the materialized view.
2024-09-08 14:51:54.643 KST client backend[3075661] pg_regress/matview STATEMENT:  REFRESH MATERIALIZED VIEW CONCURRENTLY mvtest_tvmm;
2024-09-08 14:51:54.644 KST client backend[3075672] pg_regress/groupingsets LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075672.0", size 598016
2024-09-08 14:51:54.644 KST client backend[3075672] pg_regress/groupingsets STATEMENT:  select * from
	  (values (1),(2)) v(a),
	  lateral (select a, i, j, count(*) from
	             bug_16784 group by cube(i,j)) s
	  order by v.a, i, j;
2024-09-08 14:51:54.645 KST client backend[3075672] pg_regress/groupingsets LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075672.1", size 598016
2024-09-08 14:51:54.645 KST client backend[3075672] pg_regress/groupingsets STATEMENT:  select * from
	  (values (1),(2)) v(a),
	  lateral (select a, i, j, count(*) from
	             bug_16784 group by cube(i,j)) s
	  order by v.a, i, j;
2024-09-08 14:51:54.645 KST client backend[3075677] pg_regress/generated ERROR:  cannot insert a non-DEFAULT value into column "b"
2024-09-08 14:51:54.645 KST client backend[3075677] pg_regress/generated DETAIL:  Column "b" is a generated column.
2024-09-08 14:51:54.645 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest1v VALUES (4, 8);
2024-09-08 14:51:54.646 KST client backend[3075677] pg_regress/generated ERROR:  cannot insert a non-DEFAULT value into column "b"
2024-09-08 14:51:54.646 KST client backend[3075677] pg_regress/generated DETAIL:  Column "b" is a generated column.
2024-09-08 14:51:54.646 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest1v VALUES (6, 66), (7, 77);
2024-09-08 14:51:54.646 KST client backend[3075677] pg_regress/generated ERROR:  cannot insert a non-DEFAULT value into column "b"
2024-09-08 14:51:54.646 KST client backend[3075677] pg_regress/generated DETAIL:  Column "b" is a generated column.
2024-09-08 14:51:54.646 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest1v VALUES (6, DEFAULT), (7, 77);
2024-09-08 14:51:54.646 KST client backend[3075677] pg_regress/generated ERROR:  cannot insert a non-DEFAULT value into column "b"
2024-09-08 14:51:54.646 KST client backend[3075677] pg_regress/generated DETAIL:  Column "b" is a generated column.
2024-09-08 14:51:54.646 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest1v VALUES (6, 66), (7, DEFAULT);
2024-09-08 14:51:54.646 KST client backend[3075677] pg_regress/generated ERROR:  cannot insert a non-DEFAULT value into column "b"
2024-09-08 14:51:54.646 KST client backend[3075677] pg_regress/generated DETAIL:  Column "b" is a generated column.
2024-09-08 14:51:54.646 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest1v VALUES (8, DEFAULT);
2024-09-08 14:51:54.646 KST client backend[3075677] pg_regress/generated ERROR:  cannot insert a non-DEFAULT value into column "b"
2024-09-08 14:51:54.646 KST client backend[3075677] pg_regress/generated DETAIL:  Column "b" is a generated column.
2024-09-08 14:51:54.646 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest1v VALUES (8, DEFAULT), (9, DEFAULT);
2024-09-08 14:51:54.647 KST client backend[3075679] pg_regress/identity ERROR:  cannot insert a non-DEFAULT value into column "a"
2024-09-08 14:51:54.647 KST client backend[3075679] pg_regress/identity DETAIL:  Column "a" is an identity column defined as GENERATED ALWAYS.
2024-09-08 14:51:54.647 KST client backend[3075679] pg_regress/identity HINT:  Use OVERRIDING SYSTEM VALUE to override.
2024-09-08 14:51:54.647 KST client backend[3075679] pg_regress/identity STATEMENT:  INSERT INTO itestv11 VALUES (10, 'xyz');
2024-09-08 14:51:54.648 KST client backend[3075661] pg_regress/matview ERROR:  CONCURRENTLY and WITH NO DATA options cannot be used together
2024-09-08 14:51:54.648 KST client backend[3075661] pg_regress/matview STATEMENT:  REFRESH MATERIALIZED VIEW CONCURRENTLY mvtest_tvmm WITH NO DATA;
2024-09-08 14:51:54.648 KST client backend[3075661] pg_regress/matview ERROR:  cannot lock rows in materialized view "mvtest_tvvm"
2024-09-08 14:51:54.648 KST client backend[3075661] pg_regress/matview STATEMENT:  SELECT * FROM mvtest_tvvm FOR SHARE;
2024-09-08 14:51:54.649 KST client backend[3075661] pg_regress/matview ERROR:  cannot drop table mvtest_t because other objects depend on it
2024-09-08 14:51:54.649 KST client backend[3075661] pg_regress/matview DETAIL:  view mvtest_tv depends on table mvtest_t
	materialized view mvtest_mvschema.mvtest_tvm depends on view mvtest_tv
	materialized view mvtest_tvmm depends on materialized view mvtest_mvschema.mvtest_tvm
	view mvtest_tvv depends on view mvtest_tv
	materialized view mvtest_tvvm depends on view mvtest_tvv
	view mvtest_tvvmv depends on materialized view mvtest_tvvm
	materialized view mvtest_bb depends on view mvtest_tvvmv
	materialized view mvtest_tm depends on table mvtest_t
	materialized view mvtest_tmm depends on materialized view mvtest_tm
2024-09-08 14:51:54.649 KST client backend[3075661] pg_regress/matview HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:54.649 KST client backend[3075661] pg_regress/matview STATEMENT:  DROP TABLE mvtest_t;
2024-09-08 14:51:54.650 KST client backend[3075677] pg_regress/generated ERROR:  child column "b" specifies generation expression
2024-09-08 14:51:54.650 KST client backend[3075677] pg_regress/generated HINT:  A child table column cannot be generated unless its parent column is.
2024-09-08 14:51:54.650 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_normal_child (a int, b int GENERATED ALWAYS AS (a * 2) STORED) INHERITS (gtest_normal);
2024-09-08 14:51:54.650 KST client backend[3075679] pg_regress/identity ERROR:  column "a" of relation "itest1" is an identity column
2024-09-08 14:51:54.650 KST client backend[3075679] pg_regress/identity STATEMENT:  ALTER TABLE itest1 ALTER COLUMN a SET DEFAULT 1;
2024-09-08 14:51:54.651 KST client backend[3075677] pg_regress/generated ERROR:  column "b" in child table must not be a generated column
2024-09-08 14:51:54.651 KST client backend[3075677] pg_regress/generated STATEMENT:  ALTER TABLE gtest_normal_child INHERIT gtest_normal;
2024-09-08 14:51:54.651 KST client backend[3075677] pg_regress/generated ERROR:  column "b" inherits from generated column but specifies default
2024-09-08 14:51:54.651 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtestx (x int, b int DEFAULT 10) INHERITS (gtest1);
2024-09-08 14:51:54.652 KST client backend[3075677] pg_regress/generated ERROR:  column "b" inherits from generated column but specifies identity
2024-09-08 14:51:54.652 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtestx (x int, b int GENERATED ALWAYS AS IDENTITY) INHERITS (gtest1);
2024-09-08 14:51:54.652 KST client backend[3075669] pg_regress/collate ERROR:  collation mismatch between explicit collations "C" and "POSIX" at character 36
2024-09-08 14:51:54.652 KST client backend[3075669] pg_regress/collate STATEMENT:  SELECT string_agg(x COLLATE "C", y COLLATE "POSIX") FROM collate_test10;
2024-09-08 14:51:54.652 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "part_document"
2024-09-08 14:51:54.652 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO part_document VALUES (100, 11, 5, 'regress_rls_dave', 'testing pp1');
2024-09-08 14:51:54.652 KST client backend[3075679] pg_regress/identity ERROR:  column "a" of relation "itest5" already has a default value
2024-09-08 14:51:54.652 KST client backend[3075679] pg_regress/identity STATEMENT:  ALTER TABLE itest5 ALTER COLUMN a ADD GENERATED ALWAYS AS IDENTITY;
2024-09-08 14:51:54.652 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy "pp1r" for table "part_document"
2024-09-08 14:51:54.652 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO part_document VALUES (100, 99, 1, 'regress_rls_dave', 'testing pp1r');
2024-09-08 14:51:54.652 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy "pp1r" for table "part_document"
2024-09-08 14:51:54.652 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO part_document VALUES (100, 55, 1, 'regress_rls_dave', 'testing RLS with partitions');
2024-09-08 14:51:54.652 KST client backend[3075669] pg_regress/collate ERROR:  collation mismatch between implicit collations "C" and "POSIX" at character 32
2024-09-08 14:51:54.652 KST client backend[3075669] pg_regress/collate HINT:  You can choose the collation by applying the COLLATE clause to one or both expressions.
2024-09-08 14:51:54.652 KST client backend[3075669] pg_regress/collate STATEMENT:  SELECT array_agg(a ORDER BY x||y) FROM collate_test10;
2024-09-08 14:51:54.653 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "part_document_satire"
2024-09-08 14:51:54.653 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO part_document_satire VALUES (101, 55, 1, 'regress_rls_dave', 'testing RLS with partitions');
2024-09-08 14:51:54.653 KST client backend[3075669] pg_regress/collate ERROR:  could not determine which collation to use for string comparison
2024-09-08 14:51:54.653 KST client backend[3075669] pg_regress/collate HINT:  Use the COLLATE clause to set the collation explicitly.
2024-09-08 14:51:54.653 KST client backend[3075669] pg_regress/collate STATEMENT:  SELECT a, b FROM collate_test1 UNION ALL SELECT a, b FROM collate_test2 ORDER BY 2;
2024-09-08 14:51:54.654 KST client backend[3075669] pg_regress/collate ERROR:  collation mismatch between implicit collations "C" and "POSIX" at character 48
2024-09-08 14:51:54.654 KST client backend[3075669] pg_regress/collate HINT:  You can choose the collation by applying the COLLATE clause to one or both expressions.
2024-09-08 14:51:54.654 KST client backend[3075669] pg_regress/collate STATEMENT:  SELECT a, b FROM collate_test1 UNION SELECT a, b FROM collate_test2 ORDER BY 2;
2024-09-08 14:51:54.654 KST client backend[3075675] pg_regress/rowsecurity ERROR:  must be owner of table part_document
2024-09-08 14:51:54.654 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  ALTER POLICY pp1 ON part_document USING (true);
2024-09-08 14:51:54.654 KST client backend[3075675] pg_regress/rowsecurity ERROR:  must be owner of relation part_document
2024-09-08 14:51:54.654 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  DROP POLICY pp1 ON part_document;
2024-09-08 14:51:54.654 KST client backend[3075669] pg_regress/collate ERROR:  collation mismatch between implicit collations "C" and "POSIX" at character 52
2024-09-08 14:51:54.654 KST client backend[3075669] pg_regress/collate HINT:  You can choose the collation by applying the COLLATE clause to one or both expressions.
2024-09-08 14:51:54.654 KST client backend[3075669] pg_regress/collate STATEMENT:  SELECT a, b FROM collate_test1 INTERSECT SELECT a, b FROM collate_test2 ORDER BY 2;
2024-09-08 14:51:54.654 KST client backend[3075669] pg_regress/collate ERROR:  collation mismatch between implicit collations "C" and "POSIX" at character 49
2024-09-08 14:51:54.654 KST client backend[3075669] pg_regress/collate HINT:  You can choose the collation by applying the COLLATE clause to one or both expressions.
2024-09-08 14:51:54.654 KST client backend[3075669] pg_regress/collate STATEMENT:  SELECT a, b FROM collate_test1 EXCEPT SELECT a, b FROM collate_test2 ORDER BY 2;
2024-09-08 14:51:54.654 KST client backend[3075669] pg_regress/collate ERROR:  no collation was derived for column "b" with collatable type text
2024-09-08 14:51:54.654 KST client backend[3075669] pg_regress/collate HINT:  Use the COLLATE clause to set the collation explicitly.
2024-09-08 14:51:54.654 KST client backend[3075669] pg_regress/collate STATEMENT:  CREATE TABLE test_u AS SELECT a, b FROM collate_test1 UNION ALL SELECT a, b FROM collate_test2;
2024-09-08 14:51:54.654 KST client backend[3075669] pg_regress/collate ERROR:  could not determine which collation to use for string comparison
2024-09-08 14:51:54.654 KST client backend[3075669] pg_regress/collate HINT:  Use the COLLATE clause to set the collation explicitly.
2024-09-08 14:51:54.654 KST client backend[3075669] pg_regress/collate STATEMENT:  select x < y from collate_test10;
2024-09-08 14:51:54.655 KST client backend[3075669] pg_regress/collate ERROR:  collation mismatch between implicit collations "C" and "POSIX" at character 47
2024-09-08 14:51:54.655 KST client backend[3075669] pg_regress/collate HINT:  You can choose the collation by applying the COLLATE clause to one or both expressions.
2024-09-08 14:51:54.655 KST client backend[3075669] pg_regress/collate STATEMENT:  select x, y from collate_test10 order by x || y;
2024-09-08 14:51:54.655 KST client backend[3075669] pg_regress/collate ERROR:  recursive query "foo" column 1 has collation "C" in non-recursive term but collation "POSIX" overall at character 37
2024-09-08 14:51:54.655 KST client backend[3075669] pg_regress/collate HINT:  Use the COLLATE clause to set the collation of the non-recursive term.
2024-09-08 14:51:54.655 KST client backend[3075669] pg_regress/collate STATEMENT:  WITH RECURSIVE foo(x) AS
	   (SELECT x FROM (VALUES('a' COLLATE "C"),('b')) t(x)
	   UNION ALL
	   SELECT (x || 'c') COLLATE "POSIX" FROM foo WHERE length(x) < 10)
	SELECT * FROM foo;
2024-09-08 14:51:54.655 KST client backend[3075669] pg_regress/collate ERROR:  could not determine which collation to use for string hashing
2024-09-08 14:51:54.655 KST client backend[3075669] pg_regress/collate HINT:  Use the COLLATE clause to set the collation explicitly.
2024-09-08 14:51:54.655 KST client backend[3075669] pg_regress/collate STATEMENT:  SELECT * FROM collate_test10 WHERE (x, y) NOT IN (SELECT y, x FROM collate_test10);
2024-09-08 14:51:54.655 KST client backend[3075677] pg_regress/generated ERROR:  column "b" in child table must be a generated column
2024-09-08 14:51:54.655 KST client backend[3075677] pg_regress/generated STATEMENT:  ALTER TABLE gtestxx_1 INHERIT gtest1;
2024-09-08 14:51:54.655 KST client backend[3075669] pg_regress/collate ERROR:  syntax error at or near "COLLATE" at character 26
2024-09-08 14:51:54.655 KST client backend[3075669] pg_regress/collate STATEMENT:  SELECT CAST('42' AS text COLLATE "C");
2024-09-08 14:51:54.655 KST client backend[3075675] pg_regress/rowsecurity ERROR:  query would be affected by row-level security policy for table "part_document"
2024-09-08 14:51:54.655 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  SELECT * FROM part_document ORDER by did;
2024-09-08 14:51:54.655 KST client backend[3075675] pg_regress/rowsecurity ERROR:  query would be affected by row-level security policy for table "part_document_satire"
2024-09-08 14:51:54.655 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  SELECT * FROM part_document_satire ORDER by did;
2024-09-08 14:51:54.656 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy "pp3" for table "part_document"
2024-09-08 14:51:54.656 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO part_document VALUES (100, 11, 5, 'regress_rls_carol', 'testing pp3');
2024-09-08 14:51:54.657 KST client backend[3075679] pg_regress/identity ERROR:  identity column type must be smallint, integer, or bigint
2024-09-08 14:51:54.657 KST client backend[3075679] pg_regress/identity STATEMENT:  ALTER TABLE itest3 ALTER COLUMN a TYPE text;
2024-09-08 14:51:54.657 KST client backend[3075675] pg_regress/rowsecurity ERROR:  cannot drop table dependee because other objects depend on it
2024-09-08 14:51:54.657 KST client backend[3075675] pg_regress/rowsecurity DETAIL:  policy d1 on table dependent depends on table dependee
2024-09-08 14:51:54.657 KST client backend[3075675] pg_regress/rowsecurity HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:54.657 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  DROP TABLE dependee;
2024-09-08 14:51:54.657 KST client backend[3075677] pg_regress/generated ERROR:  inherited column "b" has a generation conflict
2024-09-08 14:51:54.657 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest1_y () INHERITS (gtest0, gtesty);
2024-09-08 14:51:54.657 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest12
2024-09-08 14:51:54.657 KST client backend[3075668] pg_regress/privileges STATEMENT:  EXPLAIN (COSTS OFF) SELECT * FROM atest12 WHERE a >>> 0;
2024-09-08 14:51:54.658 KST client backend[3075677] pg_regress/generated ERROR:  inherited column "b" has a generation conflict
2024-09-08 14:51:54.658 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest1_y () INHERITS (gtest1, gtesty);
2024-09-08 14:51:54.658 KST client backend[3075675] pg_regress/rowsecurity ERROR:  infinite recursion detected in policy for relation "rec1"
2024-09-08 14:51:54.658 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  SELECT * FROM rec1;
2024-09-08 14:51:54.658 KST client backend[3075669] pg_regress/collate ERROR:  collations are not supported by type integer
2024-09-08 14:51:54.658 KST client backend[3075669] pg_regress/collate STATEMENT:  CREATE INDEX collate_test1_idx5 ON collate_test1 (a COLLATE "POSIX");
2024-09-08 14:51:54.658 KST client backend[3075669] pg_regress/collate ERROR:  collations are not supported by type integer at character 54
2024-09-08 14:51:54.658 KST client backend[3075669] pg_regress/collate STATEMENT:  CREATE INDEX collate_test1_idx6 ON collate_test1 ((a COLLATE "POSIX"));
2024-09-08 14:51:54.659 KST client backend[3075677] pg_regress/generated ERROR:  column "b" inherits conflicting generation expressions
2024-09-08 14:51:54.659 KST client backend[3075677] pg_regress/generated HINT:  To resolve the conflict, specify a generation expression explicitly.
2024-09-08 14:51:54.659 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest1_y () INHERITS (gtest1, gtesty);
2024-09-08 14:51:54.659 KST client backend[3075675] pg_regress/rowsecurity ERROR:  infinite recursion detected in policy for relation "rec1"
2024-09-08 14:51:54.659 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  SELECT * FROM rec1;
2024-09-08 14:51:54.661 KST client backend[3075675] pg_regress/rowsecurity ERROR:  infinite recursion detected in policy for relation "rec1"
2024-09-08 14:51:54.661 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  SELECT * FROM rec1;
2024-09-08 14:51:54.661 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest3
2024-09-08 14:51:54.661 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM atest3;
2024-09-08 14:51:54.662 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest3
2024-09-08 14:51:54.662 KST client backend[3075668] pg_regress/privileges STATEMENT:  DELETE FROM atest3;
2024-09-08 14:51:54.662 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest3
2024-09-08 14:51:54.662 KST client backend[3075668] pg_regress/privileges STATEMENT:  DELETE FROM atest3;
2024-09-08 14:51:54.662 KST client backend[3075669] pg_regress/collate ERROR:  insert or update on table "collate_test21" violates foreign key constraint "collate_test21_f2_fkey"
2024-09-08 14:51:54.662 KST client backend[3075669] pg_regress/collate DETAIL:  Key (f2)=(baz) is not present in table "collate_test20".
2024-09-08 14:51:54.662 KST client backend[3075669] pg_regress/collate STATEMENT:  INSERT INTO collate_test21 VALUES ('baz');
2024-09-08 14:51:54.662 KST client backend[3075675] pg_regress/rowsecurity ERROR:  infinite recursion detected in policy for relation "rec1"
2024-09-08 14:51:54.662 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  SELECT * FROM rec1;
2024-09-08 14:51:54.663 KST client backend[3075661] pg_regress/matview ERROR:  could not create unique index "mvtest_mv_a_idx"
2024-09-08 14:51:54.663 KST client backend[3075661] pg_regress/matview DETAIL:  Key (a)=(1) is duplicated.
2024-09-08 14:51:54.663 KST client backend[3075661] pg_regress/matview STATEMENT:  REFRESH MATERIALIZED VIEW mvtest_mv;
2024-09-08 14:51:54.664 KST client backend[3075669] pg_regress/collate ERROR:  insert or update on table "collate_test22" violates foreign key constraint "collate_test22_f2_fkey"
2024-09-08 14:51:54.664 KST client backend[3075669] pg_regress/collate DETAIL:  Key (f2)=(baz) is not present in table "collate_test20".
2024-09-08 14:51:54.664 KST client backend[3075669] pg_regress/collate STATEMENT:  ALTER TABLE collate_test22 ADD FOREIGN KEY (f2) REFERENCES collate_test20;
2024-09-08 14:51:54.664 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.664 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM atestv2;
2024-09-08 14:51:54.664 KST client backend[3075661] pg_regress/matview ERROR:  new data for materialized view "mvtest_mv" contains duplicate rows without any null columns
2024-09-08 14:51:54.664 KST client backend[3075661] pg_regress/matview DETAIL:  Row: (1,10)
2024-09-08 14:51:54.664 KST client backend[3075661] pg_regress/matview STATEMENT:  REFRESH MATERIALIZED VIEW CONCURRENTLY mvtest_mv;
2024-09-08 14:51:54.664 KST client backend[3075679] pg_regress/identity ERROR:  column "b" of relation "itest6" is not an identity column
2024-09-08 14:51:54.664 KST client backend[3075679] pg_regress/identity STATEMENT:  ALTER TABLE itest6 ALTER COLUMN b SET INCREMENT BY 2;
2024-09-08 14:51:54.664 KST client backend[3075679] pg_regress/identity ERROR:  cannot change ownership of identity sequence
2024-09-08 14:51:54.664 KST client backend[3075679] pg_regress/identity DETAIL:  Sequence "itest6_a_seq" is linked to table "itest6".
2024-09-08 14:51:54.664 KST client backend[3075679] pg_regress/identity STATEMENT:  ALTER SEQUENCE itest6_a_seq OWNED BY NONE;
2024-09-08 14:51:54.664 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for view atestv2
2024-09-08 14:51:54.664 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM atestv2;
2024-09-08 14:51:54.664 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for view atestv0
2024-09-08 14:51:54.664 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM atestv0;
2024-09-08 14:51:54.664 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table int8_tbl
2024-09-08 14:51:54.664 KST client backend[3075668] pg_regress/privileges STATEMENT:  select * from
	  ((select a.q1 as x from int8_tbl a offset 0)
	   union all
	   (select b.q2 as x from int8_tbl b offset 0)) ss
	where false;
2024-09-08 14:51:54.665 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table int8_tbl
2024-09-08 14:51:54.665 KST client backend[3075668] pg_regress/privileges STATEMENT:  select * from
	  ((select a.q1 as x, random() from int8_tbl a where q1 > 0)
	   union all
	   (select b.q2 as x, random() from int8_tbl b where q2 > 0)) ss
	where x < 0;
2024-09-08 14:51:54.665 KST client backend[3075669] pg_regress/collate ERROR:  collation "default" cannot be copied
2024-09-08 14:51:54.665 KST client backend[3075669] pg_regress/collate STATEMENT:  CREATE COLLATION mycoll3 FROM "default";
2024-09-08 14:51:54.665 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for view atestv3
2024-09-08 14:51:54.665 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM atestv3;
2024-09-08 14:51:54.665 KST client backend[3075675] pg_regress/rowsecurity ERROR:  infinite recursion detected in policy for relation "s1"
2024-09-08 14:51:54.665 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  SELECT * FROM s1 WHERE f_leak(b);
2024-09-08 14:51:54.665 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.665 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM atestv2;
2024-09-08 14:51:54.666 KST client backend[3075675] pg_regress/rowsecurity ERROR:  infinite recursion detected in policy for relation "s1"
2024-09-08 14:51:54.666 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO s1 VALUES (1, 'foo');
2024-09-08 14:51:54.666 KST client backend[3075669] pg_regress/collate ERROR:  cannot drop collation mycoll2 because other objects depend on it
2024-09-08 14:51:54.666 KST client backend[3075669] pg_regress/collate DETAIL:  column f1 of table collate_test23 depends on collation mycoll2
2024-09-08 14:51:54.666 KST client backend[3075669] pg_regress/collate HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:54.666 KST client backend[3075669] pg_regress/collate STATEMENT:  DROP COLLATION mycoll2;
2024-09-08 14:51:54.666 KST client backend[3075669] pg_regress/collate ERROR:  collation attribute "Lc_Collate" not recognized at character 29
2024-09-08 14:51:54.666 KST client backend[3075669] pg_regress/collate STATEMENT:  CREATE COLLATION case_coll ("Lc_Collate" = "POSIX", "Lc_Ctype" = "POSIX");
2024-09-08 14:51:54.667 KST client backend[3075677] pg_regress/generated ERROR:  column "b" is a generated column
2024-09-08 14:51:54.667 KST client backend[3075677] pg_regress/generated DETAIL:  Generated columns cannot be used in COPY.
2024-09-08 14:51:54.667 KST client backend[3075677] pg_regress/generated STATEMENT:  COPY gtest1 (a, b) TO stdout;
2024-09-08 14:51:54.667 KST client backend[3075677] pg_regress/generated ERROR:  column "b" is a generated column
2024-09-08 14:51:54.667 KST client backend[3075677] pg_regress/generated DETAIL:  Generated columns cannot be used in COPY.
2024-09-08 14:51:54.667 KST client backend[3075677] pg_regress/generated STATEMENT:  COPY gtest1 (a, b) FROM stdin;
2024-09-08 14:51:54.667 KST client backend[3075675] pg_regress/rowsecurity ERROR:  infinite recursion detected in policy for relation "s1"
2024-09-08 14:51:54.667 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  SELECT * FROM s1 WHERE f_leak(b);
2024-09-08 14:51:54.667 KST client backend[3075669] pg_regress/collate ERROR:  collations are not supported by type integer
2024-09-08 14:51:54.667 KST client backend[3075669] pg_regress/collate STATEMENT:  SELECT collation for ((SELECT a FROM collate_test1 LIMIT 1));
2024-09-08 14:51:54.667 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.667 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM atest5;
2024-09-08 14:51:54.668 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.668 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT two FROM atest5;
2024-09-08 14:51:54.668 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.668 KST client backend[3075668] pg_regress/privileges STATEMENT:  COPY atest5 (two) TO stdout;
2024-09-08 14:51:54.668 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.668 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT atest5 FROM atest5;
2024-09-08 14:51:54.668 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.668 KST client backend[3075668] pg_regress/privileges STATEMENT:  COPY atest5 (one,two) TO stdout;
2024-09-08 14:51:54.668 KST client backend[3075679] pg_regress/identity ERROR:  cannot recursively add identity column to table that has child tables
2024-09-08 14:51:54.668 KST client backend[3075679] pg_regress/identity STATEMENT:  ALTER TABLE itest7d ADD COLUMN b int GENERATED ALWAYS AS IDENTITY;
2024-09-08 14:51:54.668 KST client backend[3075677] pg_regress/generated ERROR:  column "b" is a generated column
2024-09-08 14:51:54.668 KST client backend[3075677] pg_regress/generated DETAIL:  Generated columns cannot be used in COPY.
2024-09-08 14:51:54.668 KST client backend[3075677] pg_regress/generated STATEMENT:  COPY gtest3 (a, b) TO stdout;
2024-09-08 14:51:54.668 KST client backend[3075677] pg_regress/generated ERROR:  column "b" is a generated column
2024-09-08 14:51:54.668 KST client backend[3075677] pg_regress/generated DETAIL:  Generated columns cannot be used in COPY.
2024-09-08 14:51:54.668 KST client backend[3075677] pg_regress/generated STATEMENT:  COPY gtest3 (a, b) FROM stdin;
2024-09-08 14:51:54.668 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.668 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT 1 FROM atest5 a JOIN atest5 b USING (two);
2024-09-08 14:51:54.668 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.668 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT 1 FROM atest5 a NATURAL JOIN atest5 b;
2024-09-08 14:51:54.668 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.668 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM (atest5 a JOIN atest5 b USING (one)) j;
2024-09-08 14:51:54.668 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.668 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT j.* FROM (atest5 a JOIN atest5 b USING (one)) j;
2024-09-08 14:51:54.668 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.668 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT (j.*) IS NULL FROM (atest5 a JOIN atest5 b USING (one)) j;
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT two FROM (atest5 a JOIN atest5 b(one,x,y,z) USING (one)) j;
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT j.two FROM (atest5 a JOIN atest5 b(one,x,y,z) USING (one)) j;
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT y FROM (atest5 a JOIN atest5 b(one,x,y,z) USING (one)) j;
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT j.y FROM (atest5 a JOIN atest5 b(one,x,y,z) USING (one)) j;
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM (atest5 a JOIN atest5 b USING (one));
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT a.* FROM (atest5 a JOIN atest5 b USING (one));
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT (a.*) IS NULL FROM (atest5 a JOIN atest5 b USING (one));
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT two FROM (atest5 a JOIN atest5 b(one,x,y,z) USING (one));
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT a.two FROM (atest5 a JOIN atest5 b(one,x,y,z) USING (one));
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT y FROM (atest5 a JOIN atest5 b(one,x,y,z) USING (one));
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT b.y FROM (atest5 a JOIN atest5 b(one,x,y,z) USING (one));
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT y FROM (atest5 a LEFT JOIN atest5 b(one,x,y,z) USING (one));
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.669 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT b.y FROM (atest5 a LEFT JOIN atest5 b(one,x,y,z) USING (one));
2024-09-08 14:51:54.670 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.670 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT y FROM (atest5 a FULL JOIN atest5 b(one,x,y,z) USING (one));
2024-09-08 14:51:54.670 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.670 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT b.y FROM (atest5 a FULL JOIN atest5 b(one,x,y,z) USING (one));
2024-09-08 14:51:54.670 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.670 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT 1 FROM atest5 WHERE two = 2;
2024-09-08 14:51:54.670 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.670 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM atest1, atest5;
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate ERROR:  conflicting or redundant options at character 54
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate STATEMENT:  CREATE COLLATION coll_dup_chk (LC_COLLATE = "POSIX", LC_COLLATE = "NONSENSE", LC_CTYPE = "POSIX");
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate ERROR:  conflicting or redundant options at character 52
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate STATEMENT:  CREATE COLLATION coll_dup_chk (LC_CTYPE = "POSIX", LC_CTYPE = "NONSENSE", LC_COLLATE = "POSIX");
2024-09-08 14:51:54.670 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.670 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT atest1.*,atest5.one FROM atest1 JOIN atest5 ON (atest1.a = atest5.two);
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate ERROR:  conflicting or redundant options at character 48
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate STATEMENT:  CREATE COLLATION coll_dup_chk (PROVIDER = icu, PROVIDER = NONSENSE, LC_COLLATE = "POSIX", LC_CTYPE = "POSIX");
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate ERROR:  conflicting or redundant options at character 47
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate STATEMENT:  CREATE COLLATION case_sensitive (LOCALE = '', LOCALE = "NONSENSE");
2024-09-08 14:51:54.670 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.670 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT one, two FROM atest5;
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate ERROR:  conflicting or redundant options at character 54
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate STATEMENT:  CREATE COLLATION coll_dup_chk (DETERMINISTIC = TRUE, DETERMINISTIC = NONSENSE, LOCALE = '');
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate ERROR:  conflicting or redundant options at character 47
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate STATEMENT:  CREATE COLLATION coll_dup_chk (VERSION = '1', VERSION = "NONSENSE", LOCALE = '');
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate ERROR:  conflicting or redundant options
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate DETAIL:  LOCALE cannot be specified together with LC_COLLATE or LC_CTYPE.
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate STATEMENT:  CREATE COLLATION coll_dup_chk (LC_COLLATE = "POSIX", LC_CTYPE = "POSIX", LOCALE = '');
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate ERROR:  conflicting or redundant options
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate DETAIL:  LOCALE cannot be specified together with LC_COLLATE or LC_CTYPE.
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate STATEMENT:  CREATE COLLATION coll_dup_chk (LC_COLLATE = "POSIX", LOCALE = '');
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate ERROR:  conflicting or redundant options
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate DETAIL:  LOCALE cannot be specified together with LC_COLLATE or LC_CTYPE.
2024-09-08 14:51:54.670 KST client backend[3075669] pg_regress/collate STATEMENT:  CREATE COLLATION coll_dup_chk (LC_CTYPE = "POSIX", LOCALE = '');
2024-09-08 14:51:54.671 KST client backend[3075669] pg_regress/collate ERROR:  conflicting or redundant options
2024-09-08 14:51:54.671 KST client backend[3075669] pg_regress/collate DETAIL:  FROM cannot be specified together with any other options.
2024-09-08 14:51:54.671 KST client backend[3075669] pg_regress/collate STATEMENT:  CREATE COLLATION coll_dup_chk (FROM = "C", VERSION = "1");
2024-09-08 14:51:54.671 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.671 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT one, two FROM atest5 NATURAL JOIN atest6;
2024-09-08 14:51:54.671 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.671 KST client backend[3075668] pg_regress/privileges STATEMENT:  COPY atest5 FROM stdin;
2024-09-08 14:51:54.671 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.671 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO atest5 (three) VALUES (4);
2024-09-08 14:51:54.671 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.671 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO atest5 VALUES (5,5,5);
2024-09-08 14:51:54.671 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.671 KST client backend[3075668] pg_regress/privileges STATEMENT:  UPDATE atest5 SET one = 8;
2024-09-08 14:51:54.671 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.671 KST client backend[3075668] pg_regress/privileges STATEMENT:  UPDATE atest5 SET three = 5, one = 2;
2024-09-08 14:51:54.672 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.672 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO atest5(two) VALUES (6) ON CONFLICT (two) DO UPDATE set three = 10 RETURNING atest5.three;
2024-09-08 14:51:54.672 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.672 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO atest5(two) VALUES (6) ON CONFLICT (two) DO UPDATE set three = EXCLUDED.three;
2024-09-08 14:51:54.672 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.672 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO atest5(two) VALUES (6) ON CONFLICT (two) DO UPDATE set one = 8;
2024-09-08 14:51:54.672 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.672 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO atest5(three) VALUES (4) ON CONFLICT (two) DO UPDATE set three = 10;
2024-09-08 14:51:54.672 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.672 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO atest5(four) VALUES (4);
2024-09-08 14:51:54.672 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.672 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO atest5(four) VALUES (4) ON CONFLICT (four) DO UPDATE set three = 3;
2024-09-08 14:51:54.672 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.672 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO atest5(four) VALUES (4) ON CONFLICT ON CONSTRAINT atest5_four_key DO UPDATE set three = 3;
2024-09-08 14:51:54.673 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.673 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT one FROM atest5;
2024-09-08 14:51:54.673 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.673 KST client backend[3075668] pg_regress/privileges STATEMENT:  UPDATE atest5 SET one = 1;
2024-09-08 14:51:54.675 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "b1"
2024-09-08 14:51:54.675 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO bv1 VALUES (-1, 'xxx');
2024-09-08 14:51:54.675 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "b1"
2024-09-08 14:51:54.675 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO bv1 VALUES (11, 'xxx');
2024-09-08 14:51:54.676 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table msource
2024-09-08 14:51:54.676 KST client backend[3075668] pg_regress/privileges STATEMENT:  MERGE INTO mtarget t USING msource s ON t.a = s.a
	WHEN MATCHED THEN
		UPDATE SET b = s.b
	WHEN NOT MATCHED THEN
		INSERT VALUES (a, NULL);
2024-09-08 14:51:54.676 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table msource
2024-09-08 14:51:54.676 KST client backend[3075668] pg_regress/privileges STATEMENT:  MERGE INTO mtarget t USING msource s ON t.a = s.a
	WHEN MATCHED THEN
		UPDATE SET b = 'x'
	WHEN NOT MATCHED THEN
		INSERT VALUES (a, b);
2024-09-08 14:51:54.676 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table msource
2024-09-08 14:51:54.676 KST client backend[3075668] pg_regress/privileges STATEMENT:  MERGE INTO mtarget t USING msource s ON t.a = s.a
	WHEN MATCHED AND s.b = 'x' THEN
		UPDATE SET b = 'x'
	WHEN NOT MATCHED THEN
		INSERT VALUES (a, NULL);
2024-09-08 14:51:54.676 KST client backend[3075677] pg_regress/generated ERROR:  cannot drop column b of table gtest10 because other objects depend on it
2024-09-08 14:51:54.676 KST client backend[3075677] pg_regress/generated DETAIL:  column c of table gtest10 depends on column b of table gtest10
2024-09-08 14:51:54.676 KST client backend[3075677] pg_regress/generated HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:54.676 KST client backend[3075677] pg_regress/generated STATEMENT:  ALTER TABLE gtest10 DROP COLUMN b;
2024-09-08 14:51:54.677 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "document"
2024-09-08 14:51:54.677 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO document VALUES (2, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_carol', 'my first novel')
	    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle, dauthor = EXCLUDED.dauthor;
2024-09-08 14:51:54.677 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table mtarget
2024-09-08 14:51:54.677 KST client backend[3075668] pg_regress/privileges STATEMENT:  MERGE INTO mtarget t USING msource s ON t.a = s.a
	WHEN MATCHED THEN
		UPDATE SET b = t.b
	WHEN NOT MATCHED THEN
		INSERT VALUES (a, NULL);
2024-09-08 14:51:54.677 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table mtarget
2024-09-08 14:51:54.677 KST client backend[3075668] pg_regress/privileges STATEMENT:  MERGE INTO mtarget t USING msource s ON t.a = s.a
	WHEN MATCHED THEN
		UPDATE SET b = s.b, a = t.a + 1
	WHEN NOT MATCHED THEN
		INSERT VALUES (a, b);
2024-09-08 14:51:54.677 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy (USING expression) for table "document"
2024-09-08 14:51:54.677 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO document VALUES (33, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'Some novel, replaces sci-fi') -- takes UPDATE path
	    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle;
2024-09-08 14:51:54.677 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table mtarget
2024-09-08 14:51:54.677 KST client backend[3075668] pg_regress/privileges STATEMENT:  MERGE INTO mtarget t USING msource s ON t.a = s.a
	WHEN MATCHED AND t.b IS NOT NULL THEN
		UPDATE SET b = s.b
	WHEN NOT MATCHED THEN
		INSERT VALUES (a, b);
2024-09-08 14:51:54.677 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table mtarget
2024-09-08 14:51:54.677 KST client backend[3075668] pg_regress/privileges STATEMENT:  MERGE INTO mtarget t USING msource s ON t.a = s.a
	WHEN MATCHED AND t.b IS NOT NULL THEN
		DELETE;
2024-09-08 14:51:54.678 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy (USING expression) for table "document"
2024-09-08 14:51:54.678 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO document VALUES (78, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'some technology novel')
	    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle, cid = 33 RETURNING *;
2024-09-08 14:51:54.678 KST client backend[3075679] pg_regress/identity ERROR:  column "f22" of relation "itest8" contains null values
2024-09-08 14:51:54.678 KST client backend[3075679] pg_regress/identity STATEMENT:  ALTER TABLE itest8
	  ADD COLUMN f22 int NOT NULL,
	  ALTER COLUMN f22 ADD GENERATED ALWAYS AS IDENTITY;
2024-09-08 14:51:54.678 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy (USING expression) for table "document"
2024-09-08 14:51:54.678 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO document VALUES (79, (SELECT cid from category WHERE cname = 'technology'), 1, 'regress_rls_bob', 'technology book, can only insert')
	    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle RETURNING *;
2024-09-08 14:51:54.679 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "document"
2024-09-08 14:51:54.679 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO document VALUES (79, (SELECT cid from category WHERE cname = 'technology'), 1, 'regress_rls_bob', 'technology book, can only insert')
	    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle RETURNING *;
2024-09-08 14:51:54.679 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "document"
2024-09-08 14:51:54.679 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO document VALUES (2, (SELECT cid from category WHERE cname = 'technology'), 1, 'regress_rls_bob', 'my first novel')
	    ON CONFLICT (did) DO UPDATE SET cid = EXCLUDED.cid, dtitle = EXCLUDED.dtitle RETURNING *;
2024-09-08 14:51:54.679 KST client backend[3075668] pg_regress/privileges ERROR:  duplicate key value violates unique constraint "t1_pkey"
2024-09-08 14:51:54.679 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO t1 (c1, c2) VALUES (1, 1);
2024-09-08 14:51:54.680 KST client backend[3075668] pg_regress/privileges ERROR:  duplicate key value violates unique constraint "t1_pkey"
2024-09-08 14:51:54.680 KST client backend[3075668] pg_regress/privileges STATEMENT:  UPDATE t1 SET c2 = 1;
2024-09-08 14:51:54.680 KST client backend[3075668] pg_regress/privileges ERROR:  null value in column "c1" of relation "t1" violates not-null constraint
2024-09-08 14:51:54.680 KST client backend[3075668] pg_regress/privileges DETAIL:  Failing row contains (c1, c2) = (null, null).
2024-09-08 14:51:54.680 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO t1 (c1, c2) VALUES (null, null);
2024-09-08 14:51:54.680 KST client backend[3075668] pg_regress/privileges ERROR:  null value in column "c1" of relation "t1" violates not-null constraint
2024-09-08 14:51:54.680 KST client backend[3075668] pg_regress/privileges DETAIL:  Failing row contains (c1, c3) = (null, null).
2024-09-08 14:51:54.680 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO t1 (c3) VALUES (null);
2024-09-08 14:51:54.680 KST client backend[3075668] pg_regress/privileges ERROR:  null value in column "c2" of relation "t1" violates not-null constraint
2024-09-08 14:51:54.680 KST client backend[3075668] pg_regress/privileges DETAIL:  Failing row contains (c1) = (5).
2024-09-08 14:51:54.680 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO t1 (c1) VALUES (5);
2024-09-08 14:51:54.680 KST client backend[3075668] pg_regress/privileges ERROR:  new row for relation "t1" violates check constraint "t1_c3_check"
2024-09-08 14:51:54.680 KST client backend[3075668] pg_regress/privileges DETAIL:  Failing row contains (c1, c3) = (1, 10).
2024-09-08 14:51:54.680 KST client backend[3075668] pg_regress/privileges STATEMENT:  UPDATE t1 SET c3 = 10;
2024-09-08 14:51:54.680 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "document"
2024-09-08 14:51:54.680 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO document VALUES (80, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_carol', 'my first novel')
	    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle, cid = 33;
2024-09-08 14:51:54.680 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy (USING expression) for table "document"
2024-09-08 14:51:54.680 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO document VALUES (4, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'my first novel')
	    ON CONFLICT (did) DO UPDATE SET dtitle = EXCLUDED.dtitle;
2024-09-08 14:51:54.680 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "document"
2024-09-08 14:51:54.680 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO document VALUES (1, (SELECT cid from category WHERE cname = 'novel'), 1, 'regress_rls_bob', 'my first novel')
	    ON CONFLICT (did) DO UPDATE SET dauthor = 'regress_rls_carol';
2024-09-08 14:51:54.682 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "document"
2024-09-08 14:51:54.682 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  MERGE INTO document d
	USING (SELECT 1 as sdid) s
	ON did = s.sdid
	WHEN MATCHED THEN
		UPDATE SET dnotes = dnotes || ' notes added by merge1 ', dlevel = 0;
2024-09-08 14:51:54.682 KST client backend[3075661] pg_regress/matview ERROR:  too many column names were specified
2024-09-08 14:51:54.682 KST client backend[3075661] pg_regress/matview STATEMENT:  CREATE MATERIALIZED VIEW mvtest_mv_v (ii, jj, kk) AS SELECT i, j FROM mvtest_v;
2024-09-08 14:51:54.683 KST client backend[3075675] pg_regress/rowsecurity ERROR:  target row violates row-level security policy (USING expression) for table "document"
2024-09-08 14:51:54.683 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  MERGE INTO document d
	USING (SELECT 3 as sdid) s
	ON did = s.sdid
	WHEN MATCHED THEN
		UPDATE SET dnotes = dnotes || ' notes added by merge ';
2024-09-08 14:51:54.683 KST client backend[3075675] pg_regress/rowsecurity ERROR:  target row violates row-level security policy (USING expression) for table "document"
2024-09-08 14:51:54.683 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  MERGE INTO document d
	USING (SELECT 3 as sdid) s
	ON did = s.sdid
	WHEN MATCHED THEN
		DELETE;
2024-09-08 14:51:54.683 KST client backend[3075677] pg_regress/generated ERROR:  permission denied for table gtest11s
2024-09-08 14:51:54.683 KST client backend[3075677] pg_regress/generated STATEMENT:  SELECT a, b FROM gtest11s;
2024-09-08 14:51:54.683 KST client backend[3075675] pg_regress/rowsecurity ERROR:  target row violates row-level security policy (USING expression) for table "document"
2024-09-08 14:51:54.683 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  MERGE INTO document d
	USING (SELECT 4 as sdid) s
	ON did = s.sdid
	WHEN MATCHED AND dnotes = '' THEN
		UPDATE SET dnotes = dnotes || ' notes added by merge '
	WHEN MATCHED THEN
		DELETE;
2024-09-08 14:51:54.683 KST client backend[3075677] pg_regress/generated ERROR:  permission denied for function gf1
2024-09-08 14:51:54.683 KST client backend[3075677] pg_regress/generated STATEMENT:  SELECT gf1(10);
2024-09-08 14:51:54.683 KST client backend[3075675] pg_regress/rowsecurity ERROR:  target row violates row-level security policy (USING expression) for table "document"
2024-09-08 14:51:54.683 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  MERGE INTO document d
	USING (SELECT 4 as sdid) s
	ON did = s.sdid
	WHEN MATCHED AND dnotes <> '' THEN
		UPDATE SET dnotes = dnotes || ' notes added by merge '
	WHEN MATCHED THEN
		DELETE;
2024-09-08 14:51:54.683 KST client backend[3075677] pg_regress/generated ERROR:  cannot drop function gf1(integer) because other objects depend on it
2024-09-08 14:51:54.683 KST client backend[3075677] pg_regress/generated DETAIL:  column c of table gtest12s depends on function gf1(integer)
2024-09-08 14:51:54.683 KST client backend[3075677] pg_regress/generated HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:54.683 KST client backend[3075677] pg_regress/generated STATEMENT:  DROP FUNCTION gf1(int);
2024-09-08 14:51:54.683 KST client backend[3075661] pg_regress/matview ERROR:  too many column names were specified
2024-09-08 14:51:54.683 KST client backend[3075661] pg_regress/matview STATEMENT:  CREATE MATERIALIZED VIEW mvtest_mv_v_3 (ii, jj, kk) AS SELECT i, j FROM mvtest_v WITH NO DATA;
2024-09-08 14:51:54.684 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "document"
2024-09-08 14:51:54.684 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  MERGE INTO document d
	USING (SELECT 12 as sdid) s
	ON did = s.sdid
	WHEN MATCHED THEN
		DELETE
	WHEN NOT MATCHED THEN
		INSERT VALUES (12, 11, 1, 'regress_rls_dave', 'another novel');
2024-09-08 14:51:54.684 KST client backend[3075668] pg_regress/privileges ERROR:  null value in column "b" of relation "errtst_part_1" violates not-null constraint
2024-09-08 14:51:54.684 KST client backend[3075668] pg_regress/privileges DETAIL:  Failing row contains (a, b, c) = (aaa, null, null).
2024-09-08 14:51:54.684 KST client backend[3075668] pg_regress/privileges STATEMENT:  INSERT INTO errtst (a, b) VALUES ('aaa', NULL);
2024-09-08 14:51:54.684 KST client backend[3075668] pg_regress/privileges ERROR:  null value in column "b" of relation "errtst_part_1" violates not-null constraint
2024-09-08 14:51:54.684 KST client backend[3075668] pg_regress/privileges DETAIL:  Failing row contains (a, b, c) = (aaa, null, ccc).
2024-09-08 14:51:54.684 KST client backend[3075668] pg_regress/privileges STATEMENT:  UPDATE errtst SET b = NULL;
2024-09-08 14:51:54.684 KST client backend[3075668] pg_regress/privileges ERROR:  null value in column "b" of relation "errtst_part_1" violates not-null constraint
2024-09-08 14:51:54.684 KST client backend[3075668] pg_regress/privileges DETAIL:  Failing row contains (a, b, c) = (aaa, null, ccc).
2024-09-08 14:51:54.684 KST client backend[3075668] pg_regress/privileges STATEMENT:  UPDATE errtst SET a = 'aaa', b = NULL;
2024-09-08 14:51:54.684 KST client backend[3075668] pg_regress/privileges ERROR:  null value in column "b" of relation "errtst_part_2" violates not-null constraint
2024-09-08 14:51:54.684 KST client backend[3075668] pg_regress/privileges DETAIL:  Failing row contains (a, b, c) = (aaaa, null, ccc).
2024-09-08 14:51:54.684 KST client backend[3075668] pg_regress/privileges STATEMENT:  UPDATE errtst SET a = 'aaaa', b = NULL;
2024-09-08 14:51:54.684 KST client backend[3075668] pg_regress/privileges ERROR:  null value in column "b" of relation "errtst_part_2" violates not-null constraint
2024-09-08 14:51:54.684 KST client backend[3075668] pg_regress/privileges DETAIL:  Failing row contains (a, b, c) = (aaaa, null, ccc).
2024-09-08 14:51:54.684 KST client backend[3075668] pg_regress/privileges STATEMENT:  UPDATE errtst SET a = 'aaaa', b = NULL WHERE a = 'aaa';
2024-09-08 14:51:54.685 KST client backend[3075679] pg_regress/identity ERROR:  identity columns are not supported on typed tables
2024-09-08 14:51:54.685 KST client backend[3075679] pg_regress/identity STATEMENT:  CREATE TABLE itest12 OF itest_type (f1 WITH OPTIONS GENERATED ALWAYS AS IDENTITY);
2024-09-08 14:51:54.685 KST client backend[3075675] pg_regress/rowsecurity ERROR:  duplicate key value violates unique constraint "document_pkey"
2024-09-08 14:51:54.685 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  MERGE INTO document d
	USING (SELECT 7 as sdid) s
	ON did = s.sdid
	WHEN MATCHED THEN
		UPDATE SET dnotes = dnotes || ' notes added by merge5 '
	WHEN NOT MATCHED THEN
		INSERT VALUES (12, 11, 1, 'regress_rls_bob', 'another novel');
2024-09-08 14:51:54.685 KST client backend[3075677] pg_regress/generated ERROR:  new row for relation "gtest20" violates check constraint "gtest20_b_check"
2024-09-08 14:51:54.685 KST client backend[3075677] pg_regress/generated DETAIL:  Failing row contains (30, 60).
2024-09-08 14:51:54.685 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest20 (a) VALUES (30);
2024-09-08 14:51:54.685 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "document"
2024-09-08 14:51:54.685 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  MERGE INTO document d
	USING (SELECT 1 as sdid) s
	ON did = s.sdid
	WHEN MATCHED THEN
		UPDATE SET dnotes = dnotes || ' notes added by merge6 ',
				   cid = (SELECT cid from category WHERE cname = 'technology');
2024-09-08 14:51:54.685 KST client backend[3075679] pg_regress/identity ERROR:  identity columns are not supported on partitions
2024-09-08 14:51:54.685 KST client backend[3075679] pg_regress/identity STATEMENT:  CREATE TABLE itest_child PARTITION OF itest_parent (
	    f3 WITH OPTIONS GENERATED ALWAYS AS IDENTITY
	) FOR VALUES FROM ('2016-07-01') TO ('2016-08-01');
2024-09-08 14:51:54.686 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest6
2024-09-08 14:51:54.686 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT atest6 FROM atest6;
2024-09-08 14:51:54.686 KST client backend[3075677] pg_regress/generated ERROR:  check constraint "gtest20a_b_check" of relation "gtest20a" is violated by some row
2024-09-08 14:51:54.686 KST client backend[3075677] pg_regress/generated STATEMENT:  ALTER TABLE gtest20a ADD CHECK (b < 50);
2024-09-08 14:51:54.686 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.686 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT one FROM atest5 NATURAL JOIN atest6;
2024-09-08 14:51:54.687 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest6
2024-09-08 14:51:54.687 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT * FROM atest6;
2024-09-08 14:51:54.687 KST client backend[3075679] pg_regress/identity ERROR:  conflicting NULL/NOT NULL declarations for column "id" of table "itest15" at character 63
2024-09-08 14:51:54.687 KST client backend[3075679] pg_regress/identity STATEMENT:  CREATE TABLE itest15 (id integer GENERATED ALWAYS AS IDENTITY NULL);
2024-09-08 14:51:54.687 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest6
2024-09-08 14:51:54.687 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT 1 FROM atest6;
2024-09-08 14:51:54.687 KST client backend[3075679] pg_regress/identity ERROR:  conflicting NULL/NOT NULL declarations for column "id" of table "itest15" at character 39
2024-09-08 14:51:54.687 KST client backend[3075679] pg_regress/identity STATEMENT:  CREATE TABLE itest15 (id integer NULL GENERATED ALWAYS AS IDENTITY);
2024-09-08 14:51:54.687 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atest5
2024-09-08 14:51:54.687 KST client backend[3075668] pg_regress/privileges STATEMENT:  DELETE FROM atest5 WHERE one = 1;
2024-09-08 14:51:54.687 KST client backend[3075677] pg_regress/generated ERROR:  check constraint "chk" of relation "gtest20b" is violated by some row
2024-09-08 14:51:54.687 KST client backend[3075677] pg_regress/generated STATEMENT:  ALTER TABLE gtest20b VALIDATE CONSTRAINT chk;
2024-09-08 14:51:54.689 KST client backend[3075677] pg_regress/generated ERROR:  null value in column "b" of relation "gtest21a" violates not-null constraint
2024-09-08 14:51:54.689 KST client backend[3075677] pg_regress/generated DETAIL:  Failing row contains (0, null).
2024-09-08 14:51:54.689 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest21a (a) VALUES (0);
2024-09-08 14:51:54.689 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atestc
2024-09-08 14:51:54.689 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT fy FROM atestc;
2024-09-08 14:51:54.690 KST client backend[3075677] pg_regress/generated ERROR:  null value in column "b" of relation "gtest21b" violates not-null constraint
2024-09-08 14:51:54.690 KST client backend[3075677] pg_regress/generated DETAIL:  Failing row contains (0, null).
2024-09-08 14:51:54.690 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest21b (a) VALUES (0);
2024-09-08 14:51:54.690 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atestc
2024-09-08 14:51:54.690 KST client backend[3075668] pg_regress/privileges STATEMENT:  SELECT f2 FROM atestc;
2024-09-08 14:51:54.690 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atestc
2024-09-08 14:51:54.690 KST client backend[3075668] pg_regress/privileges STATEMENT:  DELETE FROM atestc;
2024-09-08 14:51:54.690 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atestc
2024-09-08 14:51:54.690 KST client backend[3075668] pg_regress/privileges STATEMENT:  UPDATE atestc SET f1 = 1;
2024-09-08 14:51:54.691 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atestc
2024-09-08 14:51:54.691 KST client backend[3075668] pg_regress/privileges STATEMENT:  TRUNCATE atestc;
2024-09-08 14:51:54.691 KST client backend[3075668] pg_regress/privileges ERROR:  permission denied for table atestc
2024-09-08 14:51:54.691 KST client backend[3075668] pg_regress/privileges STATEMENT:  LOCK atestc;
2024-09-08 14:51:54.691 KST client backend[3075677] pg_regress/generated ERROR:  duplicate key value violates unique constraint "gtest22a_b_key"
2024-09-08 14:51:54.691 KST client backend[3075677] pg_regress/generated DETAIL:  Key (b)=(1) already exists.
2024-09-08 14:51:54.691 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest22a VALUES (3);
2024-09-08 14:51:54.691 KST client backend[3075679] pg_regress/identity ERROR:  cannot insert a non-DEFAULT value into column "a"
2024-09-08 14:51:54.691 KST client backend[3075679] pg_regress/identity DETAIL:  Column "a" is an identity column defined as GENERATED ALWAYS.
2024-09-08 14:51:54.691 KST client backend[3075679] pg_regress/identity HINT:  Use OVERRIDING SYSTEM VALUE to override.
2024-09-08 14:51:54.691 KST client backend[3075679] pg_regress/identity STATEMENT:  MERGE INTO itest15 t
	USING (SELECT 10 AS s_a, 'inserted by merge' AS s_b) s
	ON t.a = s.s_a
	WHEN NOT MATCHED THEN
		INSERT (a, b) VALUES (s.s_a, s.s_b);
2024-09-08 14:51:54.692 KST client backend[3075677] pg_regress/generated ERROR:  duplicate key value violates unique constraint "gtest22b_pkey"
2024-09-08 14:51:54.692 KST client backend[3075677] pg_regress/generated DETAIL:  Key (a, b)=(2, 1) already exists.
2024-09-08 14:51:54.692 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest22b VALUES (2);
2024-09-08 14:51:54.693 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for view rls_view
2024-09-08 14:51:54.693 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  SELECT * FROM rls_view;
2024-09-08 14:51:54.693 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for view rls_view
2024-09-08 14:51:54.693 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  EXPLAIN (COSTS OFF) SELECT * FROM rls_view;
2024-09-08 14:51:54.694 KST client backend[3075672] pg_regress/groupingsets LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075672.6", size 1720320
2024-09-08 14:51:54.694 KST client backend[3075672] pg_regress/groupingsets STATEMENT:  create table gs_hash_1 as
	select g100, g10, sum(g::numeric), count(*), max(g::text)
	from gs_data_1 group by cube (g1000, g100,g10);
2024-09-08 14:51:54.695 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table z1_blacklist
2024-09-08 14:51:54.695 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  SELECT * FROM rls_view;
2024-09-08 14:51:54.695 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table z1_blacklist
2024-09-08 14:51:54.695 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  EXPLAIN (COSTS OFF) SELECT * FROM rls_view;
2024-09-08 14:51:54.695 KST client backend[3075684] pg_regress/privileges ERROR:  language "c" is not trusted
2024-09-08 14:51:54.695 KST client backend[3075684] pg_regress/privileges DETAIL:  GRANT and REVOKE are not allowed on untrusted languages, because only superusers can use untrusted languages.
2024-09-08 14:51:54.695 KST client backend[3075684] pg_regress/privileges STATEMENT:  GRANT USAGE ON LANGUAGE c TO PUBLIC;
2024-09-08 14:51:54.695 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table z1_blacklist
2024-09-08 14:51:54.695 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  SELECT * FROM rls_view;
2024-09-08 14:51:54.695 KST client backend[3075684] pg_regress/privileges WARNING:  no privileges were granted for "sql"
2024-09-08 14:51:54.695 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table z1_blacklist
2024-09-08 14:51:54.695 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  EXPLAIN (COSTS OFF) SELECT * FROM rls_view;
2024-09-08 14:51:54.708 KST client backend[3075661] pg_regress/matview ERROR:  division by zero
2024-09-08 14:51:54.708 KST client backend[3075661] pg_regress/matview STATEMENT:  create materialized view mvtest_error as select 1/0 as x;
2024-09-08 14:51:54.708 KST client backend[3075684] pg_regress/privileges ERROR:  priv_testproc1(integer) is not a function
2024-09-08 14:51:54.708 KST client backend[3075684] pg_regress/privileges STATEMENT:  REVOKE ALL ON FUNCTION priv_testproc1(int) FROM PUBLIC;
2024-09-08 14:51:54.708 KST client backend[3075684] pg_regress/privileges ERROR:  invalid privilege type USAGE for function
2024-09-08 14:51:54.708 KST client backend[3075684] pg_regress/privileges STATEMENT:  GRANT USAGE ON FUNCTION priv_testfunc1(int) TO regress_priv_user3;
2024-09-08 14:51:54.708 KST client backend[3075684] pg_regress/privileges ERROR:  invalid privilege type USAGE for function
2024-09-08 14:51:54.708 KST client backend[3075684] pg_regress/privileges STATEMENT:  GRANT USAGE ON FUNCTION priv_testagg1(int) TO regress_priv_user3;
2024-09-08 14:51:54.708 KST client backend[3075684] pg_regress/privileges ERROR:  invalid privilege type USAGE for procedure
2024-09-08 14:51:54.708 KST client backend[3075684] pg_regress/privileges STATEMENT:  GRANT USAGE ON PROCEDURE priv_testproc1(int) TO regress_priv_user3;
2024-09-08 14:51:54.708 KST client backend[3075684] pg_regress/privileges ERROR:  function priv_testfunc_nosuch(integer) does not exist
2024-09-08 14:51:54.708 KST client backend[3075684] pg_regress/privileges STATEMENT:  GRANT ALL PRIVILEGES ON FUNCTION priv_testfunc_nosuch(int) TO regress_priv_user4;
2024-09-08 14:51:54.708 KST client backend[3075661] pg_regress/matview ERROR:  division by zero
2024-09-08 14:51:54.708 KST client backend[3075661] pg_regress/matview STATEMENT:  refresh materialized view mvtest_error;
2024-09-08 14:51:54.709 KST client backend[3075684] pg_regress/privileges ERROR:  permission denied for language sql
2024-09-08 14:51:54.709 KST client backend[3075684] pg_regress/privileges STATEMENT:  CREATE FUNCTION priv_testfunc3(int) RETURNS int AS 'select 2 * $1;' LANGUAGE sql;
2024-09-08 14:51:54.709 KST client backend[3075684] pg_regress/privileges ERROR:  permission denied for function priv_testfunc1
2024-09-08 14:51:54.709 KST client backend[3075684] pg_regress/privileges STATEMENT:  SELECT priv_testfunc1(5);
2024-09-08 14:51:54.709 KST client backend[3075684] pg_regress/privileges ERROR:  permission denied for aggregate priv_testagg1
2024-09-08 14:51:54.709 KST client backend[3075684] pg_regress/privileges STATEMENT:  SELECT priv_testagg1(x) FROM (VALUES (1), (2), (3)) _(x);
2024-09-08 14:51:54.709 KST client backend[3075684] pg_regress/privileges ERROR:  permission denied for procedure priv_testproc1
2024-09-08 14:51:54.709 KST client backend[3075684] pg_regress/privileges STATEMENT:  CALL priv_testproc1(6);
2024-09-08 14:51:54.709 KST client backend[3075684] pg_regress/privileges ERROR:  permission denied for table atest2
2024-09-08 14:51:54.709 KST client backend[3075684] pg_regress/privileges STATEMENT:  SELECT col1 FROM atest2 WHERE col2 = true;
2024-09-08 14:51:54.709 KST client backend[3075677] pg_regress/generated ERROR:  invalid ON UPDATE action for foreign key constraint containing generated column
2024-09-08 14:51:54.709 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest23x (a int PRIMARY KEY, b int GENERATED ALWAYS AS (a * 2) STORED REFERENCES gtest23a (x) ON UPDATE CASCADE);
2024-09-08 14:51:54.710 KST client backend[3075684] pg_regress/privileges ERROR:  must be owner of function priv_testfunc1
2024-09-08 14:51:54.710 KST client backend[3075684] pg_regress/privileges STATEMENT:  DROP FUNCTION priv_testfunc1(int);
2024-09-08 14:51:54.710 KST client backend[3075684] pg_regress/privileges ERROR:  must be owner of aggregate priv_testagg1
2024-09-08 14:51:54.710 KST client backend[3075684] pg_regress/privileges STATEMENT:  DROP AGGREGATE priv_testagg1(int);
2024-09-08 14:51:54.710 KST client backend[3075684] pg_regress/privileges ERROR:  must be owner of procedure priv_testproc1
2024-09-08 14:51:54.710 KST client backend[3075684] pg_regress/privileges STATEMENT:  DROP PROCEDURE priv_testproc1(int);
2024-09-08 14:51:54.710 KST client backend[3075677] pg_regress/generated ERROR:  invalid ON DELETE action for foreign key constraint containing generated column
2024-09-08 14:51:54.710 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest23x (a int PRIMARY KEY, b int GENERATED ALWAYS AS (a * 2) STORED REFERENCES gtest23a (x) ON DELETE SET NULL);
2024-09-08 14:51:54.712 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table z1_blacklist
2024-09-08 14:51:54.712 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  SELECT * FROM rls_view;
2024-09-08 14:51:54.712 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table z1_blacklist
2024-09-08 14:51:54.712 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  EXPLAIN (COSTS OFF) SELECT * FROM rls_view;
2024-09-08 14:51:54.712 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table z1_blacklist
2024-09-08 14:51:54.712 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  SELECT * FROM rls_view;
2024-09-08 14:51:54.712 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table z1_blacklist
2024-09-08 14:51:54.712 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  EXPLAIN (COSTS OFF) SELECT * FROM rls_view;
2024-09-08 14:51:54.712 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table z1_blacklist
2024-09-08 14:51:54.712 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  SELECT * FROM rls_view;
2024-09-08 14:51:54.712 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table z1_blacklist
2024-09-08 14:51:54.712 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  EXPLAIN (COSTS OFF) SELECT * FROM rls_view;
2024-09-08 14:51:54.713 KST client backend[3075661] pg_regress/matview ERROR:  relation "mvtest_mv_foo" already exists
2024-09-08 14:51:54.713 KST client backend[3075661] pg_regress/matview STATEMENT:  CREATE MATERIALIZED VIEW mvtest_mv_foo AS SELECT * FROM mvtest_foo_data;
2024-09-08 14:51:54.714 KST client backend[3075685] pg_regress/privileges ERROR:  permission denied for function int8
2024-09-08 14:51:54.714 KST client backend[3075685] pg_regress/privileges STATEMENT:  SELECT '{1}'::int4[]::int8[];
2024-09-08 14:51:54.715 KST client backend[3075677] pg_regress/generated ERROR:  insert or update on table "gtest23b" violates foreign key constraint "gtest23b_b_fkey"
2024-09-08 14:51:54.715 KST client backend[3075677] pg_regress/generated DETAIL:  Key (b)=(10) is not present in table "gtest23a".
2024-09-08 14:51:54.715 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest23b VALUES (5);
2024-09-08 14:51:54.718 KST client backend[3075675] pg_regress/rowsecurity ERROR:  policy "p1" for table "y1" already exists
2024-09-08 14:51:54.718 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  CREATE POLICY p1 ON y1 FOR SELECT USING (a % 2 = 1);
2024-09-08 14:51:54.719 KST client backend[3075677] pg_regress/generated ERROR:  insert or update on table "gtest23q" violates foreign key constraint "gtest23q_b_fkey"
2024-09-08 14:51:54.719 KST client backend[3075677] pg_regress/generated DETAIL:  Key (b)=(5) is not present in table "gtest23p".
2024-09-08 14:51:54.719 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest23q VALUES (2, 5);
2024-09-08 14:51:54.719 KST client backend[3075686] pg_regress/privileges ERROR:  cannot set privileges of array types
2024-09-08 14:51:54.719 KST client backend[3075686] pg_regress/privileges HINT:  Set the privileges of the element type instead.
2024-09-08 14:51:54.719 KST client backend[3075686] pg_regress/privileges STATEMENT:  GRANT USAGE ON TYPE _priv_testtype1 TO regress_priv_user2;
2024-09-08 14:51:54.719 KST client backend[3075686] pg_regress/privileges ERROR:  "priv_testtype1" is not a domain
2024-09-08 14:51:54.719 KST client backend[3075686] pg_regress/privileges STATEMENT:  GRANT USAGE ON DOMAIN priv_testtype1 TO regress_priv_user2;
2024-09-08 14:51:54.720 KST client backend[3075686] pg_regress/privileges ERROR:  permission denied for type priv_testdomain1
2024-09-08 14:51:54.720 KST client backend[3075686] pg_regress/privileges STATEMENT:  CREATE AGGREGATE priv_testagg1a(priv_testdomain1) (sfunc = int4_sum, stype = bigint);
2024-09-08 14:51:54.720 KST client backend[3075686] pg_regress/privileges ERROR:  permission denied for type priv_testdomain1
2024-09-08 14:51:54.720 KST client backend[3075686] pg_regress/privileges STATEMENT:  CREATE DOMAIN priv_testdomain2a AS priv_testdomain1;
2024-09-08 14:51:54.720 KST client backend[3075677] pg_regress/generated ERROR:  value for domain gtestdomain1 violates check constraint "gtestdomain1_check"
2024-09-08 14:51:54.720 KST client backend[3075677] pg_regress/generated STATEMENT:  INSERT INTO gtest24 (a) VALUES (6);
2024-09-08 14:51:54.720 KST client backend[3075686] pg_regress/privileges ERROR:  permission denied for type priv_testdomain1
2024-09-08 14:51:54.720 KST client backend[3075686] pg_regress/privileges STATEMENT:  CREATE CAST (priv_testdomain1 AS priv_testdomain3a) WITH FUNCTION castfunc(int);
2024-09-08 14:51:54.721 KST client backend[3075677] pg_regress/generated ERROR:  generated columns are not supported on typed tables
2024-09-08 14:51:54.721 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest28 OF gtest_type (f1 WITH OPTIONS GENERATED ALWAYS AS (f2 *2) STORED);
2024-09-08 14:51:54.721 KST client backend[3075686] pg_regress/privileges ERROR:  permission denied for type priv_testdomain1
2024-09-08 14:51:54.721 KST client backend[3075686] pg_regress/privileges STATEMENT:  CREATE FUNCTION priv_testfunc5a(a priv_testdomain1) RETURNS int LANGUAGE SQL AS $$ SELECT $1 $$;
2024-09-08 14:51:54.721 KST client backend[3075686] pg_regress/privileges ERROR:  permission denied for type priv_testdomain1
2024-09-08 14:51:54.721 KST client backend[3075686] pg_regress/privileges STATEMENT:  CREATE FUNCTION priv_testfunc6a(b int) RETURNS priv_testdomain1 LANGUAGE SQL AS $$ SELECT $1::priv_testdomain1 $$;
2024-09-08 14:51:54.721 KST client backend[3075686] pg_regress/privileges ERROR:  permission denied for type priv_testdomain1
2024-09-08 14:51:54.721 KST client backend[3075686] pg_regress/privileges STATEMENT:  CREATE OPERATOR !+! (PROCEDURE = int4pl, LEFTARG = priv_testdomain1, RIGHTARG = priv_testdomain1);
2024-09-08 14:51:54.721 KST client backend[3075686] pg_regress/privileges ERROR:  permission denied for type priv_testdomain1
2024-09-08 14:51:54.721 KST client backend[3075686] pg_regress/privileges STATEMENT:  CREATE TABLE test5a (a int, b priv_testdomain1);
2024-09-08 14:51:54.721 KST client backend[3075686] pg_regress/privileges ERROR:  permission denied for type priv_testtype1
2024-09-08 14:51:54.721 KST client backend[3075686] pg_regress/privileges STATEMENT:  CREATE TABLE test6a OF priv_testtype1;
2024-09-08 14:51:54.721 KST client backend[3075686] pg_regress/privileges ERROR:  permission denied for type priv_testtype1
2024-09-08 14:51:54.721 KST client backend[3075686] pg_regress/privileges STATEMENT:  CREATE TABLE test10a (a int[], b priv_testtype1[]);
2024-09-08 14:51:54.721 KST client backend[3075677] pg_regress/generated ERROR:  child column "f3" specifies generation expression
2024-09-08 14:51:54.721 KST client backend[3075677] pg_regress/generated HINT:  A child table column cannot be generated unless its parent column is.
2024-09-08 14:51:54.721 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_child PARTITION OF gtest_parent (
	    f3 WITH OPTIONS GENERATED ALWAYS AS (f2 * 2) STORED
	) FOR VALUES FROM ('2016-07-01') TO ('2016-08-01');
2024-09-08 14:51:54.722 KST client backend[3075686] pg_regress/privileges ERROR:  permission denied for type priv_testdomain1
2024-09-08 14:51:54.722 KST client backend[3075686] pg_regress/privileges STATEMENT:  ALTER TABLE test9a ADD COLUMN c priv_testdomain1;
2024-09-08 14:51:54.722 KST client backend[3075686] pg_regress/privileges ERROR:  permission denied for type priv_testdomain1
2024-09-08 14:51:54.722 KST client backend[3075686] pg_regress/privileges STATEMENT:  ALTER TABLE test9a ALTER COLUMN b TYPE priv_testdomain1;
2024-09-08 14:51:54.722 KST client backend[3075677] pg_regress/generated ERROR:  column "f3" in child table must not be a generated column
2024-09-08 14:51:54.722 KST client backend[3075677] pg_regress/generated STATEMENT:  ALTER TABLE gtest_parent ATTACH PARTITION gtest_child FOR VALUES FROM ('2016-07-01') TO ('2016-08-01');
2024-09-08 14:51:54.722 KST client backend[3075686] pg_regress/privileges ERROR:  permission denied for type priv_testdomain1
2024-09-08 14:51:54.722 KST client backend[3075686] pg_regress/privileges STATEMENT:  CREATE TYPE test7a AS (a int, b priv_testdomain1);
2024-09-08 14:51:54.723 KST client backend[3075686] pg_regress/privileges ERROR:  permission denied for type priv_testdomain1
2024-09-08 14:51:54.723 KST client backend[3075686] pg_regress/privileges STATEMENT:  ALTER TYPE test8a ADD ATTRIBUTE c priv_testdomain1;
2024-09-08 14:51:54.723 KST client backend[3075686] pg_regress/privileges ERROR:  permission denied for type priv_testdomain1
2024-09-08 14:51:54.723 KST client backend[3075686] pg_regress/privileges STATEMENT:  ALTER TYPE test8a ALTER ATTRIBUTE b TYPE priv_testdomain1;
2024-09-08 14:51:54.723 KST client backend[3075686] pg_regress/privileges ERROR:  permission denied for type priv_testdomain1
2024-09-08 14:51:54.723 KST client backend[3075686] pg_regress/privileges STATEMENT:  CREATE TABLE test11a AS (SELECT 1::priv_testdomain1 AS a);
2024-09-08 14:51:54.723 KST client backend[3075686] pg_regress/privileges ERROR:  permission denied for type priv_testtype1
2024-09-08 14:51:54.723 KST client backend[3075686] pg_regress/privileges STATEMENT:  REVOKE ALL ON TYPE priv_testtype1 FROM PUBLIC;
2024-09-08 14:51:54.724 KST client backend[3075677] pg_regress/generated ERROR:  column "f3" inherits from generated column but specifies default
2024-09-08 14:51:54.724 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_child3 PARTITION OF gtest_parent (
	    f3 DEFAULT 42  -- error
	) FOR VALUES FROM ('2016-09-01') TO ('2016-10-01');
2024-09-08 14:51:54.724 KST client backend[3075686] pg_regress/privileges WARNING:  cast will be ignored because the source data type is a domain
2024-09-08 14:51:54.724 KST client backend[3075661] pg_regress/matview ERROR:  could not find suitable unique index on materialized view
2024-09-08 14:51:54.724 KST client backend[3075661] pg_regress/matview STATEMENT:  REFRESH MATERIALIZED VIEW CONCURRENTLY drop_idx_matview;
2024-09-08 14:51:54.724 KST client backend[3075677] pg_regress/generated ERROR:  identity columns are not supported on partitions
2024-09-08 14:51:54.724 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_child3 PARTITION OF gtest_parent (
	    f3 WITH OPTIONS GENERATED ALWAYS AS IDENTITY  -- error
	) FOR VALUES FROM ('2016-09-01') TO ('2016-10-01');
2024-09-08 14:51:54.724 KST client backend[3075677] pg_regress/generated ERROR:  column "f3" in child table must be a generated column
2024-09-08 14:51:54.724 KST client backend[3075677] pg_regress/generated STATEMENT:  ALTER TABLE gtest_parent ATTACH PARTITION gtest_child3 FOR VALUES FROM ('2016-09-01') TO ('2016-10-01');
2024-09-08 14:51:54.725 KST client backend[3075677] pg_regress/generated ERROR:  column "f3" in child table must be a generated column
2024-09-08 14:51:54.725 KST client backend[3075677] pg_regress/generated STATEMENT:  ALTER TABLE gtest_parent ATTACH PARTITION gtest_child3 FOR VALUES FROM ('2016-09-01') TO ('2016-10-01');
2024-09-08 14:51:54.726 KST client backend[3075661] pg_regress/matview ERROR:  materialized view "mvtest2" has not been populated
2024-09-08 14:51:54.726 KST client backend[3075661] pg_regress/matview HINT:  Use the REFRESH MATERIALIZED VIEW command.
2024-09-08 14:51:54.726 KST client backend[3075661] pg_regress/matview STATEMENT:  SELECT * FROM mvtest2;
2024-09-08 14:51:54.726 KST client backend[3075677] pg_regress/generated ERROR:  column "f3" in child table must be a generated column
2024-09-08 14:51:54.726 KST client backend[3075677] pg_regress/generated STATEMENT:  ALTER TABLE gtest_parent ATTACH PARTITION gtest_child3 FOR VALUES FROM ('2016-09-01') TO ('2016-10-01');
2024-09-08 14:51:54.730 KST client backend[3075686] pg_regress/privileges WARNING:  no privileges could be revoked for "priv_testtype1"
2024-09-08 14:51:54.731 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "t1"
2024-09-08 14:51:54.731 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  WITH cte1 AS (UPDATE t1 SET a = a + 1 RETURNING *) SELECT * FROM cte1;
2024-09-08 14:51:54.731 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "t1"
2024-09-08 14:51:54.731 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  WITH cte1 AS (INSERT INTO t1 VALUES (21, 'Fail') RETURNING *) SELECT * FROM cte1;
2024-09-08 14:51:54.732 KST client backend[3075661] pg_regress/matview ERROR:  relation "matview_ine_tab" already exists
2024-09-08 14:51:54.732 KST client backend[3075661] pg_regress/matview STATEMENT:  CREATE MATERIALIZED VIEW matview_ine_tab AS SELECT 1 / 0;
2024-09-08 14:51:54.732 KST client backend[3075675] pg_regress/rowsecurity ERROR:  policy "p1" for table "t1" already exists
2024-09-08 14:51:54.732 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  ALTER POLICY p1 ON t1 RENAME TO p1;
2024-09-08 14:51:54.732 KST client backend[3075661] pg_regress/matview ERROR:  relation "matview_ine_tab" already exists
2024-09-08 14:51:54.732 KST client backend[3075661] pg_regress/matview STATEMENT:  CREATE MATERIALIZED VIEW matview_ine_tab AS
	  SELECT 1 / 0 WITH NO DATA;
2024-09-08 14:51:54.732 KST client backend[3075661] pg_regress/matview ERROR:  relation "matview_ine_tab" already exists
2024-09-08 14:51:54.732 KST client backend[3075661] pg_regress/matview STATEMENT:  EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
	  CREATE MATERIALIZED VIEW matview_ine_tab AS
	    SELECT 1 / 0;
2024-09-08 14:51:54.732 KST client backend[3075661] pg_regress/matview ERROR:  relation "matview_ine_tab" already exists
2024-09-08 14:51:54.732 KST client backend[3075661] pg_regress/matview STATEMENT:  EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
	  CREATE MATERIALIZED VIEW matview_ine_tab AS
	    SELECT 1 / 0 WITH NO DATA;
2024-09-08 14:51:54.736 KST client backend[3075677] pg_regress/generated ERROR:  cannot use generated column in partition key at character 126
2024-09-08 14:51:54.736 KST client backend[3075677] pg_regress/generated DETAIL:  Column "f3" is a generated column.
2024-09-08 14:51:54.736 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_part_key (f1 date NOT NULL, f2 bigint, f3 bigint GENERATED ALWAYS AS (f2 * 2) STORED) PARTITION BY RANGE (f3);
2024-09-08 14:51:54.736 KST client backend[3075677] pg_regress/generated ERROR:  cannot use generated column in partition key at character 126
2024-09-08 14:51:54.736 KST client backend[3075677] pg_regress/generated DETAIL:  Column "f3" is a generated column.
2024-09-08 14:51:54.736 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TABLE gtest_part_key (f1 date NOT NULL, f2 bigint, f3 bigint GENERATED ALWAYS AS (f2 * 2) STORED) PARTITION BY RANGE ((f3 * 3));
2024-09-08 14:51:54.737 KST client backend[3075691] pg_regress/privileges ERROR:  permission denied for table atest3
2024-09-08 14:51:54.737 KST client backend[3075691] pg_regress/privileges STATEMENT:  TRUNCATE atest3;
2024-09-08 14:51:54.737 KST client backend[3075691] pg_regress/privileges ERROR:  relation "pg_shad" does not exist
2024-09-08 14:51:54.737 KST client backend[3075691] pg_regress/privileges STATEMENT:  select has_table_privilege('pg_shad','select');
2024-09-08 14:51:54.737 KST client backend[3075691] pg_regress/privileges ERROR:  role "nosuchuser" does not exist
2024-09-08 14:51:54.737 KST client backend[3075691] pg_regress/privileges STATEMENT:  select has_table_privilege('nosuchuser','pg_authid','select');
2024-09-08 14:51:54.737 KST client backend[3075691] pg_regress/privileges ERROR:  unrecognized privilege type: "sel"
2024-09-08 14:51:54.737 KST client backend[3075691] pg_regress/privileges STATEMENT:  select has_table_privilege('pg_authid','sel');
2024-09-08 14:51:54.738 KST client backend[3075677] pg_regress/generated ERROR:  cannot use generated column "b" in column generation expression
2024-09-08 14:51:54.738 KST client backend[3075677] pg_regress/generated DETAIL:  A generated column cannot reference another generated column.
2024-09-08 14:51:54.738 KST client backend[3075677] pg_regress/generated STATEMENT:  ALTER TABLE gtest25 ADD COLUMN x int GENERATED ALWAYS AS (b * 4) STORED;
2024-09-08 14:51:54.738 KST client backend[3075677] pg_regress/generated ERROR:  column "z" does not exist
2024-09-08 14:51:54.738 KST client backend[3075677] pg_regress/generated STATEMENT:  ALTER TABLE gtest25 ADD COLUMN x int GENERATED ALWAYS AS (z * 4) STORED;
2024-09-08 14:51:54.740 KST client backend[3075675] pg_regress/rowsecurity ERROR:  table "copy_t" does not exist
2024-09-08 14:51:54.740 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  DROP TABLE copy_t CASCADE;
2024-09-08 14:51:54.741 KST client backend[3075675] pg_regress/rowsecurity ERROR:  query would be affected by row-level security policy for table "copy_t"
2024-09-08 14:51:54.741 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ',';
2024-09-08 14:51:54.741 KST client backend[3075675] pg_regress/rowsecurity ERROR:  query would be affected by row-level security policy for table "copy_t"
2024-09-08 14:51:54.741 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ',';
2024-09-08 14:51:54.741 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table copy_t
2024-09-08 14:51:54.741 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  COPY (SELECT * FROM copy_t ORDER BY a ASC) TO STDOUT WITH DELIMITER ',';
2024-09-08 14:51:54.743 KST client backend[3075675] pg_regress/rowsecurity ERROR:  query would be affected by row-level security policy for table "copy_rel_to"
2024-09-08 14:51:54.743 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  COPY copy_rel_to TO STDOUT WITH DELIMITER ',';
2024-09-08 14:51:54.743 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table copy_rel_to
2024-09-08 14:51:54.743 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  COPY copy_rel_to TO STDOUT WITH DELIMITER ',';
2024-09-08 14:51:54.743 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table copy_rel_to
2024-09-08 14:51:54.743 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  COPY copy_rel_to TO STDOUT WITH DELIMITER ',';
2024-09-08 14:51:54.744 KST client backend[3075675] pg_regress/rowsecurity ERROR:  query would be affected by row-level security policy for table "copy_rel_to"
2024-09-08 14:51:54.744 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  COPY copy_rel_to TO STDOUT WITH DELIMITER ',';
2024-09-08 14:51:54.745 KST client backend[3075677] pg_regress/generated ERROR:  cannot alter type of a column used by a generated column
2024-09-08 14:51:54.745 KST client backend[3075677] pg_regress/generated DETAIL:  Column "a" is used by generated column "x".
2024-09-08 14:51:54.745 KST client backend[3075677] pg_regress/generated STATEMENT:  ALTER TABLE gtest27 ALTER COLUMN a TYPE text;
2024-09-08 14:51:54.745 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table copy_rel_to
2024-09-08 14:51:54.745 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  COPY copy_rel_to TO STDOUT WITH DELIMITER ',';
2024-09-08 14:51:54.745 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table copy_rel_to
2024-09-08 14:51:54.745 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  COPY copy_rel_to TO STDOUT WITH DELIMITER ',';
2024-09-08 14:51:54.745 KST client backend[3075675] pg_regress/rowsecurity ERROR:  query would be affected by row-level security policy for table "copy_t"
2024-09-08 14:51:54.745 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  COPY copy_t FROM STDIN;
2024-09-08 14:51:54.745 KST client backend[3075675] pg_regress/rowsecurity ERROR:  COPY FROM not supported with row-level security
2024-09-08 14:51:54.745 KST client backend[3075675] pg_regress/rowsecurity HINT:  Use INSERT statements instead.
2024-09-08 14:51:54.745 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  COPY copy_t FROM STDIN;
2024-09-08 14:51:54.745 KST client backend[3075692] pg_regress/privileges ERROR:  column "nosuchcol" of relation "pg_authid" does not exist
2024-09-08 14:51:54.745 KST client backend[3075692] pg_regress/privileges STATEMENT:  select has_column_privilege('pg_authid','nosuchcol','select');
2024-09-08 14:51:54.745 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table copy_t
2024-09-08 14:51:54.745 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  COPY copy_t FROM STDIN;
2024-09-08 14:51:54.745 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table copy_t
2024-09-08 14:51:54.745 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  COPY copy_t FROM STDIN;
2024-09-08 14:51:54.747 KST client backend[3075692] pg_regress/privileges ERROR:  column "f2" of relation "mytable" does not exist
2024-09-08 14:51:54.747 KST client backend[3075692] pg_regress/privileges STATEMENT:  select has_column_privilege('mytable','f2','select');
2024-09-08 14:51:54.749 KST client backend[3075692] pg_regress/privileges WARNING:  no privileges were granted for "atest4"
2024-09-08 14:51:54.749 KST client backend[3075677] pg_regress/generated ERROR:  generation expression for column "x" cannot be cast automatically to type boolean
2024-09-08 14:51:54.749 KST client backend[3075677] pg_regress/generated STATEMENT:  ALTER TABLE gtest27 ALTER COLUMN x TYPE boolean USING x <> 0;
2024-09-08 14:51:54.749 KST client backend[3075677] pg_regress/generated ERROR:  column "x" of relation "gtest27" is a generated column
2024-09-08 14:51:54.749 KST client backend[3075677] pg_regress/generated HINT:  Use ALTER TABLE ... ALTER COLUMN ... DROP EXPRESSION instead.
2024-09-08 14:51:54.749 KST client backend[3075677] pg_regress/generated STATEMENT:  ALTER TABLE gtest27 ALTER COLUMN x DROP DEFAULT;
2024-09-08 14:51:54.749 KST client backend[3075692] pg_regress/privileges ERROR:  dependent privileges exist
2024-09-08 14:51:54.749 KST client backend[3075692] pg_regress/privileges HINT:  Use CASCADE to revoke them too.
2024-09-08 14:51:54.749 KST client backend[3075692] pg_regress/privileges STATEMENT:  REVOKE SELECT ON atest4 FROM regress_priv_user2;
2024-09-08 14:51:54.752 KST client backend[3075677] pg_regress/generated ERROR:  cannot alter type of a column used by a generated column
2024-09-08 14:51:54.752 KST client backend[3075677] pg_regress/generated DETAIL:  Column "a" is used by generated column "x".
2024-09-08 14:51:54.752 KST client backend[3075677] pg_regress/generated STATEMENT:  ALTER TABLE gtest27
	  ALTER COLUMN a TYPE float8,
	  ALTER COLUMN b TYPE float8;
2024-09-08 14:51:54.754 KST client backend[3075675] pg_regress/rowsecurity ERROR:  role "regress_rls_eve" cannot be dropped because some objects depend on it
2024-09-08 14:51:54.754 KST client backend[3075675] pg_regress/rowsecurity DETAIL:  privileges for table tbl1
	target of policy p on table tbl1
2024-09-08 14:51:54.754 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  DROP ROLE regress_rls_eve;
2024-09-08 14:51:54.754 KST client backend[3075675] pg_regress/rowsecurity ERROR:  role "regress_rls_eve" cannot be dropped because some objects depend on it
2024-09-08 14:51:54.754 KST client backend[3075675] pg_regress/rowsecurity DETAIL:  privileges for table tbl1
2024-09-08 14:51:54.754 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  DROP ROLE regress_rls_eve;
2024-09-08 14:51:54.754 KST client backend[3075675] pg_regress/rowsecurity ERROR:  role "regress_rls_frank" cannot be dropped because some objects depend on it
2024-09-08 14:51:54.754 KST client backend[3075675] pg_regress/rowsecurity DETAIL:  target of policy p on table tbl1
2024-09-08 14:51:54.754 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  DROP ROLE regress_rls_frank;
2024-09-08 14:51:54.755 KST client backend[3075677] pg_regress/generated ERROR:  column "a" of relation "gtest29" is not a stored generated column
2024-09-08 14:51:54.755 KST client backend[3075677] pg_regress/generated STATEMENT:  ALTER TABLE gtest29 ALTER COLUMN a DROP EXPRESSION;
2024-09-08 14:51:54.755 KST client backend[3075675] pg_regress/rowsecurity ERROR:  aggregate functions are not allowed in policy expressions
2024-09-08 14:51:54.755 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  CREATE POLICY p ON t USING (max(c));
2024-09-08 14:51:54.757 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "r2"
2024-09-08 14:51:54.757 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO r2 VALUES (2);
2024-09-08 14:51:54.758 KST client backend[3075649] pg_regress/brin ERROR:  "brintest" is not an index
2024-09-08 14:51:54.758 KST client backend[3075649] pg_regress/brin STATEMENT:  SELECT brin_summarize_new_values('brintest');
2024-09-08 14:51:54.758 KST client backend[3075649] pg_regress/brin ERROR:  "tenk1_unique1" is not a BRIN index
2024-09-08 14:51:54.758 KST client backend[3075649] pg_regress/brin STATEMENT:  SELECT brin_summarize_new_values('tenk1_unique1');
2024-09-08 14:51:54.758 KST client backend[3075649] pg_regress/brin ERROR:  block number out of range: -1
2024-09-08 14:51:54.758 KST client backend[3075649] pg_regress/brin STATEMENT:  SELECT brin_desummarize_range('brinidx', -1);
2024-09-08 14:51:54.759 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "r1"
2024-09-08 14:51:54.759 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO r1 VALUES (1);
2024-09-08 14:51:54.760 KST client backend[3075675] pg_regress/rowsecurity ERROR:  query would be affected by row-level security policy for table "r1"
2024-09-08 14:51:54.760 KST client backend[3075675] pg_regress/rowsecurity HINT:  To disable the policy for the table's owner, use ALTER TABLE NO FORCE ROW LEVEL SECURITY.
2024-09-08 14:51:54.760 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  TABLE r1;
2024-09-08 14:51:54.760 KST client backend[3075675] pg_regress/rowsecurity ERROR:  query would be affected by row-level security policy for table "r1"
2024-09-08 14:51:54.760 KST client backend[3075675] pg_regress/rowsecurity HINT:  To disable the policy for the table's owner, use ALTER TABLE NO FORCE ROW LEVEL SECURITY.
2024-09-08 14:51:54.760 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  UPDATE r1 SET a = 1;
2024-09-08 14:51:54.760 KST client backend[3075675] pg_regress/rowsecurity ERROR:  query would be affected by row-level security policy for table "r1"
2024-09-08 14:51:54.760 KST client backend[3075675] pg_regress/rowsecurity HINT:  To disable the policy for the table's owner, use ALTER TABLE NO FORCE ROW LEVEL SECURITY.
2024-09-08 14:51:54.760 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  DELETE FROM r1;
2024-09-08 14:51:54.760 KST client backend[3075649] pg_regress/brin ERROR:  block number out of range: -1
2024-09-08 14:51:54.760 KST client backend[3075649] pg_regress/brin STATEMENT:  SELECT brin_summarize_range('brin_summarize_idx', -1);
2024-09-08 14:51:54.760 KST client backend[3075649] pg_regress/brin ERROR:  block number out of range: 4294967296
2024-09-08 14:51:54.760 KST client backend[3075649] pg_regress/brin STATEMENT:  SELECT brin_summarize_range('brin_summarize_idx', 4294967296);
2024-09-08 14:51:54.762 KST client backend[3075675] pg_regress/rowsecurity ERROR:  update or delete on table "r1" violates foreign key constraint "r2_a_fkey" on table "r2"
2024-09-08 14:51:54.762 KST client backend[3075675] pg_regress/rowsecurity DETAIL:  Key (a)=(10) is still referenced from table "r2".
2024-09-08 14:51:54.762 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  DELETE FROM r1;
2024-09-08 14:51:54.765 KST client backend[3075677] pg_regress/generated ERROR:  ALTER TABLE / DROP EXPRESSION must be applied to child tables too
2024-09-08 14:51:54.765 KST client backend[3075677] pg_regress/generated STATEMENT:  ALTER TABLE ONLY gtest30 ALTER COLUMN b DROP EXPRESSION;
2024-09-08 14:51:54.767 KST client backend[3075663] pg_regress/spgist ERROR:  value 9 out of bounds for option "fillfactor"
2024-09-08 14:51:54.767 KST client backend[3075663] pg_regress/spgist DETAIL:  Valid values are between "10" and "100".
2024-09-08 14:51:54.767 KST client backend[3075663] pg_regress/spgist STATEMENT:  create index spgist_point_idx2 on spgist_point_tbl using spgist(p) with (fillfactor = 9);
2024-09-08 14:51:54.767 KST client backend[3075663] pg_regress/spgist ERROR:  value 101 out of bounds for option "fillfactor"
2024-09-08 14:51:54.767 KST client backend[3075663] pg_regress/spgist DETAIL:  Valid values are between "10" and "100".
2024-09-08 14:51:54.767 KST client backend[3075663] pg_regress/spgist STATEMENT:  create index spgist_point_idx2 on spgist_point_tbl using spgist(p) with (fillfactor = 101);
2024-09-08 14:51:54.769 KST client backend[3075677] pg_regress/generated ERROR:  cannot drop generation expression from inherited column
2024-09-08 14:51:54.769 KST client backend[3075677] pg_regress/generated STATEMENT:  ALTER TABLE gtest30_1 ALTER COLUMN b DROP EXPRESSION;
2024-09-08 14:51:54.770 KST client backend[3075675] pg_regress/rowsecurity ERROR:  query would be affected by row-level security policy for table "r1"
2024-09-08 14:51:54.770 KST client backend[3075675] pg_regress/rowsecurity HINT:  To disable the policy for the table's owner, use ALTER TABLE NO FORCE ROW LEVEL SECURITY.
2024-09-08 14:51:54.770 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  TABLE r1;
2024-09-08 14:51:54.770 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "r1"
2024-09-08 14:51:54.770 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO r1 VALUES (10), (20) RETURNING *;
2024-09-08 14:51:54.771 KST client backend[3075677] pg_regress/generated ERROR:  BEFORE trigger's WHEN condition cannot reference NEW generated columns at character 82
2024-09-08 14:51:54.771 KST client backend[3075677] pg_regress/generated DETAIL:  Column "b" is a generated column.
2024-09-08 14:51:54.771 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TRIGGER gtest2a BEFORE INSERT OR UPDATE ON gtest26
	  FOR EACH ROW
	  WHEN (NEW.b < 0)  -- error
	  EXECUTE PROCEDURE gtest_trigger_func();
2024-09-08 14:51:54.771 KST client backend[3075677] pg_regress/generated ERROR:  BEFORE trigger's WHEN condition cannot reference NEW generated columns at character 82
2024-09-08 14:51:54.771 KST client backend[3075677] pg_regress/generated DETAIL:  A whole-row reference is used and the table contains generated columns.
2024-09-08 14:51:54.771 KST client backend[3075677] pg_regress/generated STATEMENT:  CREATE TRIGGER gtest2b BEFORE INSERT OR UPDATE ON gtest26
	  FOR EACH ROW
	  WHEN (NEW.* IS NOT NULL)  -- error
	  EXECUTE PROCEDURE gtest_trigger_func();
2024-09-08 14:51:54.772 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "r1"
2024-09-08 14:51:54.772 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  UPDATE r1 SET a = 30 RETURNING *;
2024-09-08 14:51:54.773 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "r1"
2024-09-08 14:51:54.773 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO r1 VALUES (10)
	    ON CONFLICT (a) DO UPDATE SET a = 30 RETURNING *;
2024-09-08 14:51:54.773 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "r1"
2024-09-08 14:51:54.773 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO r1 VALUES (10)
	    ON CONFLICT (a) DO UPDATE SET a = 30;
2024-09-08 14:51:54.773 KST client backend[3075675] pg_regress/rowsecurity ERROR:  new row violates row-level security policy for table "r1"
2024-09-08 14:51:54.773 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  INSERT INTO r1 VALUES (10)
	    ON CONFLICT ON CONSTRAINT r1_pkey DO UPDATE SET a = 30;
2024-09-08 14:51:54.777 KST client backend[3075675] pg_regress/rowsecurity ERROR:  policy "p1" for table "dob_t1" does not exist
2024-09-08 14:51:54.777 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  DROP POLICY p1 ON dob_t1;
2024-09-08 14:51:54.777 KST client backend[3075675] pg_regress/rowsecurity ERROR:  policy "p1" for table "dob_t1" does not exist
2024-09-08 14:51:54.777 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  DROP POLICY p1 ON dob_t1;
2024-09-08 14:51:54.779 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table ref_tbl
2024-09-08 14:51:54.779 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  SELECT * FROM ref_tbl;
2024-09-08 14:51:54.779 KST client backend[3075675] pg_regress/rowsecurity ERROR:  permission denied for table rls_tbl
2024-09-08 14:51:54.779 KST client backend[3075675] pg_regress/rowsecurity STATEMENT:  SELECT * FROM rls_tbl;
2024-09-08 14:51:54.850 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.127", size 146674
2024-09-08 14:51:54.850 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) FROM simple r JOIN bigger_than_it_looks s USING (id);
2024-09-08 14:51:54.851 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.130", size 145199
2024-09-08 14:51:54.851 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) FROM simple r JOIN bigger_than_it_looks s USING (id);
2024-09-08 14:51:54.852 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.132", size 149388
2024-09-08 14:51:54.852 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) FROM simple r JOIN bigger_than_it_looks s USING (id);
2024-09-08 14:51:54.852 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.129", size 149978
2024-09-08 14:51:54.852 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) FROM simple r JOIN bigger_than_it_looks s USING (id);
2024-09-08 14:51:54.853 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.128", size 149565
2024-09-08 14:51:54.853 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) FROM simple r JOIN bigger_than_it_looks s USING (id);
2024-09-08 14:51:54.854 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.133", size 145081
2024-09-08 14:51:54.854 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) FROM simple r JOIN bigger_than_it_looks s USING (id);
2024-09-08 14:51:54.855 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.131", size 147795
2024-09-08 14:51:54.855 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) FROM simple r JOIN bigger_than_it_looks s USING (id);
2024-09-08 14:51:54.865 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.141", size 146674
2024-09-08 14:51:54.865 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.865 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select original > 1 as initially_multibatch, final > original as increased_batches
	  from hash_join_batches(
	$$
	  select count(*) FROM simple r JOIN bigger_than_it_looks s USING (id);
	$$);
2024-09-08 14:51:54.866 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.144", size 145199
2024-09-08 14:51:54.866 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.866 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select original > 1 as initially_multibatch, final > original as increased_batches
	  from hash_join_batches(
	$$
	  select count(*) FROM simple r JOIN bigger_than_it_looks s USING (id);
	$$);
2024-09-08 14:51:54.867 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.146", size 149388
2024-09-08 14:51:54.867 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.867 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select original > 1 as initially_multibatch, final > original as increased_batches
	  from hash_join_batches(
	$$
	  select count(*) FROM simple r JOIN bigger_than_it_looks s USING (id);
	$$);
2024-09-08 14:51:54.868 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.143", size 149978
2024-09-08 14:51:54.868 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.868 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select original > 1 as initially_multibatch, final > original as increased_batches
	  from hash_join_batches(
	$$
	  select count(*) FROM simple r JOIN bigger_than_it_looks s USING (id);
	$$);
2024-09-08 14:51:54.869 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.142", size 149565
2024-09-08 14:51:54.869 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.869 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select original > 1 as initially_multibatch, final > original as increased_batches
	  from hash_join_batches(
	$$
	  select count(*) FROM simple r JOIN bigger_than_it_looks s USING (id);
	$$);
2024-09-08 14:51:54.870 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.147", size 145081
2024-09-08 14:51:54.870 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.870 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select original > 1 as initially_multibatch, final > original as increased_batches
	  from hash_join_batches(
	$$
	  select count(*) FROM simple r JOIN bigger_than_it_looks s USING (id);
	$$);
2024-09-08 14:51:54.871 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.145", size 147795
2024-09-08 14:51:54.871 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.871 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select original > 1 as initially_multibatch, final > original as increased_batches
	  from hash_join_batches(
	$$
	  select count(*) FROM simple r JOIN bigger_than_it_looks s USING (id);
	$$);
2024-09-08 14:51:54.880 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.155", size 144845
2024-09-08 14:51:54.880 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join bigger_than_it_looks s using (id);
2024-09-08 14:51:54.881 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.158", size 143134
2024-09-08 14:51:54.881 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join bigger_than_it_looks s using (id);
2024-09-08 14:51:54.882 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.160", size 147323
2024-09-08 14:51:54.882 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join bigger_than_it_looks s using (id);
2024-09-08 14:51:54.882 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.157", size 148267
2024-09-08 14:51:54.882 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join bigger_than_it_looks s using (id);
2024-09-08 14:51:54.883 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.156", size 147913
2024-09-08 14:51:54.883 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join bigger_than_it_looks s using (id);
2024-09-08 14:51:54.884 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.161", size 143842
2024-09-08 14:51:54.884 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join bigger_than_it_looks s using (id);
2024-09-08 14:51:54.885 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.159", size 145966
2024-09-08 14:51:54.885 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join bigger_than_it_looks s using (id);
2024-09-08 14:51:54.895 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.169", size 136585
2024-09-08 14:51:54.895 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.895 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select original > 1 as initially_multibatch, final > original as increased_batches
	  from hash_join_batches(
	$$
	  select count(*) from simple r join bigger_than_it_looks s using (id);
	$$);
2024-09-08 14:51:54.896 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.172", size 136113
2024-09-08 14:51:54.896 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.896 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select original > 1 as initially_multibatch, final > original as increased_batches
	  from hash_join_batches(
	$$
	  select count(*) from simple r join bigger_than_it_looks s using (id);
	$$);
2024-09-08 14:51:54.897 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.174", size 141659
2024-09-08 14:51:54.897 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.897 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select original > 1 as initially_multibatch, final > original as increased_batches
	  from hash_join_batches(
	$$
	  select count(*) from simple r join bigger_than_it_looks s using (id);
	$$);
2024-09-08 14:51:54.898 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.171", size 141246
2024-09-08 14:51:54.898 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.898 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select original > 1 as initially_multibatch, final > original as increased_batches
	  from hash_join_batches(
	$$
	  select count(*) from simple r join bigger_than_it_looks s using (id);
	$$);
2024-09-08 14:51:54.899 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.170", size 141718
2024-09-08 14:51:54.899 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.899 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select original > 1 as initially_multibatch, final > original as increased_batches
	  from hash_join_batches(
	$$
	  select count(*) from simple r join bigger_than_it_looks s using (id);
	$$);
2024-09-08 14:51:54.900 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.175", size 136054
2024-09-08 14:51:54.900 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.900 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select original > 1 as initially_multibatch, final > original as increased_batches
	  from hash_join_batches(
	$$
	  select count(*) from simple r join bigger_than_it_looks s using (id);
	$$);
2024-09-08 14:51:54.900 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.173", size 138473
2024-09-08 14:51:54.900 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.900 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select original > 1 as initially_multibatch, final > original as increased_batches
	  from hash_join_batches(
	$$
	  select count(*) from simple r join bigger_than_it_looks s using (id);
	$$);
2024-09-08 14:51:54.916 KST client backend[3075654] pg_regress/gist ERROR:  lossy distance functions are not supported in index-only scans
2024-09-08 14:51:54.916 KST client backend[3075654] pg_regress/gist STATEMENT:  select p from gist_tbl order by circle(p,1) <-> point(0,0) limit 1;
2024-09-08 14:51:54.924 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.14.fileset/i3of4.p0.0", size 131072
2024-09-08 14:51:54.924 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.924 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select original > 1 as initially_multibatch, final > original as increased_batches
	  from hash_join_batches(
	$$
	  select count(*) from simple r join bigger_than_it_looks s using (id);
	$$);
2024-09-08 14:51:54.924 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.14.fileset/i2of4.p0.0", size 131072
2024-09-08 14:51:54.924 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.924 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select original > 1 as initially_multibatch, final > original as increased_batches
	  from hash_join_batches(
	$$
	  select count(*) from simple r join bigger_than_it_looks s using (id);
	$$);
2024-09-08 14:51:54.924 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.14.fileset/i1of4.p0.0", size 131072
2024-09-08 14:51:54.924 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.924 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select original > 1 as initially_multibatch, final > original as increased_batches
	  from hash_join_batches(
	$$
	  select count(*) from simple r join bigger_than_it_looks s using (id);
	$$);
2024-09-08 14:51:54.933 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.176", size 480000
2024-09-08 14:51:54.933 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join extremely_skewed s using (id);
2024-09-08 14:51:54.935 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.177", size 593422
2024-09-08 14:51:54.935 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join extremely_skewed s using (id);
2024-09-08 14:51:54.945 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.178", size 480000
2024-09-08 14:51:54.945 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.945 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select * from hash_join_batches(
	$$
	  select count(*) from simple r join extremely_skewed s using (id);
	$$);
2024-09-08 14:51:54.949 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.179", size 593422
2024-09-08 14:51:54.949 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.949 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select * from hash_join_batches(
	$$
	  select count(*) from simple r join extremely_skewed s using (id);
	$$);
2024-09-08 14:51:54.950 KST client backend[3075654] pg_regress/gist LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075654.0", size 237568
2024-09-08 14:51:54.950 KST client backend[3075654] pg_regress/gist STATEMENT:  create index gist_tbl_box_index_forcing_buffering on gist_tbl using gist (p)
	  with (buffering=on, fillfactor=50);
2024-09-08 14:51:54.957 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.180", size 480000
2024-09-08 14:51:54.957 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join extremely_skewed s using (id);
2024-09-08 14:51:54.959 KST parallel worker[3075714] LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075714.0", size 480000
2024-09-08 14:51:54.959 KST parallel worker[3075714] STATEMENT:  select count(*) from simple r join extremely_skewed s using (id);
2024-09-08 14:51:54.961 KST parallel worker[3075715] LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075715.0", size 480000
2024-09-08 14:51:54.961 KST parallel worker[3075715] STATEMENT:  select count(*) from simple r join extremely_skewed s using (id);
2024-09-08 14:51:54.961 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.181", size 586637
2024-09-08 14:51:54.961 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join extremely_skewed s using (id);
2024-09-08 14:51:54.972 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.182", size 480000
2024-09-08 14:51:54.972 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.972 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select * from hash_join_batches(
	$$
	  select count(*) from simple r join extremely_skewed s using (id);
	$$);
2024-09-08 14:51:54.972 KST parallel worker[3075716] LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075716.0", size 480000
2024-09-08 14:51:54.972 KST parallel worker[3075716] STATEMENT:  explain (analyze, format 'json') 
	  select count(*) from simple r join extremely_skewed s using (id);
	
2024-09-08 14:51:54.973 KST parallel worker[3075717] LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075717.0", size 480000
2024-09-08 14:51:54.973 KST parallel worker[3075717] STATEMENT:  explain (analyze, format 'json') 
	  select count(*) from simple r join extremely_skewed s using (id);
	
2024-09-08 14:51:54.977 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.183", size 586165
2024-09-08 14:51:54.977 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:54.977 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select * from hash_join_batches(
	$$
	  select count(*) from simple r join extremely_skewed s using (id);
	$$);
2024-09-08 14:51:54.988 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.15.fileset/o1of4.p1.0", size 163840
2024-09-08 14:51:54.988 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join extremely_skewed s using (id);
2024-09-08 14:51:54.988 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.15.fileset/o0of4.p0.0", size 163840
2024-09-08 14:51:54.988 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join extremely_skewed s using (id);
2024-09-08 14:51:54.988 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.15.fileset/o3of4.p0.0", size 163840
2024-09-08 14:51:54.988 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join extremely_skewed s using (id);
2024-09-08 14:51:54.988 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.15.fileset/i3of4.p0.0", size 458752
2024-09-08 14:51:54.988 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join extremely_skewed s using (id);
2024-09-08 14:51:54.988 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.15.fileset/o0of4.p1.0", size 163840
2024-09-08 14:51:54.988 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join extremely_skewed s using (id);
2024-09-08 14:51:54.988 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.15.fileset/o1of4.p0.0", size 163840
2024-09-08 14:51:54.988 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join extremely_skewed s using (id);
2024-09-08 14:51:54.988 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.15.fileset/o3of4.p1.0", size 163840
2024-09-08 14:51:54.988 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join extremely_skewed s using (id);
2024-09-08 14:51:54.988 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.15.fileset/o2of4.p1.0", size 163840
2024-09-08 14:51:54.988 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join extremely_skewed s using (id);
2024-09-08 14:51:54.988 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.15.fileset/o2of4.p0.0", size 163840
2024-09-08 14:51:54.988 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select count(*) from simple r join extremely_skewed s using (id);
2024-09-08 14:51:55.001 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.16.fileset/o1of4.p1.0", size 163840
2024-09-08 14:51:55.001 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:55.001 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select * from hash_join_batches(
	$$
	  select count(*) from simple r join extremely_skewed s using (id);
	$$);
2024-09-08 14:51:55.001 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.16.fileset/o0of4.p0.0", size 196608
2024-09-08 14:51:55.001 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:55.001 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select * from hash_join_batches(
	$$
	  select count(*) from simple r join extremely_skewed s using (id);
	$$);
2024-09-08 14:51:55.001 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.16.fileset/o3of4.p0.0", size 196608
2024-09-08 14:51:55.001 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:55.001 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select * from hash_join_batches(
	$$
	  select count(*) from simple r join extremely_skewed s using (id);
	$$);
2024-09-08 14:51:55.001 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.16.fileset/i3of4.p0.0", size 458752
2024-09-08 14:51:55.001 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:55.001 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select * from hash_join_batches(
	$$
	  select count(*) from simple r join extremely_skewed s using (id);
	$$);
2024-09-08 14:51:55.001 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.16.fileset/o0of4.p1.0", size 131072
2024-09-08 14:51:55.001 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:55.001 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select * from hash_join_batches(
	$$
	  select count(*) from simple r join extremely_skewed s using (id);
	$$);
2024-09-08 14:51:55.002 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.16.fileset/o1of4.p0.0", size 163840
2024-09-08 14:51:55.002 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:55.002 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select * from hash_join_batches(
	$$
	  select count(*) from simple r join extremely_skewed s using (id);
	$$);
2024-09-08 14:51:55.002 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.16.fileset/o3of4.p1.0", size 163840
2024-09-08 14:51:55.002 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:55.002 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select * from hash_join_batches(
	$$
	  select count(*) from simple r join extremely_skewed s using (id);
	$$);
2024-09-08 14:51:55.002 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.16.fileset/o2of4.p1.0", size 131072
2024-09-08 14:51:55.002 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:55.002 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select * from hash_join_batches(
	$$
	  select count(*) from simple r join extremely_skewed s using (id);
	$$);
2024-09-08 14:51:55.002 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.16.fileset/o2of4.p0.0", size 196608
2024-09-08 14:51:55.002 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:55.002 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select * from hash_join_batches(
	$$
	  select count(*) from simple r join extremely_skewed s using (id);
	$$);
2024-09-08 14:51:55.385 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.28.fileset/i5of8.p0.0", size 327680
2024-09-08 14:51:55.385 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select length(max(s.t))
	from wide left join (select id, coalesce(t, '') || '' as t from wide) s using (id);
2024-09-08 14:51:55.385 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.28.fileset/i7of8.p0.0", size 327680
2024-09-08 14:51:55.385 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select length(max(s.t))
	from wide left join (select id, coalesce(t, '') || '' as t from wide) s using (id);
2024-09-08 14:51:55.393 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.29.fileset/i5of8.p0.0", size 327680
2024-09-08 14:51:55.393 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:55.393 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select final > 1 as multibatch
	  from hash_join_batches(
	$$
	  select length(max(s.t))
	  from wide left join (select id, coalesce(t, '') || '' as t from wide) s using (id);
	$$);
2024-09-08 14:51:55.393 KST client backend[3075676] pg_regress/join_hash LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075676.29.fileset/i7of8.p0.0", size 327680
2024-09-08 14:51:55.393 KST client backend[3075676] pg_regress/join_hash CONTEXT:  PL/pgSQL function hash_join_batches(text) line 6 at FOR over EXECUTE statement
2024-09-08 14:51:55.393 KST client backend[3075676] pg_regress/join_hash STATEMENT:  select final > 1 as multibatch
	  from hash_join_batches(
	$$
	  select length(max(s.t))
	  from wide left join (select id, coalesce(t, '') || '' as t from wide) s using (id);
	$$);
2024-09-08 14:51:55.426 KST client backend[3075697] pg_regress/privileges ERROR:  cannot create a cursor WITH HOLD within security-restricted operation
2024-09-08 14:51:55.426 KST client backend[3075697] pg_regress/privileges CONTEXT:  SQL function "mv_action" statement 1
2024-09-08 14:51:55.426 KST client backend[3075697] pg_regress/privileges STATEMENT:  REFRESH MATERIALIZED VIEW sro_mv;
2024-09-08 14:51:55.431 KST client backend[3075782] pg_regress/privileges ERROR:  cannot create a cursor WITH HOLD within security-restricted operation
2024-09-08 14:51:55.431 KST client backend[3075782] pg_regress/privileges CONTEXT:  SQL function "mv_action" statement 1
2024-09-08 14:51:55.431 KST client backend[3075782] pg_regress/privileges STATEMENT:  REFRESH MATERIALIZED VIEW sro_mv;
2024-09-08 14:51:55.434 KST client backend[3075782] pg_regress/privileges ERROR:  cannot fire deferred trigger within security-restricted operation
2024-09-08 14:51:55.434 KST client backend[3075782] pg_regress/privileges CONTEXT:  SQL function "mv_action" statement 1
2024-09-08 14:51:55.434 KST client backend[3075782] pg_regress/privileges STATEMENT:  REFRESH MATERIALIZED VIEW sro_mv;
2024-09-08 14:51:55.439 KST client backend[3075783] pg_regress/privileges ERROR:  cannot fire deferred trigger within security-restricted operation
2024-09-08 14:51:55.439 KST client backend[3075783] pg_regress/privileges CONTEXT:  SQL function "mv_action" statement 1
2024-09-08 14:51:55.439 KST client backend[3075783] pg_regress/privileges STATEMENT:  REFRESH MATERIALIZED VIEW sro_mv;
2024-09-08 14:51:55.440 KST client backend[3075783] pg_regress/privileges ERROR:  permission denied to grant role "regress_priv_group2"
2024-09-08 14:51:55.440 KST client backend[3075783] pg_regress/privileges DETAIL:  Only roles with the ADMIN option on role "regress_priv_group2" may grant this role.
2024-09-08 14:51:55.440 KST client backend[3075783] pg_regress/privileges CONTEXT:  SQL function "unwanted_grant" statement 1
	SQL statement "SELECT unwanted_grant()"
	PL/pgSQL function sro_trojan() line 1 at PERFORM
	SQL function "mv_action" statement 1
2024-09-08 14:51:55.440 KST client backend[3075783] pg_regress/privileges STATEMENT:  REFRESH MATERIALIZED VIEW sro_mv;
2024-09-08 14:51:55.454 KST client backend[3075784] pg_regress/privileges ERROR:  permission denied to grant role "regress_priv_group2"
2024-09-08 14:51:55.454 KST client backend[3075784] pg_regress/privileges DETAIL:  Only roles with the ADMIN option on role "regress_priv_group2" may grant this role.
2024-09-08 14:51:55.454 KST client backend[3075784] pg_regress/privileges STATEMENT:  GRANT regress_priv_group2 TO regress_priv_user5;
2024-09-08 14:51:55.454 KST client backend[3075784] pg_regress/privileges ERROR:  permission denied to grant role "regress_priv_group2"
2024-09-08 14:51:55.454 KST client backend[3075784] pg_regress/privileges DETAIL:  Only roles with the ADMIN option on role "regress_priv_group2" may grant this role.
2024-09-08 14:51:55.454 KST client backend[3075784] pg_regress/privileges STATEMENT:  GRANT regress_priv_group2 TO regress_priv_user5;
2024-09-08 14:51:55.455 KST client backend[3075784] pg_regress/privileges ERROR:  permission denied to grant role "regress_priv_group2"
2024-09-08 14:51:55.455 KST client backend[3075784] pg_regress/privileges DETAIL:  Only roles with the ADMIN option on role "regress_priv_group2" may grant this role.
2024-09-08 14:51:55.455 KST client backend[3075784] pg_regress/privileges STATEMENT:  GRANT regress_priv_group2 TO regress_priv_user5;
2024-09-08 14:51:55.455 KST client backend[3075784] pg_regress/privileges ERROR:  permission denied to grant role "regress_priv_group2"
2024-09-08 14:51:55.455 KST client backend[3075784] pg_regress/privileges DETAIL:  Only roles with the ADMIN option on role "regress_priv_group2" may grant this role.
2024-09-08 14:51:55.455 KST client backend[3075784] pg_regress/privileges STATEMENT:  GRANT regress_priv_group2 TO regress_priv_user5;
2024-09-08 14:51:55.459 KST client backend[3075785] pg_regress/privileges ERROR:  "atest1" is not a sequence
2024-09-08 14:51:55.459 KST client backend[3075785] pg_regress/privileges STATEMENT:  SELECT has_sequence_privilege('regress_priv_user1', 'atest1', 'SELECT');
2024-09-08 14:51:55.459 KST client backend[3075785] pg_regress/privileges ERROR:  unrecognized privilege type: "INSERT"
2024-09-08 14:51:55.459 KST client backend[3075785] pg_regress/privileges STATEMENT:  SELECT has_sequence_privilege('regress_priv_user1', 'x_seq', 'INSERT');
2024-09-08 14:51:55.464 KST client backend[3075786] pg_regress/privileges ERROR:  invalid privilege type INSERT for large object
2024-09-08 14:51:55.464 KST client backend[3075786] pg_regress/privileges STATEMENT:  GRANT SELECT, INSERT ON LARGE OBJECT 1001 TO PUBLIC;
2024-09-08 14:51:55.464 KST client backend[3075786] pg_regress/privileges ERROR:  role "nosuchuser" does not exist
2024-09-08 14:51:55.464 KST client backend[3075786] pg_regress/privileges STATEMENT:  GRANT SELECT, UPDATE ON LARGE OBJECT 1001 TO nosuchuser;
2024-09-08 14:51:55.464 KST client backend[3075786] pg_regress/privileges ERROR:  large object 999 does not exist
2024-09-08 14:51:55.464 KST client backend[3075786] pg_regress/privileges STATEMENT:  GRANT SELECT, UPDATE ON LARGE OBJECT  999 TO PUBLIC;
2024-09-08 14:51:55.468 KST client backend[3075787] pg_regress/privileges ERROR:  large object descriptor 0 was not opened for writing
2024-09-08 14:51:55.468 KST client backend[3075787] pg_regress/privileges STATEMENT:  SELECT lowrite(lo_open(1001, x'40000'::int), 'abcd');
2024-09-08 14:51:55.469 KST client backend[3075787] pg_regress/privileges ERROR:  permission denied for large object 1002
2024-09-08 14:51:55.469 KST client backend[3075787] pg_regress/privileges STATEMENT:  SELECT loread(lo_open(1002, x'40000'::int), 32);
2024-09-08 14:51:55.469 KST client backend[3075787] pg_regress/privileges ERROR:  permission denied for large object 1002
2024-09-08 14:51:55.469 KST client backend[3075787] pg_regress/privileges STATEMENT:  SELECT lowrite(lo_open(1002, x'20000'::int), 'abcd');
2024-09-08 14:51:55.469 KST client backend[3075787] pg_regress/privileges ERROR:  permission denied for large object 1003
2024-09-08 14:51:55.469 KST client backend[3075787] pg_regress/privileges STATEMENT:  SELECT lowrite(lo_open(1003, x'20000'::int), 'abcd');
2024-09-08 14:51:55.469 KST client backend[3075787] pg_regress/privileges ERROR:  large object 1006 does not exist
2024-09-08 14:51:55.469 KST client backend[3075787] pg_regress/privileges STATEMENT:  GRANT UPDATE ON LARGE OBJECT 1006 TO regress_priv_user3;
2024-09-08 14:51:55.470 KST client backend[3075787] pg_regress/privileges ERROR:  must be owner of large object 1001
2024-09-08 14:51:55.470 KST client backend[3075787] pg_regress/privileges STATEMENT:  SELECT lo_unlink(1001);
2024-09-08 14:51:55.474 KST client backend[3075788] pg_regress/privileges ERROR:  permission denied for large object 1003
2024-09-08 14:51:55.474 KST client backend[3075788] pg_regress/privileges STATEMENT:  SELECT loread(lo_open(1003, x'40000'::int), 32);
2024-09-08 14:51:55.474 KST client backend[3075788] pg_regress/privileges ERROR:  permission denied for large object 1005
2024-09-08 14:51:55.474 KST client backend[3075788] pg_regress/privileges STATEMENT:  SELECT lo_truncate(lo_open(1005, x'20000'::int), 10);
2024-09-08 14:51:55.477 KST client backend[3075789] pg_regress/privileges ERROR:  permission denied for large object 1002
2024-09-08 14:51:55.477 KST client backend[3075789] pg_regress/privileges STATEMENT:  SELECT loread(lo_open(1002, x'40000'::int), 32);
2024-09-08 14:51:55.478 KST client backend[3075789] pg_regress/privileges ERROR:  permission denied for large object 1002
2024-09-08 14:51:55.478 KST client backend[3075789] pg_regress/privileges STATEMENT:  SELECT lowrite(lo_open(1002, x'20000'::int), 'abcd');
2024-09-08 14:51:55.478 KST client backend[3075789] pg_regress/privileges ERROR:  permission denied for large object 1002
2024-09-08 14:51:55.478 KST client backend[3075789] pg_regress/privileges STATEMENT:  SELECT lo_truncate(lo_open(1002, x'20000'::int), 10);
2024-09-08 14:51:55.478 KST client backend[3075789] pg_regress/privileges ERROR:  permission denied for large object 1002
2024-09-08 14:51:55.478 KST client backend[3075789] pg_regress/privileges STATEMENT:  SELECT lo_put(1002, 1, 'abcd');
2024-09-08 14:51:55.478 KST client backend[3075789] pg_regress/privileges ERROR:  must be owner of large object 1002
2024-09-08 14:51:55.478 KST client backend[3075789] pg_regress/privileges STATEMENT:  SELECT lo_unlink(1002);
2024-09-08 14:51:55.478 KST client backend[3075789] pg_regress/privileges ERROR:  permission denied for function lo_export
2024-09-08 14:51:55.478 KST client backend[3075789] pg_regress/privileges STATEMENT:  SELECT lo_export(1001, '/dev/null');
2024-09-08 14:51:55.478 KST client backend[3075789] pg_regress/privileges ERROR:  permission denied for function lo_import
2024-09-08 14:51:55.478 KST client backend[3075789] pg_regress/privileges STATEMENT:  SELECT lo_import('/dev/null');
2024-09-08 14:51:55.478 KST client backend[3075789] pg_regress/privileges ERROR:  permission denied for function lo_import
2024-09-08 14:51:55.478 KST client backend[3075789] pg_regress/privileges STATEMENT:  SELECT lo_import('/dev/null', 2003);
2024-09-08 14:51:55.483 KST client backend[3075790] pg_regress/privileges ERROR:  permission denied for function lo_export
2024-09-08 14:51:55.483 KST client backend[3075790] pg_regress/privileges STATEMENT:  SELECT lo_export(1001, '/dev/null');
2024-09-08 14:51:55.486 KST client backend[3075791] pg_regress/privileges ERROR:  permission denied for table pg_largeobject
2024-09-08 14:51:55.486 KST client backend[3075791] pg_regress/privileges STATEMENT:  SELECT * FROM pg_largeobject LIMIT 0;
2024-09-08 14:51:55.489 KST client backend[3075791] pg_regress/privileges WARNING:  PID 3075130 is not a PostgreSQL backend process
2024-09-08 14:51:55.489 KST client backend[3075791] pg_regress/privileges CONTEXT:  SQL expression "pg_terminate_backend($1)"
	PL/pgSQL function terminate_nothrow(integer) line 3 at RETURN
2024-09-08 14:51:55.489 KST client backend[3075791] pg_regress/privileges WARNING:  PID 3075129 is not a PostgreSQL backend process
2024-09-08 14:51:55.489 KST client backend[3075791] pg_regress/privileges CONTEXT:  SQL expression "pg_terminate_backend($1)"
	PL/pgSQL function terminate_nothrow(integer) line 3 at RETURN
2024-09-08 14:51:55.489 KST client backend[3075791] pg_regress/privileges WARNING:  PID 3075132 is not a PostgreSQL backend process
2024-09-08 14:51:55.489 KST client backend[3075791] pg_regress/privileges CONTEXT:  SQL expression "pg_terminate_backend($1)"
	PL/pgSQL function terminate_nothrow(integer) line 3 at RETURN
2024-09-08 14:51:55.489 KST client backend[3075791] pg_regress/privileges ERROR:  role "pg_database_owner" cannot have explicit members
2024-09-08 14:51:55.489 KST client backend[3075791] pg_regress/privileges STATEMENT:  GRANT pg_database_owner TO regress_priv_user1;
2024-09-08 14:51:55.489 KST client backend[3075791] pg_regress/privileges ERROR:  role "pg_database_owner" cannot be a member of any role
2024-09-08 14:51:55.489 KST client backend[3075791] pg_regress/privileges STATEMENT:  GRANT regress_priv_user1 TO pg_database_owner;
2024-09-08 14:51:55.493 KST client backend[3075791] pg_regress/privileges ERROR:  permission denied for table datdba_only
2024-09-08 14:51:55.493 KST client backend[3075791] pg_regress/privileges STATEMENT:  DELETE FROM datdba_only;
2024-09-08 14:51:55.493 KST client backend[3075791] pg_regress/privileges ERROR:  permission denied for table datdba_only
2024-09-08 14:51:55.493 KST client backend[3075791] pg_regress/privileges STATEMENT:  INSERT INTO datdba_only DEFAULT VALUES;
2024-09-08 14:51:55.501 KST client backend[3075792] pg_regress/privileges ERROR:  cannot use IN SCHEMA clause when using GRANT/REVOKE ON SCHEMAS
2024-09-08 14:51:55.501 KST client backend[3075792] pg_regress/privileges STATEMENT:  ALTER DEFAULT PRIVILEGES IN SCHEMA testns GRANT USAGE ON SCHEMAS TO regress_priv_user2;
2024-09-08 14:51:55.501 KST client backend[3075792] pg_regress/privileges ERROR:  unrecognized privilege type: "fake_privilege"
2024-09-08 14:51:55.501 KST client backend[3075792] pg_regress/privileges STATEMENT:  SELECT makeaclitem('regress_priv_user1'::regrole, 'regress_priv_user2'::regrole,
		'SELECT, fake_privilege', FALSE);
2024-09-08 14:51:55.546 KST client backend[3075797] pg_regress/privileges ERROR:  view "atestv4" does not exist
2024-09-08 14:51:55.546 KST client backend[3075797] pg_regress/privileges STATEMENT:  DROP VIEW atestv4;
2024-09-08 14:51:55.555 KST client backend[3075797] pg_regress/privileges ERROR:  role "regress_priv_user8" does not exist
2024-09-08 14:51:55.555 KST client backend[3075797] pg_regress/privileges STATEMENT:  DROP USER regress_priv_user8;
2024-09-08 14:51:55.556 KST client backend[3075797] pg_regress/privileges ERROR:  permission denied for table lock_table
2024-09-08 14:51:55.556 KST client backend[3075797] pg_regress/privileges STATEMENT:  LOCK TABLE lock_table IN ROW EXCLUSIVE MODE;
2024-09-08 14:51:55.556 KST client backend[3075797] pg_regress/privileges ERROR:  permission denied for table lock_table
2024-09-08 14:51:55.556 KST client backend[3075797] pg_regress/privileges STATEMENT:  LOCK TABLE lock_table IN ACCESS EXCLUSIVE MODE;
2024-09-08 14:51:55.560 KST client backend[3075798] pg_regress/privileges ERROR:  permission denied for table lock_table
2024-09-08 14:51:55.560 KST client backend[3075798] pg_regress/privileges STATEMENT:  LOCK TABLE lock_table IN ACCESS EXCLUSIVE MODE;
2024-09-08 14:51:55.586 KST client backend[3075803] pg_regress/privileges ERROR:  must be able to SET ROLE "regress_roleoption_donor"
2024-09-08 14:51:55.586 KST client backend[3075803] pg_regress/privileges STATEMENT:  ALTER TABLE regress_roleoption.t1 OWNER TO regress_roleoption_donor;
2024-09-08 14:51:55.587 KST client backend[3075803] pg_regress/privileges ERROR:  must be owner of table t4
2024-09-08 14:51:55.587 KST client backend[3075803] pg_regress/privileges STATEMENT:  ALTER TABLE regress_roleoption.t4 OWNER TO regress_roleoption_protagonist;
2024-09-08 14:51:55.650 KST client backend[3075846] pg_regress/brin_bloom ERROR:  value -1.1 out of bounds for option "n_distinct_per_range"
2024-09-08 14:51:55.650 KST client backend[3075846] pg_regress/brin_bloom DETAIL:  Valid values are between "-1.000000" and "2147483647.000000".
2024-09-08 14:51:55.650 KST client backend[3075846] pg_regress/brin_bloom STATEMENT:  CREATE INDEX brinidx_bloom ON brintest_bloom USING brin (
		byteacol bytea_bloom_ops(n_distinct_per_range = -1.1)
	);
2024-09-08 14:51:55.651 KST client backend[3075846] pg_regress/brin_bloom ERROR:  value 0.00009 out of bounds for option "false_positive_rate"
2024-09-08 14:51:55.651 KST client backend[3075846] pg_regress/brin_bloom DETAIL:  Valid values are between "0.000100" and "0.250000".
2024-09-08 14:51:55.651 KST client backend[3075846] pg_regress/brin_bloom STATEMENT:  CREATE INDEX brinidx_bloom ON brintest_bloom USING brin (
		byteacol bytea_bloom_ops(false_positive_rate = 0.00009)
	);
2024-09-08 14:51:55.651 KST client backend[3075846] pg_regress/brin_bloom ERROR:  value 0.26 out of bounds for option "false_positive_rate"
2024-09-08 14:51:55.651 KST client backend[3075846] pg_regress/brin_bloom DETAIL:  Valid values are between "0.000100" and "0.250000".
2024-09-08 14:51:55.651 KST client backend[3075846] pg_regress/brin_bloom STATEMENT:  CREATE INDEX brinidx_bloom ON brintest_bloom USING brin (
		byteacol bytea_bloom_ops(false_positive_rate = 0.26)
	);
2024-09-08 14:51:55.651 KST client backend[3075847] pg_regress/brin_multi ERROR:  value 7 out of bounds for option "values_per_range"
2024-09-08 14:51:55.651 KST client backend[3075847] pg_regress/brin_multi DETAIL:  Valid values are between "8" and "256".
2024-09-08 14:51:55.651 KST client backend[3075847] pg_regress/brin_multi STATEMENT:  CREATE INDEX brinidx_multi ON brintest_multi USING brin (
		int8col int8_minmax_multi_ops(values_per_range = 7)
	);
2024-09-08 14:51:55.652 KST client backend[3075847] pg_regress/brin_multi ERROR:  value 257 out of bounds for option "values_per_range"
2024-09-08 14:51:55.652 KST client backend[3075847] pg_regress/brin_multi DETAIL:  Valid values are between "8" and "256".
2024-09-08 14:51:55.652 KST client backend[3075847] pg_regress/brin_multi STATEMENT:  CREATE INDEX brinidx_multi ON brintest_multi USING brin (
		int8col int8_minmax_multi_ops(values_per_range = 257)
	);
2024-09-08 14:51:55.675 KST client backend[3075846] pg_regress/brin_bloom ERROR:  "brintest_bloom" is not an index
2024-09-08 14:51:55.675 KST client backend[3075846] pg_regress/brin_bloom STATEMENT:  SELECT brin_summarize_new_values('brintest_bloom');
2024-09-08 14:51:55.675 KST client backend[3075846] pg_regress/brin_bloom ERROR:  "tenk1_unique1" is not a BRIN index
2024-09-08 14:51:55.675 KST client backend[3075846] pg_regress/brin_bloom STATEMENT:  SELECT brin_summarize_new_values('tenk1_unique1');
2024-09-08 14:51:55.676 KST client backend[3075846] pg_regress/brin_bloom ERROR:  block number out of range: -1
2024-09-08 14:51:55.676 KST client backend[3075846] pg_regress/brin_bloom STATEMENT:  SELECT brin_desummarize_range('brinidx_bloom', -1);
2024-09-08 14:51:55.677 KST client backend[3075846] pg_regress/brin_bloom ERROR:  block number out of range: -1
2024-09-08 14:51:55.677 KST client backend[3075846] pg_regress/brin_bloom STATEMENT:  SELECT brin_summarize_range('brin_summarize_bloom_idx', -1);
2024-09-08 14:51:55.678 KST client backend[3075846] pg_regress/brin_bloom ERROR:  block number out of range: 4294967296
2024-09-08 14:51:55.678 KST client backend[3075846] pg_regress/brin_bloom STATEMENT:  SELECT brin_summarize_range('brin_summarize_bloom_idx', 4294967296);
2024-09-08 14:51:55.723 KST client backend[3075847] pg_regress/brin_multi ERROR:  "brintest_multi" is not an index
2024-09-08 14:51:55.723 KST client backend[3075847] pg_regress/brin_multi STATEMENT:  SELECT brin_summarize_new_values('brintest_multi');
2024-09-08 14:51:55.723 KST client backend[3075847] pg_regress/brin_multi ERROR:  "tenk1_unique1" is not a BRIN index
2024-09-08 14:51:55.723 KST client backend[3075847] pg_regress/brin_multi STATEMENT:  SELECT brin_summarize_new_values('tenk1_unique1');
2024-09-08 14:51:55.723 KST client backend[3075847] pg_regress/brin_multi ERROR:  block number out of range: -1
2024-09-08 14:51:55.723 KST client backend[3075847] pg_regress/brin_multi STATEMENT:  SELECT brin_desummarize_range('brinidx_multi', -1);
2024-09-08 14:51:55.735 KST client backend[3075847] pg_regress/brin_multi ERROR:  block number out of range: -1
2024-09-08 14:51:55.735 KST client backend[3075847] pg_regress/brin_multi STATEMENT:  SELECT brin_summarize_range('brin_summarize_multi_idx', -1);
2024-09-08 14:51:55.735 KST client backend[3075847] pg_regress/brin_multi ERROR:  block number out of range: 4294967296
2024-09-08 14:51:55.735 KST client backend[3075847] pg_regress/brin_multi STATEMENT:  SELECT brin_summarize_range('brin_summarize_multi_idx', 4294967296);
2024-09-08 14:51:55.767 KST client backend[3075873] pg_regress/async ERROR:  channel name cannot be empty
2024-09-08 14:51:55.767 KST client backend[3075873] pg_regress/async STATEMENT:  SELECT pg_notify('','sample message1');
2024-09-08 14:51:55.767 KST client backend[3075873] pg_regress/async ERROR:  channel name cannot be empty
2024-09-08 14:51:55.767 KST client backend[3075873] pg_regress/async STATEMENT:  SELECT pg_notify(NULL,'sample message1');
2024-09-08 14:51:55.767 KST client backend[3075873] pg_regress/async ERROR:  channel name too long
2024-09-08 14:51:55.767 KST client backend[3075873] pg_regress/async STATEMENT:  SELECT pg_notify('notify_async_channel_name_too_long______________________________','sample_message1');
2024-09-08 14:51:55.768 KST client backend[3075869] pg_regress/alter_generic ERROR:  function alt_func1(integer) is not an aggregate
2024-09-08 14:51:55.768 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER AGGREGATE alt_func1(int) RENAME TO alt_func3;
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize ERROR:  invalid size: "1 AB"
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize DETAIL:  Invalid size unit: "AB".
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize HINT:  Valid units are "bytes", "B", "kB", "MB", "GB", "TB", and "PB".
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize STATEMENT:  SELECT pg_size_bytes('1 AB');
2024-09-08 14:51:55.768 KST client backend[3075869] pg_regress/alter_generic ERROR:  function alt_func1(integer) is not an aggregate
2024-09-08 14:51:55.768 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER AGGREGATE alt_func1(int) OWNER TO regress_alter_generic_user3;
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize ERROR:  invalid size: "1 AB A"
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize DETAIL:  Invalid size unit: "AB A".
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize HINT:  Valid units are "bytes", "B", "kB", "MB", "GB", "TB", and "PB".
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize STATEMENT:  SELECT pg_size_bytes('1 AB A');
2024-09-08 14:51:55.768 KST client backend[3075869] pg_regress/alter_generic ERROR:  function alt_func1(integer) is not an aggregate
2024-09-08 14:51:55.768 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER AGGREGATE alt_func1(int) SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize ERROR:  invalid size: "1 AB A    "
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize DETAIL:  Invalid size unit: "AB A".
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize HINT:  Valid units are "bytes", "B", "kB", "MB", "GB", "TB", and "PB".
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize STATEMENT:  SELECT pg_size_bytes('1 AB A    ');
2024-09-08 14:51:55.768 KST client backend[3075869] pg_regress/alter_generic ERROR:  function alt_func2(integer) already exists in schema "alt_nsp1"
2024-09-08 14:51:55.768 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER FUNCTION alt_func1(int) RENAME TO alt_func2;
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize ERROR:  bigint out of range
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize STATEMENT:  SELECT pg_size_bytes('9223372036854775807.9');
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize ERROR:  bigint out of range
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize STATEMENT:  SELECT pg_size_bytes('1e100');
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize ERROR:  value overflows numeric format
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize STATEMENT:  SELECT pg_size_bytes('1e1000000000000000000');
2024-09-08 14:51:55.768 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user2"
2024-09-08 14:51:55.768 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER FUNCTION alt_func2(int) OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize ERROR:  invalid size: "1 byte"
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize DETAIL:  Invalid size unit: "byte".
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize HINT:  Valid units are "bytes", "B", "kB", "MB", "GB", "TB", and "PB".
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize STATEMENT:  SELECT pg_size_bytes('1 byte');
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize ERROR:  invalid size: ""
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize STATEMENT:  SELECT pg_size_bytes('');
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize ERROR:  invalid size: "kb"
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize STATEMENT:  SELECT pg_size_bytes('kb');
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize ERROR:  invalid size: ".."
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize STATEMENT:  SELECT pg_size_bytes('..');
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize ERROR:  invalid size: "-."
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize STATEMENT:  SELECT pg_size_bytes('-.');
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize ERROR:  invalid size: "-.kb"
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize STATEMENT:  SELECT pg_size_bytes('-.kb');
2024-09-08 14:51:55.768 KST client backend[3075869] pg_regress/alter_generic ERROR:  function alt_agg2(integer) already exists in schema "alt_nsp1"
2024-09-08 14:51:55.768 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER AGGREGATE alt_agg1(int) RENAME TO alt_agg2;
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize ERROR:  invalid size: "-. kb"
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize STATEMENT:  SELECT pg_size_bytes('-. kb');
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize ERROR:  invalid size: ".+912"
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize STATEMENT:  SELECT pg_size_bytes('.+912');
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize ERROR:  invalid size: "+912+ kB"
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize DETAIL:  Invalid size unit: "+ kB".
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize HINT:  Valid units are "bytes", "B", "kB", "MB", "GB", "TB", and "PB".
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize STATEMENT:  SELECT pg_size_bytes('+912+ kB');
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize ERROR:  invalid size: "++123 kB"
2024-09-08 14:51:55.768 KST client backend[3075871] pg_regress/dbsize STATEMENT:  SELECT pg_size_bytes('++123 kB');
2024-09-08 14:51:55.768 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user2"
2024-09-08 14:51:55.768 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER AGGREGATE alt_agg2(int) OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.768 KST client backend[3075880] pg_regress/tid ERROR:  invalid input syntax for type tid: "(4294967296,1)" at character 8
2024-09-08 14:51:55.768 KST client backend[3075880] pg_regress/tid STATEMENT:  SELECT '(4294967296,1)'::tid;
2024-09-08 14:51:55.768 KST client backend[3075880] pg_regress/tid ERROR:  invalid input syntax for type tid: "(1,65536)" at character 8
2024-09-08 14:51:55.768 KST client backend[3075880] pg_regress/tid STATEMENT:  SELECT '(1,65536)'::tid;
2024-09-08 14:51:55.768 KST client backend[3075875] pg_regress/misc_functions ERROR:  function num_nonnulls() does not exist at character 8
2024-09-08 14:51:55.768 KST client backend[3075875] pg_regress/misc_functions HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:55.768 KST client backend[3075875] pg_regress/misc_functions STATEMENT:  SELECT num_nonnulls();
2024-09-08 14:51:55.768 KST client backend[3075875] pg_regress/misc_functions ERROR:  function num_nulls() does not exist at character 8
2024-09-08 14:51:55.768 KST client backend[3075875] pg_regress/misc_functions HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:55.768 KST client backend[3075875] pg_regress/misc_functions STATEMENT:  SELECT num_nulls();
2024-09-08 14:51:55.769 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of function alt_func3
2024-09-08 14:51:55.769 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER FUNCTION alt_func3(int) RENAME TO alt_func4;
2024-09-08 14:51:55.769 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of function alt_func3
2024-09-08 14:51:55.769 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER FUNCTION alt_func3(int) OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.769 KST client backend[3075879] pg_regress/tsrf ERROR:  set-returning functions must appear at top level of FROM at character 34
2024-09-08 14:51:55.769 KST client backend[3075879] pg_regress/tsrf STATEMENT:  SELECT * FROM generate_series(1, generate_series(1, 3));
2024-09-08 14:51:55.769 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user3"
2024-09-08 14:51:55.769 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER FUNCTION alt_func2(int) OWNER TO regress_alter_generic_user3;
2024-09-08 14:51:55.769 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of function alt_func3
2024-09-08 14:51:55.769 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER FUNCTION alt_func3(int) SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.769 KST client backend[3075869] pg_regress/alter_generic ERROR:  function alt_func2(integer) already exists in schema "alt_nsp2"
2024-09-08 14:51:55.769 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER FUNCTION alt_func2(int) SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.769 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of function alt_agg3
2024-09-08 14:51:55.769 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER AGGREGATE alt_agg3(int) RENAME TO alt_agg4;
2024-09-08 14:51:55.769 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of function alt_agg3
2024-09-08 14:51:55.769 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER AGGREGATE alt_agg3(int) OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.769 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user3"
2024-09-08 14:51:55.769 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER AGGREGATE alt_agg2(int) OWNER TO regress_alter_generic_user3;
2024-09-08 14:51:55.770 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of function alt_agg3
2024-09-08 14:51:55.770 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER AGGREGATE alt_agg3(int) SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.770 KST client backend[3075869] pg_regress/alter_generic ERROR:  function alt_agg2(integer) already exists in schema "alt_nsp2"
2024-09-08 14:51:55.770 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER AGGREGATE alt_agg2(int) SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.770 KST client backend[3075870] pg_regress/create_table_like ERROR:  relation "nonexistent" does not exist at character 24
2024-09-08 14:51:55.770 KST client backend[3075870] pg_regress/create_table_like STATEMENT:  CREATE TABLE foo (LIKE nonexistent);
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  logging memory contexts of PID 3075875
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 0; TopMemoryContext: 97664 total in 5 blocks; 13544 free (8 chunks); 84120 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; TopTransactionContext: 8192 total in 1 blocks; 7752 free (1 chunks); 440 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; CFuncHash: 8192 total in 1 blocks; 592 free (0 chunks); 7600 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; Operator lookup cache: 24576 total in 2 blocks; 10792 free (3 chunks); 13784 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; RowDescriptionContext: 8192 total in 1 blocks; 6896 free (0 chunks); 1296 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; MessageContext: 16384 total in 2 blocks; 5960 free (0 chunks); 10424 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; Operator class cache: 8192 total in 1 blocks; 592 free (0 chunks); 7600 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; smgr relation table: 32768 total in 3 blocks; 16880 free (8 chunks); 15888 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; PgStat Shared Ref Hash: 7216 total in 2 blocks; 688 free (0 chunks); 6528 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; PgStat Shared Ref: 4096 total in 3 blocks; 728 free (3 chunks); 3368 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; PgStat Pending: 16384 total in 5 blocks; 7776 free (10 chunks); 8608 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; TransactionAbortContext: 32768 total in 1 blocks; 32504 free (0 chunks); 264 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; Portal hash: 8192 total in 1 blocks; 592 free (0 chunks); 7600 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; TopPortalContext: 8192 total in 1 blocks; 7664 free (0 chunks); 528 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; PortalContext: 1024 total in 1 blocks; 608 free (0 chunks); 416 used: <unnamed>
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 3; ExecutorState: 8192 total in 1 blocks; 3920 free (0 chunks); 4272 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 4; printtup: 8192 total in 1 blocks; 7928 free (0 chunks); 264 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 4; ExprContext: 8192 total in 1 blocks; 7928 free (0 chunks); 264 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; Relcache by OID: 16384 total in 2 blocks; 3584 free (2 chunks); 12800 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; CacheMemoryContext: 524288 total in 7 blocks; 74576 free (0 chunks); 449712 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 944 free (1 chunks); 2128 used: pg_depend_reference_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 944 free (1 chunks); 2128 used: pg_depend_depender_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_index_indrelid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; EventTriggerCache: 8192 total in 1 blocks; 7928 free (4 chunks); 264 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 3; Event Trigger Cache: 8192 total in 1 blocks; 2648 free (0 chunks); 5544 used
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 512 free (2 chunks); 1536 used: pg_db_role_setting_databaseid_rol_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1232 free (3 chunks); 1840 used: pg_opclass_am_name_nsp_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 40 free (0 chunks); 984 used: pg_foreign_data_wrapper_name_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_enum_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_class_relname_nsp_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_foreign_server_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_publication_pubname_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1200 free (3 chunks); 1872 used: pg_statistic_relid_att_inh_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_cast_source_target_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_language_name_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_transform_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_collation_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1168 free (3 chunks); 1904 used: pg_amop_fam_strat_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_index_indexrelid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_ts_template_tmplname_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1232 free (3 chunks); 1840 used: pg_ts_config_map_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_opclass_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 40 free (0 chunks); 984 used: pg_foreign_data_wrapper_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 40 free (0 chunks); 984 used: pg_publication_namespace_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_event_trigger_evtname_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_statistic_ext_name_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_publication_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_ts_dict_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_event_trigger_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1168 free (3 chunks); 1904 used: pg_conversion_default_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 880 free (3 chunks); 2192 used: pg_operator_oprname_l_r_n_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_trigger_tgrelid_tgname_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_enum_typid_label_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_ts_config_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_user_mapping_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1232 free (3 chunks); 1840 used: pg_opfamily_am_name_nsp_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_foreign_table_relid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_type_oid_index
2024-09-08 14:51:55.770 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to create role
2024-09-08 14:51:55.770 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the SUPERUSER attribute may create roles with the SUPERUSER attribute.
2024-09-08 14:51:55.770 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_nosuch_superuser SUPERUSER;
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_aggregate_fnoid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_constraint_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_rewrite_rel_rulename_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_ts_parser_prsname_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_ts_config_cfgname_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_ts_parser_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 728 free (1 chunks); 1320 used: pg_publication_rel_prrelid_prpubid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_operator_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_namespace_nspname_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_ts_template_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1232 free (3 chunks); 1840 used: pg_amop_opr_fam_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 912 free (2 chunks); 2160 used: pg_default_acl_role_nsp_obj_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1232 free (3 chunks); 1840 used: pg_collation_name_enc_nsp_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_publication_rel_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_range_rngtypid_index
2024-09-08 14:51:55.770 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to create role
2024-09-08 14:51:55.770 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the REPLICATION attribute may create roles with the REPLICATION attribute.
2024-09-08 14:51:55.770 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_nosuch_replication_bypassrls REPLICATION BYPASSRLS;
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_ts_dict_dictname_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 544 free (2 chunks); 1504 used: pg_type_typname_nsp_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_opfamily_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_statistic_ext_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 728 free (1 chunks); 1320 used: pg_statistic_ext_data_stxoid_inh_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_class_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 944 free (2 chunks); 2128 used: pg_proc_proname_args_nsp_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 40 free (0 chunks); 984 used: pg_partitioned_table_partrelid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_range_rngmultitypid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 544 free (2 chunks); 1504 used: pg_transform_type_lang_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 544 free (2 chunks); 1504 used: pg_attribute_relid_attnum_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_proc_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_language_oid_index
2024-09-08 14:51:55.770 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to create role
2024-09-08 14:51:55.770 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the REPLICATION attribute may create roles with the REPLICATION attribute.
2024-09-08 14:51:55.770 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_nosuch_replication REPLICATION;
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_namespace_oid_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 880 free (3 chunks); 2192 used: pg_amproc_fam_proc_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_foreign_server_name_index
2024-09-08 14:51:55.770 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_attribute_relid_attnam_index
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 728 free (1 chunks); 1320 used: pg_publication_namespace_pnnspid_pnpubid_index
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_conversion_oid_index
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 728 free (1 chunks); 1320 used: pg_user_mapping_user_server_index
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 728 free (1 chunks); 1320 used: pg_subscription_rel_srrelid_srsubid_index
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_sequence_seqrelid_index
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_conversion_name_nsp_index
2024-09-08 14:51:55.771 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to create role
2024-09-08 14:51:55.771 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the BYPASSRLS attribute may create roles with the BYPASSRLS attribute.
2024-09-08 14:51:55.771 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_nosuch_bypassrls BYPASSRLS;
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_authid_oid_index
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1200 free (3 chunks); 1872 used: pg_auth_members_member_role_index
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_subscription_oid_index
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_parameter_acl_oid_index
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_tablespace_oid_index
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_parameter_acl_parname_index
2024-09-08 14:51:55.771 KST client backend[3075867] pg_regress/alter_operator ERROR:  operator attribute "commutator" cannot be changed
2024-09-08 14:51:55.771 KST client backend[3075867] pg_regress/alter_operator STATEMENT:  ALTER OPERATOR === (boolean, boolean) SET (COMMUTATOR = ====);
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1232 free (3 chunks); 1840 used: pg_shseclabel_object_index
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 40 free (0 chunks); 984 used: pg_replication_origin_roname_index
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_database_datname_index
2024-09-08 14:51:55.771 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to create role
2024-09-08 14:51:55.771 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the CREATEDB attribute may create roles with the CREATEDB attribute.
2024-09-08 14:51:55.771 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_nosuch_createdb CREATEDB;
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_subscription_subname_index
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 40 free (0 chunks); 984 used: pg_replication_origin_roiident_index
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1200 free (3 chunks); 1872 used: pg_auth_members_role_member_index
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_database_oid_index
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_authid_rolname_index
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; WAL record construction: 49760 total in 2 blocks; 6376 free (0 chunks); 43384 used
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; PrivateRefCount: 8192 total in 1 blocks; 2648 free (0 chunks); 5544 used
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; MdSmgr: 8192 total in 1 blocks; 7880 free (0 chunks); 312 used
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; LOCALLOCK hash: 8192 total in 1 blocks; 592 free (0 chunks); 7600 used
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; GUCMemoryContext: 40960 total in 3 blocks; 27360 free (17 chunks); 13600 used
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; GUC hash table: 32768 total in 3 blocks; 12704 free (5 chunks); 20064 used
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; Timezones: 104112 total in 2 blocks; 2648 free (0 chunks); 101464 used
2024-09-08 14:51:55.771 KST client backend[3075867] pg_regress/alter_operator ERROR:  operator attribute "negator" cannot be changed
2024-09-08 14:51:55.771 KST client backend[3075867] pg_regress/alter_operator STATEMENT:  ALTER OPERATOR === (boolean, boolean) SET (NEGATOR = ====);
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; ErrorContext: 8192 total in 1 blocks; 7928 free (3 chunks); 264 used
2024-09-08 14:51:55.771 KST client backend[3075875] pg_regress/misc_functions LOG:  Grand total: 1285824 bytes in 199 blocks; 339808 free (148 chunks); 946016 used
2024-09-08 14:51:55.771 KST client backend[3075867] pg_regress/alter_operator ERROR:  function non_existent_func(internal, oid, internal, integer) does not exist
2024-09-08 14:51:55.771 KST client backend[3075867] pg_regress/alter_operator STATEMENT:  ALTER OPERATOR === (boolean, boolean) SET (RESTRICT = non_existent_func);
2024-09-08 14:51:55.771 KST client backend[3075867] pg_regress/alter_operator ERROR:  function non_existent_func(internal, oid, internal, smallint, internal) does not exist
2024-09-08 14:51:55.771 KST client backend[3075867] pg_regress/alter_operator STATEMENT:  ALTER OPERATOR === (boolean, boolean) SET (JOIN = non_existent_func);
2024-09-08 14:51:55.771 KST client backend[3075867] pg_regress/alter_operator ERROR:  operator attribute "commutator" cannot be changed
2024-09-08 14:51:55.771 KST client backend[3075867] pg_regress/alter_operator STATEMENT:  ALTER OPERATOR === (boolean, boolean) SET (COMMUTATOR = !==);
2024-09-08 14:51:55.771 KST client backend[3075867] pg_regress/alter_operator ERROR:  operator attribute "negator" cannot be changed
2024-09-08 14:51:55.771 KST client backend[3075867] pg_regress/alter_operator STATEMENT:  ALTER OPERATOR === (boolean, boolean) SET (NEGATOR = !==);
2024-09-08 14:51:55.771 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to alter role
2024-09-08 14:51:55.771 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the SUPERUSER attribute may change the SUPERUSER attribute.
2024-09-08 14:51:55.771 KST client backend[3075883] pg_regress/create_role STATEMENT:  ALTER ROLE regress_role_limited SUPERUSER;
2024-09-08 14:51:55.771 KST client backend[3075867] pg_regress/alter_operator ERROR:  operator attribute "Restrict" not recognized
2024-09-08 14:51:55.771 KST client backend[3075867] pg_regress/alter_operator STATEMENT:  ALTER OPERATOR & (bit, bit) SET ("Restrict" = _int_contsel, "Join" = _int_contjoinsel);
2024-09-08 14:51:55.771 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to alter role
2024-09-08 14:51:55.771 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the REPLICATION attribute may change the REPLICATION attribute.
2024-09-08 14:51:55.771 KST client backend[3075883] pg_regress/create_role STATEMENT:  ALTER ROLE regress_role_limited REPLICATION;
2024-09-08 14:51:55.771 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to alter role
2024-09-08 14:51:55.771 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the CREATEDB attribute may change the CREATEDB attribute.
2024-09-08 14:51:55.771 KST client backend[3075883] pg_regress/create_role STATEMENT:  ALTER ROLE regress_role_limited CREATEDB;
2024-09-08 14:51:55.771 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to alter role
2024-09-08 14:51:55.771 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the BYPASSRLS attribute may change the BYPASSRLS attribute.
2024-09-08 14:51:55.771 KST client backend[3075883] pg_regress/create_role STATEMENT:  ALTER ROLE regress_role_limited BYPASSRLS;
2024-09-08 14:51:55.771 KST client backend[3075867] pg_regress/alter_operator ERROR:  must be owner of operator ===
2024-09-08 14:51:55.771 KST client backend[3075867] pg_regress/alter_operator STATEMENT:  ALTER OPERATOR === (boolean, boolean) SET (RESTRICT = NONE);
2024-09-08 14:51:55.771 KST client backend[3075880] pg_regress/tid ERROR:  tid (0, 1) is not valid for relation "tid_matview"
2024-09-08 14:51:55.771 KST client backend[3075880] pg_regress/tid STATEMENT:  SELECT currtid2('tid_matview'::text, '(0,1)'::tid);
2024-09-08 14:51:55.772 KST client backend[3075870] pg_regress/create_table_like ERROR:  column "xx" specified more than once
2024-09-08 14:51:55.772 KST client backend[3075870] pg_regress/create_table_like STATEMENT:  /* Has ee entry */
	CREATE TABLE inhf (LIKE inhx, LIKE inhx);
2024-09-08 14:51:55.772 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to alter role
2024-09-08 14:51:55.772 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the SUPERUSER attribute may change the SUPERUSER attribute.
2024-09-08 14:51:55.772 KST client backend[3075883] pg_regress/create_role STATEMENT:  ALTER ROLE regress_createdb SUPERUSER;
2024-09-08 14:51:55.772 KST client backend[3075869] pg_regress/alter_generic ERROR:  conversion "alt_conv2" already exists in schema "alt_nsp1"
2024-09-08 14:51:55.772 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER CONVERSION alt_conv1 RENAME TO alt_conv2;
2024-09-08 14:51:55.772 KST client backend[3075878] pg_regress/tidscan ERROR:  cursor "c" is not positioned on a row
2024-09-08 14:51:55.772 KST client backend[3075878] pg_regress/tidscan STATEMENT:  EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
	UPDATE tidscan SET id = -id WHERE CURRENT OF c RETURNING *;
2024-09-08 14:51:55.772 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to alter role
2024-09-08 14:51:55.772 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the SUPERUSER attribute may change the SUPERUSER attribute.
2024-09-08 14:51:55.772 KST client backend[3075883] pg_regress/create_role STATEMENT:  ALTER ROLE regress_createdb NOSUPERUSER;
2024-09-08 14:51:55.772 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user2"
2024-09-08 14:51:55.772 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER CONVERSION alt_conv2 OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.772 KST checkpointer[3075129] LOG:  logging memory contexts of PID 3075129
2024-09-08 14:51:55.773 KST checkpointer[3075129] LOG:  level: 0; TopMemoryContext: 49232 total in 2 blocks; 5672 free (0 chunks); 43560 used
2024-09-08 14:51:55.773 KST checkpointer[3075129] LOG:  level: 1; Checkpointer: 8192 total in 1 blocks; 7928 free (0 chunks); 264 used
2024-09-08 14:51:55.773 KST checkpointer[3075129] LOG:  level: 1; WAL record construction: 49760 total in 2 blocks; 6376 free (0 chunks); 43384 used
2024-09-08 14:51:55.773 KST checkpointer[3075129] LOG:  level: 1; PrivateRefCount: 8192 total in 1 blocks; 2648 free (0 chunks); 5544 used
2024-09-08 14:51:55.773 KST checkpointer[3075129] LOG:  level: 1; MdSmgr: 8192 total in 1 blocks; 7928 free (0 chunks); 264 used
2024-09-08 14:51:55.773 KST checkpointer[3075129] LOG:  level: 1; Pending ops context: 294960 total in 7 blocks; 141968 free (22 chunks); 152992 used
2024-09-08 14:51:55.773 KST checkpointer[3075129] LOG:  level: 2; Pending Ops Table: 262144 total in 6 blocks; 50800 free (19 chunks); 211344 used
2024-09-08 14:51:55.773 KST checkpointer[3075129] LOG:  level: 1; LOCALLOCK hash: 8192 total in 1 blocks; 592 free (0 chunks); 7600 used
2024-09-08 14:51:55.773 KST checkpointer[3075129] LOG:  level: 1; GUCMemoryContext: 24576 total in 2 blocks; 11344 free (12 chunks); 13232 used
2024-09-08 14:51:55.773 KST checkpointer[3075129] LOG:  level: 2; GUC hash table: 32768 total in 3 blocks; 12704 free (5 chunks); 20064 used
2024-09-08 14:51:55.773 KST checkpointer[3075129] LOG:  level: 1; Timezones: 104112 total in 2 blocks; 2648 free (0 chunks); 101464 used
2024-09-08 14:51:55.773 KST checkpointer[3075129] LOG:  level: 1; ErrorContext: 8192 total in 1 blocks; 7928 free (3 chunks); 264 used
2024-09-08 14:51:55.773 KST checkpointer[3075129] LOG:  Grand total: 858512 bytes in 29 blocks; 258536 free (61 chunks); 599976 used
2024-09-08 14:51:55.773 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of conversion alt_conv3
2024-09-08 14:51:55.773 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER CONVERSION alt_conv3 RENAME TO alt_conv4;
2024-09-08 14:51:55.773 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of conversion alt_conv3
2024-09-08 14:51:55.773 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER CONVERSION alt_conv3 OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  logging memory contexts of PID 3075875
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 0; TopMemoryContext: 97664 total in 5 blocks; 13472 free (16 chunks); 84192 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; TopTransactionContext: 8192 total in 1 blocks; 7752 free (1 chunks); 440 used
2024-09-08 14:51:55.773 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user3"
2024-09-08 14:51:55.773 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER CONVERSION alt_conv2 OWNER TO regress_alter_generic_user3;
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; Type information cache: 24368 total in 2 blocks; 2648 free (0 chunks); 21720 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; Record information cache: 8192 total in 1 blocks; 1616 free (0 chunks); 6576 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; CFuncHash: 8192 total in 1 blocks; 592 free (0 chunks); 7600 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; Operator lookup cache: 24576 total in 2 blocks; 10792 free (3 chunks); 13784 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; RowDescriptionContext: 8192 total in 1 blocks; 6896 free (0 chunks); 1296 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; MessageContext: 16384 total in 2 blocks; 6032 free (1 chunks); 10352 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; Operator class cache: 8192 total in 1 blocks; 592 free (0 chunks); 7600 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; smgr relation table: 32768 total in 3 blocks; 16880 free (8 chunks); 15888 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; PgStat Shared Ref Hash: 7216 total in 2 blocks; 688 free (0 chunks); 6528 used
2024-09-08 14:51:55.773 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of conversion alt_conv3
2024-09-08 14:51:55.773 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER CONVERSION alt_conv3 SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; PgStat Shared Ref: 8192 total in 4 blocks; 3560 free (4 chunks); 4632 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; PgStat Pending: 16384 total in 5 blocks; 1968 free (10 chunks); 14416 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; TransactionAbortContext: 32768 total in 1 blocks; 32504 free (0 chunks); 264 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; Portal hash: 8192 total in 1 blocks; 592 free (0 chunks); 7600 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; TopPortalContext: 8192 total in 1 blocks; 7664 free (0 chunks); 528 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; PortalContext: 1024 total in 1 blocks; 608 free (0 chunks); 416 used: <unnamed>
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 3; ExecutorState: 8192 total in 1 blocks; 3920 free (0 chunks); 4272 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 4; printtup: 8192 total in 1 blocks; 7928 free (0 chunks); 264 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 4; ExprContext: 8192 total in 1 blocks; 7928 free (0 chunks); 264 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; Relcache by OID: 16384 total in 2 blocks; 3584 free (2 chunks); 12800 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; CacheMemoryContext: 524288 total in 7 blocks; 6632 free (0 chunks); 517656 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 544 free (1 chunks); 1504 used: pg_shdepend_reference_index
2024-09-08 14:51:55.773 KST client backend[3075869] pg_regress/alter_generic ERROR:  conversion "alt_conv2" already exists in schema "alt_nsp2"
2024-09-08 14:51:55.773 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER CONVERSION alt_conv2 SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 808 free (1 chunks); 2264 used: pg_shdepend_depender_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_statistic_ext_relid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 616 free (1 chunks); 1432 used: pg_toast_2618_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; relation rules: 32768 total in 7 blocks; 2784 free (2 chunks); 29984 used: pg_stat_activity
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 944 free (1 chunks); 2128 used: pg_depend_reference_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 944 free (1 chunks); 2128 used: pg_depend_depender_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_index_indrelid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; EventTriggerCache: 8192 total in 1 blocks; 7928 free (4 chunks); 264 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 3; Event Trigger Cache: 8192 total in 1 blocks; 2648 free (0 chunks); 5544 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 512 free (2 chunks); 1536 used: pg_db_role_setting_databaseid_rol_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1088 free (2 chunks); 1984 used: pg_opclass_am_name_nsp_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 40 free (0 chunks); 984 used: pg_foreign_data_wrapper_name_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_enum_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 544 free (2 chunks); 1504 used: pg_class_relname_nsp_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_foreign_server_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_publication_pubname_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1200 free (3 chunks); 1872 used: pg_statistic_relid_att_inh_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 544 free (2 chunks); 1504 used: pg_cast_source_target_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_language_name_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_transform_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_collation_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 808 free (3 chunks); 2264 used: pg_amop_fam_strat_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_index_indexrelid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_ts_template_tmplname_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1232 free (3 chunks); 1840 used: pg_ts_config_map_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_opclass_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 40 free (0 chunks); 984 used: pg_foreign_data_wrapper_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 40 free (0 chunks); 984 used: pg_publication_namespace_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_event_trigger_evtname_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_statistic_ext_name_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_publication_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_ts_dict_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_event_trigger_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1168 free (3 chunks); 1904 used: pg_conversion_default_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 880 free (3 chunks); 2192 used: pg_operator_oprname_l_r_n_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_trigger_tgrelid_tgname_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_enum_typid_label_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_ts_config_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_user_mapping_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1232 free (3 chunks); 1840 used: pg_opfamily_am_name_nsp_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_foreign_table_relid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_type_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_aggregate_fnoid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_constraint_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 616 free (2 chunks); 1432 used: pg_rewrite_rel_rulename_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_ts_parser_prsname_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_ts_config_cfgname_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_ts_parser_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 728 free (1 chunks); 1320 used: pg_publication_rel_prrelid_prpubid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_operator_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_namespace_nspname_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_ts_template_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1088 free (2 chunks); 1984 used: pg_amop_opr_fam_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 912 free (2 chunks); 2160 used: pg_default_acl_role_nsp_obj_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1232 free (3 chunks); 1840 used: pg_collation_name_enc_nsp_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_publication_rel_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_range_rngtypid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_ts_dict_dictname_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 544 free (2 chunks); 1504 used: pg_type_typname_nsp_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_opfamily_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_statistic_ext_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 728 free (1 chunks); 1320 used: pg_statistic_ext_data_stxoid_inh_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_class_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 944 free (2 chunks); 2128 used: pg_proc_proname_args_nsp_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 40 free (0 chunks); 984 used: pg_partitioned_table_partrelid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_range_rngmultitypid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 544 free (2 chunks); 1504 used: pg_transform_type_lang_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 544 free (2 chunks); 1504 used: pg_attribute_relid_attnum_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_proc_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_language_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_namespace_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 808 free (3 chunks); 2264 used: pg_amproc_fam_proc_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_foreign_server_name_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_attribute_relid_attnam_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 728 free (1 chunks); 1320 used: pg_publication_namespace_pnnspid_pnpubid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_conversion_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 728 free (1 chunks); 1320 used: pg_user_mapping_user_server_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 728 free (1 chunks); 1320 used: pg_subscription_rel_srrelid_srsubid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_sequence_seqrelid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_conversion_name_nsp_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_authid_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1056 free (2 chunks); 2016 used: pg_auth_members_member_role_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_subscription_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_parameter_acl_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_tablespace_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 72 free (0 chunks); 952 used: pg_parameter_acl_parname_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1232 free (3 chunks); 1840 used: pg_shseclabel_object_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 40 free (0 chunks); 984 used: pg_replication_origin_roname_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_database_datname_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 760 free (2 chunks); 1288 used: pg_subscription_subname_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 1024 total in 1 blocks; 40 free (0 chunks); 984 used: pg_replication_origin_roiident_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 3072 total in 2 blocks; 1200 free (3 chunks); 1872 used: pg_auth_members_role_member_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_database_oid_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; index info: 2048 total in 2 blocks; 912 free (0 chunks); 1136 used: pg_authid_rolname_index
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; WAL record construction: 49760 total in 2 blocks; 6376 free (0 chunks); 43384 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; PrivateRefCount: 8192 total in 1 blocks; 2648 free (0 chunks); 5544 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; MdSmgr: 8192 total in 1 blocks; 7736 free (0 chunks); 456 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; LOCALLOCK hash: 8192 total in 1 blocks; 592 free (0 chunks); 7600 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; GUCMemoryContext: 40960 total in 3 blocks; 27304 free (17 chunks); 13656 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 2; GUC hash table: 32768 total in 3 blocks; 12704 free (5 chunks); 20064 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; Timezones: 104112 total in 2 blocks; 2648 free (0 chunks); 101464 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  level: 1; ErrorContext: 8192 total in 1 blocks; 7928 free (3 chunks); 264 used
2024-09-08 14:51:55.773 KST client backend[3075875] pg_regress/misc_functions LOG:  Grand total: 1365488 bytes in 219 blocks; 278016 free (160 chunks); 1087472 used
2024-09-08 14:51:55.774 KST client backend[3075869] pg_regress/alter_generic ERROR:  foreign-data wrapper "alt_fdw2" already exists
2024-09-08 14:51:55.774 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER FOREIGN DATA WRAPPER alt_fdw1 RENAME TO alt_fdw2;
2024-09-08 14:51:55.774 KST client backend[3075869] pg_regress/alter_generic ERROR:  server "alt_fserv2" already exists
2024-09-08 14:51:55.774 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER SERVER alt_fserv1 RENAME TO alt_fserv2;
2024-09-08 14:51:55.774 KST client backend[3075880] pg_regress/tid ERROR:  cannot open relation "tid_ind"
2024-09-08 14:51:55.774 KST client backend[3075880] pg_regress/tid DETAIL:  This operation is not supported for indexes.
2024-09-08 14:51:55.774 KST client backend[3075880] pg_regress/tid STATEMENT:  SELECT currtid2('tid_ind'::text, '(0,1)'::tid);
2024-09-08 14:51:55.775 KST client backend[3075879] pg_regress/tsrf ERROR:  set-returning functions are not allowed in CASE at character 34
2024-09-08 14:51:55.775 KST client backend[3075879] pg_regress/tsrf HINT:  You might be able to move the set-returning function into a LATERAL FROM item.
2024-09-08 14:51:55.775 KST client backend[3075879] pg_regress/tsrf STATEMENT:  SELECT q1, case when q1 > 0 then generate_series(1,3) else 0 end FROM int8_tbl;
2024-09-08 14:51:55.775 KST client backend[3075879] pg_regress/tsrf ERROR:  set-returning functions are not allowed in COALESCE at character 21
2024-09-08 14:51:55.775 KST client backend[3075879] pg_regress/tsrf HINT:  You might be able to move the set-returning function into a LATERAL FROM item.
2024-09-08 14:51:55.775 KST client backend[3075879] pg_regress/tsrf STATEMENT:  SELECT q1, coalesce(generate_series(1,3), 0) FROM int8_tbl;
2024-09-08 14:51:55.775 KST client backend[3075879] pg_regress/tsrf ERROR:  aggregate function calls cannot contain set-returning function calls at character 12
2024-09-08 14:51:55.775 KST client backend[3075879] pg_regress/tsrf HINT:  You might be able to move the set-returning function into a LATERAL FROM item.
2024-09-08 14:51:55.775 KST client backend[3075879] pg_regress/tsrf STATEMENT:  SELECT min(generate_series(1, 3)) FROM few;
2024-09-08 14:51:55.775 KST client backend[3075880] pg_regress/tid ERROR:  cannot look at latest visible tid for relation "public.tid_part"
2024-09-08 14:51:55.775 KST client backend[3075880] pg_regress/tid STATEMENT:  SELECT currtid2('tid_part'::text, '(0,1)'::tid);
2024-09-08 14:51:55.775 KST client backend[3075869] pg_regress/alter_generic ERROR:  language "alt_lang2" already exists
2024-09-08 14:51:55.775 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER LANGUAGE alt_lang1 RENAME TO alt_lang2;
2024-09-08 14:51:55.775 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of language alt_lang2
2024-09-08 14:51:55.775 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER LANGUAGE alt_lang2 RENAME TO alt_lang3;
2024-09-08 14:51:55.775 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of language alt_lang2
2024-09-08 14:51:55.775 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER LANGUAGE alt_lang2 OWNER TO regress_alter_generic_user3;
2024-09-08 14:51:55.775 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user2"
2024-09-08 14:51:55.775 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER LANGUAGE alt_lang3 OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.775 KST client backend[3075874] pg_regress/merge ERROR:  syntax error at or near "RANDOMWORD" at character 21
2024-09-08 14:51:55.775 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target t RANDOMWORD
	USING source AS s
	ON t.tid = s.sid
	WHEN MATCHED THEN
		UPDATE SET balance = 0;
2024-09-08 14:51:55.775 KST client backend[3075879] pg_regress/tsrf ERROR:  window function calls cannot contain set-returning function calls at character 12
2024-09-08 14:51:55.775 KST client backend[3075879] pg_regress/tsrf HINT:  You might be able to move the set-returning function into a LATERAL FROM item.
2024-09-08 14:51:55.775 KST client backend[3075879] pg_regress/tsrf STATEMENT:  SELECT min(generate_series(1, 3)) OVER() FROM few;
2024-09-08 14:51:55.775 KST client backend[3075880] pg_regress/tid ERROR:  currtid cannot handle views with no CTID
2024-09-08 14:51:55.775 KST client backend[3075880] pg_regress/tid STATEMENT:  SELECT currtid2('tid_view_no_ctid'::text, '(0,1)'::tid);
2024-09-08 14:51:55.775 KST client backend[3075874] pg_regress/merge ERROR:  syntax error at or near "INSERT" at character 75
2024-09-08 14:51:55.775 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target t
	USING source AS s
	ON t.tid = s.sid
	WHEN MATCHED THEN
		INSERT DEFAULT VALUES;
2024-09-08 14:51:55.775 KST client backend[3075874] pg_regress/merge ERROR:  syntax error at or near "INTO" at character 86
2024-09-08 14:51:55.775 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target t
	USING source AS s
	ON t.tid = s.sid
	WHEN NOT MATCHED THEN
		INSERT INTO target DEFAULT VALUES;
2024-09-08 14:51:55.776 KST client backend[3075874] pg_regress/merge ERROR:  syntax error at or near "," at character 98
2024-09-08 14:51:55.776 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target t
	USING source AS s
	ON t.tid = s.sid
	WHEN NOT MATCHED THEN
		INSERT VALUES (1,1), (2,2);
2024-09-08 14:51:55.776 KST client backend[3075875] pg_regress/misc_functions ERROR:  could not open file "does not exist" for reading: No such file or directory
2024-09-08 14:51:55.776 KST client backend[3075875] pg_regress/misc_functions STATEMENT:  select pg_read_file('does not exist');
2024-09-08 14:51:55.776 KST client backend[3075874] pg_regress/merge ERROR:  syntax error at or near "SELECT" at character 86
2024-09-08 14:51:55.776 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target t
	USING source AS s
	ON t.tid = s.sid
	WHEN NOT MATCHED THEN
		INSERT SELECT (1, 1);
2024-09-08 14:51:55.776 KST client backend[3075874] pg_regress/merge ERROR:  syntax error at or near "UPDATE" at character 79
2024-09-08 14:51:55.776 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target t
	USING source AS s
	ON t.tid = s.sid
	WHEN NOT MATCHED THEN
		UPDATE SET balance = 0;
2024-09-08 14:51:55.776 KST client backend[3075875] pg_regress/misc_functions ERROR:  requested length cannot be negative
2024-09-08 14:51:55.776 KST client backend[3075875] pg_regress/misc_functions STATEMENT:  select pg_read_file('does not exist', 0, -1);
2024-09-08 14:51:55.776 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user2"
2024-09-08 14:51:55.776 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR @+@(int4, int4) OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.776 KST client backend[3075875] pg_regress/misc_functions ERROR:  requested length cannot be negative
2024-09-08 14:51:55.776 KST client backend[3075875] pg_regress/misc_functions STATEMENT:  select pg_read_file('does not exist', 0, -1, true);
2024-09-08 14:51:55.776 KST client backend[3075874] pg_regress/merge ERROR:  syntax error at or near "target" at character 82
2024-09-08 14:51:55.776 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target t
	USING source AS s
	ON t.tid = s.sid
	WHEN MATCHED THEN
		UPDATE target SET balance = 0;
2024-09-08 14:51:55.776 KST client backend[3075874] pg_regress/merge ERROR:  name "target" specified more than once
2024-09-08 14:51:55.776 KST client backend[3075874] pg_regress/merge DETAIL:  The name is used both as MERGE target table and data source.
2024-09-08 14:51:55.776 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target
	USING target
	ON tid = tid
	WHEN MATCHED THEN DO NOTHING;
2024-09-08 14:51:55.776 KST client backend[3075880] pg_regress/tid ERROR:  tid (0, 1) is not valid for relation "tid_tab"
2024-09-08 14:51:55.776 KST client backend[3075880] pg_regress/tid STATEMENT:  SELECT currtid2('tid_view_with_ctid'::text, '(0,1)'::tid);
2024-09-08 14:51:55.776 KST client backend[3075874] pg_regress/merge ERROR:  MERGE not supported in WITH query at character 6
2024-09-08 14:51:55.776 KST client backend[3075874] pg_regress/merge STATEMENT:  WITH foo AS (
	  MERGE INTO target USING source ON (true)
	  WHEN MATCHED THEN DELETE
	) SELECT * FROM foo;
2024-09-08 14:51:55.776 KST client backend[3075875] pg_regress/misc_functions ERROR:  could not open file "does not exist" for reading: No such file or directory
2024-09-08 14:51:55.776 KST client backend[3075875] pg_regress/misc_functions STATEMENT:  select pg_read_binary_file('does not exist');
2024-09-08 14:51:55.776 KST client backend[3075874] pg_regress/merge ERROR:  MERGE not supported in COPY
2024-09-08 14:51:55.776 KST client backend[3075874] pg_regress/merge STATEMENT:  COPY (
	  MERGE INTO target USING source ON (true)
	  WHEN MATCHED THEN DELETE
	) TO stdout;
2024-09-08 14:51:55.776 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of operator @+@
2024-09-08 14:51:55.776 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR @+@(int4, int4) OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.776 KST client backend[3075875] pg_regress/misc_functions ERROR:  requested length cannot be negative
2024-09-08 14:51:55.776 KST client backend[3075875] pg_regress/misc_functions STATEMENT:  select pg_read_binary_file('does not exist', 0, -1);
2024-09-08 14:51:55.776 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user3"
2024-09-08 14:51:55.776 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR @-@(int4, int4) OWNER TO regress_alter_generic_user3;
2024-09-08 14:51:55.776 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of operator @+@
2024-09-08 14:51:55.776 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR @+@(int4, int4) SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.776 KST client backend[3075875] pg_regress/misc_functions ERROR:  requested length cannot be negative
2024-09-08 14:51:55.776 KST client backend[3075875] pg_regress/misc_functions STATEMENT:  select pg_read_binary_file('does not exist', 0, -1, true);
2024-09-08 14:51:55.776 KST client backend[3075875] pg_regress/misc_functions ERROR:  could not open directory "does not exist": No such file or directory
2024-09-08 14:51:55.776 KST client backend[3075875] pg_regress/misc_functions STATEMENT:  select pg_ls_dir('does not exist', false, false);
2024-09-08 14:51:55.777 KST client backend[3075870] pg_regress/create_table_like ERROR:  new row for relation "inhg" violates check constraint "foo"
2024-09-08 14:51:55.777 KST client backend[3075870] pg_regress/create_table_like DETAIL:  Failing row contains (x, foo, y).
2024-09-08 14:51:55.777 KST client backend[3075870] pg_regress/create_table_like STATEMENT:  /* Succeeds -- Unique constraints not copied */
	INSERT INTO inhg VALUES ('x', 'foo',  'y');
2024-09-08 14:51:55.777 KST client backend[3075880] pg_regress/tid ERROR:  ctid isn't of type TID
2024-09-08 14:51:55.777 KST client backend[3075880] pg_regress/tid STATEMENT:  SELECT currtid2('tid_view_fake_ctid'::text, '(0,1)'::tid);
2024-09-08 14:51:55.777 KST client backend[3075874] pg_regress/merge ERROR:  cannot execute MERGE on relation "tv"
2024-09-08 14:51:55.777 KST client backend[3075874] pg_regress/merge DETAIL:  This operation is not supported for views.
2024-09-08 14:51:55.777 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO tv t
	USING source s
	ON t.tid = s.sid
	WHEN NOT MATCHED THEN
		INSERT DEFAULT VALUES;
2024-09-08 14:51:55.777 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  collation "ja_JP.eucjp-x-icu" for encoding "UTF8" does not exist at character 56
2024-09-08 14:51:55.777 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  CREATE TABLE collate_test_fail (
	    a int,
	    b text COLLATE "ja_JP.eucjp-x-icu"
	);
2024-09-08 14:51:55.777 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  collation "foo-x-icu" for encoding "UTF8" does not exist at character 56
2024-09-08 14:51:55.777 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  CREATE TABLE collate_test_fail (
	    a int,
	    b text COLLATE "foo-x-icu"
	);
2024-09-08 14:51:55.777 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  collations are not supported by type integer at character 44
2024-09-08 14:51:55.777 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  CREATE TABLE collate_test_fail (
	    a int COLLATE "en-x-icu",
	    b text
	);
2024-09-08 14:51:55.778 KST client backend[3075869] pg_regress/alter_generic ERROR:  operator family "alt_opf2" for access method "hash" already exists in schema "alt_nsp1"
2024-09-08 14:51:55.778 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf1 USING hash RENAME TO alt_opf2;
2024-09-08 14:51:55.778 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user2"
2024-09-08 14:51:55.778 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf2 USING hash OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.778 KST client backend[3075879] pg_regress/tsrf ERROR:  set-returning functions are not allowed in UPDATE at character 27
2024-09-08 14:51:55.778 KST client backend[3075879] pg_regress/tsrf STATEMENT:  UPDATE fewmore SET data = generate_series(4,9);
2024-09-08 14:51:55.778 KST client backend[3075879] pg_regress/tsrf ERROR:  set-returning functions are not allowed in RETURNING at character 41
2024-09-08 14:51:55.778 KST client backend[3075879] pg_regress/tsrf STATEMENT:  INSERT INTO fewmore VALUES(1) RETURNING generate_series(1,3);
2024-09-08 14:51:55.778 KST client backend[3075879] pg_regress/tsrf ERROR:  set-returning functions are not allowed in VALUES at character 11
2024-09-08 14:51:55.778 KST client backend[3075879] pg_regress/tsrf STATEMENT:  VALUES(1, generate_series(1,2));
2024-09-08 14:51:55.778 KST client backend[3075869] pg_regress/alter_generic ERROR:  operator class "alt_opc2" for access method "hash" already exists in schema "alt_nsp1"
2024-09-08 14:51:55.778 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR CLASS alt_opc1 USING hash RENAME TO alt_opc2;
2024-09-08 14:51:55.778 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user2"
2024-09-08 14:51:55.778 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR CLASS alt_opc2 USING hash OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.778 KST client backend[3075879] pg_regress/tsrf ERROR:  set-returning functions must appear at top level of FROM at character 23
2024-09-08 14:51:55.778 KST client backend[3075879] pg_regress/tsrf STATEMENT:  SELECT * FROM int4mul(generate_series(1,2), 10);
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of operator family alt_opf3
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf3 USING hash RENAME TO alt_opf4;
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of operator family alt_opf3
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf3 USING hash OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user3"
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf2 USING hash OWNER TO regress_alter_generic_user3;
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of operator family alt_opf3
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf3 USING hash SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.779 KST client backend[3075879] pg_regress/tsrf ERROR:  set-returning functions are not allowed in LIMIT at character 16
2024-09-08 14:51:55.779 KST client backend[3075879] pg_regress/tsrf STATEMENT:  SELECT 1 LIMIT generate_series(1,3);
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic ERROR:  operator family "alt_opf2" for access method "hash" already exists in schema "alt_nsp2"
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf2 USING hash SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of operator class alt_opc3
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR CLASS alt_opc3 USING hash RENAME TO alt_opc4;
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of operator class alt_opc3
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR CLASS alt_opc3 USING hash OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user3"
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR CLASS alt_opc2 USING hash OWNER TO regress_alter_generic_user3;
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of operator class alt_opc3
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR CLASS alt_opc3 USING hash SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic ERROR:  operator class "alt_opc2" for access method "hash" already exists in schema "alt_nsp2"
2024-09-08 14:51:55.779 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR CLASS alt_opc2 USING hash SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.780 KST client backend[3075874] pg_regress/merge ERROR:  cannot execute MERGE on relation "mv"
2024-09-08 14:51:55.780 KST client backend[3075874] pg_regress/merge DETAIL:  This operation is not supported for materialized views.
2024-09-08 14:51:55.780 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO mv t
	USING source s
	ON t.tid = s.sid
	WHEN NOT MATCHED THEN
		INSERT DEFAULT VALUES;
2024-09-08 14:51:55.781 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to grant role "regress_role_super"
2024-09-08 14:51:55.781 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the SUPERUSER attribute may grant roles with the SUPERUSER attribute.
2024-09-08 14:51:55.781 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_nosuch_super IN ROLE regress_role_super;
2024-09-08 14:51:55.781 KST client backend[3075883] pg_regress/create_role ERROR:  role "pg_database_owner" cannot have explicit members
2024-09-08 14:51:55.781 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_nosuch_dbowner IN ROLE pg_database_owner;
2024-09-08 14:51:55.781 KST client backend[3075874] pg_regress/merge ERROR:  permission denied for table source2
2024-09-08 14:51:55.781 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target
	USING source2
	ON target.tid = source2.sid
	WHEN MATCHED THEN
		UPDATE SET balance = 0;
2024-09-08 14:51:55.782 KST client backend[3075883] pg_regress/create_role ERROR:  role "regress_nosuch_recursive" is a member of role "regress_nosuch_recursive"
2024-09-08 14:51:55.782 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_nosuch_recursive ROLE regress_nosuch_recursive;
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic ERROR:  access method "invalid_index_method" does not exist
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf4 USING invalid_index_method ADD  OPERATOR 1 < (int4, int2);
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic ERROR:  invalid operator number 6, must be between 1 and 5
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf4 USING btree ADD OPERATOR 6 < (int4, int2);
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic ERROR:  invalid operator number 0, must be between 1 and 5
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf4 USING btree ADD OPERATOR 0 < (int4, int2);
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic ERROR:  operator argument types must be specified in ALTER OPERATOR FAMILY
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf4 USING btree ADD OPERATOR 1 < ;
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic ERROR:  invalid function number 0, must be between 1 and 5
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf4 USING btree ADD FUNCTION 0 btint42cmp(int4, int2);
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic ERROR:  invalid function number 6, must be between 1 and 5
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf4 USING btree ADD FUNCTION 6 btint42cmp(int4, int2);
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic ERROR:  STORAGE cannot be specified in ALTER OPERATOR FAMILY
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf4 USING btree ADD STORAGE invalid_storage;
2024-09-08 14:51:55.782 KST client backend[3075883] pg_regress/create_role ERROR:  role "regress_nosuch_admin_recursive" is a member of role "regress_nosuch_admin_recursive"
2024-09-08 14:51:55.782 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_nosuch_admin_recursive ADMIN regress_nosuch_admin_recursive;
2024-09-08 14:51:55.782 KST client backend[3075874] pg_regress/merge ERROR:  permission denied for table target
2024-09-08 14:51:55.782 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target
	USING source2
	ON target.tid = source2.sid
	WHEN MATCHED THEN
		UPDATE SET balance = 0;
2024-09-08 14:51:55.782 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to create database
2024-09-08 14:51:55.782 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE DATABASE regress_nosuch_db;
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be superuser to alter an operator family
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf5 USING btree ADD OPERATOR 1 < (int4, int2), FUNCTION 1 btint42cmp(int4, int2);
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic ERROR:  current transaction is aborted, commands ignored until end of transaction block
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  RESET ROLE;
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic ERROR:  current transaction is aborted, commands ignored until end of transaction block
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  DROP OPERATOR FAMILY alt_opf5 USING btree;
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic ERROR:  permission denied for schema alt_nsp6
2024-09-08 14:51:55.782 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_nsp6.alt_opf6 USING btree ADD OPERATOR 1 < (int4, int2);
2024-09-08 14:51:55.782 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied
2024-09-08 14:51:55.782 KST client backend[3075883] pg_regress/create_role DETAIL:  The current user must have the ADMIN option on role "regress_role_normal".
2024-09-08 14:51:55.782 KST client backend[3075883] pg_regress/create_role STATEMENT:  COMMENT ON ROLE regress_role_normal IS 'some comment';
2024-09-08 14:51:55.782 KST client backend[3075874] pg_regress/merge ERROR:  permission denied for table target2
2024-09-08 14:51:55.782 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target2
	USING source
	ON target2.tid = source.sid
	WHEN MATCHED THEN
		DELETE;
2024-09-08 14:51:55.783 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to rename role
2024-09-08 14:51:55.783 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the CREATEROLE attribute and the ADMIN option on role "regress_role_normal" may rename this role.
2024-09-08 14:51:55.783 KST client backend[3075883] pg_regress/create_role STATEMENT:  ALTER ROLE regress_role_normal RENAME TO regress_role_abnormal;
2024-09-08 14:51:55.783 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to alter role
2024-09-08 14:51:55.783 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the CREATEROLE attribute and the ADMIN option on role "regress_role_normal" may alter this role.
2024-09-08 14:51:55.783 KST client backend[3075883] pg_regress/create_role STATEMENT:  ALTER ROLE regress_role_normal NOINHERIT NOLOGIN CONNECTION LIMIT 7;
2024-09-08 14:51:55.783 KST client backend[3075874] pg_regress/merge ERROR:  permission denied for table target2
2024-09-08 14:51:55.783 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target2
	USING source
	ON target2.tid = source.sid
	WHEN NOT MATCHED THEN
		INSERT DEFAULT VALUES;
2024-09-08 14:51:55.783 KST client backend[3075869] pg_regress/alter_generic ERROR:  one or two argument types must be specified
2024-09-08 14:51:55.783 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf7 USING btree DROP OPERATOR 1 (int4, int2, int8);
2024-09-08 14:51:55.783 KST client backend[3075874] pg_regress/merge ERROR:  invalid reference to FROM-clause entry for table "t" at character 55
2024-09-08 14:51:55.783 KST client backend[3075874] pg_regress/merge DETAIL:  There is an entry for table "t", but it cannot be referenced from this part of the query.
2024-09-08 14:51:55.783 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target t
	USING (SELECT * FROM source WHERE t.tid > sid) s
	ON t.tid = s.sid
	WHEN NOT MATCHED THEN
		INSERT DEFAULT VALUES;
2024-09-08 14:51:55.783 KST client backend[3075869] pg_regress/alter_generic ERROR:  access method "btree" does not support ordering operators
2024-09-08 14:51:55.783 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf10 USING btree ADD OPERATOR 1 < (int4, int4) FOR ORDER BY float_ops;
2024-09-08 14:51:55.784 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  collation mismatch between explicit collations "C" and "en-x-icu" at character 58
2024-09-08 14:51:55.784 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT * FROM collate_test1 WHERE b COLLATE "C" >= 'bbc' COLLATE "en-x-icu";
2024-09-08 14:51:55.784 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  collations are not supported by type integer
2024-09-08 14:51:55.784 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  CREATE DOMAIN testdomain_i AS int COLLATE "sv-x-icu";
2024-09-08 14:51:55.784 KST client backend[3075869] pg_regress/alter_generic ERROR:  btree comparison functions must return integer
2024-09-08 14:51:55.784 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf12 USING btree ADD FUNCTION 1 fn_opf12(int4, int2);
2024-09-08 14:51:55.784 KST client backend[3075869] pg_regress/alter_generic ERROR:  current transaction is aborted, commands ignored until end of transaction block
2024-09-08 14:51:55.784 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  DROP OPERATOR FAMILY alt_opf12 USING btree;
2024-09-08 14:51:55.784 KST client backend[3075869] pg_regress/alter_generic ERROR:  hash function 1 must return integer
2024-09-08 14:51:55.784 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf13 USING hash ADD FUNCTION 1 fn_opf13(int4);
2024-09-08 14:51:55.784 KST client backend[3075869] pg_regress/alter_generic ERROR:  current transaction is aborted, commands ignored until end of transaction block
2024-09-08 14:51:55.784 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  DROP OPERATOR FAMILY alt_opf13 USING hash;
2024-09-08 14:51:55.785 KST client backend[3075869] pg_regress/alter_generic ERROR:  btree comparison functions must have two arguments
2024-09-08 14:51:55.785 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf14 USING btree ADD FUNCTION 1 fn_opf14(int4);
2024-09-08 14:51:55.785 KST client backend[3075869] pg_regress/alter_generic ERROR:  current transaction is aborted, commands ignored until end of transaction block
2024-09-08 14:51:55.785 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  DROP OPERATOR FAMILY alt_opf14 USING btree;
2024-09-08 14:51:55.785 KST client backend[3075869] pg_regress/alter_generic ERROR:  hash function 1 must have one argument
2024-09-08 14:51:55.785 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf15 USING hash ADD FUNCTION 1 fn_opf15(int4, int2);
2024-09-08 14:51:55.785 KST client backend[3075869] pg_regress/alter_generic ERROR:  current transaction is aborted, commands ignored until end of transaction block
2024-09-08 14:51:55.785 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  DROP OPERATOR FAMILY alt_opf15 USING hash;
2024-09-08 14:51:55.785 KST client backend[3075869] pg_regress/alter_generic ERROR:  associated data types must be specified for index support function
2024-09-08 14:51:55.785 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf16 USING gist ADD FUNCTION 1 btint42cmp(int4, int2);
2024-09-08 14:51:55.785 KST client backend[3075869] pg_regress/alter_generic ERROR:  operator number 1 for (integer,integer) appears more than once
2024-09-08 14:51:55.785 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf17 USING btree ADD OPERATOR 1 < (int4, int4), OPERATOR 1 < (int4, int4);
2024-09-08 14:51:55.785 KST client backend[3075869] pg_regress/alter_generic ERROR:  operator 1(integer,integer) already exists in operator family "alt_opf17"
2024-09-08 14:51:55.785 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf17 USING btree ADD OPERATOR 1 < (int4, int4);
2024-09-08 14:51:55.785 KST client backend[3075883] pg_regress/create_role ERROR:  must be owner of index tenant_idx
2024-09-08 14:51:55.785 KST client backend[3075883] pg_regress/create_role STATEMENT:  DROP INDEX tenant_idx;
2024-09-08 14:51:55.785 KST client backend[3075869] pg_regress/alter_generic ERROR:  function number 1 for (integer,smallint) appears more than once
2024-09-08 14:51:55.785 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf17 USING btree ADD
	  OPERATOR 1 < (int4, int2) ,
	  OPERATOR 2 <= (int4, int2) ,
	  OPERATOR 3 = (int4, int2) ,
	  OPERATOR 4 >= (int4, int2) ,
	  OPERATOR 5 > (int4, int2) ,
	  FUNCTION 1 btint42cmp(int4, int2) ,
	  FUNCTION 1 btint42cmp(int4, int2);
2024-09-08 14:51:55.785 KST client backend[3075883] pg_regress/create_role ERROR:  must be owner of table tenant_table
2024-09-08 14:51:55.785 KST client backend[3075883] pg_regress/create_role STATEMENT:  ALTER TABLE tenant_table ADD COLUMN t text;
2024-09-08 14:51:55.785 KST client backend[3075883] pg_regress/create_role ERROR:  must be owner of table tenant_table
2024-09-08 14:51:55.785 KST client backend[3075883] pg_regress/create_role STATEMENT:  DROP TABLE tenant_table;
2024-09-08 14:51:55.785 KST client backend[3075883] pg_regress/create_role ERROR:  must be owner of view tenant_view
2024-09-08 14:51:55.785 KST client backend[3075883] pg_regress/create_role STATEMENT:  ALTER VIEW tenant_view OWNER TO regress_role_admin;
2024-09-08 14:51:55.785 KST client backend[3075883] pg_regress/create_role ERROR:  must be owner of view tenant_view
2024-09-08 14:51:55.785 KST client backend[3075883] pg_regress/create_role STATEMENT:  DROP VIEW tenant_view;
2024-09-08 14:51:55.786 KST client backend[3075883] pg_regress/create_role ERROR:  must be able to SET ROLE "regress_tenant"
2024-09-08 14:51:55.786 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE SCHEMA regress_tenant_schema AUTHORIZATION regress_tenant;
2024-09-08 14:51:55.786 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to reassign objects
2024-09-08 14:51:55.786 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with privileges of role "regress_tenant" may reassign objects owned by it.
2024-09-08 14:51:55.786 KST client backend[3075883] pg_regress/create_role STATEMENT:  REASSIGN OWNED BY regress_tenant TO regress_createrole;
2024-09-08 14:51:55.786 KST client backend[3075869] pg_regress/alter_generic ERROR:  operator 1(integer,smallint) already exists in operator family "alt_opf17"
2024-09-08 14:51:55.786 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf17 USING btree ADD
	  OPERATOR 1 < (int4, int2) ,
	  OPERATOR 2 <= (int4, int2) ,
	  OPERATOR 3 = (int4, int2) ,
	  OPERATOR 4 >= (int4, int2) ,
	  OPERATOR 5 > (int4, int2) ,
	  FUNCTION 1 btint42cmp(int4, int2);
2024-09-08 14:51:55.786 KST client backend[3075869] pg_regress/alter_generic ERROR:  operator 1(integer,integer) does not exist in operator family "alt_opf18"
2024-09-08 14:51:55.786 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf18 USING btree DROP OPERATOR 1 (int4, int4);
2024-09-08 14:51:55.786 KST client backend[3075869] pg_regress/alter_generic ERROR:  btree equal image functions must not be cross-type
2024-09-08 14:51:55.786 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf18 USING btree
	  ADD FUNCTION 4 (int4, int2) btequalimage(oid);
2024-09-08 14:51:55.786 KST client backend[3075869] pg_regress/alter_generic ERROR:  function 2(integer,integer) does not exist in operator family "alt_opf18"
2024-09-08 14:51:55.786 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf18 USING btree DROP FUNCTION 2 (int4, int4);
2024-09-08 14:51:55.787 KST client backend[3075869] pg_regress/alter_generic ERROR:  function test_opclass_options_func(internal, text[], boolean) does not exist
2024-09-08 14:51:55.787 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf19 USING btree ADD FUNCTION 5 test_opclass_options_func(internal, text[], bool);
2024-09-08 14:51:55.787 KST client backend[3075869] pg_regress/alter_generic ERROR:  invalid operator class options parsing function
2024-09-08 14:51:55.787 KST client backend[3075869] pg_regress/alter_generic HINT:  Valid signature of operator class options parsing function is (internal) RETURNS void.
2024-09-08 14:51:55.787 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf19 USING btree ADD FUNCTION 5 (int4) btint42cmp(int4, int2);
2024-09-08 14:51:55.787 KST client backend[3075869] pg_regress/alter_generic ERROR:  left and right associated data types for operator class options parsing functions must match
2024-09-08 14:51:55.787 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER OPERATOR FAMILY alt_opf19 USING btree ADD FUNCTION 5 (int4, int2) btint42cmp(int4, int2);
2024-09-08 14:51:55.787 KST client backend[3075883] pg_regress/create_role ERROR:  must be owner of table tenant2_table
2024-09-08 14:51:55.787 KST client backend[3075883] pg_regress/create_role STATEMENT:  ALTER TABLE tenant2_table OWNER TO regress_createrole;
2024-09-08 14:51:55.787 KST client backend[3075883] pg_regress/create_role ERROR:  must be able to SET ROLE "regress_tenant2"
2024-09-08 14:51:55.787 KST client backend[3075883] pg_regress/create_role STATEMENT:  ALTER TABLE tenant2_table OWNER TO regress_tenant2;
2024-09-08 14:51:55.788 KST client backend[3075870] pg_regress/create_table_like ERROR:  null value in column "a" of relation "test_like_id_2" violates not-null constraint
2024-09-08 14:51:55.788 KST client backend[3075870] pg_regress/create_table_like DETAIL:  Failing row contains (null, b2).
2024-09-08 14:51:55.788 KST client backend[3075870] pg_regress/create_table_like STATEMENT:  INSERT INTO test_like_id_2 (b) VALUES ('b2');
2024-09-08 14:51:55.788 KST client backend[3075869] pg_regress/alter_generic ERROR:  statistics object "alt_stat2" already exists in schema "alt_nsp1"
2024-09-08 14:51:55.788 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER STATISTICS alt_stat1 RENAME TO alt_stat2;
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to grant role "pg_read_all_data"
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the ADMIN option on role "pg_read_all_data" may grant this role.
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_read_all_data IN ROLE pg_read_all_data;
2024-09-08 14:51:55.788 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user2"
2024-09-08 14:51:55.788 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER STATISTICS alt_stat2 OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to grant role "pg_write_all_data"
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the ADMIN option on role "pg_write_all_data" may grant this role.
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_write_all_data IN ROLE pg_write_all_data;
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to grant role "pg_monitor"
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the ADMIN option on role "pg_monitor" may grant this role.
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_monitor IN ROLE pg_monitor;
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to grant role "pg_read_all_settings"
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the ADMIN option on role "pg_read_all_settings" may grant this role.
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_read_all_settings IN ROLE pg_read_all_settings;
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to grant role "pg_read_all_stats"
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the ADMIN option on role "pg_read_all_stats" may grant this role.
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_read_all_stats IN ROLE pg_read_all_stats;
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to grant role "pg_stat_scan_tables"
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the ADMIN option on role "pg_stat_scan_tables" may grant this role.
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_stat_scan_tables IN ROLE pg_stat_scan_tables;
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to grant role "pg_read_server_files"
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the ADMIN option on role "pg_read_server_files" may grant this role.
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_read_server_files IN ROLE pg_read_server_files;
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to grant role "pg_write_server_files"
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the ADMIN option on role "pg_write_server_files" may grant this role.
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_write_server_files IN ROLE pg_write_server_files;
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to grant role "pg_execute_server_program"
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the ADMIN option on role "pg_execute_server_program" may grant this role.
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_execute_server_program IN ROLE pg_execute_server_program;
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to grant role "pg_signal_backend"
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the ADMIN option on role "pg_signal_backend" may grant this role.
2024-09-08 14:51:55.788 KST client backend[3075883] pg_regress/create_role STATEMENT:  CREATE ROLE regress_signal_backend IN ROLE pg_signal_backend;
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role ERROR:  role "regress_tenant" cannot be dropped because some objects depend on it
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role DETAIL:  owner of table tenant_table
	owner of view tenant_view
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role STATEMENT:  DROP ROLE regress_tenant;
2024-09-08 14:51:55.789 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of statistics object alt_stat3
2024-09-08 14:51:55.789 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER STATISTICS alt_stat3 RENAME TO alt_stat4;
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role ERROR:  role "regress_nosuch_superuser" does not exist
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role STATEMENT:  DROP ROLE regress_nosuch_superuser;
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role ERROR:  role "regress_nosuch_replication_bypassrls" does not exist
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role STATEMENT:  DROP ROLE regress_nosuch_replication_bypassrls;
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role ERROR:  role "regress_nosuch_replication" does not exist
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role STATEMENT:  DROP ROLE regress_nosuch_replication;
2024-09-08 14:51:55.789 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of statistics object alt_stat3
2024-09-08 14:51:55.789 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER STATISTICS alt_stat3 OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role ERROR:  role "regress_nosuch_bypassrls" does not exist
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role STATEMENT:  DROP ROLE regress_nosuch_bypassrls;
2024-09-08 14:51:55.789 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user3"
2024-09-08 14:51:55.789 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER STATISTICS alt_stat2 OWNER TO regress_alter_generic_user3;
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role ERROR:  role "regress_nosuch_super" does not exist
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role STATEMENT:  DROP ROLE regress_nosuch_super;
2024-09-08 14:51:55.789 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of statistics object alt_stat3
2024-09-08 14:51:55.789 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER STATISTICS alt_stat3 SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role ERROR:  role "regress_nosuch_dbowner" does not exist
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role STATEMENT:  DROP ROLE regress_nosuch_dbowner;
2024-09-08 14:51:55.789 KST client backend[3075869] pg_regress/alter_generic ERROR:  statistics object "alt_stat2" already exists in schema "alt_nsp2"
2024-09-08 14:51:55.789 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER STATISTICS alt_stat2 SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role ERROR:  role "regress_nosuch_recursive" does not exist
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role STATEMENT:  DROP ROLE regress_nosuch_recursive;
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role ERROR:  role "regress_nosuch_admin_recursive" does not exist
2024-09-08 14:51:55.789 KST client backend[3075883] pg_regress/create_role STATEMENT:  DROP ROLE regress_nosuch_admin_recursive;
2024-09-08 14:51:55.790 KST client backend[3075869] pg_regress/alter_generic ERROR:  text search dictionary "alt_ts_dict2" already exists in schema "alt_nsp1"
2024-09-08 14:51:55.790 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER TEXT SEARCH DICTIONARY alt_ts_dict1 RENAME TO alt_ts_dict2;
2024-09-08 14:51:55.790 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user2"
2024-09-08 14:51:55.790 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER TEXT SEARCH DICTIONARY alt_ts_dict2 OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.790 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of text search dictionary alt_ts_dict3
2024-09-08 14:51:55.790 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER TEXT SEARCH DICTIONARY alt_ts_dict3 RENAME TO alt_ts_dict4;
2024-09-08 14:51:55.790 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of text search dictionary alt_ts_dict3
2024-09-08 14:51:55.790 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER TEXT SEARCH DICTIONARY alt_ts_dict3 OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.790 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user3"
2024-09-08 14:51:55.790 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER TEXT SEARCH DICTIONARY alt_ts_dict2 OWNER TO regress_alter_generic_user3;
2024-09-08 14:51:55.790 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of text search dictionary alt_ts_dict3
2024-09-08 14:51:55.790 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER TEXT SEARCH DICTIONARY alt_ts_dict3 SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.790 KST client backend[3075869] pg_regress/alter_generic ERROR:  text search dictionary "alt_ts_dict2" already exists in schema "alt_nsp2"
2024-09-08 14:51:55.790 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER TEXT SEARCH DICTIONARY alt_ts_dict2 SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.790 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to drop role
2024-09-08 14:51:55.790 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the SUPERUSER attribute may drop roles with the SUPERUSER attribute.
2024-09-08 14:51:55.790 KST client backend[3075883] pg_regress/create_role STATEMENT:  DROP ROLE regress_role_super;
2024-09-08 14:51:55.790 KST client backend[3075883] pg_regress/create_role ERROR:  current user cannot be dropped
2024-09-08 14:51:55.790 KST client backend[3075883] pg_regress/create_role STATEMENT:  DROP ROLE regress_role_admin;
2024-09-08 14:51:55.791 KST client backend[3075883] pg_regress/create_role ERROR:  permission denied to drop role
2024-09-08 14:51:55.791 KST client backend[3075883] pg_regress/create_role DETAIL:  Only roles with the CREATEROLE attribute and the ADMIN option on role "regress_rolecreator" may drop this role.
2024-09-08 14:51:55.791 KST client backend[3075883] pg_regress/create_role STATEMENT:  DROP ROLE regress_rolecreator;
2024-09-08 14:51:55.791 KST client backend[3075869] pg_regress/alter_generic ERROR:  text search configuration "alt_ts_conf2" already exists in schema "alt_nsp1"
2024-09-08 14:51:55.791 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER TEXT SEARCH CONFIGURATION alt_ts_conf1 RENAME TO alt_ts_conf2;
2024-09-08 14:51:55.791 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user2"
2024-09-08 14:51:55.791 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER TEXT SEARCH CONFIGURATION alt_ts_conf2 OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.792 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of text search configuration alt_ts_conf3
2024-09-08 14:51:55.792 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER TEXT SEARCH CONFIGURATION alt_ts_conf3 RENAME TO alt_ts_conf4;
2024-09-08 14:51:55.792 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of text search configuration alt_ts_conf3
2024-09-08 14:51:55.792 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER TEXT SEARCH CONFIGURATION alt_ts_conf3 OWNER TO regress_alter_generic_user2;
2024-09-08 14:51:55.792 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be able to SET ROLE "regress_alter_generic_user3"
2024-09-08 14:51:55.792 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER TEXT SEARCH CONFIGURATION alt_ts_conf2 OWNER TO regress_alter_generic_user3;
2024-09-08 14:51:55.792 KST client backend[3075869] pg_regress/alter_generic ERROR:  must be owner of text search configuration alt_ts_conf3
2024-09-08 14:51:55.792 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER TEXT SEARCH CONFIGURATION alt_ts_conf3 SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.792 KST client backend[3075869] pg_regress/alter_generic ERROR:  text search configuration "alt_ts_conf2" already exists in schema "alt_nsp2"
2024-09-08 14:51:55.792 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER TEXT SEARCH CONFIGURATION alt_ts_conf2 SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.793 KST client backend[3075869] pg_regress/alter_generic ERROR:  text search template "alt_ts_temp2" already exists in schema "alt_nsp1"
2024-09-08 14:51:55.793 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER TEXT SEARCH TEMPLATE alt_ts_temp1 RENAME TO alt_ts_temp2;
2024-09-08 14:51:55.793 KST client backend[3075869] pg_regress/alter_generic ERROR:  text search template "alt_ts_temp2" already exists in schema "alt_nsp2"
2024-09-08 14:51:55.793 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER TEXT SEARCH TEMPLATE alt_ts_temp2 SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.793 KST client backend[3075869] pg_regress/alter_generic ERROR:  text search template parameter "Init" not recognized
2024-09-08 14:51:55.793 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  CREATE TEXT SEARCH TEMPLATE tstemp_case ("Init" = init_function);
2024-09-08 14:51:55.793 KST client backend[3075869] pg_regress/alter_generic ERROR:  text search parser "alt_ts_prs2" already exists in schema "alt_nsp1"
2024-09-08 14:51:55.793 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER TEXT SEARCH PARSER alt_ts_prs1 RENAME TO alt_ts_prs2;
2024-09-08 14:51:55.794 KST client backend[3075869] pg_regress/alter_generic ERROR:  text search parser "alt_ts_prs2" already exists in schema "alt_nsp2"
2024-09-08 14:51:55.794 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  ALTER TEXT SEARCH PARSER alt_ts_prs2 SET SCHEMA alt_nsp2;
2024-09-08 14:51:55.794 KST client backend[3075869] pg_regress/alter_generic ERROR:  text search parser parameter "Start" not recognized
2024-09-08 14:51:55.794 KST client backend[3075869] pg_regress/alter_generic STATEMENT:  CREATE TEXT SEARCH PARSER tspars_case ("Start" = start_function);
2024-09-08 14:51:55.795 KST client backend[3075875] pg_regress/misc_functions ERROR:  invalid WAL file name "invalid"
2024-09-08 14:51:55.795 KST client backend[3075875] pg_regress/misc_functions STATEMENT:  SELECT * FROM pg_split_walfile_name('invalid');
2024-09-08 14:51:55.797 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  could not determine which collation to use for string comparison
2024-09-08 14:51:55.797 KST client backend[3075881] pg_regress/collate.icu.utf8 HINT:  Use the COLLATE clause to set the collation explicitly.
2024-09-08 14:51:55.797 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT a, b FROM collate_test1 UNION ALL SELECT a, b FROM collate_test3 ORDER BY 2;
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  collation mismatch between implicit collations "en-x-icu" and "C" at character 48
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 HINT:  You can choose the collation by applying the COLLATE clause to one or both expressions.
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT a, b FROM collate_test1 UNION SELECT a, b FROM collate_test3 ORDER BY 2;
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  collation mismatch between implicit collations "en-x-icu" and "C" at character 52
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 HINT:  You can choose the collation by applying the COLLATE clause to one or both expressions.
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT a, b FROM collate_test1 INTERSECT SELECT a, b FROM collate_test3 ORDER BY 2;
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  collation mismatch between implicit collations "en-x-icu" and "C" at character 49
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 HINT:  You can choose the collation by applying the COLLATE clause to one or both expressions.
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT a, b FROM collate_test1 EXCEPT SELECT a, b FROM collate_test3 ORDER BY 2;
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  no collation was derived for column "b" with collatable type text
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 HINT:  Use the COLLATE clause to set the collation explicitly.
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  CREATE TABLE test_u AS SELECT a, b FROM collate_test1 UNION ALL SELECT a, b FROM collate_test3;
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  could not determine which collation to use for string comparison
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 HINT:  Use the COLLATE clause to set the collation explicitly.
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  select x < y from collate_test10;
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  collation mismatch between implicit collations "en-x-icu" and "tr-x-icu" at character 47
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 HINT:  You can choose the collation by applying the COLLATE clause to one or both expressions.
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  select x, y from collate_test10 order by x || y;
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  recursive query "foo" column 1 has collation "en-x-icu" in non-recursive term but collation "de-x-icu" overall at character 37
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 HINT:  Use the COLLATE clause to set the collation of the non-recursive term.
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  WITH RECURSIVE foo(x) AS
	   (SELECT x FROM (VALUES('a' COLLATE "en-x-icu"),('b')) t(x)
	   UNION ALL
	   SELECT (x || 'c') COLLATE "de-x-icu" FROM foo WHERE length(x) < 10)
	SELECT * FROM foo;
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  syntax error at or near "COLLATE" at character 26
2024-09-08 14:51:55.798 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT CAST('42' AS text COLLATE "C");
2024-09-08 14:51:55.801 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  could not determine which collation to use for string comparison
2024-09-08 14:51:55.801 KST client backend[3075881] pg_regress/collate.icu.utf8 HINT:  Use the COLLATE clause to set the collation explicitly.
2024-09-08 14:51:55.801 KST client backend[3075881] pg_regress/collate.icu.utf8 CONTEXT:  PL/pgSQL function mylt2(text,text) line 6 at RETURN
2024-09-08 14:51:55.801 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT mylt2('a', 'B' collate "C") as fail;
2024-09-08 14:51:55.801 KST client backend[3075874] pg_regress/merge ERROR:  MERGE command cannot affect row a second time
2024-09-08 14:51:55.801 KST client backend[3075874] pg_regress/merge HINT:  Ensure that not more than one source row matches any one target row.
2024-09-08 14:51:55.801 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target t
	USING source AS s
	ON t.tid = s.sid
	WHEN MATCHED THEN
		UPDATE SET balance = 0;
2024-09-08 14:51:55.802 KST client backend[3075874] pg_regress/merge ERROR:  MERGE command cannot affect row a second time
2024-09-08 14:51:55.802 KST client backend[3075874] pg_regress/merge HINT:  Ensure that not more than one source row matches any one target row.
2024-09-08 14:51:55.802 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target t
	USING source AS s
	ON t.tid = s.sid
	WHEN MATCHED THEN
		DELETE;
2024-09-08 14:51:55.803 KST client backend[3075874] pg_regress/merge ERROR:  duplicate key value violates unique constraint "target_pkey"
2024-09-08 14:51:55.803 KST client backend[3075874] pg_regress/merge DETAIL:  Key (tid)=(4) already exists.
2024-09-08 14:51:55.803 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target t
	USING source AS s
	ON t.tid = s.sid
	WHEN NOT MATCHED THEN
	  INSERT VALUES (4, NULL);
2024-09-08 14:51:55.803 KST client backend[3075874] pg_regress/merge ERROR:  current transaction is aborted, commands ignored until end of transaction block
2024-09-08 14:51:55.803 KST client backend[3075874] pg_regress/merge STATEMENT:  SELECT * FROM target ORDER BY tid;
2024-09-08 14:51:55.803 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  collations are not supported by type integer
2024-09-08 14:51:55.803 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  CREATE INDEX collate_test1_idx5 ON collate_test1 (a COLLATE "C");
2024-09-08 14:51:55.803 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  collations are not supported by type integer at character 54
2024-09-08 14:51:55.803 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  CREATE INDEX collate_test1_idx6 ON collate_test1 ((a COLLATE "C"));
2024-09-08 14:51:55.805 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  collation "test0" already exists
2024-09-08 14:51:55.805 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  CREATE COLLATION test0 FROM "C";
2024-09-08 14:51:55.805 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  parameter "locale" must be specified
2024-09-08 14:51:55.805 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  CREATE COLLATION test3 (provider = icu, lc_collate = 'en_US.utf8');
2024-09-08 14:51:55.806 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  ICU locale "nonsense-nowhere" has unknown language "nonsense"
2024-09-08 14:51:55.806 KST client backend[3075881] pg_regress/collate.icu.utf8 HINT:  To disable ICU locale validation, set the parameter "icu_validation_level" to "disabled".
2024-09-08 14:51:55.806 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  CREATE COLLATION testx (provider = icu, locale = 'nonsense-nowhere');
2024-09-08 14:51:55.808 KST client backend[3075874] pg_regress/merge ERROR:  invalid reference to FROM-clause entry for table "t" at character 109
2024-09-08 14:51:55.808 KST client backend[3075874] pg_regress/merge DETAIL:  There is an entry for table "t", but it cannot be referenced from this part of the query.
2024-09-08 14:51:55.808 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target t
	USING source AS s
	ON t.tid = s.sid
	WHEN NOT MATCHED THEN
		INSERT (tid, balance) VALUES (t.tid, s.delta);
2024-09-08 14:51:55.808 KST client backend[3075874] pg_regress/merge ERROR:  invalid reference to FROM-clause entry for table "t" at character 109
2024-09-08 14:51:55.808 KST client backend[3075874] pg_regress/merge DETAIL:  There is an entry for table "t", but it cannot be referenced from this part of the query.
2024-09-08 14:51:55.808 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target t
	USING source AS s
	ON (SELECT true)
	WHEN NOT MATCHED THEN
		INSERT (tid, balance) VALUES (t.tid, s.delta);
2024-09-08 14:51:55.808 KST client backend[3075874] pg_regress/merge ERROR:  current transaction is aborted, commands ignored until end of transaction block
2024-09-08 14:51:55.808 KST client backend[3075874] pg_regress/merge STATEMENT:  SELECT * FROM target ORDER BY tid;
2024-09-08 14:51:55.809 KST client backend[3075874] pg_regress/merge ERROR:  unreachable WHEN clause specified after unconditional WHEN clause
2024-09-08 14:51:55.809 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO target t
	USING source AS s
	ON t.tid = s.sid
	WHEN MATCHED THEN /* Terminal WHEN clause for MATCHED */
		DELETE
	WHEN MATCHED THEN
		UPDATE SET balance = t.balance - s.delta;
2024-09-08 14:51:55.813 KST client backend[3075874] pg_regress/merge ERROR:  invalid reference to FROM-clause entry for table "t" at character 80
2024-09-08 14:51:55.813 KST client backend[3075874] pg_regress/merge DETAIL:  There is an entry for table "t", but it cannot be referenced from this part of the query.
2024-09-08 14:51:55.813 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO wq_target t
	USING wq_source s ON t.tid = s.sid
	WHEN NOT MATCHED AND t.balance = 100 THEN
		INSERT (tid) VALUES (s.sid);
2024-09-08 14:51:55.813 KST client backend[3075874] pg_regress/merge ERROR:  current transaction is aborted, commands ignored until end of transaction block
2024-09-08 14:51:55.813 KST client backend[3075874] pg_regress/merge STATEMENT:  SELECT * FROM wq_target;
2024-09-08 14:51:55.814 KST client backend[3075876] pg_regress/incremental_sort LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075876.0.fileset/0.0", size 204800
2024-09-08 14:51:55.814 KST client backend[3075876] pg_regress/incremental_sort STATEMENT:  create index on t (a);
2024-09-08 14:51:55.815 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  could not convert locale name "@colStrength=primary;nonsense=yes" to language tag: U_ILLEGAL_ARGUMENT_ERROR
2024-09-08 14:51:55.815 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  CREATE COLLATION testx (provider = icu, locale = '@colStrength=primary;nonsense=yes');
2024-09-08 14:51:55.815 KST client backend[3075881] pg_regress/collate.icu.utf8 WARNING:  could not convert locale name "@colStrength=primary;nonsense=yes" to language tag: U_ILLEGAL_ARGUMENT_ERROR
2024-09-08 14:51:55.816 KST client backend[3075881] pg_regress/collate.icu.utf8 WARNING:  ICU locale "nonsense-nowhere" has unknown language "nonsense"
2024-09-08 14:51:55.816 KST client backend[3075881] pg_regress/collate.icu.utf8 HINT:  To disable ICU locale validation, set the parameter "icu_validation_level" to "disabled".
2024-09-08 14:51:55.816 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  collation "nonsense" for encoding "UTF8" does not exist
2024-09-08 14:51:55.816 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  CREATE COLLATION test4 FROM nonsense;
2024-09-08 14:51:55.817 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  collation "test11" already exists in schema "collate_tests"
2024-09-08 14:51:55.817 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  ALTER COLLATION test0 RENAME TO test11;
2024-09-08 14:51:55.817 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  collation "test1" for encoding "UTF8" does not exist
2024-09-08 14:51:55.817 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  ALTER COLLATION test1 RENAME TO test22;
2024-09-08 14:51:55.817 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  role "nonsense" does not exist
2024-09-08 14:51:55.817 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  ALTER COLLATION test11 OWNER TO nonsense;
2024-09-08 14:51:55.817 KST client backend[3075874] pg_regress/merge ERROR:  cannot use system column "xmin" in MERGE WHEN condition at character 76
2024-09-08 14:51:55.817 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO wq_target t
	USING wq_source s ON t.tid = s.sid
	WHEN MATCHED AND t.xmin = t.xmax THEN
		UPDATE SET balance = t.balance + s.balance;
2024-09-08 14:51:55.818 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  collation "test0" for encoding "UTF8" does not exist
2024-09-08 14:51:55.818 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  DROP COLLATION test0;
2024-09-08 14:51:55.821 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  cannot drop collation test0 because other objects depend on it
2024-09-08 14:51:55.821 KST client backend[3075881] pg_regress/collate.icu.utf8 DETAIL:  column b of table collate_dep_test1 depends on collation test0
	type collate_dep_dom1 depends on collation test0
	column y of composite type collate_dep_test2 depends on collation test0
	view collate_dep_test3 depends on collation test0
	index collate_dep_test4i depends on collation test0
2024-09-08 14:51:55.821 KST client backend[3075881] pg_regress/collate.icu.utf8 HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:55.821 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  DROP COLLATION test0 RESTRICT;
2024-09-08 14:51:55.821 KST client backend[3075870] pg_regress/create_table_like ERROR:  duplicate key value violates unique constraint "inhg_pkey"
2024-09-08 14:51:55.821 KST client backend[3075870] pg_regress/create_table_like DETAIL:  Key (xx)=(10) already exists.
2024-09-08 14:51:55.821 KST client backend[3075870] pg_regress/create_table_like STATEMENT:  INSERT INTO inhg VALUES (20, 10);
2024-09-08 14:51:55.823 KST client backend[3075870] pg_regress/create_table_like ERROR:  multiple primary keys for table "inhg" are not allowed
2024-09-08 14:51:55.823 KST client backend[3075870] pg_regress/create_table_like STATEMENT:  /* Multiple primary keys creation should fail */
	CREATE TABLE inhg (x text, LIKE inhx INCLUDING INDEXES, PRIMARY KEY(x));
2024-09-08 14:51:55.826 KST client backend[3075870] pg_regress/create_table_like ERROR:  duplicate key value violates unique constraint "inhg_x_key"
2024-09-08 14:51:55.826 KST client backend[3075870] pg_regress/create_table_like DETAIL:  Key (x)=(15) already exists.
2024-09-08 14:51:55.826 KST client backend[3075870] pg_regress/create_table_like STATEMENT:  INSERT INTO inhg (xx, yy, x) VALUES ('foo', 10, 15);
2024-09-08 14:51:55.830 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  could not open collator for locale "und-u-kn-lower": U_ILLEGAL_ARGUMENT_ERROR
2024-09-08 14:51:55.830 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  CREATE COLLATION testcoll_error1 (provider = icu, locale = '@colNumeric=lower');
2024-09-08 14:51:55.844 KST client backend[3075874] pg_regress/merge ERROR:  column reference "balance" is ambiguous at character 98
2024-09-08 14:51:55.844 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO sq_target
	USING v
	ON tid = sid
	WHEN MATCHED AND tid > 2 THEN
	    UPDATE SET balance = balance + delta
	WHEN NOT MATCHED THEN
		INSERT (balance, tid) VALUES (balance + delta, sid)
	WHEN MATCHED AND tid < 2 THEN
		DELETE;
2024-09-08 14:51:55.845 KST client backend[3075874] pg_regress/merge ERROR:  syntax error at or near "RETURNING" at character 231
2024-09-08 14:51:55.845 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO sq_target t
	USING v
	ON tid = sid
	WHEN MATCHED AND tid > 2 THEN
	    UPDATE SET balance = t.balance + delta
	WHEN NOT MATCHED THEN
		INSERT (balance, tid) VALUES (balance + delta, sid)
	WHEN MATCHED AND tid < 2 THEN
		DELETE
	RETURNING *;
2024-09-08 14:51:55.853 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  could not open collator for locale "und" with rules "!!wrong!!": U_INVALID_FORMAT_ERROR
2024-09-08 14:51:55.853 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  CREATE COLLATION testcoll_rulesx (provider = icu, locale = '', rules = '!!wrong!!');
2024-09-08 14:51:55.863 KST client backend[3075870] pg_regress/create_table_like ERROR:  inherited column "a" has a storage parameter conflict
2024-09-08 14:51:55.863 KST client backend[3075870] pg_regress/create_table_like DETAIL:  MAIN versus EXTENDED
2024-09-08 14:51:55.863 KST client backend[3075870] pg_regress/create_table_like STATEMENT:  CREATE TABLE inh_error1 () INHERITS (ctlt1, ctlt4);
2024-09-08 14:51:55.863 KST client backend[3075870] pg_regress/create_table_like ERROR:  column "a" has a storage parameter conflict
2024-09-08 14:51:55.863 KST client backend[3075870] pg_regress/create_table_like DETAIL:  MAIN versus EXTENDED
2024-09-08 14:51:55.863 KST client backend[3075870] pg_regress/create_table_like STATEMENT:  CREATE TABLE inh_error2 (LIKE ctlt4 INCLUDING STORAGE) INHERITS (ctlt1);
2024-09-08 14:51:55.864 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  nondeterministic collations are not supported for operator class "text_pattern_ops"
2024-09-08 14:51:55.864 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  CREATE INDEX ON test3ci (x text_pattern_ops);
2024-09-08 14:51:55.865 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  nondeterministic collations are not supported for LIKE
2024-09-08 14:51:55.865 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT x FROM test3ci WHERE x LIKE 'a%';
2024-09-08 14:51:55.865 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  nondeterministic collations are not supported for ILIKE
2024-09-08 14:51:55.865 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT x FROM test3ci WHERE x ILIKE 'a%';
2024-09-08 14:51:55.865 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  nondeterministic collations are not supported for regular expressions
2024-09-08 14:51:55.865 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT x FROM test3ci WHERE x SIMILAR TO 'a%';
2024-09-08 14:51:55.865 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  nondeterministic collations are not supported for regular expressions
2024-09-08 14:51:55.865 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT x FROM test3ci WHERE x ~ 'a';
2024-09-08 14:51:55.867 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  duplicate key value violates unique constraint "test1ci_x_idx"
2024-09-08 14:51:55.867 KST client backend[3075881] pg_regress/collate.icu.utf8 DETAIL:  Key (x)=(ABC) already exists.
2024-09-08 14:51:55.867 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  INSERT INTO test1ci VALUES ('ABC');
2024-09-08 14:51:55.867 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  could not create unique index "test3ci_x_idx"
2024-09-08 14:51:55.867 KST client backend[3075881] pg_regress/collate.icu.utf8 DETAIL:  Key (x)=(abc) is duplicated.
2024-09-08 14:51:55.867 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  CREATE UNIQUE INDEX ON test3ci (x);
2024-09-08 14:51:55.867 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  nondeterministic collations are not supported for substring searches
2024-09-08 14:51:55.867 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT string_to_array('ABC,DEF,GHI' COLLATE case_insensitive, ',', 'abc');
2024-09-08 14:51:55.868 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  nondeterministic collations are not supported for operator class "bpchar_pattern_ops"
2024-09-08 14:51:55.868 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  CREATE INDEX ON test3bpci (x bpchar_pattern_ops);
2024-09-08 14:51:55.869 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  nondeterministic collations are not supported for LIKE
2024-09-08 14:51:55.869 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT x FROM test3bpci WHERE x LIKE 'a%';
2024-09-08 14:51:55.869 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  nondeterministic collations are not supported for ILIKE
2024-09-08 14:51:55.869 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT x FROM test3bpci WHERE x ILIKE 'a%';
2024-09-08 14:51:55.869 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  nondeterministic collations are not supported for regular expressions
2024-09-08 14:51:55.869 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT x FROM test3bpci WHERE x SIMILAR TO 'a%';
2024-09-08 14:51:55.869 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  nondeterministic collations are not supported for regular expressions
2024-09-08 14:51:55.869 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT x FROM test3bpci WHERE x ~ 'a';
2024-09-08 14:51:55.871 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  duplicate key value violates unique constraint "test1bpci_x_idx"
2024-09-08 14:51:55.871 KST client backend[3075881] pg_regress/collate.icu.utf8 DETAIL:  Key (x)=(ABC) already exists.
2024-09-08 14:51:55.871 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  INSERT INTO test1bpci VALUES ('ABC');
2024-09-08 14:51:55.871 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  could not create unique index "test3bpci_x_idx"
2024-09-08 14:51:55.871 KST client backend[3075881] pg_regress/collate.icu.utf8 DETAIL:  Key (x)=(abc) is duplicated.
2024-09-08 14:51:55.871 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  CREATE UNIQUE INDEX ON test3bpci (x);
2024-09-08 14:51:55.871 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  nondeterministic collations are not supported for substring searches
2024-09-08 14:51:55.871 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT string_to_array('ABC,DEF,GHI'::char(11) COLLATE case_insensitive, ',', 'abc');
2024-09-08 14:51:55.873 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  nondeterministic collations are not supported for LIKE
2024-09-08 14:51:55.873 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT x FROM test4c WHERE x LIKE 'ABC' COLLATE case_insensitive;
2024-09-08 14:51:55.873 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  nondeterministic collations are not supported for LIKE
2024-09-08 14:51:55.873 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  SELECT x FROM test4c WHERE x LIKE 'ABC%' COLLATE case_insensitive;
2024-09-08 14:51:55.881 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  insert or update on table "test10fk" violates foreign key constraint "test10fk_x_fkey"
2024-09-08 14:51:55.881 KST client backend[3075881] pg_regress/collate.icu.utf8 DETAIL:  Key (x)=(ABC) is not present in table "test10pk".
2024-09-08 14:51:55.881 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  INSERT INTO test10fk VALUES ('ABC');
2024-09-08 14:51:55.881 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  insert or update on table "test10fk" violates foreign key constraint "test10fk_x_fkey"
2024-09-08 14:51:55.881 KST client backend[3075881] pg_regress/collate.icu.utf8 DETAIL:  Key (x)=(xyz) is not present in table "test10pk".
2024-09-08 14:51:55.881 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  INSERT INTO test10fk VALUES ('xyz');
2024-09-08 14:51:55.882 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  insert or update on table "test10fk" violates foreign key constraint "test10fk_x_fkey"
2024-09-08 14:51:55.882 KST client backend[3075881] pg_regress/collate.icu.utf8 DETAIL:  Key (x)=(ABC) is not present in table "test10pk".
2024-09-08 14:51:55.882 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  UPDATE test10fk SET x = 'ABC' WHERE x = 'abc';
2024-09-08 14:51:55.884 KST client backend[3075870] pg_regress/create_table_like ERROR:  cannot add NO INHERIT constraint to partitioned table "noinh_con_copy1_parted"
2024-09-08 14:51:55.884 KST client backend[3075870] pg_regress/create_table_like STATEMENT:  CREATE TABLE noinh_con_copy1_parted (LIKE noinh_con_copy INCLUDING ALL)
	  PARTITION BY LIST (a);
2024-09-08 14:51:55.885 KST client backend[3075881] pg_regress/collate.icu.utf8 ERROR:  insert or update on table "test11fk" violates foreign key constraint "test11fk_x_fkey"
2024-09-08 14:51:55.885 KST client backend[3075881] pg_regress/collate.icu.utf8 DETAIL:  Key (x)=(xyz) is not present in table "test11pk".
2024-09-08 14:51:55.885 KST client backend[3075881] pg_regress/collate.icu.utf8 STATEMENT:  INSERT INTO test11fk VALUES ('xyz');
2024-09-08 14:51:55.885 KST client backend[3075870] pg_regress/create_table_like ERROR:  relation "ctlseq1" is invalid in LIKE clause at character 27
2024-09-08 14:51:55.885 KST client backend[3075870] pg_regress/create_table_like DETAIL:  This operation is not supported for sequences.
2024-09-08 14:51:55.885 KST client backend[3075870] pg_regress/create_table_like STATEMENT:  CREATE TABLE ctlt10 (LIKE ctlseq1);
2024-09-08 14:51:55.893 KST client backend[3075874] pg_regress/merge ERROR:  new row violates row-level security policy for table "pa_target"
2024-09-08 14:51:55.893 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO pa_target t
	  USING pa_source s
	  ON t.tid = s.sid AND t.tid IN (1,2,3,4)
	  WHEN MATCHED THEN
	    UPDATE SET tid = tid - 1;
2024-09-08 14:51:55.918 KST client backend[3075874] pg_regress/merge ERROR:  no partition of relation "pa_target" found for row
2024-09-08 14:51:55.918 KST client backend[3075874] pg_regress/merge DETAIL:  Partition key of the failing row contains (tid) = (1).
2024-09-08 14:51:55.918 KST client backend[3075874] pg_regress/merge STATEMENT:  MERGE INTO pa_target t USING pa_source s ON t.tid = s.sid
	  WHEN NOT MATCHED THEN INSERT VALUES (s.sid);
2024-09-08 14:51:55.991 KST client backend[3075924] pg_regress/psql ERROR:  column "foo" does not exist at character 8
2024-09-08 14:51:55.991 KST client backend[3075924] pg_regress/psql STATEMENT:  SELECT foo 
2024-09-08 14:51:55.991 KST client backend[3075924] pg_regress/psql ERROR:  cannot insert multiple commands into a prepared statement
2024-09-08 14:51:55.991 KST client backend[3075924] pg_regress/psql STATEMENT:  SELECT 1 ; SELECT 2 
2024-09-08 14:51:55.991 KST client backend[3075924] pg_regress/psql ERROR:  bind message supplies 1 parameters, but prepared statement "" requires 2
2024-09-08 14:51:55.991 KST client backend[3075924] pg_regress/psql STATEMENT:  SELECT $1, $2 
2024-09-08 14:51:55.991 KST client backend[3075926] pg_regress/rules ERROR:  rule "rtest_v1_bad" for relation "rtest_v1" does not exist
2024-09-08 14:51:55.991 KST client backend[3075926] pg_regress/rules STATEMENT:  COMMENT ON RULE rtest_v1_bad ON rtest_v1 IS 'bad rule';
2024-09-08 14:51:55.993 KST client backend[3075924] pg_regress/psql ERROR:  syntax error at end of input at character 12
2024-09-08 14:51:55.993 KST client backend[3075924] pg_regress/psql STATEMENT:  SELECT 1 + 
2024-09-08 14:51:55.993 KST client backend[3075924] pg_regress/psql ERROR:  relation "bububu" does not exist at character 7
2024-09-08 14:51:55.993 KST client backend[3075924] pg_regress/psql STATEMENT:  TABLE bububu;
2024-09-08 14:51:55.993 KST client backend[3075924] pg_regress/psql ERROR:  syntax error at or near "bogus" at character 1
2024-09-08 14:51:55.993 KST client backend[3075924] pg_regress/psql STATEMENT:  bogus;
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext ERROR:  syntax error at or near ";" at character 22
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  CREATE STATISTICS tst;
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext ERROR:  syntax error at or near ";" at character 30
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  CREATE STATISTICS tst ON a, b;
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext ERROR:  syntax error at or near "FROM" at character 23
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  CREATE STATISTICS tst FROM sometab;
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext ERROR:  relation "nonexistent" does not exist
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  CREATE STATISTICS tst ON a, b FROM nonexistent;
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext ERROR:  column "a" does not exist
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  CREATE STATISTICS tst ON a, b FROM ext_stats_test;
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext ERROR:  duplicate column name in statistics definition
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  CREATE STATISTICS tst ON x, x, y FROM ext_stats_test;
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext ERROR:  cannot have more than 8 columns in statistics
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  CREATE STATISTICS tst ON x, x, y, x, x, y, x, x, y FROM ext_stats_test;
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext ERROR:  cannot have more than 8 columns in statistics
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  CREATE STATISTICS tst ON x, x, y, x, x, (x || 'x'), (y + 1), (x || 'x'), (x || 'x'), (y + 1) FROM ext_stats_test;
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext ERROR:  cannot have more than 8 columns in statistics
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  CREATE STATISTICS tst ON (x || 'x'), (x || 'x'), (y + 1), (x || 'x'), (x || 'x'), (y + 1), (x || 'x'), (x || 'x'), (y + 1) FROM ext_stats_test;
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext ERROR:  duplicate expression in statistics definition
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  CREATE STATISTICS tst ON (x || 'x'), (x || 'x'), y FROM ext_stats_test;
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext ERROR:  unrecognized statistics kind "unrecognized"
2024-09-08 14:51:55.994 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  CREATE STATISTICS tst (unrecognized) ON x, y FROM ext_stats_test;
2024-09-08 14:51:55.995 KST client backend[3075928] pg_regress/stats_ext ERROR:  extended statistics require at least 2 columns
2024-09-08 14:51:55.995 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  CREATE STATISTICS tst ON (y) FROM ext_stats_test;
2024-09-08 14:51:55.995 KST client backend[3075928] pg_regress/stats_ext ERROR:  syntax error at or near "+" at character 28
2024-09-08 14:51:55.995 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  CREATE STATISTICS tst ON y + z FROM ext_stats_test;
2024-09-08 14:51:55.995 KST client backend[3075928] pg_regress/stats_ext ERROR:  syntax error at or near "," at character 28
2024-09-08 14:51:55.995 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  CREATE STATISTICS tst ON (x, y) FROM ext_stats_test;
2024-09-08 14:51:55.996 KST client backend[3075928] pg_regress/stats_ext ERROR:  must be owner of statistics object ab1_a_b_stats
2024-09-08 14:51:55.996 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  COMMENT ON STATISTICS ab1_a_b_stats IS 'changed comment';
2024-09-08 14:51:55.996 KST client backend[3075928] pg_regress/stats_ext ERROR:  must be owner of statistics object ab1_a_b_stats
2024-09-08 14:51:55.996 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  DROP STATISTICS ab1_a_b_stats;
2024-09-08 14:51:55.996 KST client backend[3075928] pg_regress/stats_ext ERROR:  must be owner of statistics object ab1_a_b_stats
2024-09-08 14:51:55.996 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  ALTER STATISTICS ab1_a_b_stats RENAME TO ab1_a_b_stats_new;
2024-09-08 14:51:55.999 KST client backend[3075924] pg_regress/psql ERROR:  table "gexec_test" does not exist
2024-09-08 14:51:55.999 KST client backend[3075924] pg_regress/psql STATEMENT:  drop table gexec_test
2024-09-08 14:51:56.007 KST client backend[3075928] pg_regress/stats_ext WARNING:  statistics object "public.ab1_a_b_stats" could not be computed for relation "public.ab1"
2024-09-08 14:51:56.012 KST client backend[3075928] pg_regress/stats_ext WARNING:  statistics object "public.ab1_a_b_stats" could not be computed for relation "public.ab1"
2024-09-08 14:51:56.014 KST client backend[3075928] pg_regress/stats_ext ERROR:  statistics object "ab1_a_b_stats" does not exist
2024-09-08 14:51:56.014 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  ALTER STATISTICS ab1_a_b_stats SET STATISTICS 0;
2024-09-08 14:51:56.037 KST client backend[3075926] pg_regress/rules ERROR:  INSERT with ON CONFLICT clause cannot be used with table that has INSERT or UPDATE rules
2024-09-08 14:51:56.037 KST client backend[3075926] pg_regress/rules STATEMENT:  insert into shoelace values ('sl10', 1000, 'magenta', 40.0, 'inch', 0.0)
	  on conflict do nothing;
2024-09-08 14:51:56.040 KST client backend[3075926] pg_regress/rules ERROR:  column "f1" does not exist at character 110
2024-09-08 14:51:56.040 KST client backend[3075926] pg_regress/rules DETAIL:  There are columns named "f1", but they are in tables that cannot be referenced from this part of the query.
2024-09-08 14:51:56.040 KST client backend[3075926] pg_regress/rules HINT:  Try using a table-qualified name.
2024-09-08 14:51:56.040 KST client backend[3075926] pg_regress/rules STATEMENT:  create rule rules_foorule as on insert to rules_foo where f1 < 100
	do instead insert into rules_foo2 values (f1);
2024-09-08 14:51:56.052 KST client backend[3075928] pg_regress/stats_ext ERROR:  cannot define statistics for relation "ti"
2024-09-08 14:51:56.052 KST client backend[3075928] pg_regress/stats_ext DETAIL:  This operation is not supported for indexes.
2024-09-08 14:51:56.052 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  CREATE STATISTICS tststats.s2 ON a, b FROM tststats.ti;
2024-09-08 14:51:56.052 KST client backend[3075928] pg_regress/stats_ext ERROR:  cannot define statistics for relation "s"
2024-09-08 14:51:56.052 KST client backend[3075928] pg_regress/stats_ext DETAIL:  This operation is not supported for sequences.
2024-09-08 14:51:56.052 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  CREATE STATISTICS tststats.s3 ON a, b FROM tststats.s;
2024-09-08 14:51:56.052 KST client backend[3075928] pg_regress/stats_ext ERROR:  cannot define statistics for relation "v"
2024-09-08 14:51:56.052 KST client backend[3075928] pg_regress/stats_ext DETAIL:  This operation is not supported for views.
2024-09-08 14:51:56.052 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  CREATE STATISTICS tststats.s4 ON a, b FROM tststats.v;
2024-09-08 14:51:56.052 KST client backend[3075928] pg_regress/stats_ext ERROR:  cannot define statistics for relation "ty"
2024-09-08 14:51:56.052 KST client backend[3075928] pg_regress/stats_ext DETAIL:  This operation is not supported for composite types.
2024-09-08 14:51:56.052 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  CREATE STATISTICS tststats.s6 ON a, b FROM tststats.ty;
2024-09-08 14:51:56.068 KST client backend[3075924] pg_regress/psql ERROR:  bar
2024-09-08 14:51:56.068 KST client backend[3075924] pg_regress/psql CONTEXT:  PL/pgSQL function inline_code_block line 4 at RAISE
2024-09-08 14:51:56.068 KST client backend[3075924] pg_regress/psql STATEMENT:  do $$
	begin
	  raise notice 'foo';
	  raise exception 'bar';
	end $$;
2024-09-08 14:51:56.068 KST client backend[3075924] pg_regress/psql ERROR:  bar
2024-09-08 14:51:56.068 KST client backend[3075924] pg_regress/psql CONTEXT:  PL/pgSQL function inline_code_block line 4 at RAISE
2024-09-08 14:51:56.068 KST client backend[3075924] pg_regress/psql STATEMENT:  do $$
	begin
	  raise notice 'foo';
	  raise exception 'bar';
	end $$;
2024-09-08 14:51:56.068 KST client backend[3075924] pg_regress/psql ERROR:  bar
2024-09-08 14:51:56.068 KST client backend[3075924] pg_regress/psql CONTEXT:  PL/pgSQL function inline_code_block line 4 at RAISE
2024-09-08 14:51:56.068 KST client backend[3075924] pg_regress/psql STATEMENT:  do $$
	begin
	  raise notice 'foo';
	  raise exception 'bar';
	end $$;
2024-09-08 14:51:56.068 KST client backend[3075924] pg_regress/psql ERROR:  syntax error at or near ";" at character 15
2024-09-08 14:51:56.068 KST client backend[3075924] pg_regress/psql STATEMENT:  SELECT 1 UNION;
2024-09-08 14:51:56.068 KST client backend[3075924] pg_regress/psql ERROR:  table "this_table_does_not_exist" does not exist
2024-09-08 14:51:56.068 KST client backend[3075924] pg_regress/psql STATEMENT:  DROP TABLE this_table_does_not_exist;
2024-09-08 14:51:56.069 KST client backend[3075924] pg_regress/psql ERROR:  syntax error at or near ";" at character 15
2024-09-08 14:51:56.069 KST client backend[3075924] pg_regress/psql STATEMENT:  SELECT 1 UNION;
2024-09-08 14:51:56.069 KST client backend[3075924] pg_regress/psql ERROR:  division by zero
2024-09-08 14:51:56.069 KST client backend[3075924] pg_regress/psql STATEMENT:  SELECT 1/0;
2024-09-08 14:51:56.069 KST client backend[3075924] pg_regress/psql ERROR:  syntax error at end of input at character 13
2024-09-08 14:51:56.069 KST client backend[3075924] pg_regress/psql STATEMENT:  SELECT 4 AS 
2024-09-08 14:51:56.070 KST client backend[3075924] pg_regress/psql ERROR:  division by zero
2024-09-08 14:51:56.070 KST client backend[3075924] pg_regress/psql STATEMENT:  FETCH FORWARD 10 FROM _psql_cursor
2024-09-08 14:51:56.070 KST client backend[3075924] pg_regress/psql ERROR:  current transaction is aborted, commands ignored until end of transaction block
2024-09-08 14:51:56.070 KST client backend[3075924] pg_regress/psql STATEMENT:  CLOSE _psql_cursor
2024-09-08 14:51:56.072 KST client backend[3075926] pg_regress/rules ERROR:  insert or update on table "rule_and_refint_t3" violates foreign key constraint "rule_and_refint_t3_id3a_id3c_fkey"
2024-09-08 14:51:56.072 KST client backend[3075926] pg_regress/rules DETAIL:  Key (id3a, id3c)=(1, 13) is not present in table "rule_and_refint_t2".
2024-09-08 14:51:56.072 KST client backend[3075926] pg_regress/rules STATEMENT:  insert into rule_and_refint_t3 values (1, 11, 13, 'row5');
2024-09-08 14:51:56.072 KST client backend[3075926] pg_regress/rules ERROR:  insert or update on table "rule_and_refint_t3" violates foreign key constraint "rule_and_refint_t3_id3a_id3b_fkey"
2024-09-08 14:51:56.072 KST client backend[3075926] pg_regress/rules DETAIL:  Key (id3a, id3b)=(1, 13) is not present in table "rule_and_refint_t1".
2024-09-08 14:51:56.072 KST client backend[3075926] pg_regress/rules STATEMENT:  insert into rule_and_refint_t3 values (1, 13, 11, 'row6');
2024-09-08 14:51:56.072 KST client backend[3075926] pg_regress/rules ERROR:  insert or update on table "rule_and_refint_t3" violates foreign key constraint "rule_and_refint_t3_id3a_id3b_fkey"
2024-09-08 14:51:56.072 KST client backend[3075926] pg_regress/rules DETAIL:  Key (id3a, id3b)=(1, 13) is not present in table "rule_and_refint_t1".
2024-09-08 14:51:56.072 KST client backend[3075926] pg_regress/rules STATEMENT:  insert into rule_and_refint_t3 values (1, 13, 11, 'row6')
	  on conflict do nothing;
2024-09-08 14:51:56.072 KST client backend[3075926] pg_regress/rules ERROR:  insert or update on table "rule_and_refint_t3" violates foreign key constraint "rule_and_refint_t3_id3a_id3b_fkey"
2024-09-08 14:51:56.072 KST client backend[3075926] pg_regress/rules DETAIL:  Key (id3a, id3b)=(1, 13) is not present in table "rule_and_refint_t1".
2024-09-08 14:51:56.072 KST client backend[3075926] pg_regress/rules STATEMENT:  insert into rule_and_refint_t3 values (1, 13, 11, 'row6')
	  on conflict (id3a, id3b, id3c) do update
	  set id3b = excluded.id3b;
2024-09-08 14:51:56.072 KST client backend[3075926] pg_regress/rules ERROR:  INSERT with ON CONFLICT clause cannot be used with table that has INSERT or UPDATE rules
2024-09-08 14:51:56.072 KST client backend[3075926] pg_regress/rules STATEMENT:  insert into shoelace values ('sl9', 0, 'pink', 35.0, 'inch', 0.0)
	  on conflict (sl_name) do update
	  set sl_avail = excluded.sl_avail;
2024-09-08 14:51:56.073 KST client backend[3075926] pg_regress/rules ERROR:  insert or update on table "rule_and_refint_t3" violates foreign key constraint "rule_and_refint_t3_id3a_id3c_fkey"
2024-09-08 14:51:56.073 KST client backend[3075926] pg_regress/rules DETAIL:  Key (id3a, id3c)=(1, 13) is not present in table "rule_and_refint_t2".
2024-09-08 14:51:56.073 KST client backend[3075926] pg_regress/rules STATEMENT:  insert into rule_and_refint_t3 values (1, 11, 13, 'row7');
2024-09-08 14:51:56.073 KST client backend[3075926] pg_regress/rules ERROR:  insert or update on table "rule_and_refint_t3" violates foreign key constraint "rule_and_refint_t3_id3a_id3b_fkey"
2024-09-08 14:51:56.073 KST client backend[3075926] pg_regress/rules DETAIL:  Key (id3a, id3b)=(1, 13) is not present in table "rule_and_refint_t1".
2024-09-08 14:51:56.073 KST client backend[3075926] pg_regress/rules STATEMENT:  insert into rule_and_refint_t3 values (1, 13, 11, 'row8');
2024-09-08 14:51:56.074 KST client backend[3075926] pg_regress/rules ERROR:  cannot drop rule _RETURN on view rules_fooview because view rules_fooview requires it
2024-09-08 14:51:56.074 KST client backend[3075926] pg_regress/rules HINT:  You can drop view rules_fooview instead.
2024-09-08 14:51:56.074 KST client backend[3075926] pg_regress/rules STATEMENT:  drop rule "_RETURN" on rules_fooview;
2024-09-08 14:51:56.074 KST client backend[3075926] pg_regress/rules ERROR:  relation "rules_fooview" cannot have ON SELECT rules
2024-09-08 14:51:56.074 KST client backend[3075926] pg_regress/rules DETAIL:  This operation is not supported for tables.
2024-09-08 14:51:56.074 KST client backend[3075926] pg_regress/rules STATEMENT:  create rule "_RETURN" as on select to rules_fooview do instead
	  select 1 as x, 'aaa'::text as y;
2024-09-08 14:51:56.075 KST client backend[3075926] pg_regress/rules ERROR:  relation "rules_fooview" cannot have ON SELECT rules
2024-09-08 14:51:56.075 KST client backend[3075926] pg_regress/rules DETAIL:  This operation is not supported for partitioned tables.
2024-09-08 14:51:56.075 KST client backend[3075926] pg_regress/rules STATEMENT:  create rule "_RETURN" as on select to rules_fooview do instead
	  select 1 as x, 'aaa'::text as y;
2024-09-08 14:51:56.076 KST client backend[3075926] pg_regress/rules ERROR:  relation "rules_fooview_part" cannot have ON SELECT rules
2024-09-08 14:51:56.076 KST client backend[3075926] pg_regress/rules DETAIL:  This operation is not supported for tables.
2024-09-08 14:51:56.076 KST client backend[3075926] pg_regress/rules STATEMENT:  create rule "_RETURN" as on select to rules_fooview_part do instead
	  select 1 as x, 'aaa'::text as y;
2024-09-08 14:51:56.089 KST client backend[3075926] pg_regress/rules ERROR:  relation "old" in FOR UPDATE clause not found in FROM clause at character 120
2024-09-08 14:51:56.089 KST client backend[3075926] pg_regress/rules STATEMENT:  create or replace rule r1 as on update to rules_base do instead
	  select * from rules_base where f1 = 11 for update of old;
2024-09-08 14:51:56.105 KST client backend[3075926] pg_regress/rules ERROR:  rule "insertrule" for relation "rule_v1" does not exist
2024-09-08 14:51:56.105 KST client backend[3075926] pg_regress/rules STATEMENT:  ALTER RULE InsertRule ON rule_v1 RENAME TO NewInsertRule;
2024-09-08 14:51:56.106 KST client backend[3075926] pg_regress/rules ERROR:  rule "_RETURN" for relation "rule_v1" already exists
2024-09-08 14:51:56.106 KST client backend[3075926] pg_regress/rules STATEMENT:  ALTER RULE NewInsertRule ON rule_v1 RENAME TO "_RETURN";
2024-09-08 14:51:56.106 KST client backend[3075926] pg_regress/rules ERROR:  renaming an ON SELECT rule is not allowed
2024-09-08 14:51:56.106 KST client backend[3075926] pg_regress/rules STATEMENT:  ALTER RULE "_RETURN" ON rule_v1 RENAME TO abc;
2024-09-08 14:51:56.123 KST client backend[3075926] pg_regress/rules ERROR:  cannot execute MERGE on relation "rule_merge1"
2024-09-08 14:51:56.123 KST client backend[3075926] pg_regress/rules DETAIL:  MERGE is not supported for relations with rules.
2024-09-08 14:51:56.123 KST client backend[3075926] pg_regress/rules STATEMENT:  MERGE INTO rule_merge1 t USING (SELECT 1 AS a) s
		ON t.a = s.a
		WHEN MATCHED AND t.a < 2 THEN
			UPDATE SET b = b || ' updated by merge'
		WHEN MATCHED AND t.a > 2 THEN
			DELETE
		WHEN NOT MATCHED THEN
			INSERT VALUES (s.a, '');
2024-09-08 14:51:56.129 KST client backend[3075926] pg_regress/rules ERROR:  permission denied for table ruletest_t3
2024-09-08 14:51:56.129 KST client backend[3075926] pg_regress/rules STATEMENT:  UPDATE ruletest_t1 t1 SET x = 0 FROM ruletest_t3 t3 WHERE t1.x = t3.x;
2024-09-08 14:51:56.134 KST client backend[3075924] pg_regress/psql ERROR:  relation "ac_test" does not exist at character 15
2024-09-08 14:51:56.134 KST client backend[3075924] pg_regress/psql STATEMENT:  SELECT * FROM ac_test;
2024-09-08 14:51:56.134 KST client backend[3075924] pg_regress/psql ERROR:  invalid input syntax for type integer: "foo" at character 30
2024-09-08 14:51:56.134 KST client backend[3075924] pg_regress/psql STATEMENT:  INSERT INTO oer_test VALUES ('foo');
2024-09-08 14:51:56.135 KST client backend[3075924] pg_regress/psql ERROR:  relation "notexists" does not exist at character 15
2024-09-08 14:51:56.135 KST client backend[3075924] pg_regress/psql STATEMENT:  SELECT * FROM notexists;
2024-09-08 14:51:56.136 KST client backend[3075924] pg_regress/psql ERROR:  syntax error at or near ";" at character 23
2024-09-08 14:51:56.136 KST client backend[3075924] pg_regress/psql STATEMENT:  SELECT 5 ; SELECT 6 + ; SELECT warn('6.5') ; SELECT 7 ;
2024-09-08 14:51:56.136 KST client backend[3075924] pg_regress/psql ERROR:  division by zero
2024-09-08 14:51:56.136 KST client backend[3075924] pg_regress/psql STATEMENT:  BEGIN ; SELECT 8 AS eight ; SELECT 9/0 AS nine ; ROLLBACK ; SELECT 10 AS ten ;
2024-09-08 14:51:56.157 KST client backend[3075924] pg_regress/psql ERROR:  type "no_such_type" does not exist at character 20
2024-09-08 14:51:56.157 KST client backend[3075924] pg_regress/psql STATEMENT:  CREATE TABLE bla(s NO_SUCH_TYPE);
2024-09-08 14:51:56.158 KST client backend[3075924] pg_regress/psql ERROR:  error oops!
2024-09-08 14:51:56.158 KST client backend[3075924] pg_regress/psql CONTEXT:  PL/pgSQL function psql_error(text) line 3 at RAISE
2024-09-08 14:51:56.158 KST client backend[3075924] pg_regress/psql STATEMENT:  SELECT psql_error('oops!');
2024-09-08 14:51:56.159 KST client backend[3075924] pg_regress/psql ERROR:  error boum!
2024-09-08 14:51:56.159 KST client backend[3075924] pg_regress/psql CONTEXT:  PL/pgSQL function psql_error(text) line 3 at RAISE
2024-09-08 14:51:56.159 KST client backend[3075924] pg_regress/psql STATEMENT:  INSERT INTO bla VALUES ('Rosalyn') ;     -- will rollback
	SELECT 'before error' AS show ;          -- will show nevertheless!
	  SELECT psql_error('boum!') ;           -- failure
	  SELECT 'after error' AS noshow;
2024-09-08 14:51:56.159 KST client backend[3075924] pg_regress/psql ERROR:  error bam!
2024-09-08 14:51:56.159 KST client backend[3075924] pg_regress/psql CONTEXT:  PL/pgSQL function psql_error(text) line 3 at RAISE
2024-09-08 14:51:56.159 KST client backend[3075924] pg_regress/psql STATEMENT:  INSERT INTO bla(s) VALUES ('Moe') ;      -- will rollback
	  SELECT psql_error('bam!');
2024-09-08 14:51:56.159 KST client backend[3075924] pg_regress/psql ERROR:  error bad!
2024-09-08 14:51:56.159 KST client backend[3075924] pg_regress/psql CONTEXT:  PL/pgSQL function psql_error(text) line 3 at RAISE
2024-09-08 14:51:56.159 KST client backend[3075924] pg_regress/psql STATEMENT:  SELECT psql_error('bad!');
2024-09-08 14:51:56.159 KST client backend[3075924] pg_regress/psql ERROR:  error bad!
2024-09-08 14:51:56.159 KST client backend[3075924] pg_regress/psql CONTEXT:  PL/pgSQL function psql_error(text) line 3 at RAISE
2024-09-08 14:51:56.159 KST client backend[3075924] pg_regress/psql STATEMENT:  INSERT INTO bla VALUES ('Mum') ;         -- will rollback
	SELECT COUNT(*) AS "#mum"
	FROM bla WHERE s = 'Mum' ;               -- but be counted here
	SELECT psql_error('bad!');
2024-09-08 14:51:56.789 KST client backend[3075928] pg_regress/stats_ext ERROR:  permission denied for table priv_test_tbl
2024-09-08 14:51:56.789 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  SELECT * FROM tststats.priv_test_tbl;
2024-09-08 14:51:56.789 KST client backend[3075928] pg_regress/stats_ext ERROR:  permission denied for table priv_test_tbl
2024-09-08 14:51:56.789 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  SELECT * FROM tststats.priv_test_tbl
	  WHERE a = 1 and tststats.priv_test_tbl.* > (1, 1) is not null;
2024-09-08 14:51:56.790 KST client backend[3075928] pg_regress/stats_ext ERROR:  permission denied for table priv_test_tbl
2024-09-08 14:51:56.790 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  SELECT * FROM tststats.priv_test_tbl WHERE a <<< 0 AND b <<< 0;
2024-09-08 14:51:56.790 KST client backend[3075928] pg_regress/stats_ext ERROR:  permission denied for table priv_test_tbl
2024-09-08 14:51:56.790 KST client backend[3075928] pg_regress/stats_ext STATEMENT:  DELETE FROM tststats.priv_test_tbl WHERE a <<< 0 AND b <<< 0;
2024-09-08 14:51:57.147 KST client backend[3075973] pg_regress/select_parallel LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075973.0", size 1400000
2024-09-08 14:51:57.147 KST client backend[3075973] pg_regress/select_parallel STATEMENT:  insert into bmscantest select r, 'fooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo' FROM generate_series(1,100000) r;
2024-09-08 14:51:57.178 KST client backend[3075973] pg_regress/select_parallel LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075973.2.fileset/1.0", size 770048
2024-09-08 14:51:57.178 KST client backend[3075973] pg_regress/select_parallel STATEMENT:  create index i_bmtest ON bmscantest(a);
2024-09-08 14:51:57.178 KST client backend[3075973] pg_regress/select_parallel LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3075973.2.fileset/0.0", size 1245184
2024-09-08 14:51:57.178 KST client backend[3075973] pg_regress/select_parallel STATEMENT:  create index i_bmtest ON bmscantest(a);
2024-09-08 14:51:57.374 KST parallel worker[3076210] ERROR:  invalid input syntax for type smallint: ""
2024-09-08 14:51:57.374 KST parallel worker[3076210] STATEMENT:  select (stringu1 || repeat('abcd', 5000))::int2 from tenk1 where unique1 = 1;
2024-09-08 14:51:57.375 KST client backend[3075973] pg_regress/select_parallel ERROR:  invalid input syntax for type smallint: ""
2024-09-08 14:51:57.375 KST client backend[3075973] pg_regress/select_parallel CONTEXT:  parallel worker
2024-09-08 14:51:57.375 KST client backend[3075973] pg_regress/select_parallel STATEMENT:  select (stringu1 || repeat('abcd', 5000))::int2 from tenk1 where unique1 = 1;
2024-09-08 14:51:57.375 KST postmaster[3075126] LOG:  background worker "parallel worker" (PID 3076210) exited with exit code 1
2024-09-08 14:51:57.553 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.553 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.553 KST client backend[3076257] pg_regress/subscription ERROR:  syntax error at or near ";" at character 53
2024-09-08 14:51:57.553 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub CONNECTION 'foo';
2024-09-08 14:51:57.553 KST client backend[3076257] pg_regress/subscription ERROR:  syntax error at or near "PUBLICATION" at character 37
2024-09-08 14:51:57.553 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub PUBLICATION foo;
2024-09-08 14:51:57.553 KST client backend[3076257] pg_regress/subscription ERROR:  CREATE SUBSCRIPTION ... WITH (create_slot = true) cannot run inside a transaction block
2024-09-08 14:51:57.553 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub CONNECTION 'testconn' PUBLICATION testpub WITH (create_slot);
2024-09-08 14:51:57.554 KST client backend[3076257] pg_regress/subscription ERROR:  invalid connection string syntax: missing "=" after "testconn" in connection info string
	
2024-09-08 14:51:57.554 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub CONNECTION 'testconn' PUBLICATION testpub;
2024-09-08 14:51:57.554 KST client backend[3076257] pg_regress/subscription ERROR:  publication name "foo" used more than once
2024-09-08 14:51:57.554 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub CONNECTION 'dbname=regress_doesnotexist' PUBLICATION foo, testpub, foo WITH (connect = false);
2024-09-08 14:51:57.554 KST client backend[3076257] pg_regress/subscription WARNING:  subscription was created, but is not connected
2024-09-08 14:51:57.554 KST client backend[3076257] pg_regress/subscription HINT:  To initiate replication, you must manually create the replication slot, enable the subscription, and refresh the subscription.
2024-09-08 14:51:57.554 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.554 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.555 KST client backend[3076256] pg_regress/publication ERROR:  unrecognized publication parameter: "foo"
2024-09-08 14:51:57.555 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_xxx WITH (foo);
2024-09-08 14:51:57.555 KST client backend[3076256] pg_regress/publication ERROR:  unrecognized value for publication option "publish": "cluster"
2024-09-08 14:51:57.555 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_xxx WITH (publish = 'cluster, vacuum');
2024-09-08 14:51:57.555 KST client backend[3076256] pg_regress/publication ERROR:  conflicting or redundant options at character 75
2024-09-08 14:51:57.555 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_xxx WITH (publish_via_partition_root = 'true', publish_via_partition_root = '0');
2024-09-08 14:51:57.556 KST client backend[3076257] pg_regress/subscription ERROR:  subscription "regress_testsub" already exists
2024-09-08 14:51:57.556 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub CONNECTION 'dbname=regress_doesnotexist' PUBLICATION testpub WITH (connect = false);
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription ERROR:  permission denied to create subscription
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription DETAIL:  Only roles with privileges of the "pg_create_subscription" role may create subscriptions.
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub2 CONNECTION 'dbname=regress_doesnotexist' PUBLICATION foo WITH (connect = false);
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription ERROR:  connect = false and copy_data = true are mutually exclusive options
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub2 CONNECTION 'dbname=regress_doesnotexist' PUBLICATION testpub WITH (connect = false, copy_data = true);
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription ERROR:  connect = false and enabled = true are mutually exclusive options
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub2 CONNECTION 'dbname=regress_doesnotexist' PUBLICATION testpub WITH (connect = false, enabled = true);
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription ERROR:  connect = false and create_slot = true are mutually exclusive options
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub2 CONNECTION 'dbname=regress_doesnotexist' PUBLICATION testpub WITH (connect = false, create_slot = true);
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription ERROR:  slot_name = NONE and enabled = true are mutually exclusive options
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub2 CONNECTION 'dbname=regress_doesnotexist' PUBLICATION testpub WITH (slot_name = NONE, enabled = true);
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription ERROR:  slot_name = NONE and create_slot = true are mutually exclusive options
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub2 CONNECTION 'dbname=regress_doesnotexist' PUBLICATION testpub WITH (slot_name = NONE, enabled = false, create_slot = true);
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription ERROR:  subscription with slot_name = NONE must also set enabled = false
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub2 CONNECTION 'dbname=regress_doesnotexist' PUBLICATION testpub WITH (slot_name = NONE);
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription ERROR:  subscription with slot_name = NONE must also set create_slot = false
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub2 CONNECTION 'dbname=regress_doesnotexist' PUBLICATION testpub WITH (slot_name = NONE, enabled = false);
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription ERROR:  subscription with slot_name = NONE must also set enabled = false
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub2 CONNECTION 'dbname=regress_doesnotexist' PUBLICATION testpub WITH (slot_name = NONE, create_slot = false);
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription WARNING:  subscription was created, but is not connected
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription HINT:  To initiate replication, you must manually create the replication slot, enable the subscription, and refresh the subscription.
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription ERROR:  cannot enable subscription that does not have a slot name
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub3 ENABLE;
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription ERROR:  ALTER SUBSCRIPTION ... REFRESH is not allowed for disabled subscriptions
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub3 REFRESH PUBLICATION;
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription ERROR:  unrecognized origin value: "foo"
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub4 CONNECTION 'dbname=regress_doesnotexist' PUBLICATION testpub WITH (slot_name = NONE, connect = false, origin = foo);
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription WARNING:  subscription was created, but is not connected
2024-09-08 14:51:57.557 KST client backend[3076257] pg_regress/subscription HINT:  To initiate replication, you must manually create the replication slot, enable the subscription, and refresh the subscription.
2024-09-08 14:51:57.558 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.558 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.559 KST client backend[3076257] pg_regress/subscription ERROR:  invalid connection string syntax: invalid connection option "i_dont_exist"
	
2024-09-08 14:51:57.559 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub5 CONNECTION 'i_dont_exist=param' PUBLICATION testpub;
2024-09-08 14:51:57.559 KST client backend[3076257] pg_regress/subscription ERROR:  could not connect to the publisher: invalid port number: "-1"
2024-09-08 14:51:57.559 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub5 CONNECTION 'port=-1' PUBLICATION testpub;
2024-09-08 14:51:57.560 KST client backend[3076257] pg_regress/subscription ERROR:  invalid connection string syntax: missing "=" after "foobar" in connection info string
	
2024-09-08 14:51:57.560 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub CONNECTION 'foobar';
2024-09-08 14:51:57.561 KST client backend[3076257] pg_regress/subscription ERROR:  replication slot name "" is too short
2024-09-08 14:51:57.561 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub SET (slot_name = '');
2024-09-08 14:51:57.561 KST client backend[3076257] pg_regress/subscription ERROR:  subscription "regress_doesnotexist" does not exist
2024-09-08 14:51:57.561 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_doesnotexist CONNECTION 'dbname=regress_doesnotexist2';
2024-09-08 14:51:57.561 KST client backend[3076257] pg_regress/subscription ERROR:  unrecognized subscription parameter: "create_slot"
2024-09-08 14:51:57.561 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub SET (create_slot = false);
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication ERROR:  publication "testpub_foralltables" is defined as FOR ALL TABLES
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication DETAIL:  Tables cannot be added to or dropped from FOR ALL TABLES publications.
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub_foralltables ADD TABLE testpub_tbl2;
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication ERROR:  publication "testpub_foralltables" is defined as FOR ALL TABLES
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication DETAIL:  Tables cannot be added to or dropped from FOR ALL TABLES publications.
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub_foralltables DROP TABLE testpub_tbl2;
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication ERROR:  publication "testpub_foralltables" is defined as FOR ALL TABLES
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication DETAIL:  Tables cannot be added to or dropped from FOR ALL TABLES publications.
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub_foralltables SET TABLE pub_test.testpub_nopk;
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication ERROR:  publication "testpub_foralltables" is defined as FOR ALL TABLES
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication DETAIL:  Schemas cannot be added to or dropped from FOR ALL TABLES publications.
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub_foralltables ADD TABLES IN SCHEMA pub_test;
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication ERROR:  publication "testpub_foralltables" is defined as FOR ALL TABLES
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication DETAIL:  Schemas cannot be added to or dropped from FOR ALL TABLES publications.
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub_foralltables DROP TABLES IN SCHEMA pub_test;
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication ERROR:  publication "testpub_foralltables" is defined as FOR ALL TABLES
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication DETAIL:  Schemas cannot be added to or dropped from FOR ALL TABLES publications.
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub_foralltables SET TABLES IN SCHEMA pub_test;
2024-09-08 14:51:57.561 KST client backend[3076257] pg_regress/subscription ERROR:  invalid WAL location (LSN): 0/0
2024-09-08 14:51:57.561 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub SKIP (lsn = '0/0');
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.561 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.562 KST client backend[3076257] pg_regress/subscription ERROR:  must be owner of subscription regress_testsub
2024-09-08 14:51:57.562 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub RENAME TO regress_testsub_dummy;
2024-09-08 14:51:57.562 KST client backend[3076257] pg_regress/subscription ERROR:  invalid value for parameter "synchronous_commit": "foobar"
2024-09-08 14:51:57.562 KST client backend[3076257] pg_regress/subscription HINT:  Available values: local, remote_write, remote_apply, on, off.
2024-09-08 14:51:57.562 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub_foo SET (synchronous_commit = foobar);
2024-09-08 14:51:57.563 KST client backend[3076257] pg_regress/subscription ERROR:  DROP SUBSCRIPTION cannot run inside a transaction block
2024-09-08 14:51:57.563 KST client backend[3076257] pg_regress/subscription STATEMENT:  DROP SUBSCRIPTION regress_testsub;
2024-09-08 14:51:57.563 KST client backend[3076257] pg_regress/subscription ERROR:  subscription "regress_testsub" does not exist
2024-09-08 14:51:57.563 KST client backend[3076257] pg_regress/subscription STATEMENT:  DROP SUBSCRIPTION regress_testsub;
2024-09-08 14:51:57.563 KST client backend[3076257] pg_regress/subscription ERROR:  binary requires a Boolean value
2024-09-08 14:51:57.563 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub CONNECTION 'dbname=regress_doesnotexist' PUBLICATION testpub WITH (connect = false, binary = foo);
2024-09-08 14:51:57.563 KST client backend[3076257] pg_regress/subscription WARNING:  subscription was created, but is not connected
2024-09-08 14:51:57.563 KST client backend[3076257] pg_regress/subscription HINT:  To initiate replication, you must manually create the replication slot, enable the subscription, and refresh the subscription.
2024-09-08 14:51:57.564 KST client backend[3076257] pg_regress/subscription ERROR:  streaming requires a Boolean value or "parallel"
2024-09-08 14:51:57.564 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub CONNECTION 'dbname=regress_doesnotexist' PUBLICATION testpub WITH (connect = false, streaming = foo);
2024-09-08 14:51:57.564 KST client backend[3076257] pg_regress/subscription WARNING:  subscription was created, but is not connected
2024-09-08 14:51:57.564 KST client backend[3076257] pg_regress/subscription HINT:  To initiate replication, you must manually create the replication slot, enable the subscription, and refresh the subscription.
2024-09-08 14:51:57.565 KST client backend[3076257] pg_regress/subscription ERROR:  publication "testpub" is already in subscription "regress_testsub"
2024-09-08 14:51:57.565 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub ADD PUBLICATION testpub WITH (refresh = false);
2024-09-08 14:51:57.565 KST client backend[3076257] pg_regress/subscription ERROR:  publication name "testpub1" used more than once
2024-09-08 14:51:57.565 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub ADD PUBLICATION testpub1, testpub1 WITH (refresh = false);
2024-09-08 14:51:57.565 KST client backend[3076257] pg_regress/subscription ERROR:  publication "testpub1" is already in subscription "regress_testsub"
2024-09-08 14:51:57.565 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub ADD PUBLICATION testpub1, testpub2 WITH (refresh = false);
2024-09-08 14:51:57.565 KST client backend[3076257] pg_regress/subscription ERROR:  publication name "testpub1" used more than once
2024-09-08 14:51:57.565 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub DROP PUBLICATION testpub1, testpub1 WITH (refresh = false);
2024-09-08 14:51:57.565 KST client backend[3076257] pg_regress/subscription ERROR:  cannot drop all the publications from a subscription
2024-09-08 14:51:57.565 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub DROP PUBLICATION testpub, testpub1, testpub2 WITH (refresh = false);
2024-09-08 14:51:57.566 KST client backend[3076257] pg_regress/subscription ERROR:  publication "testpub3" is not in subscription "regress_testsub"
2024-09-08 14:51:57.566 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub DROP PUBLICATION testpub3 WITH (refresh = false);
2024-09-08 14:51:57.566 KST client backend[3076257] pg_regress/subscription WARNING:  subscription was created, but is not connected
2024-09-08 14:51:57.566 KST client backend[3076257] pg_regress/subscription HINT:  To initiate replication, you must manually create the replication slot, enable the subscription, and refresh the subscription.
2024-09-08 14:51:57.566 KST client backend[3076257] pg_regress/subscription ERROR:  ALTER SUBSCRIPTION with refresh cannot run inside a transaction block
2024-09-08 14:51:57.566 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub SET PUBLICATION mypub WITH (refresh = true);
2024-09-08 14:51:57.566 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.566 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.566 KST client backend[3076257] pg_regress/subscription ERROR:  ALTER SUBSCRIPTION ... REFRESH cannot run inside a transaction block
2024-09-08 14:51:57.566 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub REFRESH PUBLICATION;
2024-09-08 14:51:57.566 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.566 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.567 KST client backend[3076257] pg_regress/subscription ERROR:  ALTER SUBSCRIPTION with refresh cannot be executed from a function
2024-09-08 14:51:57.567 KST client backend[3076257] pg_regress/subscription CONTEXT:  SQL function "func" statement 1
2024-09-08 14:51:57.567 KST client backend[3076257] pg_regress/subscription STATEMENT:  SELECT func();
2024-09-08 14:51:57.567 KST client backend[3076256] pg_regress/publication ERROR:  invalid table name at character 71
2024-09-08 14:51:57.567 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_parsertst FOR TABLE pub_test.testpub_nopk, CURRENT_SCHEMA;
2024-09-08 14:51:57.567 KST client backend[3076256] pg_regress/publication ERROR:  invalid schema name at character 64
2024-09-08 14:51:57.567 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_parsertst FOR TABLES IN SCHEMA foo, test.foo;
2024-09-08 14:51:57.569 KST client backend[3076256] pg_regress/publication ERROR:  relation "testpub_nopk" is not part of the publication
2024-09-08 14:51:57.569 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub_forschema DROP TABLE pub_test.testpub_nopk;
2024-09-08 14:51:57.577 KST logical replication worker[3076258] FATAL:  terminating logical replication worker due to administrator command
2024-09-08 14:51:57.578 KST postmaster[3075126] LOG:  background worker "logical replication worker" (PID 3076258) exited with exit code 1
2024-09-08 14:51:57.579 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.579 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.580 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.580 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.582 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.582 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.582 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.582 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.585 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "testpub_parted1" because it does not have a replica identity and publishes updates
2024-09-08 14:51:57.585 KST client backend[3076256] pg_regress/publication HINT:  To enable updating the table, set REPLICA IDENTITY using ALTER TABLE.
2024-09-08 14:51:57.585 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE testpub_parted1 SET a = 1;
2024-09-08 14:51:57.586 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "testpub_parted2" because it does not have a replica identity and publishes updates
2024-09-08 14:51:57.586 KST client backend[3076256] pg_regress/publication HINT:  To enable updating the table, set REPLICA IDENTITY using ALTER TABLE.
2024-09-08 14:51:57.586 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE testpub_parted2 SET a = 2;
2024-09-08 14:51:57.588 KST client backend[3076257] pg_regress/subscription ERROR:  two_phase requires a Boolean value
2024-09-08 14:51:57.588 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub CONNECTION 'dbname=regress_doesnotexist' PUBLICATION testpub WITH (connect = false, two_phase = foo);
2024-09-08 14:51:57.588 KST client backend[3076257] pg_regress/subscription WARNING:  subscription was created, but is not connected
2024-09-08 14:51:57.588 KST client backend[3076257] pg_regress/subscription HINT:  To initiate replication, you must manually create the replication slot, enable the subscription, and refresh the subscription.
2024-09-08 14:51:57.588 KST client backend[3076257] pg_regress/subscription ERROR:  unrecognized subscription parameter: "two_phase"
2024-09-08 14:51:57.588 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub SET (two_phase = false);
2024-09-08 14:51:57.589 KST client backend[3076257] pg_regress/subscription WARNING:  subscription was created, but is not connected
2024-09-08 14:51:57.589 KST client backend[3076257] pg_regress/subscription HINT:  To initiate replication, you must manually create the replication slot, enable the subscription, and refresh the subscription.
2024-09-08 14:51:57.590 KST client backend[3076257] pg_regress/subscription ERROR:  disable_on_error requires a Boolean value
2024-09-08 14:51:57.590 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub CONNECTION 'dbname=regress_doesnotexist' PUBLICATION testpub WITH (connect = false, disable_on_error = foo);
2024-09-08 14:51:57.590 KST client backend[3076257] pg_regress/subscription WARNING:  subscription was created, but is not connected
2024-09-08 14:51:57.590 KST client backend[3076257] pg_regress/subscription HINT:  To initiate replication, you must manually create the replication slot, enable the subscription, and refresh the subscription.
2024-09-08 14:51:57.590 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.590 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.591 KST client backend[3076257] pg_regress/subscription ERROR:  permission denied for database regression
2024-09-08 14:51:57.591 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub CONNECTION 'dbname=regress_doesnotexist' PUBLICATION testpub WITH (connect = false);
2024-09-08 14:51:57.591 KST client backend[3076257] pg_regress/subscription ERROR:  password is required
2024-09-08 14:51:57.591 KST client backend[3076257] pg_regress/subscription DETAIL:  Non-superusers must provide a password in the connection string.
2024-09-08 14:51:57.591 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub CONNECTION 'dbname=regress_doesnotexist' PUBLICATION testpub WITH (connect = false);
2024-09-08 14:51:57.591 KST client backend[3076257] pg_regress/subscription ERROR:  password_required=false is superuser-only
2024-09-08 14:51:57.591 KST client backend[3076257] pg_regress/subscription HINT:  Subscriptions with the password_required option set to false may only be created or modified by the superuser.
2024-09-08 14:51:57.591 KST client backend[3076257] pg_regress/subscription STATEMENT:  CREATE SUBSCRIPTION regress_testsub CONNECTION 'dbname=regress_doesnotexist' PUBLICATION testpub WITH (connect = false, password_required = false);
2024-09-08 14:51:57.592 KST client backend[3076257] pg_regress/subscription WARNING:  subscription was created, but is not connected
2024-09-08 14:51:57.592 KST client backend[3076257] pg_regress/subscription HINT:  To initiate replication, you must manually create the replication slot, enable the subscription, and refresh the subscription.
2024-09-08 14:51:57.592 KST client backend[3076257] pg_regress/subscription ERROR:  must be able to SET ROLE "regress_subscription_user"
2024-09-08 14:51:57.592 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub OWNER TO regress_subscription_user;
2024-09-08 14:51:57.592 KST client backend[3076257] pg_regress/subscription ERROR:  permission denied for database regression
2024-09-08 14:51:57.592 KST client backend[3076257] pg_regress/subscription STATEMENT:  ALTER SUBSCRIPTION regress_testsub RENAME TO regress_testsub2;
2024-09-08 14:51:57.601 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.601 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.601 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.601 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.603 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.603 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.605 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.605 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.606 KST client backend[3076256] pg_regress/publication ERROR:  syntax error at or near "WHERE" at character 76
2024-09-08 14:51:57.606 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_syntax3 FOR TABLES IN SCHEMA testpub_rf_schema1 WHERE (a = 123);
2024-09-08 14:51:57.606 KST client backend[3076256] pg_regress/publication ERROR:  WHERE clause not allowed for schema at character 77
2024-09-08 14:51:57.606 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_syntax3 FOR TABLES IN SCHEMA testpub_rf_schema1, testpub_rf_schema1 WHERE (a = 123);
2024-09-08 14:51:57.606 KST client backend[3076256] pg_regress/publication ERROR:  conflicting or redundant WHERE clauses for table "testpub_rf_tbl1"
2024-09-08 14:51:57.606 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_dups FOR TABLE testpub_rf_tbl1 WHERE (a = 1), testpub_rf_tbl1 WITH (publish = 'insert');
2024-09-08 14:51:57.606 KST client backend[3076256] pg_regress/publication ERROR:  conflicting or redundant WHERE clauses for table "testpub_rf_tbl1"
2024-09-08 14:51:57.606 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_dups FOR TABLE testpub_rf_tbl1, testpub_rf_tbl1 WHERE (a = 2) WITH (publish = 'insert');
2024-09-08 14:51:57.606 KST client backend[3076256] pg_regress/publication ERROR:  argument of PUBLICATION WHERE must be type boolean, not type integer at character 61
2024-09-08 14:51:57.606 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub5 SET TABLE testpub_rf_tbl3 WHERE (1234);
2024-09-08 14:51:57.606 KST client backend[3076256] pg_regress/publication ERROR:  aggregate functions are not allowed in WHERE at character 65
2024-09-08 14:51:57.606 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub5 SET TABLE testpub_rf_tbl3 WHERE (e < AVG(e));
2024-09-08 14:51:57.607 KST client backend[3076256] pg_regress/publication ERROR:  invalid publication WHERE expression at character 62
2024-09-08 14:51:57.607 KST client backend[3076256] pg_regress/publication DETAIL:  User-defined operators are not allowed.
2024-09-08 14:51:57.607 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub6 FOR TABLE testpub_rf_tbl3 WHERE (e =#> 27);
2024-09-08 14:51:57.607 KST client backend[3076256] pg_regress/publication ERROR:  invalid publication WHERE expression at character 66
2024-09-08 14:51:57.607 KST client backend[3076256] pg_regress/publication DETAIL:  User-defined or built-in mutable functions are not allowed.
2024-09-08 14:51:57.607 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub5 ADD TABLE testpub_rf_tbl1 WHERE (a >= testpub_rf_func2());
2024-09-08 14:51:57.608 KST client backend[3076256] pg_regress/publication ERROR:  invalid publication WHERE expression at character 65
2024-09-08 14:51:57.608 KST client backend[3076256] pg_regress/publication DETAIL:  User-defined or built-in mutable functions are not allowed.
2024-09-08 14:51:57.608 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub5 ADD TABLE testpub_rf_tbl1 WHERE (a < random());
2024-09-08 14:51:57.608 KST client backend[3076256] pg_regress/publication ERROR:  invalid publication WHERE expression at character 61
2024-09-08 14:51:57.608 KST client backend[3076256] pg_regress/publication DETAIL:  User-defined collations are not allowed.
2024-09-08 14:51:57.608 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub5 ADD TABLE testpub_rf_tbl1 WHERE (b < '2' COLLATE user_collation);
2024-09-08 14:51:57.611 KST client backend[3076256] pg_regress/publication ERROR:  invalid publication WHERE expression at character 53
2024-09-08 14:51:57.611 KST client backend[3076256] pg_regress/publication DETAIL:  User-defined types are not allowed.
2024-09-08 14:51:57.611 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub6 FOR TABLE rf_bug WHERE (status = 'open') WITH (publish = 'insert');
2024-09-08 14:51:57.612 KST client backend[3076256] pg_regress/publication ERROR:  invalid publication WHERE expression at character 62
2024-09-08 14:51:57.612 KST client backend[3076256] pg_regress/publication DETAIL:  Only columns, constants, built-in operators, built-in data types, built-in collations, and immutable built-in functions are allowed.
2024-09-08 14:51:57.612 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub6 FOR TABLE testpub_rf_tbl1 WHERE (a IN (SELECT generate_series(1,5)));
2024-09-08 14:51:57.612 KST client backend[3076256] pg_regress/publication ERROR:  invalid publication WHERE expression at character 77
2024-09-08 14:51:57.612 KST client backend[3076256] pg_regress/publication DETAIL:  System columns are not allowed.
2024-09-08 14:51:57.612 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub6 FOR TABLE testpub_rf_tbl1 WHERE ('(0,1)'::tid = ctid);
2024-09-08 14:51:57.614 KST client backend[3076256] pg_regress/publication ERROR:  cannot use a WHERE clause when removing a table from a publication
2024-09-08 14:51:57.614 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub5 DROP TABLE testpub_rf_tbl1 WHERE (e < 27);
2024-09-08 14:51:57.614 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.614 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.621 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.621 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.622 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_pk"
2024-09-08 14:51:57.622 KST client backend[3076256] pg_regress/publication DETAIL:  Column used in the publication WHERE expression is not part of the replica identity.
2024-09-08 14:51:57.622 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_pk SET a = 1;
2024-09-08 14:51:57.622 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_pk"
2024-09-08 14:51:57.622 KST client backend[3076256] pg_regress/publication DETAIL:  Column used in the publication WHERE expression is not part of the replica identity.
2024-09-08 14:51:57.622 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_pk SET a = 1;
2024-09-08 14:51:57.622 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_nopk"
2024-09-08 14:51:57.622 KST client backend[3076256] pg_regress/publication DETAIL:  Column used in the publication WHERE expression is not part of the replica identity.
2024-09-08 14:51:57.622 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_nopk SET a = 1;
2024-09-08 14:51:57.624 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_pk"
2024-09-08 14:51:57.624 KST client backend[3076256] pg_regress/publication DETAIL:  Column used in the publication WHERE expression is not part of the replica identity.
2024-09-08 14:51:57.624 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_pk SET a = 1;
2024-09-08 14:51:57.624 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_pk"
2024-09-08 14:51:57.624 KST client backend[3076256] pg_regress/publication DETAIL:  Column used in the publication WHERE expression is not part of the replica identity.
2024-09-08 14:51:57.624 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_pk SET a = 1;
2024-09-08 14:51:57.624 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_nopk"
2024-09-08 14:51:57.624 KST client backend[3076256] pg_regress/publication DETAIL:  Column used in the publication WHERE expression is not part of the replica identity.
2024-09-08 14:51:57.624 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_nopk SET a = 1;
2024-09-08 14:51:57.625 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_pk"
2024-09-08 14:51:57.625 KST client backend[3076256] pg_regress/publication DETAIL:  Column used in the publication WHERE expression is not part of the replica identity.
2024-09-08 14:51:57.625 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_pk SET a = 1;
2024-09-08 14:51:57.626 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_nopk"
2024-09-08 14:51:57.626 KST client backend[3076256] pg_regress/publication DETAIL:  Column used in the publication WHERE expression is not part of the replica identity.
2024-09-08 14:51:57.626 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_nopk SET a = 1;
2024-09-08 14:51:57.626 KST client backend[3076256] pg_regress/publication ERROR:  cannot use publication WHERE clause for relation "rf_tbl_abcd_part_pk"
2024-09-08 14:51:57.626 KST client backend[3076256] pg_regress/publication DETAIL:  WHERE clause cannot be used for a partitioned table when publish_via_partition_root is false.
2024-09-08 14:51:57.626 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub6 SET TABLE rf_tbl_abcd_part_pk WHERE (a > 99);
2024-09-08 14:51:57.627 KST client backend[3076256] pg_regress/publication ERROR:  cannot set parameter "publish_via_partition_root" to false for publication "testpub6"
2024-09-08 14:51:57.627 KST client backend[3076256] pg_regress/publication DETAIL:  The publication contains a WHERE clause for partitioned table "rf_tbl_abcd_part_pk", which is not allowed when "publish_via_partition_root" is false.
2024-09-08 14:51:57.627 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub6 SET (PUBLISH_VIA_PARTITION_ROOT=0);
2024-09-08 14:51:57.628 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_part_pk_1"
2024-09-08 14:51:57.628 KST client backend[3076256] pg_regress/publication DETAIL:  Column used in the publication WHERE expression is not part of the replica identity.
2024-09-08 14:51:57.628 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_part_pk SET a = 1;
2024-09-08 14:51:57.628 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_part_pk_1"
2024-09-08 14:51:57.628 KST client backend[3076256] pg_regress/publication DETAIL:  Column used in the publication WHERE expression is not part of the replica identity.
2024-09-08 14:51:57.628 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_part_pk SET a = 1;
2024-09-08 14:51:57.630 KST client backend[3076256] pg_regress/publication ERROR:  conflicting or redundant column lists for table "testpub_tbl1"
2024-09-08 14:51:57.630 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_dups FOR TABLE testpub_tbl1 (a), testpub_tbl1 WITH (publish = 'insert');
2024-09-08 14:51:57.630 KST client backend[3076256] pg_regress/publication ERROR:  conflicting or redundant column lists for table "testpub_tbl1"
2024-09-08 14:51:57.630 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_dups FOR TABLE testpub_tbl1, testpub_tbl1 (a) WITH (publish = 'insert');
2024-09-08 14:51:57.630 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.630 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.630 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.630 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.631 KST client backend[3076256] pg_regress/publication ERROR:  column "x" of relation "testpub_tbl5" does not exist
2024-09-08 14:51:57.631 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub_fortable ADD TABLE testpub_tbl5 (a, x);
2024-09-08 14:51:57.632 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "testpub_tbl5"
2024-09-08 14:51:57.632 KST client backend[3076256] pg_regress/publication DETAIL:  Column list used by the publication does not cover the replica identity.
2024-09-08 14:51:57.632 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE testpub_tbl5 SET a = 1;
2024-09-08 14:51:57.632 KST client backend[3076256] pg_regress/publication ERROR:  cannot use generated column "d" in publication column list
2024-09-08 14:51:57.632 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub_fortable ADD TABLE testpub_tbl5 (a, d);
2024-09-08 14:51:57.632 KST client backend[3076256] pg_regress/publication ERROR:  cannot use system column "ctid" in publication column list
2024-09-08 14:51:57.632 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub_fortable ADD TABLE testpub_tbl5 (a, ctid);
2024-09-08 14:51:57.632 KST client backend[3076256] pg_regress/publication ERROR:  cannot drop column c of table testpub_tbl5 because other objects depend on it
2024-09-08 14:51:57.632 KST client backend[3076256] pg_regress/publication DETAIL:  publication of table testpub_tbl5 in publication testpub_fortable depends on column c of table testpub_tbl5
2024-09-08 14:51:57.632 KST client backend[3076256] pg_regress/publication HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:57.632 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER TABLE testpub_tbl5 DROP COLUMN c;
2024-09-08 14:51:57.633 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "testpub_tbl5"
2024-09-08 14:51:57.633 KST client backend[3076256] pg_regress/publication DETAIL:  Column list used by the publication does not cover the replica identity.
2024-09-08 14:51:57.633 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE testpub_tbl5 SET a = 1;
2024-09-08 14:51:57.633 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "testpub_tbl5"
2024-09-08 14:51:57.633 KST client backend[3076256] pg_regress/publication DETAIL:  Column list used by the publication does not cover the replica identity.
2024-09-08 14:51:57.633 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE testpub_tbl5 SET a = 1;
2024-09-08 14:51:57.633 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.633 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.635 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "testpub_tbl6"
2024-09-08 14:51:57.635 KST client backend[3076256] pg_regress/publication DETAIL:  Column list used by the publication does not cover the replica identity.
2024-09-08 14:51:57.635 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE testpub_tbl6 SET a = 1;
2024-09-08 14:51:57.650 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.650 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.651 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "testpub_tbl8_1"
2024-09-08 14:51:57.651 KST client backend[3076256] pg_regress/publication DETAIL:  Column list used by the publication does not cover the replica identity.
2024-09-08 14:51:57.651 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE testpub_tbl8 SET a = 1;
2024-09-08 14:51:57.651 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "testpub_tbl8_1"
2024-09-08 14:51:57.651 KST client backend[3076256] pg_regress/publication DETAIL:  Column list used by the publication does not cover the replica identity.
2024-09-08 14:51:57.651 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE testpub_tbl8 SET a = 1;
2024-09-08 14:51:57.652 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "testpub_tbl8_1"
2024-09-08 14:51:57.652 KST client backend[3076256] pg_regress/publication DETAIL:  Column list used by the publication does not cover the replica identity.
2024-09-08 14:51:57.652 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE testpub_tbl8 SET a = 1;
2024-09-08 14:51:57.653 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "testpub_tbl8_1"
2024-09-08 14:51:57.653 KST client backend[3076256] pg_regress/publication DETAIL:  Column list used by the publication does not cover the replica identity.
2024-09-08 14:51:57.653 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE testpub_tbl8 SET a = 1;
2024-09-08 14:51:57.657 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "testpub_tbl8_1"
2024-09-08 14:51:57.657 KST client backend[3076256] pg_regress/publication DETAIL:  Column list used by the publication does not cover the replica identity.
2024-09-08 14:51:57.657 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE testpub_tbl8 SET a = 1;
2024-09-08 14:51:57.658 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "testpub_tbl8_0"
2024-09-08 14:51:57.658 KST client backend[3076256] pg_regress/publication DETAIL:  Column list used by the publication does not cover the replica identity.
2024-09-08 14:51:57.658 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE testpub_tbl8 SET a = 1;
2024-09-08 14:51:57.658 KST client backend[3076256] pg_regress/publication ERROR:  cannot use column list for relation "public.testpub_tbl7" in publication "testpub_tbl9"
2024-09-08 14:51:57.658 KST client backend[3076256] pg_regress/publication DETAIL:  Column lists cannot be specified in publications containing FOR TABLES IN SCHEMA elements.
2024-09-08 14:51:57.658 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_tbl9 FOR TABLES IN SCHEMA public, TABLE public.testpub_tbl7(a);
2024-09-08 14:51:57.659 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.659 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.659 KST client backend[3076256] pg_regress/publication ERROR:  cannot use column list for relation "public.testpub_tbl7" in publication "testpub_tbl9"
2024-09-08 14:51:57.659 KST client backend[3076256] pg_regress/publication DETAIL:  Column lists cannot be specified in publications containing FOR TABLES IN SCHEMA elements.
2024-09-08 14:51:57.659 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub_tbl9 ADD TABLE public.testpub_tbl7(a);
2024-09-08 14:51:57.660 KST client backend[3076256] pg_regress/publication ERROR:  cannot add schema to publication "testpub_tbl9"
2024-09-08 14:51:57.660 KST client backend[3076256] pg_regress/publication DETAIL:  Schemas cannot be added if any tables that specify a column list are already part of the publication.
2024-09-08 14:51:57.660 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub_tbl9 ADD TABLES IN SCHEMA public;
2024-09-08 14:51:57.660 KST client backend[3076256] pg_regress/publication ERROR:  cannot use column list for relation "public.testpub_tbl7" in publication "testpub_tbl9"
2024-09-08 14:51:57.660 KST client backend[3076256] pg_regress/publication DETAIL:  Column lists cannot be specified in publications containing FOR TABLES IN SCHEMA elements.
2024-09-08 14:51:57.660 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub_tbl9 SET TABLES IN SCHEMA public, TABLE public.testpub_tbl7(a);
2024-09-08 14:51:57.660 KST client backend[3076256] pg_regress/publication ERROR:  cannot use column list for relation "public.testpub_tbl7" in publication "testpub_tbl9"
2024-09-08 14:51:57.660 KST client backend[3076256] pg_regress/publication DETAIL:  Column lists cannot be specified in publications containing FOR TABLES IN SCHEMA elements.
2024-09-08 14:51:57.660 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub_tbl9 ADD TABLES IN SCHEMA public, TABLE public.testpub_tbl7(a);
2024-09-08 14:51:57.663 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.663 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.671 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.671 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.671 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_pk"
2024-09-08 14:51:57.671 KST client backend[3076256] pg_regress/publication DETAIL:  Column list used by the publication does not cover the replica identity.
2024-09-08 14:51:57.671 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_pk SET a = 1;
2024-09-08 14:51:57.672 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_pk"
2024-09-08 14:51:57.672 KST client backend[3076256] pg_regress/publication DETAIL:  Column list used by the publication does not cover the replica identity.
2024-09-08 14:51:57.672 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_pk SET a = 1;
2024-09-08 14:51:57.672 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_nopk" because it does not have a replica identity and publishes updates
2024-09-08 14:51:57.672 KST client backend[3076256] pg_regress/publication HINT:  To enable updating the table, set REPLICA IDENTITY using ALTER TABLE.
2024-09-08 14:51:57.672 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_nopk SET a = 1;
2024-09-08 14:51:57.672 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_pk"
2024-09-08 14:51:57.672 KST client backend[3076256] pg_regress/publication DETAIL:  Column list used by the publication does not cover the replica identity.
2024-09-08 14:51:57.672 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_pk SET a = 1;
2024-09-08 14:51:57.673 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_nopk"
2024-09-08 14:51:57.673 KST client backend[3076256] pg_regress/publication DETAIL:  Column list used by the publication does not cover the replica identity.
2024-09-08 14:51:57.673 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_nopk SET a = 1;
2024-09-08 14:51:57.673 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_pk" because it does not have a replica identity and publishes updates
2024-09-08 14:51:57.673 KST client backend[3076256] pg_regress/publication HINT:  To enable updating the table, set REPLICA IDENTITY using ALTER TABLE.
2024-09-08 14:51:57.673 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_pk SET a = 1;
2024-09-08 14:51:57.673 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_pk" because it does not have a replica identity and publishes updates
2024-09-08 14:51:57.673 KST client backend[3076256] pg_regress/publication HINT:  To enable updating the table, set REPLICA IDENTITY using ALTER TABLE.
2024-09-08 14:51:57.673 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_pk SET a = 1;
2024-09-08 14:51:57.674 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_nopk" because it does not have a replica identity and publishes updates
2024-09-08 14:51:57.674 KST client backend[3076256] pg_regress/publication HINT:  To enable updating the table, set REPLICA IDENTITY using ALTER TABLE.
2024-09-08 14:51:57.674 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_nopk SET a = 1;
2024-09-08 14:51:57.675 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_pk"
2024-09-08 14:51:57.675 KST client backend[3076256] pg_regress/publication DETAIL:  Column list used by the publication does not cover the replica identity.
2024-09-08 14:51:57.675 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_pk SET a = 1;
2024-09-08 14:51:57.675 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_nopk"
2024-09-08 14:51:57.675 KST client backend[3076256] pg_regress/publication DETAIL:  Column list used by the publication does not cover the replica identity.
2024-09-08 14:51:57.675 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_nopk SET a = 1;
2024-09-08 14:51:57.676 KST client backend[3076256] pg_regress/publication ERROR:  cannot use column list for relation "public.rf_tbl_abcd_part_pk" in publication "testpub6"
2024-09-08 14:51:57.676 KST client backend[3076256] pg_regress/publication DETAIL:  Column lists cannot be specified for partitioned tables when publish_via_partition_root is false.
2024-09-08 14:51:57.676 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub6 SET TABLE rf_tbl_abcd_part_pk (a);
2024-09-08 14:51:57.677 KST client backend[3076256] pg_regress/publication ERROR:  cannot set parameter "publish_via_partition_root" to false for publication "testpub6"
2024-09-08 14:51:57.677 KST client backend[3076256] pg_regress/publication DETAIL:  The publication contains a column list for partitioned table "rf_tbl_abcd_part_pk", which is not allowed when "publish_via_partition_root" is false.
2024-09-08 14:51:57.677 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub6 SET (PUBLISH_VIA_PARTITION_ROOT=0);
2024-09-08 14:51:57.677 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_part_pk_1"
2024-09-08 14:51:57.677 KST client backend[3076256] pg_regress/publication DETAIL:  Column list used by the publication does not cover the replica identity.
2024-09-08 14:51:57.677 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_part_pk SET a = 1;
2024-09-08 14:51:57.677 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "rf_tbl_abcd_part_pk_1"
2024-09-08 14:51:57.677 KST client backend[3076256] pg_regress/publication DETAIL:  Column list used by the publication does not cover the replica identity.
2024-09-08 14:51:57.677 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE rf_tbl_abcd_part_pk SET a = 1;
2024-09-08 14:51:57.680 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.680 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.680 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "testpub_tbl4" because it does not have a replica identity and publishes updates
2024-09-08 14:51:57.680 KST client backend[3076256] pg_regress/publication HINT:  To enable updating the table, set REPLICA IDENTITY using ALTER TABLE.
2024-09-08 14:51:57.680 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE testpub_tbl4 set a = 3;
2024-09-08 14:51:57.681 KST client backend[3076256] pg_regress/publication ERROR:  cannot add relation "testpub_view" to publication
2024-09-08 14:51:57.681 KST client backend[3076256] pg_regress/publication DETAIL:  This operation is not supported for views.
2024-09-08 14:51:57.681 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_fortbl FOR TABLE testpub_view;
2024-09-08 14:51:57.682 KST client backend[3076256] pg_regress/publication ERROR:  cannot add relation "testpub_temptbl" to publication
2024-09-08 14:51:57.682 KST client backend[3076256] pg_regress/publication DETAIL:  This operation is not supported for temporary tables.
2024-09-08 14:51:57.682 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_fortemptbl FOR TABLE testpub_temptbl;
2024-09-08 14:51:57.683 KST client backend[3076256] pg_regress/publication ERROR:  cannot add relation "testpub_unloggedtbl" to publication
2024-09-08 14:51:57.683 KST client backend[3076256] pg_regress/publication DETAIL:  This operation is not supported for unlogged tables.
2024-09-08 14:51:57.683 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_forunloggedtbl FOR TABLE testpub_unloggedtbl;
2024-09-08 14:51:57.683 KST client backend[3076256] pg_regress/publication ERROR:  cannot add relation "pg_publication" to publication
2024-09-08 14:51:57.683 KST client backend[3076256] pg_regress/publication DETAIL:  This operation is not supported for system tables.
2024-09-08 14:51:57.683 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_forsystemtbl FOR TABLE pg_publication;
2024-09-08 14:51:57.683 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.683 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.683 KST client backend[3076256] pg_regress/publication ERROR:  relation "testpub_tbl1" is already member of publication "testpub_fortbl"
2024-09-08 14:51:57.683 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub_fortbl ADD TABLE testpub_tbl1;
2024-09-08 14:51:57.683 KST client backend[3076256] pg_regress/publication ERROR:  publication "testpub_fortbl" already exists
2024-09-08 14:51:57.683 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_fortbl FOR TABLE testpub_tbl1;
2024-09-08 14:51:57.684 KST client backend[3076256] pg_regress/publication ERROR:  cannot add relation "testpub_view" to publication
2024-09-08 14:51:57.684 KST client backend[3076256] pg_regress/publication DETAIL:  This operation is not supported for views.
2024-09-08 14:51:57.684 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub_default ADD TABLE testpub_view;
2024-09-08 14:51:57.692 KST client backend[3076256] pg_regress/publication ERROR:  relation "testpub_nopk" is not part of the publication
2024-09-08 14:51:57.692 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub_default DROP TABLE pub_test.testpub_nopk;
2024-09-08 14:51:57.695 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "testpub_addpk" because it does not have a replica identity and publishes updates
2024-09-08 14:51:57.695 KST client backend[3076256] pg_regress/publication HINT:  To enable updating the table, set REPLICA IDENTITY using ALTER TABLE.
2024-09-08 14:51:57.695 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE pub_test.testpub_addpk SET id = 2;
2024-09-08 14:51:57.696 KST client backend[3076256] pg_regress/publication ERROR:  permission denied for database regression
2024-09-08 14:51:57.696 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub2;
2024-09-08 14:51:57.697 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.697 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.697 KST client backend[3076256] pg_regress/publication ERROR:  must be superuser to create FOR TABLES IN SCHEMA publication
2024-09-08 14:51:57.697 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub3 FOR TABLES IN SCHEMA pub_test;
2024-09-08 14:51:57.697 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.697 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.697 KST client backend[3076256] pg_regress/publication ERROR:  must be owner of table testpub_tbl1
2024-09-08 14:51:57.697 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub2 ADD TABLE testpub_tbl1;
2024-09-08 14:51:57.697 KST client backend[3076256] pg_regress/publication ERROR:  must be superuser to add or set schemas
2024-09-08 14:51:57.697 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub3 ADD TABLES IN SCHEMA pub_test;
2024-09-08 14:51:57.698 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.698 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.698 KST client backend[3076256] pg_regress/publication ERROR:  permission denied to change owner of publication "testpub4"
2024-09-08 14:51:57.698 KST client backend[3076256] pg_regress/publication HINT:  The owner of a FOR TABLES IN SCHEMA publication must be a superuser.
2024-09-08 14:51:57.698 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub4 owner to regress_publication_user2;
2024-09-08 14:51:57.700 KST client backend[3076256] pg_regress/publication ERROR:  must be owner of publication testpub_default
2024-09-08 14:51:57.700 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub_default RENAME TO testpub_dummy;
2024-09-08 14:51:57.705 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.705 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.706 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.706 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.707 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.707 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.707 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.707 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.708 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.708 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.708 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.708 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.709 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.709 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.713 KST client backend[3076256] pg_regress/publication ERROR:  no schema has been selected for CURRENT_SCHEMA
2024-09-08 14:51:57.713 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_forschema FOR TABLES IN SCHEMA CURRENT_SCHEMA;
2024-09-08 14:51:57.713 KST client backend[3076256] pg_regress/publication ERROR:  invalid publication object list at character 43
2024-09-08 14:51:57.713 KST client backend[3076256] pg_regress/publication DETAIL:  One of TABLE or TABLES IN SCHEMA must be specified before a standalone table or schema name.
2024-09-08 14:51:57.713 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_forschema1 FOR CURRENT_SCHEMA;
2024-09-08 14:51:57.713 KST client backend[3076256] pg_regress/publication ERROR:  syntax error at or near "CURRENT_SCHEMA" at character 49
2024-09-08 14:51:57.713 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_forschema1 FOR TABLE CURRENT_SCHEMA;
2024-09-08 14:51:57.713 KST client backend[3076256] pg_regress/publication ERROR:  schema "non_existent_schema" does not exist
2024-09-08 14:51:57.713 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_forschema FOR TABLES IN SCHEMA non_existent_schema;
2024-09-08 14:51:57.713 KST client backend[3076256] pg_regress/publication ERROR:  cannot add schema "pg_catalog" to publication
2024-09-08 14:51:57.713 KST client backend[3076256] pg_regress/publication DETAIL:  This operation is not supported for system schemas.
2024-09-08 14:51:57.713 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_forschema FOR TABLES IN SCHEMA pg_catalog;
2024-09-08 14:51:57.713 KST client backend[3076256] pg_regress/publication ERROR:  schema "testpub_view" does not exist
2024-09-08 14:51:57.713 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub1_forschema1 FOR TABLES IN SCHEMA testpub_view;
2024-09-08 14:51:57.717 KST client backend[3076256] pg_regress/publication ERROR:  schema "non_existent_schema" does not exist
2024-09-08 14:51:57.717 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub1_forschema ADD TABLES IN SCHEMA non_existent_schema;
2024-09-08 14:51:57.717 KST client backend[3076256] pg_regress/publication ERROR:  schema "pub_test1" is already member of publication "testpub1_forschema"
2024-09-08 14:51:57.717 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub1_forschema ADD TABLES IN SCHEMA pub_test1;
2024-09-08 14:51:57.719 KST client backend[3076256] pg_regress/publication ERROR:  tables from schema "pub_test2" are not part of the publication
2024-09-08 14:51:57.719 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub1_forschema DROP TABLES IN SCHEMA pub_test2;
2024-09-08 14:51:57.720 KST client backend[3076256] pg_regress/publication ERROR:  schema "non_existent_schema" does not exist
2024-09-08 14:51:57.720 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub1_forschema DROP TABLES IN SCHEMA non_existent_schema;
2024-09-08 14:51:57.722 KST client backend[3076256] pg_regress/publication ERROR:  schema "non_existent_schema" does not exist
2024-09-08 14:51:57.722 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub1_forschema SET TABLES IN SCHEMA non_existent_schema;
2024-09-08 14:51:57.724 KST client backend[3076256] pg_regress/publication ERROR:  syntax error at or near "(" at character 63
2024-09-08 14:51:57.724 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub1_forschema ADD TABLES IN SCHEMA foo (a, b);
2024-09-08 14:51:57.724 KST client backend[3076256] pg_regress/publication ERROR:  column specification not allowed for schema at character 64
2024-09-08 14:51:57.724 KST client backend[3076256] pg_regress/publication STATEMENT:  ALTER PUBLICATION testpub1_forschema ADD TABLES IN SCHEMA foo, bar (a, b);
2024-09-08 14:51:57.726 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "tbl" because it does not have a replica identity and publishes updates
2024-09-08 14:51:57.726 KST client backend[3076256] pg_regress/publication HINT:  To enable updating the table, set REPLICA IDENTITY using ALTER TABLE.
2024-09-08 14:51:57.726 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE pub_test1.tbl SET id = 2;
2024-09-08 14:51:57.727 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "tbl" because it does not have a replica identity and publishes updates
2024-09-08 14:51:57.727 KST client backend[3076256] pg_regress/publication HINT:  To enable updating the table, set REPLICA IDENTITY using ALTER TABLE.
2024-09-08 14:51:57.727 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE pub_test1.tbl SET id = 2;
2024-09-08 14:51:57.728 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.728 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.729 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "child_parent1" because it does not have a replica identity and publishes updates
2024-09-08 14:51:57.729 KST client backend[3076256] pg_regress/publication HINT:  To enable updating the table, set REPLICA IDENTITY using ALTER TABLE.
2024-09-08 14:51:57.729 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE pub_testpart1.parent1 set a = 1;
2024-09-08 14:51:57.729 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "child_parent1" because it does not have a replica identity and publishes updates
2024-09-08 14:51:57.729 KST client backend[3076256] pg_regress/publication HINT:  To enable updating the table, set REPLICA IDENTITY using ALTER TABLE.
2024-09-08 14:51:57.729 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE pub_testpart2.child_parent1 set a = 1;
2024-09-08 14:51:57.730 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.730 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.730 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "child_parent1" because it does not have a replica identity and publishes updates
2024-09-08 14:51:57.730 KST client backend[3076256] pg_regress/publication HINT:  To enable updating the table, set REPLICA IDENTITY using ALTER TABLE.
2024-09-08 14:51:57.730 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE pub_testpart2.child_parent1 set a = 1;
2024-09-08 14:51:57.730 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "child_parent2" because it does not have a replica identity and publishes updates
2024-09-08 14:51:57.730 KST client backend[3076256] pg_regress/publication HINT:  To enable updating the table, set REPLICA IDENTITY using ALTER TABLE.
2024-09-08 14:51:57.730 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE pub_testpart2.parent2 set a = 1;
2024-09-08 14:51:57.731 KST client backend[3076256] pg_regress/publication ERROR:  cannot update table "child_parent2" because it does not have a replica identity and publishes updates
2024-09-08 14:51:57.731 KST client backend[3076256] pg_regress/publication HINT:  To enable updating the table, set REPLICA IDENTITY using ALTER TABLE.
2024-09-08 14:51:57.731 KST client backend[3076256] pg_regress/publication STATEMENT:  UPDATE pub_testpart1.child_parent2 set a = 1;
2024-09-08 14:51:57.731 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.731 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.733 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.733 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.733 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.733 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.734 KST client backend[3076256] pg_regress/publication ERROR:  invalid publication object list at character 38
2024-09-08 14:51:57.734 KST client backend[3076256] pg_regress/publication DETAIL:  One of TABLE or TABLES IN SCHEMA must be specified before a standalone table or schema name.
2024-09-08 14:51:57.734 KST client backend[3076256] pg_regress/publication STATEMENT:  CREATE PUBLICATION testpub_error FOR pub_test2.tbl1;
2024-09-08 14:51:57.740 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.740 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.742 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.742 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.744 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.744 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.745 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.745 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.749 KST client backend[3076256] pg_regress/publication WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:57.749 KST client backend[3076256] pg_regress/publication HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:57.770 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_ftest1_fkey"
2024-09-08 14:51:57.770 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ftest1)=(100) is not present in table "pktable".
2024-09-08 14:51:57.770 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO FKTABLE VALUES (100, 2);
2024-09-08 14:51:57.771 KST client backend[3076293] pg_regress/advisory_lock WARNING:  you don't own a lock of type ExclusiveLock
2024-09-08 14:51:57.772 KST client backend[3076293] pg_regress/advisory_lock WARNING:  you don't own a lock of type ShareLock
2024-09-08 14:51:57.772 KST client backend[3076293] pg_regress/advisory_lock WARNING:  you don't own a lock of type ExclusiveLock
2024-09-08 14:51:57.772 KST client backend[3076293] pg_regress/advisory_lock WARNING:  you don't own a lock of type ShareLock
2024-09-08 14:51:57.773 KST client backend[3076293] pg_regress/advisory_lock WARNING:  you don't own a lock of type ExclusiveLock
2024-09-08 14:51:57.773 KST client backend[3076293] pg_regress/advisory_lock WARNING:  you don't own a lock of type ShareLock
2024-09-08 14:51:57.773 KST client backend[3076293] pg_regress/advisory_lock WARNING:  you don't own a lock of type ExclusiveLock
2024-09-08 14:51:57.773 KST client backend[3076293] pg_regress/advisory_lock WARNING:  you don't own a lock of type ShareLock
2024-09-08 14:51:57.773 KST client backend[3076291] pg_regress/functional_deps ERROR:  column "articles.id" must appear in the GROUP BY clause or be used in an aggregate function at character 8
2024-09-08 14:51:57.773 KST client backend[3076291] pg_regress/functional_deps STATEMENT:  SELECT id, keywords, title, body, created
	FROM articles
	GROUP BY title;
2024-09-08 14:51:57.774 KST client backend[3076291] pg_regress/functional_deps ERROR:  column "articles.id" must appear in the GROUP BY clause or be used in an aggregate function at character 8
2024-09-08 14:51:57.774 KST client backend[3076291] pg_regress/functional_deps STATEMENT:  SELECT id, keywords, title, body, created
	FROM articles
	GROUP BY body;
2024-09-08 14:51:57.774 KST client backend[3076291] pg_regress/functional_deps ERROR:  column "articles.id" must appear in the GROUP BY clause or be used in an aggregate function at character 8
2024-09-08 14:51:57.774 KST client backend[3076291] pg_regress/functional_deps STATEMENT:  SELECT id, keywords, title, body, created
	FROM articles
	GROUP BY keywords;
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT table_to_xml('testxmlschema.test1', false, false, '');
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT table_to_xml('testxmlschema.test1', true, false, 'foo');
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT table_to_xml('testxmlschema.test1', false, true, '');
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT table_to_xml('testxmlschema.test1', true, true, '');
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT table_to_xml('testxmlschema.test2', false, false, '');
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT table_to_xmlschema('testxmlschema.test1', false, false, '');
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT table_to_xmlschema('testxmlschema.test1', true, false, '');
2024-09-08 14:51:57.774 KST client backend[3076291] pg_regress/functional_deps ERROR:  column "a.id" must appear in the GROUP BY clause or be used in an aggregate function at character 8
2024-09-08 14:51:57.774 KST client backend[3076291] pg_regress/functional_deps STATEMENT:  SELECT a.id, a.keywords, a.title, a.body, a.created
	FROM articles AS a, articles_in_category AS aic
	WHERE a.id = aic.article_id AND aic.category_id in (14,62,70,53,138)
	GROUP BY aic.article_id, aic.category_id;
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT table_to_xmlschema('testxmlschema.test1', false, true, 'foo');
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT table_to_xmlschema('testxmlschema.test1', true, true, '');
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.774 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT table_to_xmlschema('testxmlschema.test2', false, false, '');
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT table_to_xml_and_xmlschema('testxmlschema.test1', false, false, '');
2024-09-08 14:51:57.775 KST client backend[3076291] pg_regress/functional_deps ERROR:  column "a.id" must appear in the GROUP BY clause or be used in an aggregate function at character 8
2024-09-08 14:51:57.775 KST client backend[3076291] pg_regress/functional_deps STATEMENT:  SELECT a.id, a.keywords, a.title, a.body, a.created
	FROM articles AS a JOIN articles_in_category AS aic ON a.id = aic.article_id
	WHERE aic.category_id in (14,62,70,53,138)
	GROUP BY aic.article_id, aic.category_id;
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT table_to_xml_and_xmlschema('testxmlschema.test1', true, false, '');
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT table_to_xml_and_xmlschema('testxmlschema.test1', false, true, '');
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT table_to_xml_and_xmlschema('testxmlschema.test1', true, true, 'foo');
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT query_to_xml('SELECT * FROM testxmlschema.test1', false, false, '');
2024-09-08 14:51:57.775 KST client backend[3076275] pg_regress/foreign_key ERROR:  constraint "constrname_wrong" for table "fktable" does not exist
2024-09-08 14:51:57.775 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  COMMENT ON CONSTRAINT constrname_wrong ON FKTABLE IS 'fk constraint comment';
2024-09-08 14:51:57.775 KST client backend[3076291] pg_regress/functional_deps ERROR:  column "aic.changed" must appear in the GROUP BY clause or be used in an aggregate function at character 8
2024-09-08 14:51:57.775 KST client backend[3076291] pg_regress/functional_deps STATEMENT:  SELECT aic.changed
	FROM articles AS a JOIN articles_in_category AS aic ON a.id = aic.article_id
	WHERE aic.category_id in (14,62,70,53,138)
	GROUP BY aic.article_id;
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT query_to_xmlschema('SELECT * FROM testxmlschema.test1', false, false, '');
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.775 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT query_to_xml_and_xmlschema('SELECT * FROM testxmlschema.test1', true, true, '');
2024-09-08 14:51:57.776 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.776 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.776 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT cursor_to_xml('xc'::refcursor, 5, false, true, '');
2024-09-08 14:51:57.776 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.776 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.776 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT cursor_to_xmlschema('xc'::refcursor, false, true, '');
2024-09-08 14:51:57.776 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.776 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.776 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT cursor_to_xml('xc'::refcursor, 5, true, false, '');
2024-09-08 14:51:57.776 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.776 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.776 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT cursor_to_xmlschema('xc'::refcursor, true, false, '');
2024-09-08 14:51:57.776 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.776 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.776 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT schema_to_xml('testxmlschema', false, true, '');
2024-09-08 14:51:57.776 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.776 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.776 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT schema_to_xml('testxmlschema', true, false, '');
2024-09-08 14:51:57.777 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "constrname"
2024-09-08 14:51:57.777 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ftest1, ftest2)=(100, 2) is not present in table "pktable".
2024-09-08 14:51:57.777 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO FKTABLE VALUES (100, 2, 4);
2024-09-08 14:51:57.777 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "constrname"
2024-09-08 14:51:57.777 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ftest1, ftest2)=(2, 2) is not present in table "pktable".
2024-09-08 14:51:57.777 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO FKTABLE VALUES (2, 2, 4);
2024-09-08 14:51:57.777 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.777 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.777 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT schema_to_xmlschema('testxmlschema', false, true, '');
2024-09-08 14:51:57.777 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "constrname"
2024-09-08 14:51:57.777 KST client backend[3076275] pg_regress/foreign_key DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values.
2024-09-08 14:51:57.777 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO FKTABLE VALUES (NULL, 2, 4);
2024-09-08 14:51:57.777 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "constrname"
2024-09-08 14:51:57.777 KST client backend[3076275] pg_regress/foreign_key DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values.
2024-09-08 14:51:57.777 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO FKTABLE VALUES (1, NULL, 4);
2024-09-08 14:51:57.777 KST client backend[3076291] pg_regress/functional_deps ERROR:  column "p.name" must appear in the GROUP BY clause or be used in an aggregate function at character 20
2024-09-08 14:51:57.777 KST client backend[3076291] pg_regress/functional_deps STATEMENT:  SELECT product_id, p.name, (sum(s.units) * p.price) AS sales
	    FROM products p LEFT JOIN sales s USING (product_id)
	    GROUP BY product_id;
2024-09-08 14:51:57.777 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.777 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.777 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT schema_to_xmlschema('testxmlschema', true, false, '');
2024-09-08 14:51:57.777 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.777 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.777 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT schema_to_xml_and_xmlschema('testxmlschema', true, true, 'foo');
2024-09-08 14:51:57.778 KST client backend[3076284] pg_regress/guc WARNING:  SET LOCAL can only be used in transaction blocks
2024-09-08 14:51:57.778 KST client backend[3076284] pg_regress/guc WARNING:  SET LOCAL can only be used in transaction blocks
2024-09-08 14:51:57.778 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "constrname"
2024-09-08 14:51:57.778 KST client backend[3076275] pg_regress/foreign_key DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values.
2024-09-08 14:51:57.778 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE FKTABLE SET ftest1 = NULL WHERE ftest1 = 1;
2024-09-08 14:51:57.778 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.778 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.778 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT xmlforest(c1, c2, c3, c4) FROM testxmlschema.test3;
2024-09-08 14:51:57.778 KST client backend[3076295] pg_regress/xmlmap ERROR:  unsupported XML feature
2024-09-08 14:51:57.778 KST client backend[3076295] pg_regress/xmlmap DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:57.778 KST client backend[3076295] pg_regress/xmlmap STATEMENT:  SELECT table_to_xml('testxmlschema.test3', true, true, '');
2024-09-08 14:51:57.779 KST client backend[3076286] pg_regress/foreign_data ERROR:  function bar(text[], oid) does not exist
2024-09-08 14:51:57.779 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE FOREIGN DATA WRAPPER foo VALIDATOR bar;
2024-09-08 14:51:57.780 KST client backend[3076286] pg_regress/foreign_data ERROR:  foreign-data wrapper "foo" already exists
2024-09-08 14:51:57.780 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE FOREIGN DATA WRAPPER foo;
2024-09-08 14:51:57.780 KST client backend[3076285] pg_regress/dependency ERROR:  role "regress_dep_user" cannot be dropped because some objects depend on it
2024-09-08 14:51:57.780 KST client backend[3076285] pg_regress/dependency DETAIL:  privileges for table deptest
2024-09-08 14:51:57.780 KST client backend[3076285] pg_regress/dependency STATEMENT:  DROP USER regress_dep_user;
2024-09-08 14:51:57.780 KST client backend[3076285] pg_regress/dependency ERROR:  role "regress_dep_group" cannot be dropped because some objects depend on it
2024-09-08 14:51:57.780 KST client backend[3076285] pg_regress/dependency DETAIL:  privileges for table deptest
2024-09-08 14:51:57.780 KST client backend[3076285] pg_regress/dependency STATEMENT:  DROP GROUP regress_dep_group;
2024-09-08 14:51:57.780 KST client backend[3076285] pg_regress/dependency ERROR:  role "regress_dep_user" cannot be dropped because some objects depend on it
2024-09-08 14:51:57.780 KST client backend[3076285] pg_regress/dependency DETAIL:  privileges for table deptest
2024-09-08 14:51:57.780 KST client backend[3076285] pg_regress/dependency STATEMENT:  DROP USER regress_dep_user;
2024-09-08 14:51:57.781 KST client backend[3076285] pg_regress/dependency ERROR:  role "regress_dep_user3" cannot be dropped because some objects depend on it
2024-09-08 14:51:57.781 KST client backend[3076285] pg_regress/dependency DETAIL:  owner of sequence deptest_f1_seq
	owner of table deptest
2024-09-08 14:51:57.781 KST client backend[3076285] pg_regress/dependency STATEMENT:  DROP USER regress_dep_user3;
2024-09-08 14:51:57.782 KST client backend[3076291] pg_regress/functional_deps ERROR:  column "articles.id" must appear in the GROUP BY clause or be used in an aggregate function at character 33
2024-09-08 14:51:57.782 KST client backend[3076291] pg_regress/functional_deps STATEMENT:  CREATE TEMP VIEW fdv1 AS
	SELECT id, keywords, title, body, created
	FROM articles
	GROUP BY body;
2024-09-08 14:51:57.782 KST client backend[3076284] pg_regress/guc ERROR:  invalid value for parameter "seq_page_cost": "NaN"
2024-09-08 14:51:57.782 KST client backend[3076284] pg_regress/guc STATEMENT:  SET seq_page_cost TO 'NaN';
2024-09-08 14:51:57.782 KST client backend[3076284] pg_regress/guc ERROR:  10000 ms is outside the valid range for parameter "vacuum_cost_delay" (0 .. 100)
2024-09-08 14:51:57.782 KST client backend[3076284] pg_regress/guc STATEMENT:  SET vacuum_cost_delay TO '10s';
2024-09-08 14:51:57.782 KST client backend[3076284] pg_regress/guc ERROR:  unrecognized configuration parameter "no_such_variable"
2024-09-08 14:51:57.782 KST client backend[3076284] pg_regress/guc STATEMENT:  SET no_such_variable TO 42;
2024-09-08 14:51:57.782 KST client backend[3076284] pg_regress/guc ERROR:  unrecognized configuration parameter "custom.my_guc"
2024-09-08 14:51:57.782 KST client backend[3076284] pg_regress/guc STATEMENT:  SHOW custom.my_guc;
2024-09-08 14:51:57.782 KST client backend[3076286] pg_regress/foreign_data ERROR:  option "testing" provided more than once
2024-09-08 14:51:57.782 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE FOREIGN DATA WRAPPER foo OPTIONS (testing '1', testing '2');
2024-09-08 14:51:57.782 KST client backend[3076291] pg_regress/functional_deps ERROR:  cannot drop constraint articles_pkey on table articles because other objects depend on it
2024-09-08 14:51:57.782 KST client backend[3076291] pg_regress/functional_deps DETAIL:  view fdv1 depends on constraint articles_pkey on table articles
2024-09-08 14:51:57.782 KST client backend[3076291] pg_regress/functional_deps HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:57.782 KST client backend[3076291] pg_regress/functional_deps STATEMENT:  ALTER TABLE articles DROP CONSTRAINT articles_pkey RESTRICT;
2024-09-08 14:51:57.782 KST client backend[3076284] pg_regress/guc ERROR:  invalid configuration parameter name "custom.bad-guc"
2024-09-08 14:51:57.782 KST client backend[3076284] pg_regress/guc DETAIL:  Custom parameter names must be two or more simple identifiers separated by dots.
2024-09-08 14:51:57.782 KST client backend[3076284] pg_regress/guc STATEMENT:  SET custom."bad-guc" = 42;
2024-09-08 14:51:57.782 KST client backend[3076284] pg_regress/guc ERROR:  unrecognized configuration parameter "custom.bad-guc"
2024-09-08 14:51:57.782 KST client backend[3076284] pg_regress/guc STATEMENT:  SHOW custom."bad-guc";
2024-09-08 14:51:57.782 KST client backend[3076284] pg_regress/guc ERROR:  invalid configuration parameter name "special.weird name"
2024-09-08 14:51:57.782 KST client backend[3076284] pg_regress/guc DETAIL:  Custom parameter names must be two or more simple identifiers separated by dots.
2024-09-08 14:51:57.782 KST client backend[3076284] pg_regress/guc STATEMENT:  SET special."weird name" = 'foo';
2024-09-08 14:51:57.783 KST client backend[3076284] pg_regress/guc ERROR:  unrecognized configuration parameter "special.weird name"
2024-09-08 14:51:57.783 KST client backend[3076284] pg_regress/guc STATEMENT:  SHOW special."weird name";
2024-09-08 14:51:57.783 KST client backend[3076285] pg_regress/dependency ERROR:  permission denied to drop objects
2024-09-08 14:51:57.783 KST client backend[3076285] pg_regress/dependency DETAIL:  Only roles with privileges of role "regress_dep_user1" may drop objects owned by it.
2024-09-08 14:51:57.783 KST client backend[3076285] pg_regress/dependency STATEMENT:  DROP OWNED BY regress_dep_user1;
2024-09-08 14:51:57.783 KST client backend[3076285] pg_regress/dependency ERROR:  permission denied to drop objects
2024-09-08 14:51:57.783 KST client backend[3076285] pg_regress/dependency DETAIL:  Only roles with privileges of role "regress_dep_user2" may drop objects owned by it.
2024-09-08 14:51:57.783 KST client backend[3076285] pg_regress/dependency STATEMENT:  DROP OWNED BY regress_dep_user0, regress_dep_user2;
2024-09-08 14:51:57.783 KST client backend[3076285] pg_regress/dependency ERROR:  permission denied to reassign objects
2024-09-08 14:51:57.783 KST client backend[3076285] pg_regress/dependency DETAIL:  Only roles with privileges of role "regress_dep_user1" may reassign objects to it.
2024-09-08 14:51:57.783 KST client backend[3076285] pg_regress/dependency STATEMENT:  REASSIGN OWNED BY regress_dep_user0 TO regress_dep_user1;
2024-09-08 14:51:57.783 KST client backend[3076285] pg_regress/dependency ERROR:  permission denied to reassign objects
2024-09-08 14:51:57.783 KST client backend[3076285] pg_regress/dependency DETAIL:  Only roles with privileges of role "regress_dep_user1" may reassign objects owned by it.
2024-09-08 14:51:57.783 KST client backend[3076285] pg_regress/dependency STATEMENT:  REASSIGN OWNED BY regress_dep_user1 TO regress_dep_user0;
2024-09-08 14:51:57.783 KST client backend[3076284] pg_regress/guc WARNING:  invalid configuration parameter name "plpgsql.extra_foo_warnings", removing it
2024-09-08 14:51:57.783 KST client backend[3076284] pg_regress/guc DETAIL:  "plpgsql" is now a reserved prefix.
2024-09-08 14:51:57.783 KST client backend[3076284] pg_regress/guc ERROR:  invalid configuration parameter name "plpgsql.extra_foo_warnings"
2024-09-08 14:51:57.783 KST client backend[3076284] pg_regress/guc DETAIL:  "plpgsql" is a reserved prefix.
2024-09-08 14:51:57.783 KST client backend[3076284] pg_regress/guc STATEMENT:  SET plpgsql.extra_foo_warnings = true;
2024-09-08 14:51:57.783 KST client backend[3076284] pg_regress/guc ERROR:  unrecognized configuration parameter "plpgsql.extra_foo_warnings"
2024-09-08 14:51:57.783 KST client backend[3076284] pg_regress/guc STATEMENT:  SHOW plpgsql.extra_foo_warnings;
2024-09-08 14:51:57.784 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied to create foreign-data wrapper "foo"
2024-09-08 14:51:57.784 KST client backend[3076286] pg_regress/foreign_data HINT:  Must be superuser to create a foreign-data wrapper.
2024-09-08 14:51:57.784 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE FOREIGN DATA WRAPPER foo;
2024-09-08 14:51:57.784 KST client backend[3076291] pg_regress/functional_deps ERROR:  cannot drop constraint articles_pkey on table articles because other objects depend on it
2024-09-08 14:51:57.784 KST client backend[3076291] pg_regress/functional_deps DETAIL:  view fdv2 depends on constraint articles_pkey on table articles
2024-09-08 14:51:57.784 KST client backend[3076291] pg_regress/functional_deps HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:57.784 KST client backend[3076291] pg_regress/functional_deps STATEMENT:  ALTER TABLE articles DROP CONSTRAINT articles_pkey RESTRICT;
2024-09-08 14:51:57.784 KST client backend[3076291] pg_regress/functional_deps ERROR:  cannot drop constraint articles_in_category_pkey on table articles_in_category because other objects depend on it
2024-09-08 14:51:57.784 KST client backend[3076291] pg_regress/functional_deps DETAIL:  view fdv2 depends on constraint articles_in_category_pkey on table articles_in_category
2024-09-08 14:51:57.784 KST client backend[3076291] pg_regress/functional_deps HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:57.784 KST client backend[3076291] pg_regress/functional_deps STATEMENT:  ALTER TABLE articles_in_category DROP CONSTRAINT articles_in_category_pkey RESTRICT;
2024-09-08 14:51:57.785 KST client backend[3076286] pg_regress/foreign_data ERROR:  function invalid_fdw_handler must return type fdw_handler
2024-09-08 14:51:57.785 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE FOREIGN DATA WRAPPER test_fdw HANDLER invalid_fdw_handler;
2024-09-08 14:51:57.785 KST client backend[3076286] pg_regress/foreign_data ERROR:  conflicting or redundant options at character 63
2024-09-08 14:51:57.785 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE FOREIGN DATA WRAPPER test_fdw HANDLER test_fdw_handler HANDLER invalid_fdw_handler;
2024-09-08 14:51:57.785 KST client backend[3076291] pg_regress/functional_deps ERROR:  cannot drop constraint articles_pkey on table articles because other objects depend on it
2024-09-08 14:51:57.785 KST client backend[3076291] pg_regress/functional_deps DETAIL:  view fdv3 depends on constraint articles_pkey on table articles
2024-09-08 14:51:57.785 KST client backend[3076291] pg_regress/functional_deps HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:57.785 KST client backend[3076291] pg_regress/functional_deps STATEMENT:  ALTER TABLE articles DROP CONSTRAINT articles_pkey RESTRICT;
2024-09-08 14:51:57.786 KST client backend[3076286] pg_regress/foreign_data ERROR:  invalid option "nonexistent"
2024-09-08 14:51:57.786 KST client backend[3076286] pg_regress/foreign_data HINT:  There are no valid options in this context.
2024-09-08 14:51:57.786 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN DATA WRAPPER foo OPTIONS (nonexistent 'fdw');
2024-09-08 14:51:57.786 KST client backend[3076286] pg_regress/foreign_data ERROR:  syntax error at or near ";" at character 31
2024-09-08 14:51:57.786 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN DATA WRAPPER foo;
2024-09-08 14:51:57.786 KST client backend[3076286] pg_regress/foreign_data ERROR:  function bar(text[], oid) does not exist
2024-09-08 14:51:57.786 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN DATA WRAPPER foo VALIDATOR bar;
2024-09-08 14:51:57.786 KST client backend[3076291] pg_regress/functional_deps ERROR:  cannot drop constraint articles_pkey on table articles because other objects depend on it
2024-09-08 14:51:57.786 KST client backend[3076291] pg_regress/functional_deps DETAIL:  view fdv4 depends on constraint articles_pkey on table articles
2024-09-08 14:51:57.786 KST client backend[3076291] pg_regress/functional_deps HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:57.786 KST client backend[3076291] pg_regress/functional_deps STATEMENT:  ALTER TABLE articles DROP CONSTRAINT articles_pkey RESTRICT;
2024-09-08 14:51:57.787 KST client backend[3076290] pg_regress/tsdicts ERROR:  invalid affix alias "GJUS"
2024-09-08 14:51:57.787 KST client backend[3076290] pg_regress/tsdicts STATEMENT:  CREATE TEXT SEARCH DICTIONARY hunspell_err (
							Template=ispell,
							DictFile=ispell_sample,
							AffFile=hunspell_sample_long
	);
2024-09-08 14:51:57.787 KST client backend[3076290] pg_regress/tsdicts ERROR:  invalid affix flag "SZ\"
2024-09-08 14:51:57.787 KST client backend[3076290] pg_regress/tsdicts STATEMENT:  CREATE TEXT SEARCH DICTIONARY hunspell_err (
							Template=ispell,
							DictFile=ispell_sample,
							AffFile=hunspell_sample_num
	);
2024-09-08 14:51:57.787 KST client backend[3076286] pg_regress/foreign_data ERROR:  option "c" not found
2024-09-08 14:51:57.787 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN DATA WRAPPER foo OPTIONS (SET c '4');
2024-09-08 14:51:57.787 KST client backend[3076286] pg_regress/foreign_data ERROR:  option "c" not found
2024-09-08 14:51:57.787 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN DATA WRAPPER foo OPTIONS (DROP c);
2024-09-08 14:51:57.787 KST client backend[3076291] pg_regress/functional_deps ERROR:  column "articles.keywords" must appear in the GROUP BY clause or be used in an aggregate function at character 29
2024-09-08 14:51:57.787 KST client backend[3076291] pg_regress/functional_deps STATEMENT:  EXECUTE foo;
2024-09-08 14:51:57.788 KST client backend[3076290] pg_regress/tsdicts ERROR:  invalid affix alias "302,301,202,303"
2024-09-08 14:51:57.788 KST client backend[3076290] pg_regress/tsdicts STATEMENT:  CREATE TEXT SEARCH DICTIONARY hunspell_err (
							Template=ispell,
							DictFile=hunspell_sample_num,
							AffFile=hunspell_sample_long
	);
2024-09-08 14:51:57.789 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "constrname2"
2024-09-08 14:51:57.789 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ftest1, ftest2)=(100, 2) is not present in table "pktable".
2024-09-08 14:51:57.789 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO FKTABLE VALUES (100, 2, 4);
2024-09-08 14:51:57.789 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "constrname2"
2024-09-08 14:51:57.789 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ftest1, ftest2)=(2, 2) is not present in table "pktable".
2024-09-08 14:51:57.789 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO FKTABLE VALUES (2, 2, 4);
2024-09-08 14:51:57.789 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "constrname2"
2024-09-08 14:51:57.789 KST client backend[3076275] pg_regress/foreign_key DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values.
2024-09-08 14:51:57.789 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO FKTABLE VALUES (NULL, 2, 4);
2024-09-08 14:51:57.789 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "constrname2"
2024-09-08 14:51:57.789 KST client backend[3076275] pg_regress/foreign_key DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values.
2024-09-08 14:51:57.789 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO FKTABLE VALUES (1, NULL, 4);
2024-09-08 14:51:57.790 KST client backend[3076286] pg_regress/foreign_data ERROR:  option "b" provided more than once
2024-09-08 14:51:57.790 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN DATA WRAPPER foo OPTIONS (b '4');
2024-09-08 14:51:57.790 KST client backend[3076290] pg_regress/tsdicts ERROR:  casesensitive requires a Boolean value
2024-09-08 14:51:57.790 KST client backend[3076290] pg_regress/tsdicts STATEMENT:  ALTER TEXT SEARCH DICTIONARY synonym (CaseSensitive = 2);
2024-09-08 14:51:57.791 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot drop table pktable because other objects depend on it
2024-09-08 14:51:57.791 KST client backend[3076275] pg_regress/foreign_key DETAIL:  constraint constrname2 on table fktable depends on table pktable
2024-09-08 14:51:57.791 KST client backend[3076275] pg_regress/foreign_key HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:57.791 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DROP TABLE PKTABLE;
2024-09-08 14:51:57.791 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied to alter foreign-data wrapper "foo"
2024-09-08 14:51:57.791 KST client backend[3076286] pg_regress/foreign_data HINT:  Must be superuser to alter a foreign-data wrapper.
2024-09-08 14:51:57.791 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN DATA WRAPPER foo OPTIONS (ADD d '5');
2024-09-08 14:51:57.792 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied to change owner of foreign-data wrapper "foo"
2024-09-08 14:51:57.792 KST client backend[3076286] pg_regress/foreign_data HINT:  The owner of a foreign-data wrapper must be a superuser.
2024-09-08 14:51:57.792 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN DATA WRAPPER foo OWNER TO regress_test_role;
2024-09-08 14:51:57.792 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied to alter foreign-data wrapper "foo"
2024-09-08 14:51:57.792 KST client backend[3076286] pg_regress/foreign_data HINT:  Must be superuser to alter a foreign-data wrapper.
2024-09-08 14:51:57.792 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN DATA WRAPPER foo OPTIONS (ADD e '6');
2024-09-08 14:51:57.793 KST client backend[3076284] pg_regress/guc ERROR:  division by zero
2024-09-08 14:51:57.793 KST client backend[3076284] pg_regress/guc CONTEXT:  SQL statement "SELECT 1/$1"
	PL/pgSQL function myfunc(integer) line 4 at PERFORM
2024-09-08 14:51:57.793 KST client backend[3076284] pg_regress/guc STATEMENT:  select myfunc(0);
2024-09-08 14:51:57.794 KST client backend[3076284] pg_regress/guc ERROR:  unrecognized configuration parameter "nosuch.setting"
2024-09-08 14:51:57.794 KST client backend[3076284] pg_regress/guc STATEMENT:  select current_setting('nosuch.setting');
2024-09-08 14:51:57.794 KST client backend[3076284] pg_regress/guc ERROR:  unrecognized configuration parameter "nosuch.setting"
2024-09-08 14:51:57.794 KST client backend[3076284] pg_regress/guc STATEMENT:  select current_setting('nosuch.setting', false);
2024-09-08 14:51:57.794 KST client backend[3076284] pg_regress/guc ERROR:  invalid value for parameter "default_text_search_config": "no_such_config"
2024-09-08 14:51:57.794 KST client backend[3076284] pg_regress/guc STATEMENT:  create function func_with_bad_set() returns int as $$ select 1 $$
	language sql
	set default_text_search_config = no_such_config;
2024-09-08 14:51:57.794 KST client backend[3076284] pg_regress/guc ERROR:  invalid value for parameter "default_text_search_config": "no_such_config"
2024-09-08 14:51:57.794 KST client backend[3076284] pg_regress/guc STATEMENT:  select func_with_bad_set();
2024-09-08 14:51:57.795 KST client backend[3076284] pg_regress/guc ERROR:  tables declared WITH OIDS are not supported
2024-09-08 14:51:57.795 KST client backend[3076284] pg_regress/guc STATEMENT:  set default_with_oids to t;
2024-09-08 14:51:57.795 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_ftest1_fkey"
2024-09-08 14:51:57.795 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ftest1)=(100) is not present in table "pktable".
2024-09-08 14:51:57.795 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO FKTABLE VALUES (100, 2);
2024-09-08 14:51:57.795 KST client backend[3076286] pg_regress/foreign_data ERROR:  function invalid_fdw_handler must return type fdw_handler
2024-09-08 14:51:57.795 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN DATA WRAPPER foo HANDLER invalid_fdw_handler;
2024-09-08 14:51:57.795 KST client backend[3076286] pg_regress/foreign_data ERROR:  conflicting or redundant options at character 57
2024-09-08 14:51:57.795 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN DATA WRAPPER foo HANDLER test_fdw_handler HANDLER anything;
2024-09-08 14:51:57.795 KST client backend[3076286] pg_regress/foreign_data WARNING:  changing the foreign-data wrapper handler can change behavior of existing foreign tables
2024-09-08 14:51:57.795 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pktable" violates foreign key constraint "fktable_ftest1_fkey" on table "fktable"
2024-09-08 14:51:57.795 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ptest1)=(1) is still referenced from table "fktable".
2024-09-08 14:51:57.795 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DELETE FROM PKTABLE WHERE ptest1=1;
2024-09-08 14:51:57.795 KST client backend[3076286] pg_regress/foreign_data ERROR:  foreign-data wrapper "nonexistent" does not exist
2024-09-08 14:51:57.795 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP FOREIGN DATA WRAPPER nonexistent;
2024-09-08 14:51:57.796 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pktable" violates foreign key constraint "fktable_ftest1_fkey" on table "fktable"
2024-09-08 14:51:57.796 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ptest1)=(2) is still referenced from table "fktable".
2024-09-08 14:51:57.796 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE PKTABLE SET ptest1=0 WHERE ptest1=2;
2024-09-08 14:51:57.797 KST client backend[3076286] pg_regress/foreign_data ERROR:  role "regress_test_role_super" cannot be dropped because some objects depend on it
2024-09-08 14:51:57.797 KST client backend[3076286] pg_regress/foreign_data DETAIL:  owner of foreign-data wrapper foo
2024-09-08 14:51:57.797 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP ROLE regress_test_role_super;
2024-09-08 14:51:57.797 KST client backend[3076285] pg_regress/dependency ERROR:  role "regress_dep_user1" cannot be dropped because some objects depend on it
2024-09-08 14:51:57.797 KST client backend[3076285] pg_regress/dependency DETAIL:  privileges for database regression
	privileges for table deptest1
	owner of default privileges on new relations belonging to role regress_dep_user1 in schema deptest
2024-09-08 14:51:57.797 KST client backend[3076285] pg_regress/dependency STATEMENT:  DROP USER regress_dep_user1;
2024-09-08 14:51:57.798 KST client backend[3076285] pg_regress/dependency ERROR:  role "regress_dep_user2" cannot be dropped because some objects depend on it
2024-09-08 14:51:57.798 KST client backend[3076285] pg_regress/dependency DETAIL:  owner of schema deptest
	owner of sequence deptest_a_seq
	owner of table deptest
	owner of function deptest_func()
	owner of type deptest_enum
	owner of type deptest_multirange
	owner of type deptest_range
	owner of table deptest2
	owner of sequence ss1
	owner of type deptest_t
2024-09-08 14:51:57.798 KST client backend[3076285] pg_regress/dependency STATEMENT:  DROP USER regress_dep_user2;
2024-09-08 14:51:57.798 KST client backend[3076286] pg_regress/foreign_data ERROR:  user mapping for "regress_foreign_data_user" already exists for server "s1"
2024-09-08 14:51:57.798 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE USER MAPPING FOR current_user SERVER s1;
2024-09-08 14:51:57.799 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_ftest1_ftest2_fkey"
2024-09-08 14:51:57.799 KST client backend[3076275] pg_regress/foreign_key DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values.
2024-09-08 14:51:57.799 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1, ftest2) REFERENCES PKTABLE MATCH FULL;
2024-09-08 14:51:57.801 KST client backend[3076290] pg_regress/tsdicts ERROR:  unrecognized Ispell parameter: "DictFile"
2024-09-08 14:51:57.801 KST client backend[3076290] pg_regress/tsdicts STATEMENT:  CREATE TEXT SEARCH DICTIONARY tsdict_case
	(
		Template = ispell,
		"DictFile" = ispell_sample,
		"AffFile" = ispell_sample
	);
2024-09-08 14:51:57.801 KST client backend[3076290] pg_regress/tsdicts ERROR:  token type "not_a_token" does not exist
2024-09-08 14:51:57.801 KST client backend[3076290] pg_regress/tsdicts STATEMENT:  ALTER TEXT SEARCH CONFIGURATION dummy_tst
	  DROP MAPPING FOR not_a_token, not_a_token;
2024-09-08 14:51:57.801 KST client backend[3076290] pg_regress/tsdicts ERROR:  token type "not_a_token" does not exist
2024-09-08 14:51:57.801 KST client backend[3076290] pg_regress/tsdicts STATEMENT:  ALTER TEXT SEARCH CONFIGURATION dummy_tst
	  DROP MAPPING IF EXISTS FOR not_a_token, not_a_token;
2024-09-08 14:51:57.802 KST client backend[3076290] pg_regress/tsdicts ERROR:  mapping for token type "word" does not exist
2024-09-08 14:51:57.802 KST client backend[3076290] pg_regress/tsdicts STATEMENT:  ALTER TEXT SEARCH CONFIGURATION dummy_tst
	  DROP MAPPING FOR word;
2024-09-08 14:51:57.802 KST client backend[3076286] pg_regress/foreign_data ERROR:  cannot drop foreign-data wrapper foo because other objects depend on it
2024-09-08 14:51:57.802 KST client backend[3076286] pg_regress/foreign_data DETAIL:  server s1 depends on foreign-data wrapper foo
	user mapping for regress_foreign_data_user on server s1 depends on server s1
2024-09-08 14:51:57.802 KST client backend[3076286] pg_regress/foreign_data HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:57.802 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP FOREIGN DATA WRAPPER foo;
2024-09-08 14:51:57.802 KST client backend[3076290] pg_regress/tsdicts ERROR:  token type "not_a_token" does not exist
2024-09-08 14:51:57.802 KST client backend[3076290] pg_regress/tsdicts STATEMENT:  ALTER TEXT SEARCH CONFIGURATION dummy_tst
	  ADD MAPPING FOR not_a_token WITH ispell;
2024-09-08 14:51:57.802 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign-data wrapper foo
2024-09-08 14:51:57.802 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP FOREIGN DATA WRAPPER foo CASCADE;
2024-09-08 14:51:57.803 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "constrname3"
2024-09-08 14:51:57.803 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ftest1, ftest2, ftest3)=(1, 2, 7) is not present in table "pktable".
2024-09-08 14:51:57.803 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO FKTABLE VALUES (1, 2, 7, 6);
2024-09-08 14:51:57.803 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pktable" violates foreign key constraint "constrname3" on table "fktable"
2024-09-08 14:51:57.803 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ptest1, ptest2, ptest3)=(1, 2, 3) is still referenced from table "fktable".
2024-09-08 14:51:57.803 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE PKTABLE set ptest2=5 where ptest2=2;
2024-09-08 14:51:57.803 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pktable" violates foreign key constraint "constrname3" on table "fktable"
2024-09-08 14:51:57.803 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ptest1, ptest2, ptest3)=(1, 2, 3) is still referenced from table "fktable".
2024-09-08 14:51:57.803 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DELETE FROM PKTABLE where ptest1=1 and ptest2=2 and ptest3=3;
2024-09-08 14:51:57.804 KST client backend[3076286] pg_regress/foreign_data ERROR:  foreign-data wrapper "foo" does not exist
2024-09-08 14:51:57.804 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE SERVER s1 FOREIGN DATA WRAPPER foo;
2024-09-08 14:51:57.805 KST client backend[3076286] pg_regress/foreign_data ERROR:  server "s1" already exists
2024-09-08 14:51:57.805 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE SERVER s1 FOREIGN DATA WRAPPER foo;
2024-09-08 14:51:57.805 KST client backend[3076286] pg_regress/foreign_data ERROR:  invalid option "foo"
2024-09-08 14:51:57.805 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE SERVER s8 FOREIGN DATA WRAPPER postgresql OPTIONS (foo '1');
2024-09-08 14:51:57.807 KST client backend[3076282] pg_regress/cluster ERROR:  insert or update on table "clstr_tst" violates foreign key constraint "clstr_tst_con"
2024-09-08 14:51:57.807 KST client backend[3076282] pg_regress/cluster DETAIL:  Key (b)=(1111) is not present in table "clstr_tst_s".
2024-09-08 14:51:57.807 KST client backend[3076282] pg_regress/cluster STATEMENT:  INSERT INTO clstr_tst (b, c) VALUES (1111, 'this should fail');
2024-09-08 14:51:57.807 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied for foreign-data wrapper foo
2024-09-08 14:51:57.807 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE SERVER t1 FOREIGN DATA WRAPPER foo;
2024-09-08 14:51:57.820 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied for foreign-data wrapper foo
2024-09-08 14:51:57.820 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE SERVER t2 FOREIGN DATA WRAPPER foo;
2024-09-08 14:51:57.822 KST client backend[3076286] pg_regress/foreign_data ERROR:  syntax error at or near ";" at character 16
2024-09-08 14:51:57.822 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER SERVER s0;
2024-09-08 14:51:57.822 KST client backend[3076286] pg_regress/foreign_data ERROR:  server "s0" does not exist
2024-09-08 14:51:57.822 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER SERVER s0 OPTIONS (a '1');
2024-09-08 14:51:57.823 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "constrname3"
2024-09-08 14:51:57.823 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ftest1, ftest2, ftest3)=(1, 2, 7) is not present in table "pktable".
2024-09-08 14:51:57.823 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO FKTABLE VALUES (1, 2, 7, 6);
2024-09-08 14:51:57.824 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s1
2024-09-08 14:51:57.824 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER SERVER s1 VERSION '1.1';
2024-09-08 14:51:57.824 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s1
2024-09-08 14:51:57.824 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER SERVER s1 OWNER TO regress_test_role;
2024-09-08 14:51:57.824 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied for foreign-data wrapper foo
2024-09-08 14:51:57.824 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER SERVER s1 OWNER TO regress_test_role2;
2024-09-08 14:51:57.825 KST client backend[3076286] pg_regress/foreign_data ERROR:  invalid option "foo"
2024-09-08 14:51:57.825 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER SERVER s8 OPTIONS (foo '1');
2024-09-08 14:51:57.825 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be able to SET ROLE "regress_test_indirect"
2024-09-08 14:51:57.825 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER SERVER s1 OWNER TO regress_test_indirect;
2024-09-08 14:51:57.825 KST client backend[3076282] pg_regress/cluster ERROR:  there is no previously clustered index for table "clstr_2"
2024-09-08 14:51:57.825 KST client backend[3076282] pg_regress/cluster STATEMENT:  CLUSTER clstr_2;
2024-09-08 14:51:57.825 KST client backend[3076286] pg_regress/foreign_data ERROR:  role "regress_test_indirect" cannot be dropped because some objects depend on it
2024-09-08 14:51:57.825 KST client backend[3076286] pg_regress/foreign_data DETAIL:  privileges for foreign-data wrapper foo
	owner of server s1
2024-09-08 14:51:57.825 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP ROLE regress_test_indirect;
2024-09-08 14:51:57.828 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "constrname3"
2024-09-08 14:51:57.828 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ftest1, ftest2, ftest3)=(1, 2, 7) is not present in table "pktable".
2024-09-08 14:51:57.828 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO FKTABLE VALUES (1, 2, 7, 6);
2024-09-08 14:51:57.828 KST client backend[3076286] pg_regress/foreign_data ERROR:  server "nonexistent" does not exist
2024-09-08 14:51:57.828 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP SERVER nonexistent;
2024-09-08 14:51:57.829 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s2
2024-09-08 14:51:57.829 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP SERVER s2;
2024-09-08 14:51:57.830 KST client backend[3076286] pg_regress/foreign_data ERROR:  cannot drop server s3 because other objects depend on it
2024-09-08 14:51:57.830 KST client backend[3076286] pg_regress/foreign_data DETAIL:  user mapping for regress_foreign_data_user on server s3 depends on server s3
2024-09-08 14:51:57.830 KST client backend[3076286] pg_regress/foreign_data HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:57.830 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP SERVER s3;
2024-09-08 14:51:57.831 KST client backend[3076286] pg_regress/foreign_data ERROR:  role "regress_test_missing_role" does not exist
2024-09-08 14:51:57.831 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE USER MAPPING FOR regress_test_missing_role SERVER s1;
2024-09-08 14:51:57.831 KST client backend[3076286] pg_regress/foreign_data ERROR:  server "s1" does not exist
2024-09-08 14:51:57.831 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE USER MAPPING FOR current_user SERVER s1;
2024-09-08 14:51:57.831 KST client backend[3076286] pg_regress/foreign_data ERROR:  user mapping for "regress_foreign_data_user" already exists for server "s4"
2024-09-08 14:51:57.831 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE USER MAPPING FOR user SERVER s4;
2024-09-08 14:51:57.831 KST client backend[3076286] pg_regress/foreign_data ERROR:  invalid option "username"
2024-09-08 14:51:57.831 KST client backend[3076286] pg_regress/foreign_data HINT:  Perhaps you meant the option "user".
2024-09-08 14:51:57.831 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE USER MAPPING FOR user SERVER s8 OPTIONS (username 'test', password 'secret');
2024-09-08 14:51:57.832 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied for foreign server s7
2024-09-08 14:51:57.832 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE USER MAPPING FOR current_user SERVER s7;
2024-09-08 14:51:57.832 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s8
2024-09-08 14:51:57.832 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE USER MAPPING FOR public SERVER s8;
2024-09-08 14:51:57.833 KST client backend[3076286] pg_regress/foreign_data ERROR:  role "regress_test_missing_role" does not exist
2024-09-08 14:51:57.833 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER USER MAPPING FOR regress_test_missing_role SERVER s4 OPTIONS (gotcha 'true');
2024-09-08 14:51:57.833 KST client backend[3076286] pg_regress/foreign_data ERROR:  server "ss4" does not exist
2024-09-08 14:51:57.833 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER USER MAPPING FOR user SERVER ss4 OPTIONS (gotcha 'true');
2024-09-08 14:51:57.833 KST client backend[3076286] pg_regress/foreign_data ERROR:  user mapping for "public" does not exist for server "s5"
2024-09-08 14:51:57.833 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER USER MAPPING FOR public SERVER s5 OPTIONS (gotcha 'true');
2024-09-08 14:51:57.833 KST client backend[3076286] pg_regress/foreign_data ERROR:  invalid option "username"
2024-09-08 14:51:57.833 KST client backend[3076286] pg_regress/foreign_data HINT:  Perhaps you meant the option "user".
2024-09-08 14:51:57.833 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER USER MAPPING FOR current_user SERVER s8 OPTIONS (username 'test');
2024-09-08 14:51:57.833 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s4
2024-09-08 14:51:57.833 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER USER MAPPING FOR public SERVER s4 OPTIONS (ADD modified '1');
2024-09-08 14:51:57.834 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "constrname3"
2024-09-08 14:51:57.834 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ftest1, ftest2, ftest3)=(1, 2, 7) is not present in table "pktable".
2024-09-08 14:51:57.834 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO FKTABLE VALUES (1, 2, 7, 6);
2024-09-08 14:51:57.834 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "constrname3"
2024-09-08 14:51:57.834 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ftest1, ftest2, ftest3)=(0, -1, -2) is not present in table "pktable".
2024-09-08 14:51:57.834 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE PKTABLE set ptest2=5 where ptest2=2;
2024-09-08 14:51:57.834 KST client backend[3076286] pg_regress/foreign_data ERROR:  role "regress_test_missing_role" does not exist
2024-09-08 14:51:57.834 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP USER MAPPING FOR regress_test_missing_role SERVER s4;
2024-09-08 14:51:57.834 KST client backend[3076286] pg_regress/foreign_data ERROR:  server "ss4" does not exist
2024-09-08 14:51:57.834 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP USER MAPPING FOR user SERVER ss4;
2024-09-08 14:51:57.834 KST client backend[3076286] pg_regress/foreign_data ERROR:  user mapping for "public" does not exist for server "s7"
2024-09-08 14:51:57.834 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP USER MAPPING FOR public SERVER s7;
2024-09-08 14:51:57.835 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s8
2024-09-08 14:51:57.835 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP USER MAPPING FOR public SERVER s8;
2024-09-08 14:51:57.835 KST client backend[3076286] pg_regress/foreign_data ERROR:  syntax error at or near ";" at character 28
2024-09-08 14:51:57.835 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE FOREIGN TABLE ft1 ();
2024-09-08 14:51:57.836 KST client backend[3076286] pg_regress/foreign_data ERROR:  server "no_server" does not exist
2024-09-08 14:51:57.836 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE FOREIGN TABLE ft1 () SERVER no_server;
2024-09-08 14:51:57.836 KST client backend[3076286] pg_regress/foreign_data ERROR:  primary key constraints are not supported on foreign tables at character 67
2024-09-08 14:51:57.836 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE FOREIGN TABLE ft1 (
		c1 integer OPTIONS ("param 1" 'val1') PRIMARY KEY,
		c2 text OPTIONS (param2 'val2', param3 'val3'),
		c3 date
	) SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
2024-09-08 14:51:57.837 KST client backend[3076292] pg_regress/window ERROR:  argument of ROWS must not contain variables at character 40
2024-09-08 14:51:57.837 KST client backend[3076292] pg_regress/window STATEMENT:  SELECT sum(unique1) over (rows between unbounded.x preceding and unbounded.x following),
	       unique1, four
	FROM tenk1, (values (1)) as unbounded(x) WHERE unique1 < 10;
2024-09-08 14:51:57.837 KST client backend[3076286] pg_regress/foreign_data ERROR:  foreign key constraints are not supported on foreign tables at character 67
2024-09-08 14:51:57.837 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE FOREIGN TABLE ft1 (
		c1 integer OPTIONS ("param 1" 'val1') REFERENCES ref_table (id),
		c2 text OPTIONS (param2 'val2', param3 'val3'),
		c3 date
	) SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
2024-09-08 14:51:57.837 KST client backend[3076275] pg_regress/foreign_key ERROR:  column "bar" referenced in foreign key constraint does not exist
2024-09-08 14:51:57.837 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE FKTABLE (tid int, id int, foo int, FOREIGN KEY (tid, id) REFERENCES PKTABLE ON DELETE SET NULL (bar));
2024-09-08 14:51:57.838 KST client backend[3076289] pg_regress/tsearch ERROR:  unrecognized parameter "foo"
2024-09-08 14:51:57.838 KST client backend[3076289] pg_regress/tsearch STATEMENT:  CREATE INDEX wowidx1 ON test_tsvector USING gist (a tsvector_ops(foo=1));
2024-09-08 14:51:57.838 KST client backend[3076286] pg_regress/foreign_data ERROR:  unique constraints are not supported on foreign tables at character 137
2024-09-08 14:51:57.838 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE FOREIGN TABLE ft1 (
		c1 integer OPTIONS ("param 1" 'val1') NOT NULL,
		c2 text OPTIONS (param2 'val2', param3 'val3'),
		c3 date,
		UNIQUE (c3)
	) SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
2024-09-08 14:51:57.838 KST client backend[3076275] pg_regress/foreign_key ERROR:  column "foo" referenced in ON DELETE SET action must be part of foreign key
2024-09-08 14:51:57.838 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE FKTABLE (tid int, id int, foo int, FOREIGN KEY (tid, id) REFERENCES PKTABLE ON DELETE SET NULL (foo));
2024-09-08 14:51:57.838 KST client backend[3076275] pg_regress/foreign_key ERROR:  a column list with SET NULL is only supported for ON DELETE actions at character 91
2024-09-08 14:51:57.838 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE FKTABLE (tid int, id int, foo int, FOREIGN KEY (tid, foo) REFERENCES PKTABLE ON UPDATE SET NULL (foo));
2024-09-08 14:51:57.838 KST client backend[3076289] pg_regress/tsearch ERROR:  value 0 out of bounds for option "siglen"
2024-09-08 14:51:57.838 KST client backend[3076289] pg_regress/tsearch DETAIL:  Valid values are between "1" and "2024".
2024-09-08 14:51:57.838 KST client backend[3076289] pg_regress/tsearch STATEMENT:  CREATE INDEX wowidx1 ON test_tsvector USING gist (a tsvector_ops(siglen=0));
2024-09-08 14:51:57.839 KST client backend[3076289] pg_regress/tsearch ERROR:  value 2048 out of bounds for option "siglen"
2024-09-08 14:51:57.839 KST client backend[3076289] pg_regress/tsearch DETAIL:  Valid values are between "1" and "2024".
2024-09-08 14:51:57.839 KST client backend[3076289] pg_regress/tsearch STATEMENT:  CREATE INDEX wowidx1 ON test_tsvector USING gist (a tsvector_ops(siglen=2048));
2024-09-08 14:51:57.839 KST client backend[3076289] pg_regress/tsearch ERROR:  unrecognized parameter "foo"
2024-09-08 14:51:57.839 KST client backend[3076289] pg_regress/tsearch STATEMENT:  CREATE INDEX wowidx1 ON test_tsvector USING gist (a tsvector_ops(siglen=100,foo='bar'));
2024-09-08 14:51:57.840 KST client backend[3076289] pg_regress/tsearch ERROR:  parameter "siglen" specified more than once
2024-09-08 14:51:57.840 KST client backend[3076289] pg_regress/tsearch STATEMENT:  CREATE INDEX wowidx1 ON test_tsvector USING gist (a tsvector_ops(siglen=100, siglen = 200));
2024-09-08 14:51:57.840 KST client backend[3076292] pg_regress/window ERROR:  invalid preceding or following size in window function
2024-09-08 14:51:57.840 KST client backend[3076292] pg_regress/window STATEMENT:  select id, f_float4, first_value(id) over w, last_value(id) over w
	from numerics
	window w as (order by f_float4 range between
	             1.1 preceding and 'NaN' following);
2024-09-08 14:51:57.841 KST client backend[3076292] pg_regress/window ERROR:  invalid preceding or following size in window function
2024-09-08 14:51:57.841 KST client backend[3076292] pg_regress/window STATEMENT:  select id, f_float8, first_value(id) over w, last_value(id) over w
	from numerics
	window w as (order by f_float8 range between
	             1.1 preceding and 'NaN' following);
2024-09-08 14:51:57.841 KST client backend[3076292] pg_regress/window ERROR:  RANGE with offset PRECEDING/FOLLOWING is not supported for column type numeric and offset type double precision at character 158
2024-09-08 14:51:57.841 KST client backend[3076292] pg_regress/window HINT:  Cast the offset value to an appropriate type.
2024-09-08 14:51:57.841 KST client backend[3076292] pg_regress/window STATEMENT:  select id, f_numeric, first_value(id) over w, last_value(id) over w
	from numerics
	window w as (order by f_numeric range between
	             1 preceding and 1.1::float8 following);
2024-09-08 14:51:57.842 KST client backend[3076292] pg_regress/window ERROR:  invalid preceding or following size in window function
2024-09-08 14:51:57.842 KST client backend[3076292] pg_regress/window STATEMENT:  select id, f_numeric, first_value(id) over w, last_value(id) over w
	from numerics
	window w as (order by f_numeric range between
	             1.1 preceding and 'NaN' following);
2024-09-08 14:51:57.842 KST client backend[3076282] pg_regress/cluster ERROR:  cannot cluster on invalid index "clstrpart_only_idx"
2024-09-08 14:51:57.842 KST client backend[3076282] pg_regress/cluster STATEMENT:  CLUSTER clstrpart USING clstrpart_only_idx;
2024-09-08 14:51:57.842 KST client backend[3076275] pg_regress/foreign_key ERROR:  column "ftest2" referenced in foreign key constraint does not exist
2024-09-08 14:51:57.842 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE FKTABLE_FAIL1 ( ftest1 int, CONSTRAINT fkfail1 FOREIGN KEY (ftest2) REFERENCES PKTABLE);
2024-09-08 14:51:57.843 KST client backend[3076275] pg_regress/foreign_key ERROR:  column "ptest2" referenced in foreign key constraint does not exist
2024-09-08 14:51:57.843 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE FKTABLE_FAIL2 ( ftest1 int, CONSTRAINT fkfail1 FOREIGN KEY (ftest1) REFERENCES PKTABLE(ptest2));
2024-09-08 14:51:57.843 KST client backend[3076275] pg_regress/foreign_key ERROR:  system columns cannot be used in foreign keys
2024-09-08 14:51:57.843 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE FKTABLE_FAIL3 ( ftest1 int, CONSTRAINT fkfail1 FOREIGN KEY (tableoid) REFERENCES PKTABLE(someoid));
2024-09-08 14:51:57.843 KST client backend[3076275] pg_regress/foreign_key ERROR:  system columns cannot be used in foreign keys
2024-09-08 14:51:57.843 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE FKTABLE_FAIL4 ( ftest1 oid, CONSTRAINT fkfail1 FOREIGN KEY (ftest1) REFERENCES PKTABLE(tableoid));
2024-09-08 14:51:57.845 KST client backend[3076275] pg_regress/foreign_key ERROR:  there is no unique constraint matching given keys for referenced table "pktable"
2024-09-08 14:51:57.845 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE FKTABLE_FAIL1 (ftest1 int REFERENCES pktable(ptest1));
2024-09-08 14:51:57.845 KST client backend[3076275] pg_regress/foreign_key ERROR:  table "fktable_fail1" does not exist
2024-09-08 14:51:57.845 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DROP TABLE FKTABLE_FAIL1;
2024-09-08 14:51:57.845 KST client backend[3076292] pg_regress/window ERROR:  RANGE with offset PRECEDING/FOLLOWING requires exactly one ORDER BY column at character 25
2024-09-08 14:51:57.845 KST client backend[3076292] pg_regress/window STATEMENT:  select sum(salary) over (order by enroll_date, salary range between '1 year'::interval preceding and '2 years'::interval following
		exclude ties), salary, enroll_date from empsalary;
2024-09-08 14:51:57.845 KST client backend[3076292] pg_regress/window ERROR:  RANGE with offset PRECEDING/FOLLOWING requires exactly one ORDER BY column at character 25
2024-09-08 14:51:57.845 KST client backend[3076292] pg_regress/window STATEMENT:  select sum(salary) over (range between '1 year'::interval preceding and '2 years'::interval following
		exclude ties), salary, enroll_date from empsalary;
2024-09-08 14:51:57.845 KST client backend[3076292] pg_regress/window ERROR:  RANGE with offset PRECEDING/FOLLOWING is not supported for column type text at character 57
2024-09-08 14:51:57.845 KST client backend[3076292] pg_regress/window STATEMENT:  select sum(salary) over (order by depname range between '1 year'::interval preceding and '2 years'::interval following
		exclude ties), salary, enroll_date from empsalary;
2024-09-08 14:51:57.845 KST client backend[3076292] pg_regress/window ERROR:  RANGE with offset PRECEDING/FOLLOWING is not supported for column type date and offset type integer at character 66
2024-09-08 14:51:57.845 KST client backend[3076292] pg_regress/window HINT:  Cast the offset value to an appropriate type.
2024-09-08 14:51:57.845 KST client backend[3076292] pg_regress/window STATEMENT:  select max(enroll_date) over (order by enroll_date range between 1 preceding and 2 following
		exclude ties), salary, enroll_date from empsalary;
2024-09-08 14:51:57.845 KST client backend[3076292] pg_regress/window ERROR:  invalid preceding or following size in window function
2024-09-08 14:51:57.845 KST client backend[3076292] pg_regress/window STATEMENT:  select max(enroll_date) over (order by salary range between -1 preceding and 2 following
		exclude ties), salary, enroll_date from empsalary;
2024-09-08 14:51:57.845 KST client backend[3076292] pg_regress/window ERROR:  invalid preceding or following size in window function
2024-09-08 14:51:57.845 KST client backend[3076292] pg_regress/window STATEMENT:  select max(enroll_date) over (order by salary range between 1 preceding and -2 following
		exclude ties), salary, enroll_date from empsalary;
2024-09-08 14:51:57.845 KST client backend[3076292] pg_regress/window ERROR:  RANGE with offset PRECEDING/FOLLOWING is not supported for column type integer and offset type interval at character 61
2024-09-08 14:51:57.845 KST client backend[3076292] pg_regress/window HINT:  Cast the offset value to an appropriate type.
2024-09-08 14:51:57.845 KST client backend[3076292] pg_regress/window STATEMENT:  select max(enroll_date) over (order by salary range between '1 year'::interval preceding and '2 years'::interval following
		exclude ties), salary, enroll_date from empsalary;
2024-09-08 14:51:57.845 KST client backend[3076292] pg_regress/window ERROR:  invalid preceding or following size in window function
2024-09-08 14:51:57.845 KST client backend[3076292] pg_regress/window STATEMENT:  select max(enroll_date) over (order by enroll_date range between '1 year'::interval preceding and '-2 years'::interval following
		exclude ties), salary, enroll_date from empsalary;
2024-09-08 14:51:57.846 KST client backend[3076286] pg_regress/foreign_data ERROR:  cannot create index on relation "ft1"
2024-09-08 14:51:57.846 KST client backend[3076286] pg_regress/foreign_data DETAIL:  This operation is not supported for foreign tables.
2024-09-08 14:51:57.846 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE INDEX id_ft1_c2 ON ft1 (c2);
2024-09-08 14:51:57.846 KST client backend[3076286] pg_regress/foreign_data ERROR:  foreign-data wrapper "dummy" has no handler
2024-09-08 14:51:57.846 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  SELECT * FROM ft1;
2024-09-08 14:51:57.846 KST client backend[3076286] pg_regress/foreign_data ERROR:  foreign-data wrapper "dummy" has no handler
2024-09-08 14:51:57.846 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  EXPLAIN SELECT * FROM ft1;
2024-09-08 14:51:57.847 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fktable_ftest1_fkey" cannot be implemented
2024-09-08 14:51:57.847 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ftest1" and "ptest1" are of incompatible types: inet and integer.
2024-09-08 14:51:57.847 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE FKTABLE (ftest1 inet REFERENCES pktable);
2024-09-08 14:51:57.847 KST client backend[3076286] pg_regress/foreign_data ERROR:  cannot create unique index on partitioned table "lt1"
2024-09-08 14:51:57.847 KST client backend[3076286] pg_regress/foreign_data DETAIL:  Table "lt1" contains partitions that are foreign tables.
2024-09-08 14:51:57.847 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE UNIQUE INDEX ON lt1 (a);
2024-09-08 14:51:57.847 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fktable_ftest1_fkey" cannot be implemented
2024-09-08 14:51:57.847 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ftest1" and "ptest1" are of incompatible types: inet and integer.
2024-09-08 14:51:57.847 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE FKTABLE (ftest1 inet REFERENCES pktable(ptest1));
2024-09-08 14:51:57.848 KST client backend[3076286] pg_regress/foreign_data ERROR:  cannot create unique index on partitioned table "lt1"
2024-09-08 14:51:57.848 KST client backend[3076286] pg_regress/foreign_data DETAIL:  Table "lt1" contains partitions that are foreign tables.
2024-09-08 14:51:57.848 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER TABLE lt1 ADD PRIMARY KEY (a);
2024-09-08 14:51:57.848 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_ftest1_fkey"
2024-09-08 14:51:57.848 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ftest1)=(43) is not present in table "pktable".
2024-09-08 14:51:57.848 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO FKTABLE VALUES(43);
2024-09-08 14:51:57.849 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_ftest1_fkey"
2024-09-08 14:51:57.849 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ftest1)=(43) is not present in table "pktable".
2024-09-08 14:51:57.849 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE FKTABLE SET ftest1 = ftest1 + 1;
2024-09-08 14:51:57.850 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fktable_ftest1_fkey" cannot be implemented
2024-09-08 14:51:57.850 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ftest1" and "ptest1" are of incompatible types: numeric and integer.
2024-09-08 14:51:57.850 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE FKTABLE (ftest1 numeric REFERENCES pktable);
2024-09-08 14:51:57.851 KST client backend[3076286] pg_regress/foreign_data ERROR:  cannot create foreign partition of partitioned table "lt1"
2024-09-08 14:51:57.851 KST client backend[3076286] pg_regress/foreign_data DETAIL:  Table "lt1" contains indexes that are unique.
2024-09-08 14:51:57.851 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE FOREIGN TABLE ft_part1
	  PARTITION OF lt1 FOR VALUES FROM (0) TO (1000) SERVER s0;
2024-09-08 14:51:57.851 KST client backend[3076292] pg_regress/window ERROR:  RANGE with offset PRECEDING/FOLLOWING requires exactly one ORDER BY column at character 25
2024-09-08 14:51:57.851 KST client backend[3076292] pg_regress/window STATEMENT:  select f1, sum(f1) over (partition by f1
	                         range between 1 preceding and 1 following)
	from t1 where f1 = f2;
2024-09-08 14:51:57.852 KST client backend[3076286] pg_regress/foreign_data ERROR:  cannot attach foreign table "ft_part2" as partition of partitioned table "lt1"
2024-09-08 14:51:57.852 KST client backend[3076286] pg_regress/foreign_data DETAIL:  Partitioned table "lt1" contains unique indexes.
2024-09-08 14:51:57.852 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER TABLE lt1 ATTACH PARTITION ft_part2
	  FOR VALUES FROM (1000) TO (2000);
2024-09-08 14:51:57.852 KST client backend[3076292] pg_regress/window ERROR:  GROUPS mode requires an ORDER BY clause at character 25
2024-09-08 14:51:57.852 KST client backend[3076292] pg_regress/window STATEMENT:  select f1, sum(f1) over (partition by f1
	                         groups between 1 preceding and 1 following)
	from t1 where f1 = f2;
2024-09-08 14:51:57.852 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_ftest1_fkey"
2024-09-08 14:51:57.852 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ftest1)=(43) is not present in table "pktable".
2024-09-08 14:51:57.852 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO FKTABLE VALUES(43);
2024-09-08 14:51:57.852 KST client backend[3076292] pg_regress/window ERROR:  window functions are not allowed in window definitions at character 30
2024-09-08 14:51:57.852 KST client backend[3076292] pg_regress/window STATEMENT:  SELECT rank() OVER (ORDER BY rank() OVER (ORDER BY random()));
2024-09-08 14:51:57.852 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_ftest1_fkey"
2024-09-08 14:51:57.852 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ftest1)=(43) is not present in table "pktable".
2024-09-08 14:51:57.852 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE FKTABLE SET ftest1 = ftest1 + 1;
2024-09-08 14:51:57.852 KST client backend[3076292] pg_regress/window ERROR:  window functions are not allowed in WHERE at character 31
2024-09-08 14:51:57.852 KST client backend[3076292] pg_regress/window STATEMENT:  SELECT * FROM empsalary WHERE row_number() OVER (ORDER BY salary) < 10;
2024-09-08 14:51:57.852 KST client backend[3076292] pg_regress/window ERROR:  window functions are not allowed in JOIN conditions at character 45
2024-09-08 14:51:57.852 KST client backend[3076292] pg_regress/window STATEMENT:  SELECT * FROM empsalary INNER JOIN tenk1 ON row_number() OVER (ORDER BY salary) < 10;
2024-09-08 14:51:57.853 KST client backend[3076292] pg_regress/window ERROR:  window functions are not allowed in GROUP BY at character 8
2024-09-08 14:51:57.853 KST client backend[3076292] pg_regress/window STATEMENT:  SELECT rank() OVER (ORDER BY 1), count(*) FROM empsalary GROUP BY 1;
2024-09-08 14:51:57.853 KST client backend[3076292] pg_regress/window ERROR:  syntax error at or near "ORDER" at character 28
2024-09-08 14:51:57.853 KST client backend[3076292] pg_regress/window STATEMENT:  SELECT * FROM rank() OVER (ORDER BY random());
2024-09-08 14:51:57.853 KST client backend[3076292] pg_regress/window ERROR:  window functions are not allowed in WHERE at character 30
2024-09-08 14:51:57.853 KST client backend[3076292] pg_regress/window STATEMENT:  DELETE FROM empsalary WHERE (rank() OVER (ORDER BY random())) > 10;
2024-09-08 14:51:57.853 KST client backend[3076292] pg_regress/window ERROR:  window functions are not allowed in RETURNING at character 33
2024-09-08 14:51:57.853 KST client backend[3076292] pg_regress/window STATEMENT:  DELETE FROM empsalary RETURNING rank() OVER (ORDER BY random());
2024-09-08 14:51:57.853 KST client backend[3076292] pg_regress/window ERROR:  window "w" is already defined at character 72
2024-09-08 14:51:57.853 KST client backend[3076292] pg_regress/window STATEMENT:  SELECT count(*) OVER w FROM tenk1 WINDOW w AS (ORDER BY unique1), w AS (ORDER BY unique1);
2024-09-08 14:51:57.853 KST client backend[3076292] pg_regress/window ERROR:  syntax error at or near "ORDER" at character 40
2024-09-08 14:51:57.853 KST client backend[3076292] pg_regress/window STATEMENT:  SELECT rank() OVER (PARTITION BY four, ORDER BY ten) FROM tenk1;
2024-09-08 14:51:57.853 KST client backend[3076292] pg_regress/window ERROR:  count(*) must be used to call a parameterless aggregate function at character 8
2024-09-08 14:51:57.853 KST client backend[3076292] pg_regress/window STATEMENT:  SELECT count() OVER () FROM tenk1;
2024-09-08 14:51:57.853 KST client backend[3076292] pg_regress/window ERROR:  OVER specified, but generate_series is not a window function nor an aggregate function at character 8
2024-09-08 14:51:57.853 KST client backend[3076292] pg_regress/window STATEMENT:  SELECT generate_series(1, 100) OVER () FROM empsalary;
2024-09-08 14:51:57.854 KST client backend[3076286] pg_regress/foreign_data ERROR:  cannot create unique index on partitioned table "lt1"
2024-09-08 14:51:57.854 KST client backend[3076286] pg_regress/foreign_data DETAIL:  Table "lt1" contains partitions that are foreign tables.
2024-09-08 14:51:57.854 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE UNIQUE INDEX ON lt1 (a);
2024-09-08 14:51:57.855 KST client backend[3076282] pg_regress/cluster ERROR:  there is no previously clustered index for table "clstrpart"
2024-09-08 14:51:57.855 KST client backend[3076282] pg_regress/cluster STATEMENT:  CLUSTER clstrpart;
2024-09-08 14:51:57.855 KST client backend[3076282] pg_regress/cluster ERROR:  cannot mark index clustered in partitioned table
2024-09-08 14:51:57.855 KST client backend[3076282] pg_regress/cluster STATEMENT:  ALTER TABLE clstrpart SET WITHOUT CLUSTER;
2024-09-08 14:51:57.855 KST client backend[3076282] pg_regress/cluster ERROR:  cannot mark index clustered in partitioned table
2024-09-08 14:51:57.855 KST client backend[3076282] pg_regress/cluster STATEMENT:  ALTER TABLE clstrpart CLUSTER ON clstrpart_idx;
2024-09-08 14:51:57.855 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fktable_ftest1_ftest2_fkey" cannot be implemented
2024-09-08 14:51:57.855 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ftest1" and "ptest1" are of incompatible types: cidr and integer.
2024-09-08 14:51:57.855 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE FKTABLE (ftest1 cidr, ftest2 timestamp, FOREIGN KEY(ftest1, ftest2) REFERENCES pktable);
2024-09-08 14:51:57.855 KST client backend[3076286] pg_regress/foreign_data ERROR:  cannot create unique index on partitioned table "lt1_part1"
2024-09-08 14:51:57.855 KST client backend[3076286] pg_regress/foreign_data DETAIL:  Table "lt1_part1" contains partitions that are foreign tables.
2024-09-08 14:51:57.855 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER TABLE lt1 ADD PRIMARY KEY (a);
2024-09-08 14:51:57.855 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fktable_ftest1_ftest2_fkey" cannot be implemented
2024-09-08 14:51:57.855 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ftest1" and "ptest1" are of incompatible types: cidr and integer.
2024-09-08 14:51:57.855 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE FKTABLE (ftest1 cidr, ftest2 timestamp, FOREIGN KEY(ftest1, ftest2) REFERENCES pktable(ptest1, ptest2));
2024-09-08 14:51:57.856 KST client backend[3076292] pg_regress/window ERROR:  argument of ntile must be greater than zero
2024-09-08 14:51:57.856 KST client backend[3076292] pg_regress/window STATEMENT:  SELECT ntile(0) OVER (ORDER BY ten), ten, four FROM tenk1;
2024-09-08 14:51:57.856 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fktable_ftest2_ftest1_fkey" cannot be implemented
2024-09-08 14:51:57.856 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ftest2" and "ptest1" are of incompatible types: inet and integer.
2024-09-08 14:51:57.856 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE FKTABLE (ftest1 int, ftest2 inet, FOREIGN KEY(ftest2, ftest1) REFERENCES pktable);
2024-09-08 14:51:57.857 KST client backend[3076286] pg_regress/foreign_data ERROR:  cannot create foreign partition of partitioned table "lt1_part1"
2024-09-08 14:51:57.857 KST client backend[3076286] pg_regress/foreign_data DETAIL:  Table "lt1_part1" contains indexes that are unique.
2024-09-08 14:51:57.857 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE FOREIGN TABLE ft_part_1_1
	  PARTITION OF lt1_part1 FOR VALUES FROM (0) TO (100) SERVER s0;
2024-09-08 14:51:57.857 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fktable_ftest2_ftest1_fkey" cannot be implemented
2024-09-08 14:51:57.857 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ftest2" and "ptest1" are of incompatible types: inet and integer.
2024-09-08 14:51:57.857 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE FKTABLE (ftest1 int, ftest2 inet, FOREIGN KEY(ftest2, ftest1) REFERENCES pktable(ptest1, ptest2));
2024-09-08 14:51:57.857 KST client backend[3076286] pg_regress/foreign_data ERROR:  cannot attach foreign table "ft_part_1_2" as partition of partitioned table "lt1_part1"
2024-09-08 14:51:57.857 KST client backend[3076286] pg_regress/foreign_data DETAIL:  Partitioned table "lt1_part1" contains unique indexes.
2024-09-08 14:51:57.857 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER TABLE lt1_part1 ATTACH PARTITION ft_part_1_2 FOR VALUES FROM (100) TO (200);
2024-09-08 14:51:57.858 KST client backend[3076292] pg_regress/window ERROR:  argument of nth_value must be greater than zero
2024-09-08 14:51:57.858 KST client backend[3076292] pg_regress/window STATEMENT:  SELECT nth_value(four, 0) OVER (ORDER BY ten), ten, four FROM tenk1;
2024-09-08 14:51:57.858 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fktable_ftest1_ftest2_fkey" cannot be implemented
2024-09-08 14:51:57.858 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ftest1" and "ptest2" are of incompatible types: integer and inet.
2024-09-08 14:51:57.858 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE FKTABLE (ftest1 int, ftest2 inet, FOREIGN KEY(ftest1, ftest2) REFERENCES pktable(ptest2, ptest1));
2024-09-08 14:51:57.860 KST client backend[3076286] pg_regress/foreign_data ERROR:  "ft1" is not a table
2024-09-08 14:51:57.860 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN TABLE ft1 ALTER COLUMN c8 TYPE char(10) USING '0';
2024-09-08 14:51:57.861 KST client backend[3076286] pg_regress/foreign_data ERROR:  cannot alter system column "xmin"
2024-09-08 14:51:57.861 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN TABLE ft1 ALTER COLUMN xmin OPTIONS (ADD p1 'v1');
2024-09-08 14:51:57.865 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "pktable_ptest3_ptest4_fkey" cannot be implemented
2024-09-08 14:51:57.865 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ptest3" and "ptest2" are of incompatible types: integer and inet.
2024-09-08 14:51:57.865 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE PKTABLE (ptest1 int, ptest2 inet, ptest3 int, ptest4 inet, PRIMARY KEY(ptest1, ptest2), FOREIGN KEY(ptest3,
	ptest4) REFERENCES pktable(ptest2, ptest1));
2024-09-08 14:51:57.865 KST client backend[3076286] pg_regress/foreign_data ERROR:  cannot alter foreign table "ft1" because column "use_ft1_column_type.x" uses its row type
2024-09-08 14:51:57.865 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN TABLE ft1 ALTER COLUMN c8 SET DATA TYPE integer;
2024-09-08 14:51:57.866 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "pktable_ptest4_ptest3_fkey" cannot be implemented
2024-09-08 14:51:57.866 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ptest4" and "ptest1" are of incompatible types: inet and integer.
2024-09-08 14:51:57.866 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE PKTABLE (ptest1 int, ptest2 inet, ptest3 int, ptest4 inet, PRIMARY KEY(ptest1, ptest2), FOREIGN KEY(ptest4,
	ptest3) REFERENCES pktable(ptest1, ptest2));
2024-09-08 14:51:57.866 KST client backend[3076286] pg_regress/foreign_data ERROR:  primary key constraints are not supported on foreign tables at character 29
2024-09-08 14:51:57.866 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN TABLE ft1 ADD PRIMARY KEY (c7);
2024-09-08 14:51:57.866 KST client backend[3076286] pg_regress/foreign_data ERROR:  ALTER action ALTER CONSTRAINT cannot be performed on relation "ft1"
2024-09-08 14:51:57.866 KST client backend[3076286] pg_regress/foreign_data DETAIL:  This operation is not supported for foreign tables.
2024-09-08 14:51:57.866 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN TABLE ft1 ALTER CONSTRAINT ft1_c9_check DEFERRABLE;
2024-09-08 14:51:57.867 KST client backend[3076286] pg_regress/foreign_data ERROR:  constraint "no_const" of relation "ft1" does not exist
2024-09-08 14:51:57.867 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN TABLE ft1 DROP CONSTRAINT no_const;
2024-09-08 14:51:57.867 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "pktable_ptest4_ptest3_fkey" cannot be implemented
2024-09-08 14:51:57.867 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ptest4" and "ptest1" are of incompatible types: inet and integer.
2024-09-08 14:51:57.867 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  CREATE TABLE PKTABLE (ptest1 int, ptest2 inet, ptest3 int, ptest4 inet, PRIMARY KEY(ptest1, ptest2), FOREIGN KEY(ptest4,
	ptest3) REFERENCES pktable);
2024-09-08 14:51:57.867 KST client backend[3076286] pg_regress/foreign_data ERROR:  column "no_column" of relation "ft1" does not exist
2024-09-08 14:51:57.867 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN TABLE ft1 DROP COLUMN no_column;
2024-09-08 14:51:57.868 KST client backend[3076286] pg_regress/foreign_data ERROR:  relation "ft1" does not exist
2024-09-08 14:51:57.868 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN TABLE ft1 SET TABLESPACE ts;
2024-09-08 14:51:57.869 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_ftest1_fkey"
2024-09-08 14:51:57.869 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ftest1)=(3) is not present in table "pktable".
2024-09-08 14:51:57.869 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  insert into fktable(ftest1) values (3);
2024-09-08 14:51:57.870 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pktable" violates foreign key constraint "fktable_ftest1_fkey" on table "fktable"
2024-09-08 14:51:57.870 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (base1)=(3) is still referenced from table "fktable".
2024-09-08 14:51:57.870 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  delete from pktable where base1>2;
2024-09-08 14:51:57.870 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pktable" violates foreign key constraint "fktable_ftest1_fkey" on table "fktable"
2024-09-08 14:51:57.870 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (base1)=(3) is still referenced from table "fktable".
2024-09-08 14:51:57.870 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  update pktable set base1=base1*4;
2024-09-08 14:51:57.872 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_ftest1_ftest2_fkey"
2024-09-08 14:51:57.872 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (ftest1, ftest2)=(3, 1) is not present in table "pktable".
2024-09-08 14:51:57.872 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  insert into fktable(ftest1, ftest2) values (3, 1);
2024-09-08 14:51:57.872 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pktable" violates foreign key constraint "fktable_ftest1_ftest2_fkey" on table "fktable"
2024-09-08 14:51:57.872 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (base1, ptest1)=(3, 1) is still referenced from table "fktable".
2024-09-08 14:51:57.872 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  delete from pktable where base1>2;
2024-09-08 14:51:57.872 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pktable" violates foreign key constraint "fktable_ftest1_ftest2_fkey" on table "fktable"
2024-09-08 14:51:57.872 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (base1, ptest1)=(3, 1) is still referenced from table "fktable".
2024-09-08 14:51:57.872 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  update pktable set base1=base1*4;
2024-09-08 14:51:57.875 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "pktable" violates foreign key constraint "pktable_base2_ptest2_fkey"
2024-09-08 14:51:57.875 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (base2, ptest2)=(3, 2) is not present in table "pktable".
2024-09-08 14:51:57.875 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  insert into pktable (base1, ptest1, base2, ptest2) values (2, 3, 3, 2);
2024-09-08 14:51:57.875 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pktable" violates foreign key constraint "pktable_base2_ptest2_fkey" on table "pktable"
2024-09-08 14:51:57.875 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (base1, ptest1)=(2, 2) is still referenced from table "pktable".
2024-09-08 14:51:57.875 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  delete from pktable where base1=2;
2024-09-08 14:51:57.875 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pktable" violates foreign key constraint "pktable_base2_ptest2_fkey" on table "pktable"
2024-09-08 14:51:57.875 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (base1, ptest1)=(1, 1) is still referenced from table "pktable".
2024-09-08 14:51:57.875 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  update pktable set base1=3 where base1=1;
2024-09-08 14:51:57.878 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fktable_ftest1_ftest2_fkey" cannot be implemented
2024-09-08 14:51:57.878 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ftest1" and "base1" are of incompatible types: cidr and integer.
2024-09-08 14:51:57.878 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  create table fktable(ftest1 cidr, ftest2 int[], foreign key (ftest1, ftest2) references pktable);
2024-09-08 14:51:57.879 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fktable_ftest1_ftest2_fkey" cannot be implemented
2024-09-08 14:51:57.879 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ftest1" and "base1" are of incompatible types: cidr and integer.
2024-09-08 14:51:57.879 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  create table fktable(ftest1 cidr, ftest2 int[], foreign key (ftest1, ftest2) references pktable(base1, ptest1));
2024-09-08 14:51:57.879 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fktable_ftest2_ftest1_fkey" cannot be implemented
2024-09-08 14:51:57.879 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ftest2" and "base1" are of incompatible types: inet and integer.
2024-09-08 14:51:57.879 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  create table fktable(ftest1 int, ftest2 inet, foreign key(ftest2, ftest1) references pktable);
2024-09-08 14:51:57.880 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fktable_ftest2_ftest1_fkey" cannot be implemented
2024-09-08 14:51:57.880 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ftest2" and "base1" are of incompatible types: inet and integer.
2024-09-08 14:51:57.880 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  create table fktable(ftest1 int, ftest2 inet, foreign key(ftest2, ftest1) references pktable(base1, ptest1));
2024-09-08 14:51:57.881 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fktable_ftest1_ftest2_fkey" cannot be implemented
2024-09-08 14:51:57.881 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ftest1" and "ptest1" are of incompatible types: integer and inet.
2024-09-08 14:51:57.881 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  create table fktable(ftest1 int, ftest2 inet, foreign key(ftest1, ftest2) references pktable(ptest1, base1));
2024-09-08 14:51:57.883 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "pktable_base2_ptest2_fkey" cannot be implemented
2024-09-08 14:51:57.883 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ptest2" and "ptest1" are of incompatible types: inet[] and inet.
2024-09-08 14:51:57.883 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  create table pktable(ptest1 inet, ptest2 inet[], primary key(base1, ptest1), foreign key(base2, ptest2) references
	                                             pktable(base1, ptest1)) inherits (pktable_base);
2024-09-08 14:51:57.883 KST client backend[3076287] pg_regress/bitmapops LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3076287.0.fileset/1.0", size 499712
2024-09-08 14:51:57.883 KST client backend[3076287] pg_regress/bitmapops STATEMENT:  CREATE INDEX i_bmtest_a ON bmscantest(a);
2024-09-08 14:51:57.883 KST client backend[3076287] pg_regress/bitmapops LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3076287.0.fileset/0.0", size 909312
2024-09-08 14:51:57.883 KST client backend[3076287] pg_regress/bitmapops STATEMENT:  CREATE INDEX i_bmtest_a ON bmscantest(a);
2024-09-08 14:51:57.884 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "pktable_base2_ptest2_fkey" cannot be implemented
2024-09-08 14:51:57.884 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "base2" and "ptest1" are of incompatible types: integer and inet.
2024-09-08 14:51:57.884 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  create table pktable(ptest1 inet, ptest2 inet, primary key(base1, ptest1), foreign key(base2, ptest2) references
	                                             pktable(ptest1, base1)) inherits (pktable_base);
2024-09-08 14:51:57.885 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "pktable_ptest2_base2_fkey" cannot be implemented
2024-09-08 14:51:57.885 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ptest2" and "base1" are of incompatible types: inet and integer.
2024-09-08 14:51:57.885 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  create table pktable(ptest1 inet, ptest2 inet, primary key(base1, ptest1), foreign key(ptest2, base2) references
	                                             pktable(base1, ptest1)) inherits (pktable_base);
2024-09-08 14:51:57.886 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "pktable_ptest2_base2_fkey" cannot be implemented
2024-09-08 14:51:57.886 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "ptest2" and "base1" are of incompatible types: inet and integer.
2024-09-08 14:51:57.886 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  create table pktable(ptest1 inet, ptest2 inet, primary key(base1, ptest1), foreign key(ptest2, base2) references
	                                             pktable(base1, ptest1)) inherits (pktable_base);
2024-09-08 14:51:57.886 KST client backend[3076275] pg_regress/foreign_key ERROR:  table "pktable" does not exist
2024-09-08 14:51:57.886 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  drop table pktable;
2024-09-08 14:51:57.888 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_fk_fkey"
2024-09-08 14:51:57.888 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (fk)=(10) is not present in table "pktable".
2024-09-08 14:51:57.888 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO fktable VALUES (5, 10);
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data WARNING:  changing the foreign-data wrapper validator can cause the options for dependent objects to become invalid
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied to create foreign-data wrapper "foobar"
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data HINT:  Must be superuser to create a foreign-data wrapper.
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE FOREIGN DATA WRAPPER foobar;
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied to alter foreign-data wrapper "foo"
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data HINT:  Must be superuser to alter a foreign-data wrapper.
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN DATA WRAPPER foo OPTIONS (gotcha 'true');
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied to change owner of foreign-data wrapper "foo"
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data HINT:  Must be superuser to change owner of a foreign-data wrapper.
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN DATA WRAPPER foo OWNER TO regress_unprivileged_role;
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign-data wrapper foo
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP FOREIGN DATA WRAPPER foo;
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied for foreign-data wrapper foo
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  GRANT USAGE ON FOREIGN DATA WRAPPER foo TO regress_test_role;
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied for foreign-data wrapper foo
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE SERVER s9 FOREIGN DATA WRAPPER foo;
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s4
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER SERVER s4 VERSION '0.5';
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s4
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER SERVER s4 OWNER TO regress_unprivileged_role;
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s4
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP SERVER s4;
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied for foreign server s4
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  GRANT USAGE ON FOREIGN SERVER s4 TO regress_test_role;
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s4
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE USER MAPPING FOR public SERVER s4;
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s6
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER USER MAPPING FOR regress_test_role SERVER s6 OPTIONS (gotcha 'true');
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s6
2024-09-08 14:51:57.890 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP USER MAPPING FOR regress_test_role SERVER s6;
2024-09-08 14:51:57.891 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied to create foreign-data wrapper "foobar"
2024-09-08 14:51:57.891 KST client backend[3076286] pg_regress/foreign_data HINT:  Must be superuser to create a foreign-data wrapper.
2024-09-08 14:51:57.891 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE FOREIGN DATA WRAPPER foobar;
2024-09-08 14:51:57.891 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_fk_fkey"
2024-09-08 14:51:57.891 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (fk)=(1000) is not present in table "pktable".
2024-09-08 14:51:57.891 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO fktable VALUES (500, 1000);
2024-09-08 14:51:57.891 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied to alter foreign-data wrapper "foo"
2024-09-08 14:51:57.891 KST client backend[3076286] pg_regress/foreign_data HINT:  Must be superuser to alter a foreign-data wrapper.
2024-09-08 14:51:57.891 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN DATA WRAPPER foo OPTIONS (gotcha 'true');
2024-09-08 14:51:57.891 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign-data wrapper foo
2024-09-08 14:51:57.891 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP FOREIGN DATA WRAPPER foo;
2024-09-08 14:51:57.891 KST client backend[3076286] pg_regress/foreign_data WARNING:  no privileges were granted for "postgresql"
2024-09-08 14:51:57.891 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s6
2024-09-08 14:51:57.891 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER SERVER s6 VERSION '0.5';
2024-09-08 14:51:57.891 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s6
2024-09-08 14:51:57.891 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP SERVER s6;
2024-09-08 14:51:57.891 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied for foreign server s6
2024-09-08 14:51:57.891 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  GRANT USAGE ON FOREIGN SERVER s6 TO regress_test_role;
2024-09-08 14:51:57.891 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s6
2024-09-08 14:51:57.891 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE USER MAPPING FOR public SERVER s6;
2024-09-08 14:51:57.892 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s6
2024-09-08 14:51:57.892 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER USER MAPPING FOR regress_test_role SERVER s6 OPTIONS (gotcha 'true');
2024-09-08 14:51:57.892 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s6
2024-09-08 14:51:57.892 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP USER MAPPING FOR regress_test_role SERVER s6;
2024-09-08 14:51:57.892 KST client backend[3076286] pg_regress/foreign_data ERROR:  dependent privileges exist
2024-09-08 14:51:57.892 KST client backend[3076286] pg_regress/foreign_data HINT:  Use CASCADE to revoke them too.
2024-09-08 14:51:57.892 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  REVOKE USAGE ON FOREIGN DATA WRAPPER foo FROM regress_unprivileged_role;
2024-09-08 14:51:57.892 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied for foreign-data wrapper foo
2024-09-08 14:51:57.892 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  GRANT USAGE ON FOREIGN DATA WRAPPER foo TO regress_test_role;
2024-09-08 14:51:57.892 KST client backend[3076286] pg_regress/foreign_data ERROR:  permission denied for foreign-data wrapper foo
2024-09-08 14:51:57.892 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE SERVER s10 FOREIGN DATA WRAPPER foo;
2024-09-08 14:51:57.893 KST client backend[3076282] pg_regress/cluster LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3076282.0", size 2801664
2024-09-08 14:51:57.893 KST client backend[3076282] pg_regress/cluster STATEMENT:  cluster clstr_4 using cluster_sort;
2024-09-08 14:51:57.902 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s9
2024-09-08 14:51:57.902 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER SERVER s9 VERSION '1.2';
2024-09-08 14:51:57.902 KST client backend[3076286] pg_regress/foreign_data WARNING:  no privileges were granted for "s9"
2024-09-08 14:51:57.902 KST client backend[3076286] pg_regress/foreign_data ERROR:  must be owner of foreign server s9
2024-09-08 14:51:57.902 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP SERVER s9 CASCADE;
2024-09-08 14:51:57.903 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_fk_fkey"
2024-09-08 14:51:57.903 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (fk)=(2000) is not present in table "pktable".
2024-09-08 14:51:57.903 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  SET CONSTRAINTS ALL IMMEDIATE;
2024-09-08 14:51:57.903 KST client backend[3076275] pg_regress/foreign_key ERROR:  current transaction is aborted, commands ignored until end of transaction block
2024-09-08 14:51:57.903 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO pktable VALUES (2000, 3);
2024-09-08 14:51:57.905 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_fk_fkey"
2024-09-08 14:51:57.905 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (fk)=(200) is not present in table "pktable".
2024-09-08 14:51:57.905 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  COMMIT;
2024-09-08 14:51:57.906 KST client backend[3076286] pg_regress/foreign_data ERROR:  "foreign_table_1" is a foreign table
2024-09-08 14:51:57.906 KST client backend[3076286] pg_regress/foreign_data DETAIL:  Triggers on foreign tables cannot have transition tables.
2024-09-08 14:51:57.906 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE TRIGGER trigtest_after_stmt_tt AFTER INSERT OR UPDATE OR DELETE -- ERROR
	ON foreign_schema.foreign_table_1
	REFERENCING NEW TABLE AS new_table
	FOR EACH STATEMENT
	EXECUTE PROCEDURE dummy_trigger();
2024-09-08 14:51:57.906 KST client backend[3076286] pg_regress/foreign_data ERROR:  "foreign_table_1" is a foreign table
2024-09-08 14:51:57.906 KST client backend[3076286] pg_regress/foreign_data DETAIL:  Foreign tables cannot have constraint triggers.
2024-09-08 14:51:57.906 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE CONSTRAINT TRIGGER trigtest_constraint AFTER INSERT OR UPDATE OR DELETE
	ON foreign_schema.foreign_table_1
	FOR EACH ROW
	EXECUTE PROCEDURE dummy_trigger();
2024-09-08 14:51:57.908 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fk_2_3" cannot be implemented
2024-09-08 14:51:57.908 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "x2" and "id3" are of incompatible types: character varying and real.
2024-09-08 14:51:57.908 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE fktable ADD CONSTRAINT fk_2_3
	FOREIGN KEY (x2) REFERENCES pktable(id3);
2024-09-08 14:51:57.908 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fk_2_1" cannot be implemented
2024-09-08 14:51:57.908 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "x2" and "id1" are of incompatible types: character varying and integer.
2024-09-08 14:51:57.908 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE fktable ADD CONSTRAINT fk_2_1
	FOREIGN KEY (x2) REFERENCES pktable(id1);
2024-09-08 14:51:57.908 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fk_3_1" cannot be implemented
2024-09-08 14:51:57.908 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "x3" and "id1" are of incompatible types: real and integer.
2024-09-08 14:51:57.908 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE fktable ADD CONSTRAINT fk_3_1
	FOREIGN KEY (x3) REFERENCES pktable(id1);
2024-09-08 14:51:57.908 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fk_1_2" cannot be implemented
2024-09-08 14:51:57.908 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "x1" and "id2" are of incompatible types: integer and character varying.
2024-09-08 14:51:57.908 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE fktable ADD CONSTRAINT fk_1_2
	FOREIGN KEY (x1) REFERENCES pktable(id2);
2024-09-08 14:51:57.909 KST client backend[3076287] pg_regress/bitmapops LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3076287.1.fileset/1.0", size 401408
2024-09-08 14:51:57.909 KST client backend[3076287] pg_regress/bitmapops STATEMENT:  CREATE INDEX i_bmtest_b ON bmscantest(b);
2024-09-08 14:51:57.909 KST client backend[3076287] pg_regress/bitmapops LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3076287.1.fileset/0.0", size 1007616
2024-09-08 14:51:57.909 KST client backend[3076287] pg_regress/bitmapops STATEMENT:  CREATE INDEX i_bmtest_b ON bmscantest(b);
2024-09-08 14:51:57.911 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fk_123_231" cannot be implemented
2024-09-08 14:51:57.911 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "x1" and "id2" are of incompatible types: integer and character varying.
2024-09-08 14:51:57.911 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE fktable ADD CONSTRAINT fk_123_231
	FOREIGN KEY (x1,x2,x3) REFERENCES pktable(id2,id3,id1);
2024-09-08 14:51:57.911 KST client backend[3076275] pg_regress/foreign_key ERROR:  foreign key constraint "fk_241_132" cannot be implemented
2024-09-08 14:51:57.911 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key columns "x2" and "id1" are of incompatible types: character varying and integer.
2024-09-08 14:51:57.911 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE fktable ADD CONSTRAINT fk_241_132
	FOREIGN KEY (x2,x4,x1) REFERENCES pktable(id1,id3,id2);
2024-09-08 14:51:57.915 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_fk_fkey"
2024-09-08 14:51:57.915 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (fk)=(20) is not present in table "pktable".
2024-09-08 14:51:57.915 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  COMMIT;
2024-09-08 14:51:57.915 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_fk_fkey"
2024-09-08 14:51:57.915 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (fk)=(20) is not present in table "pktable".
2024-09-08 14:51:57.915 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  COMMIT;
2024-09-08 14:51:57.915 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_fk_fkey"
2024-09-08 14:51:57.915 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (fk)=(20) is not present in table "pktable".
2024-09-08 14:51:57.915 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  COMMIT;
2024-09-08 14:51:57.916 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_fk_fkey"
2024-09-08 14:51:57.916 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (fk)=(20) is not present in table "pktable".
2024-09-08 14:51:57.916 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  COMMIT;
2024-09-08 14:51:57.916 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pktable" violates foreign key constraint "fktable_fk_fkey" on table "fktable"
2024-09-08 14:51:57.916 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (id)=(5) is still referenced from table "fktable".
2024-09-08 14:51:57.916 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE pktable SET id = 10 WHERE id = 5;
2024-09-08 14:51:57.916 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_fk_fkey"
2024-09-08 14:51:57.916 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (fk)=(20) is not present in table "pktable".
2024-09-08 14:51:57.916 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO fktable VALUES (0, 20);
2024-09-08 14:51:57.917 KST client backend[3076275] pg_regress/foreign_key ERROR:  constraint declared INITIALLY DEFERRED must be DEFERRABLE at character 69
2024-09-08 14:51:57.917 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE fktable ALTER CONSTRAINT fktable_fk_fkey NOT DEFERRABLE INITIALLY DEFERRED;
2024-09-08 14:51:57.924 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "defp" violates foreign key constraint "defc_f1_fkey" on table "defc"
2024-09-08 14:51:57.924 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (f1)=(0) is still referenced from table "defc".
2024-09-08 14:51:57.924 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  delete from defp where f1 = 0;
2024-09-08 14:51:57.924 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "defp" violates foreign key constraint "defc_f1_fkey" on table "defc"
2024-09-08 14:51:57.924 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (f1)=(1) is still referenced from table "defc".
2024-09-08 14:51:57.924 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  delete from defp where f1 = 1;
2024-09-08 14:51:57.926 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pp" violates foreign key constraint "cc_f1_fkey" on table "cc"
2024-09-08 14:51:57.926 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (f1)=(13) is still referenced from table "cc".
2024-09-08 14:51:57.926 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  update pp set f1=f1+1;
2024-09-08 14:51:57.926 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pp" violates foreign key constraint "cc_f1_fkey" on table "cc"
2024-09-08 14:51:57.926 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (f1)=(13) is still referenced from table "cc".
2024-09-08 14:51:57.926 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  delete from pp where f1 = 13;
2024-09-08 14:51:57.928 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pp" violates foreign key constraint "cc_f1_fkey" on table "cc"
2024-09-08 14:51:57.928 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (f1)=(13) is still referenced from table "cc".
2024-09-08 14:51:57.928 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  update pp set f1=f1+1;
2024-09-08 14:51:57.928 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pp" violates foreign key constraint "cc_f1_fkey" on table "cc"
2024-09-08 14:51:57.928 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (f1)=(13) is still referenced from table "cc".
2024-09-08 14:51:57.928 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  delete from pp where f1 = 13;
2024-09-08 14:51:57.932 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pktable2" violates foreign key constraint "fktable2_d_e_fkey" on table "fktable2"
2024-09-08 14:51:57.932 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (d, e)=(4, 5) is still referenced from table "fktable2".
2024-09-08 14:51:57.932 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  delete from pktable2;
2024-09-08 14:51:57.932 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pktable2" violates foreign key constraint "fktable2_d_e_fkey" on table "fktable2"
2024-09-08 14:51:57.932 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (d, e)=(4, 5) is still referenced from table "fktable2".
2024-09-08 14:51:57.932 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  update pktable2 set d = 5;
2024-09-08 14:51:57.938 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fktable2" violates foreign key constraint "fktable2_f1_fkey"
2024-09-08 14:51:57.938 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (f1)=(2) is not present in table "pktable2".
2024-09-08 14:51:57.938 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  commit;
2024-09-08 14:51:57.938 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot ALTER TABLE "fktable2" because it has pending trigger events
2024-09-08 14:51:57.938 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  alter table fktable2 drop constraint fktable2_f1_fkey;
2024-09-08 14:51:57.938 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot ALTER TABLE "pktable2" because it has pending trigger events
2024-09-08 14:51:57.938 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  alter table fktable2 drop constraint fktable2_f1_fkey;
2024-09-08 14:51:57.944 KST client backend[3076286] pg_regress/foreign_data ERROR:  "ft2" is not a table
2024-09-08 14:51:57.944 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER TABLE fd_pt1 ALTER COLUMN c8 TYPE char(10) USING '0';
2024-09-08 14:51:57.947 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot use ONLY for foreign key on partitioned table "fk_partitioned_fk" referencing relation "fk_notpartitioned_pk"
2024-09-08 14:51:57.947 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE ONLY fk_partitioned_fk ADD FOREIGN KEY (a, b)
	  REFERENCES fk_notpartitioned_pk;
2024-09-08 14:51:57.948 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot add NOT VALID foreign key on partitioned table "fk_partitioned_fk" referencing relation "fk_notpartitioned_pk"
2024-09-08 14:51:57.948 KST client backend[3076275] pg_regress/foreign_key DETAIL:  This feature is not yet supported on partitioned tables.
2024-09-08 14:51:57.948 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE fk_partitioned_fk ADD FOREIGN KEY (a, b)
	  REFERENCES fk_notpartitioned_pk NOT VALID;
2024-09-08 14:51:57.948 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk_partitioned_fk_1" violates foreign key constraint "fk_partitioned_fk_a_b_fkey"
2024-09-08 14:51:57.948 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a, b)=(500, 501) is not present in table "fk_notpartitioned_pk".
2024-09-08 14:51:57.948 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO fk_partitioned_fk (a,b) VALUES (500, 501);
2024-09-08 14:51:57.948 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk_partitioned_fk_1" violates foreign key constraint "fk_partitioned_fk_a_b_fkey"
2024-09-08 14:51:57.948 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a, b)=(500, 501) is not present in table "fk_notpartitioned_pk".
2024-09-08 14:51:57.948 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO fk_partitioned_fk_1 (a,b) VALUES (500, 501);
2024-09-08 14:51:57.948 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk_partitioned_fk_2" violates foreign key constraint "fk_partitioned_fk_a_b_fkey"
2024-09-08 14:51:57.948 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a, b)=(1500, 1501) is not present in table "fk_notpartitioned_pk".
2024-09-08 14:51:57.948 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO fk_partitioned_fk (a,b) VALUES (1500, 1501);
2024-09-08 14:51:57.948 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk_partitioned_fk_2" violates foreign key constraint "fk_partitioned_fk_a_b_fkey"
2024-09-08 14:51:57.948 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a, b)=(1500, 1501) is not present in table "fk_notpartitioned_pk".
2024-09-08 14:51:57.948 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO fk_partitioned_fk_2 (a,b) VALUES (1500, 1501);
2024-09-08 14:51:57.948 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk_partitioned_fk_3_1" violates foreign key constraint "fk_partitioned_fk_a_b_fkey"
2024-09-08 14:51:57.948 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a, b)=(2500, 2502) is not present in table "fk_notpartitioned_pk".
2024-09-08 14:51:57.948 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO fk_partitioned_fk (a,b) VALUES (2500, 2502);
2024-09-08 14:51:57.949 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk_partitioned_fk_3_1" violates foreign key constraint "fk_partitioned_fk_a_b_fkey"
2024-09-08 14:51:57.949 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a, b)=(2500, 2502) is not present in table "fk_notpartitioned_pk".
2024-09-08 14:51:57.949 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO fk_partitioned_fk_3 (a,b) VALUES (2500, 2502);
2024-09-08 14:51:57.949 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk_partitioned_fk_3_0" violates foreign key constraint "fk_partitioned_fk_a_b_fkey"
2024-09-08 14:51:57.949 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a, b)=(2501, 2503) is not present in table "fk_notpartitioned_pk".
2024-09-08 14:51:57.949 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO fk_partitioned_fk (a,b) VALUES (2501, 2503);
2024-09-08 14:51:57.949 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk_partitioned_fk_3_0" violates foreign key constraint "fk_partitioned_fk_a_b_fkey"
2024-09-08 14:51:57.949 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a, b)=(2501, 2503) is not present in table "fk_notpartitioned_pk".
2024-09-08 14:51:57.949 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO fk_partitioned_fk_3 (a,b) VALUES (2501, 2503);
2024-09-08 14:51:57.950 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk_partitioned_fk_3_1" violates foreign key constraint "fk_partitioned_fk_a_b_fkey"
2024-09-08 14:51:57.950 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a, b)=(2502, 2503) is not present in table "fk_notpartitioned_pk".
2024-09-08 14:51:57.950 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE fk_partitioned_fk SET a = a + 1 WHERE a = 2501;
2024-09-08 14:51:57.950 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "fk_notpartitioned_pk" violates foreign key constraint "fk_partitioned_fk_a_b_fkey" on table "fk_partitioned_fk"
2024-09-08 14:51:57.950 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a, b)=(500, 501) is still referenced from table "fk_partitioned_fk".
2024-09-08 14:51:57.950 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE fk_notpartitioned_pk SET b = 502 WHERE a = 500;
2024-09-08 14:51:57.950 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "fk_notpartitioned_pk" violates foreign key constraint "fk_partitioned_fk_a_b_fkey" on table "fk_partitioned_fk"
2024-09-08 14:51:57.950 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a, b)=(1500, 1501) is still referenced from table "fk_partitioned_fk".
2024-09-08 14:51:57.950 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE fk_notpartitioned_pk SET b = 1502 WHERE a = 1500;
2024-09-08 14:51:57.950 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "fk_notpartitioned_pk" violates foreign key constraint "fk_partitioned_fk_a_b_fkey" on table "fk_partitioned_fk"
2024-09-08 14:51:57.950 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a, b)=(2500, 2502) is still referenced from table "fk_partitioned_fk".
2024-09-08 14:51:57.950 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE fk_notpartitioned_pk SET b = 2504 WHERE a = 2500;
2024-09-08 14:51:57.961 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "fk_notpartitioned_pk" violates foreign key constraint "fk_partitioned_fk_a_fkey" on table "fk_partitioned_fk"
2024-09-08 14:51:57.961 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(1) is still referenced from table "fk_partitioned_fk".
2024-09-08 14:51:57.961 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DELETE FROM fk_notpartitioned_pk WHERE a = 1;
2024-09-08 14:51:57.966 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk_partitioned_fk_3" violates foreign key constraint "fk_partitioned_fk_a_b_fkey"
2024-09-08 14:51:57.966 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a, b)=(2502, 2503) is not present in table "fk_notpartitioned_pk".
2024-09-08 14:51:57.966 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO fk_partitioned_fk (a, b) VALUES (2502, 2503);
2024-09-08 14:51:57.966 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk_partitioned_fk_3" violates foreign key constraint "fk_partitioned_fk_a_b_fkey"
2024-09-08 14:51:57.966 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a, b)=(2502, 2503) is not present in table "fk_notpartitioned_pk".
2024-09-08 14:51:57.966 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO fk_partitioned_fk_3 (a, b) VALUES (2502, 2503);
2024-09-08 14:51:57.967 KST client backend[3076286] pg_regress/foreign_data ERROR:  cannot drop foreign table ft2 because other objects depend on it
2024-09-08 14:51:57.967 KST client backend[3076286] pg_regress/foreign_data DETAIL:  table ct3 depends on foreign table ft2
	foreign table ft3 depends on foreign table ft2
2024-09-08 14:51:57.967 KST client backend[3076286] pg_regress/foreign_data HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:57.967 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP FOREIGN TABLE ft2;
2024-09-08 14:51:57.967 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk_partitioned_fk_full_1" violates foreign key constraint "fk_partitioned_fk_full_x_y_fkey"
2024-09-08 14:51:57.967 KST client backend[3076275] pg_regress/foreign_key DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values.
2024-09-08 14:51:57.967 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE fk_partitioned_fk_full ADD FOREIGN KEY (x, y) REFERENCES fk_notpartitioned_pk MATCH FULL;
2024-09-08 14:51:57.968 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk_partitioned_fk_full_1" violates foreign key constraint "fk_partitioned_fk_full_x_y_fkey"
2024-09-08 14:51:57.968 KST client backend[3076275] pg_regress/foreign_key DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values.
2024-09-08 14:51:57.968 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO fk_partitioned_fk_full VALUES (1, NULL);
2024-09-08 14:51:57.969 KST client backend[3076286] pg_regress/foreign_data ERROR:  child table is missing constraint "fd_pt1chk2"
2024-09-08 14:51:57.969 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER FOREIGN TABLE ft2 INHERIT fd_pt1;
2024-09-08 14:51:57.972 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk_partitioned_fk_3" violates foreign key constraint "fk_partitioned_fk_a_b_fkey"
2024-09-08 14:51:57.972 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a, b)=(2501, 142857) is not present in table "fk_notpartitioned_pk".
2024-09-08 14:51:57.972 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE fk_notpartitioned_pk SET a = 1500 WHERE a = 2502;
2024-09-08 14:51:57.990 KST client backend[3076286] pg_regress/foreign_data ERROR:  foreign-data wrapper "foo" has no handler
2024-09-08 14:51:57.990 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  IMPORT FOREIGN SCHEMA s1 FROM SERVER s9 INTO public;
2024-09-08 14:51:57.990 KST client backend[3076286] pg_regress/foreign_data ERROR:  foreign-data wrapper "foo" has no handler
2024-09-08 14:51:57.990 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  IMPORT FOREIGN SCHEMA s1 LIMIT TO (t1) FROM SERVER s9 INTO public;
2024-09-08 14:51:57.990 KST client backend[3076286] pg_regress/foreign_data ERROR:  foreign-data wrapper "foo" has no handler
2024-09-08 14:51:57.990 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  IMPORT FOREIGN SCHEMA s1 EXCEPT (t1) FROM SERVER s9 INTO public;
2024-09-08 14:51:57.990 KST client backend[3076286] pg_regress/foreign_data ERROR:  foreign-data wrapper "foo" has no handler
2024-09-08 14:51:57.990 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  IMPORT FOREIGN SCHEMA s1 EXCEPT (t1, t2) FROM SERVER s9 INTO public
	OPTIONS (option1 'value1', option2 'value2');
2024-09-08 14:51:57.990 KST client backend[3076286] pg_regress/foreign_data ERROR:  foreign table "no_table" does not exist
2024-09-08 14:51:57.990 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP FOREIGN TABLE no_table;
2024-09-08 14:51:57.991 KST client backend[3076286] pg_regress/foreign_data ERROR:  cannot drop desired object(s) because other objects depend on them
2024-09-08 14:51:57.991 KST client backend[3076286] pg_regress/foreign_data DETAIL:  user mapping for regress_test_role on server s5 depends on server s5
2024-09-08 14:51:57.991 KST client backend[3076286] pg_regress/foreign_data HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:57.991 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP OWNED BY regress_test_role2;
2024-09-08 14:51:58.000 KST client backend[3076286] pg_regress/foreign_data ERROR:  table "fd_pt2_1" contains column "c4" not found in parent "fd_pt2"
2024-09-08 14:51:58.000 KST client backend[3076286] pg_regress/foreign_data DETAIL:  The new partition may contain only the columns present in parent.
2024-09-08 14:51:58.000 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER TABLE fd_pt2 ATTACH PARTITION fd_pt2_1 FOR VALUES IN (1);
2024-09-08 14:51:58.010 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk_partitioned_fk_2_1" violates foreign key constraint "fk_partitioned_fk_a_b_fkey"
2024-09-08 14:51:58.010 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a, b)=(1600, 601) is not present in table "fk_notpartitioned_pk".
2024-09-08 14:51:58.010 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE fk_partitioned_fk ATTACH PARTITION fk_partitioned_fk_2
	  FOR VALUES IN (1600);
2024-09-08 14:51:58.011 KST client backend[3076286] pg_regress/foreign_data ERROR:  cannot add column to a partition
2024-09-08 14:51:58.011 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER TABLE fd_pt2_1 ADD c4 char;
2024-09-08 14:51:58.013 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "other_partitioned_fk_1" violates foreign key constraint "other_partitioned_fk_a_b_fkey"
2024-09-08 14:51:58.013 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a, b)=(2048, 1) is not present in table "fk_notpartitioned_pk".
2024-09-08 14:51:58.013 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  alter table other_partitioned_fk add foreign key (a, b)
	  references fk_notpartitioned_pk(a, b);
2024-09-08 14:51:58.016 KST client backend[3076286] pg_regress/foreign_data ERROR:  column "c1" is marked NOT NULL in parent table
2024-09-08 14:51:58.016 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER TABLE fd_pt2_1 ALTER c1 DROP NOT NULL;
2024-09-08 14:51:58.022 KST client backend[3076286] pg_regress/foreign_data ERROR:  column "c2" in child table must be marked NOT NULL
2024-09-08 14:51:58.022 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER TABLE fd_pt2 ATTACH PARTITION fd_pt2_1 FOR VALUES IN (1);
2024-09-08 14:51:58.028 KST client backend[3076286] pg_regress/foreign_data ERROR:  child table is missing constraint "fd_pt2chk1"
2024-09-08 14:51:58.028 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER TABLE fd_pt2 ATTACH PARTITION fd_pt2_1 FOR VALUES IN (1);
2024-09-08 14:51:58.029 KST client backend[3076286] pg_regress/foreign_data ERROR:  cannot create a permanent relation as partition of temporary relation "temp_parted"
2024-09-08 14:51:58.029 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  CREATE FOREIGN TABLE foreign_part PARTITION OF temp_parted DEFAULT
	  SERVER s0;
2024-09-08 14:51:58.029 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot drop inherited constraint "fk_part_1_a_fkey" of relation "fk_part_1"
2024-09-08 14:51:58.029 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  alter table fkpart0.fk_part_1 drop constraint fk_part_1_a_fkey;
2024-09-08 14:51:58.029 KST client backend[3076286] pg_regress/foreign_data ERROR:  cannot attach a permanent relation as partition of temporary relation "temp_parted"
2024-09-08 14:51:58.029 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  ALTER TABLE temp_parted ATTACH PARTITION foreign_part DEFAULT;
2024-09-08 14:51:58.030 KST client backend[3076286] pg_regress/foreign_data ERROR:  role "regress_test_role" cannot be dropped because some objects depend on it
2024-09-08 14:51:58.030 KST client backend[3076286] pg_regress/foreign_data DETAIL:  privileges for foreign-data wrapper foo
	privileges for server s4
	owner of user mapping for regress_test_role on server s6
2024-09-08 14:51:58.030 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP ROLE regress_test_role;
2024-09-08 14:51:58.030 KST client backend[3076286] pg_regress/foreign_data ERROR:  role "regress_unprivileged_role" cannot be dropped because some objects depend on it
2024-09-08 14:51:58.030 KST client backend[3076286] pg_regress/foreign_data DETAIL:  privileges for foreign-data wrapper postgresql
2024-09-08 14:51:58.030 KST client backend[3076286] pg_regress/foreign_data STATEMENT:  DROP ROLE regress_unprivileged_role;
2024-09-08 14:51:58.034 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot drop inherited constraint "fk_part_23_a_fkey" of relation "fk_part_23"
2024-09-08 14:51:58.034 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  alter table fkpart0.fk_part_23 drop constraint fk_part_23_a_fkey;
2024-09-08 14:51:58.034 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot drop inherited constraint "fk_part_23_a_fkey" of relation "fk_part_23_2"
2024-09-08 14:51:58.034 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  alter table fkpart0.fk_part_23_2 drop constraint fk_part_23_a_fkey;
2024-09-08 14:51:58.037 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot drop inherited constraint "fk_part_a_fkey" of relation "fk_part_4"
2024-09-08 14:51:58.037 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  alter table fkpart0.fk_part_4 drop constraint fk_part_a_fkey;
2024-09-08 14:51:58.041 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot drop inherited constraint "fk_part_a_fkey" of relation "fk_part_56"
2024-09-08 14:51:58.041 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  alter table fkpart0.fk_part_56 drop constraint fk_part_a_fkey;
2024-09-08 14:51:58.041 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot drop inherited constraint "fk_part_a_fkey" of relation "fk_part_56_5"
2024-09-08 14:51:58.041 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  alter table fkpart0.fk_part_56_5 drop constraint fk_part_a_fkey;
2024-09-08 14:51:58.043 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk_part_1_1" violates foreign key constraint "fk_part_a_fkey"
2024-09-08 14:51:58.043 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(1) is not present in table "pkey".
2024-09-08 14:51:58.043 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  insert into fkpart1.fk_part values (1);
2024-09-08 14:51:58.043 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pkey" violates foreign key constraint "fk_part_a_fkey" on table "fk_part"
2024-09-08 14:51:58.043 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(1) is still referenced from table "fk_part".
2024-09-08 14:51:58.043 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  delete from fkpart1.pkey where a = 1;
2024-09-08 14:51:58.044 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk_part_1_2" violates foreign key constraint "fk_part_a_fkey"
2024-09-08 14:51:58.044 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(2) is not present in table "pkey".
2024-09-08 14:51:58.044 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  insert into fkpart1.fk_part_1 values (2);
2024-09-08 14:51:58.045 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pkey" violates foreign key constraint "fk_part_a_fkey" on table "fk_part_1"
2024-09-08 14:51:58.045 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(1) is still referenced from table "fk_part_1".
2024-09-08 14:51:58.045 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  delete from fkpart1.pkey where a = 1;
2024-09-08 14:51:58.046 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot drop inherited constraint "fkey" of relation "fk_part_1"
2024-09-08 14:51:58.046 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  alter table fkpart2.fk_part_1 drop constraint fkey;
2024-09-08 14:51:58.047 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot drop inherited constraint "my_fkey" of relation "fk_part_1_1"
2024-09-08 14:51:58.047 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  alter table fkpart2.fk_part_1_1 drop constraint my_fkey;
2024-09-08 14:51:58.047 KST client backend[3076275] pg_regress/foreign_key ERROR:  constraint "my_fkey" of relation "fk_part_1_1" does not exist
2024-09-08 14:51:58.047 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  alter table fkpart2.fk_part_1_1 drop constraint my_fkey;
2024-09-08 14:51:58.062 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk1" violates foreign key constraint "fk_a_fkey"
2024-09-08 14:51:58.062 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(1) is not present in table "pk".
2024-09-08 14:51:58.062 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT into fk VALUES (1);
2024-09-08 14:51:58.062 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk2" violates foreign key constraint "fk_a_fkey"
2024-09-08 14:51:58.062 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(1000) is not present in table "pk".
2024-09-08 14:51:58.062 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT into fk VALUES (1000);
2024-09-08 14:51:58.062 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk2" violates foreign key constraint "fk_a_fkey"
2024-09-08 14:51:58.062 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(2000) is not present in table "pk".
2024-09-08 14:51:58.062 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT into fk VALUES (2000);
2024-09-08 14:51:58.063 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk2" violates foreign key constraint "fk_a_fkey"
2024-09-08 14:51:58.063 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(3000) is not present in table "pk".
2024-09-08 14:51:58.063 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT into fk VALUES (3000);
2024-09-08 14:51:58.063 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk3" violates foreign key constraint "fk_a_fkey"
2024-09-08 14:51:58.063 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(4000) is not present in table "pk".
2024-09-08 14:51:58.063 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT into fk VALUES (4000);
2024-09-08 14:51:58.063 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk3" violates foreign key constraint "fk_a_fkey"
2024-09-08 14:51:58.063 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(4500) is not present in table "pk".
2024-09-08 14:51:58.063 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT into fk VALUES (4500);
2024-09-08 14:51:58.064 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pk1" violates foreign key constraint "fk_a_fkey1" on table "fk"
2024-09-08 14:51:58.064 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(1) is still referenced from table "fk".
2024-09-08 14:51:58.064 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DELETE FROM pk WHERE a = 1;
2024-09-08 14:51:58.064 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pk2" violates foreign key constraint "fk_a_fkey2" on table "fk"
2024-09-08 14:51:58.064 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(1000) is still referenced from table "fk".
2024-09-08 14:51:58.064 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DELETE FROM pk WHERE a = 1000;
2024-09-08 14:51:58.064 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pk3" violates foreign key constraint "fk_a_fkey3" on table "fk"
2024-09-08 14:51:58.064 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(2000) is still referenced from table "fk".
2024-09-08 14:51:58.064 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DELETE FROM pk WHERE a = 2000;
2024-09-08 14:51:58.064 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pk4" violates foreign key constraint "fk_a_fkey4" on table "fk"
2024-09-08 14:51:58.064 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(3000) is still referenced from table "fk".
2024-09-08 14:51:58.064 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DELETE FROM pk WHERE a = 3000;
2024-09-08 14:51:58.065 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pk51" violates foreign key constraint "fk_a_fkey6" on table "fk"
2024-09-08 14:51:58.065 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(4000) is still referenced from table "fk".
2024-09-08 14:51:58.065 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DELETE FROM pk WHERE a = 4000;
2024-09-08 14:51:58.065 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pk52" violates foreign key constraint "fk_a_fkey7" on table "fk"
2024-09-08 14:51:58.065 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(4500) is still referenced from table "fk".
2024-09-08 14:51:58.065 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DELETE FROM pk WHERE a = 4500;
2024-09-08 14:51:58.065 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pk1" violates foreign key constraint "fk_a_fkey1" on table "fk"
2024-09-08 14:51:58.065 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(1) is still referenced from table "fk".
2024-09-08 14:51:58.065 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE pk SET a = 2 WHERE a = 1;
2024-09-08 14:51:58.065 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pk2" violates foreign key constraint "fk_a_fkey2" on table "fk"
2024-09-08 14:51:58.065 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(1000) is still referenced from table "fk".
2024-09-08 14:51:58.065 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE pk SET a = 1002 WHERE a = 1000;
2024-09-08 14:51:58.065 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pk3" violates foreign key constraint "fk_a_fkey3" on table "fk"
2024-09-08 14:51:58.065 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(2000) is still referenced from table "fk".
2024-09-08 14:51:58.065 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE pk SET a = 2002 WHERE a = 2000;
2024-09-08 14:51:58.065 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pk4" violates foreign key constraint "fk_a_fkey4" on table "fk"
2024-09-08 14:51:58.065 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(3000) is still referenced from table "fk".
2024-09-08 14:51:58.065 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE pk SET a = 3002 WHERE a = 3000;
2024-09-08 14:51:58.066 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pk51" violates foreign key constraint "fk_a_fkey6" on table "fk"
2024-09-08 14:51:58.066 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(4000) is still referenced from table "fk".
2024-09-08 14:51:58.066 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE pk SET a = 4002 WHERE a = 4000;
2024-09-08 14:51:58.066 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pk52" violates foreign key constraint "fk_a_fkey7" on table "fk"
2024-09-08 14:51:58.066 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(4500) is still referenced from table "fk".
2024-09-08 14:51:58.066 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE pk SET a = 4502 WHERE a = 4500;
2024-09-08 14:51:58.073 KST client backend[3076275] pg_regress/foreign_key ERROR:  removing partition "droppk_d" violates foreign key constraint "dropfk_a_fkey5"
2024-09-08 14:51:58.073 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(2000) is still referenced from table "dropfk".
2024-09-08 14:51:58.073 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE droppk DETACH PARTITION droppk_d;
2024-09-08 14:51:58.073 KST client backend[3076275] pg_regress/foreign_key ERROR:  removing partition "droppk2_d" violates foreign key constraint "dropfk_a_fkey4"
2024-09-08 14:51:58.073 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(1500) is still referenced from table "dropfk".
2024-09-08 14:51:58.073 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE droppk2 DETACH PARTITION droppk2_d;
2024-09-08 14:51:58.073 KST client backend[3076275] pg_regress/foreign_key ERROR:  removing partition "droppk1" violates foreign key constraint "dropfk_a_fkey1"
2024-09-08 14:51:58.073 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(1) is still referenced from table "dropfk".
2024-09-08 14:51:58.073 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE droppk DETACH PARTITION droppk1;
2024-09-08 14:51:58.073 KST client backend[3076275] pg_regress/foreign_key ERROR:  removing partition "droppk2" violates foreign key constraint "dropfk_a_fkey2"
2024-09-08 14:51:58.073 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(1000) is still referenced from table "dropfk".
2024-09-08 14:51:58.073 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE droppk DETACH PARTITION droppk2;
2024-09-08 14:51:58.074 KST client backend[3076275] pg_regress/foreign_key ERROR:  removing partition "droppk21" violates foreign key constraint "dropfk_a_fkey3"
2024-09-08 14:51:58.074 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(1000) is still referenced from table "dropfk".
2024-09-08 14:51:58.074 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE droppk2 DETACH PARTITION droppk21;
2024-09-08 14:51:58.074 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot drop table droppk_d because other objects depend on it
2024-09-08 14:51:58.074 KST client backend[3076275] pg_regress/foreign_key DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk_d
2024-09-08 14:51:58.074 KST client backend[3076275] pg_regress/foreign_key HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:58.074 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DROP TABLE droppk_d;
2024-09-08 14:51:58.074 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot drop table droppk2_d because other objects depend on it
2024-09-08 14:51:58.074 KST client backend[3076275] pg_regress/foreign_key DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk2_d
2024-09-08 14:51:58.074 KST client backend[3076275] pg_regress/foreign_key HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:58.074 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DROP TABLE droppk2_d;
2024-09-08 14:51:58.074 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot drop table droppk1 because other objects depend on it
2024-09-08 14:51:58.074 KST client backend[3076275] pg_regress/foreign_key DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk1
2024-09-08 14:51:58.074 KST client backend[3076275] pg_regress/foreign_key HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:58.074 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DROP TABLE droppk1;
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot drop table droppk2 because other objects depend on it
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk2
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DROP TABLE droppk2;
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot drop table droppk21 because other objects depend on it
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk21
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DROP TABLE droppk21;
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot drop table droppk_d because other objects depend on it
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk_d
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DROP TABLE droppk_d;
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot drop table droppk2_d because other objects depend on it
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk2_d
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DROP TABLE droppk2_d;
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot drop table droppk1 because other objects depend on it
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk1
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:58.075 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DROP TABLE droppk1;
2024-09-08 14:51:58.076 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot drop table droppk2 because other objects depend on it
2024-09-08 14:51:58.076 KST client backend[3076275] pg_regress/foreign_key DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk2
2024-09-08 14:51:58.076 KST client backend[3076275] pg_regress/foreign_key HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:58.076 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DROP TABLE droppk2;
2024-09-08 14:51:58.085 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk4" violates foreign key constraint "fk_a_fkey"
2024-09-08 14:51:58.085 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(50) is not present in table "pk".
2024-09-08 14:51:58.085 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE fk ATTACH PARTITION fk4 FOR VALUES IN (50);
2024-09-08 14:51:58.088 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk" violates foreign key constraint "fk_a_fkey"
2024-09-08 14:51:58.088 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(1) is not present in table "pk".
2024-09-08 14:51:58.088 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  INSERT INTO fk VALUES (1);
2024-09-08 14:51:58.088 KST client backend[3076275] pg_regress/foreign_key ERROR:  insert or update on table "fk" violates foreign key constraint "fk_a_fkey"
2024-09-08 14:51:58.088 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(1) is not present in table "pk".
2024-09-08 14:51:58.088 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  COMMIT;
2024-09-08 14:51:58.096 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot alter constraint "ref_f1_f2_fkey" on relation "ref22"
2024-09-08 14:51:58.096 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Constraint "ref_f1_f2_fkey" is derived from constraint "ref_f1_f2_fkey" of relation "ref".
2024-09-08 14:51:58.096 KST client backend[3076275] pg_regress/foreign_key HINT:  You may alter the constraint it derives from instead.
2024-09-08 14:51:58.096 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE ref22 ALTER CONSTRAINT ref_f1_f2_fkey
	  DEFERRABLE INITIALLY IMMEDIATE;
2024-09-08 14:51:58.105 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot alter constraint "ref_f1_f2_fkey1" on relation "ref"
2024-09-08 14:51:58.105 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Constraint "ref_f1_f2_fkey1" is derived from constraint "ref_f1_f2_fkey" of relation "ref".
2024-09-08 14:51:58.105 KST client backend[3076275] pg_regress/foreign_key HINT:  You may alter the constraint it derives from instead.
2024-09-08 14:51:58.105 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE ref ALTER CONSTRAINT ref_f1_f2_fkey1
	  DEFERRABLE INITIALLY DEFERRED;
2024-09-08 14:51:58.133 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pk11" violates foreign key constraint "fk_a_fkey2" on table "fk"
2024-09-08 14:51:58.133 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(20) is still referenced from table "fk".
2024-09-08 14:51:58.133 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  DELETE FROM pk WHERE a = 20;
2024-09-08 14:51:58.133 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "pk" violates foreign key constraint "fk_a_fkey" on table "fk"
2024-09-08 14:51:58.133 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (a)=(30) is still referenced from table "fk".
2024-09-08 14:51:58.133 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE pk SET a = 90 WHERE a = 30;
2024-09-08 14:51:58.139 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot ALTER TABLE "tbl2_p1" because it has pending trigger events
2024-09-08 14:51:58.139 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  ALTER TABLE fkpart8.tbl2 DROP CONSTRAINT tbl2_f1_fkey;
2024-09-08 14:51:58.149 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "tbl1" violates foreign key constraint "tbl2_f1_fkey" on table "tbl2"
2024-09-08 14:51:58.149 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (f1)=(0) is still referenced from table "tbl2".
2024-09-08 14:51:58.149 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  COMMIT;
2024-09-08 14:51:58.149 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "tbl3" violates foreign key constraint "tbl4_f1_fkey" on table "tbl4"
2024-09-08 14:51:58.149 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (f1)=(-2) is still referenced from table "tbl4".
2024-09-08 14:51:58.149 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  COMMIT;
2024-09-08 14:51:58.151 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "tbl3" violates foreign key constraint "tbl5_f1_fkey" on table "tbl5"
2024-09-08 14:51:58.151 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (f1)=(-2) is still referenced from table "tbl5".
2024-09-08 14:51:58.151 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE fkpart10.tbl3 SET f1 = f1 * -3;
2024-09-08 14:51:58.152 KST client backend[3076275] pg_regress/foreign_key ERROR:  update or delete on table "tbl3" violates foreign key constraint "tbl4_f1_fkey" on table "tbl4"
2024-09-08 14:51:58.152 KST client backend[3076275] pg_regress/foreign_key DETAIL:  Key (f1)=(-2) is still referenced from table "tbl4".
2024-09-08 14:51:58.152 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  COMMIT;
2024-09-08 14:51:58.167 KST client backend[3076275] pg_regress/foreign_key ERROR:  cannot move tuple across partitions when a non-root ancestor of the source partition is directly referenced in a foreign key
2024-09-08 14:51:58.167 KST client backend[3076275] pg_regress/foreign_key DETAIL:  A foreign key points to ancestor "pk1" but not the root ancestor "pk".
2024-09-08 14:51:58.167 KST client backend[3076275] pg_regress/foreign_key HINT:  Consider defining the foreign key on table "pk".
2024-09-08 14:51:58.167 KST client backend[3076275] pg_regress/foreign_key STATEMENT:  UPDATE fkpart11.pk SET a = a - 1;
2024-09-08 14:51:58.230 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.230 KST client backend[3076344] pg_regress/json DETAIL:  Token "'" is invalid.
2024-09-08 14:51:58.230 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: '...
2024-09-08 14:51:58.230 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT $$''$$::json;
2024-09-08 14:51:58.230 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.230 KST client backend[3076344] pg_regress/json DETAIL:  Token ""abc" is invalid.
2024-09-08 14:51:58.230 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: "abc
2024-09-08 14:51:58.230 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '"abc'::json;
2024-09-08 14:51:58.230 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.230 KST client backend[3076344] pg_regress/json DETAIL:  Character with value 0x0a must be escaped.
2024-09-08 14:51:58.230 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: "abc
2024-09-08 14:51:58.230 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '"abc
	def"'::json;
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json DETAIL:  Escape sequence "\v" is invalid.
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: "\v...
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '"\v"'::json;
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json DETAIL:  Token "01" is invalid.
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: 01
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '01'::json;
2024-09-08 14:51:58.231 KST client backend[3076345] pg_regress/jsonpath ERROR:  invalid input syntax for type jsonpath: "" at character 8
2024-09-08 14:51:58.231 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select ''::jsonpath;
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json DETAIL:  Token "1f2" is invalid.
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: 1f2
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '1f2'::json;
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json DETAIL:  Token "0.x1" is invalid.
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: 0.x1
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '0.x1'::json;
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json DETAIL:  Token "1.3ex100" is invalid.
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: 1.3ex100
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '1.3ex100'::json;
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json DETAIL:  Expected JSON value, but found "]".
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: [1,2,]
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '[1,2,]'::json;
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json DETAIL:  The input string ended unexpectedly.
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: [1,2
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '[1,2'::json;
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json DETAIL:  The input string ended unexpectedly.
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: [1,[2]
2024-09-08 14:51:58.231 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '[1,[2]'::json;
2024-09-08 14:51:58.231 KST client backend[3076346] pg_regress/json_encoding ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.231 KST client backend[3076346] pg_regress/json_encoding DETAIL:  "\u" must be followed by four hexadecimal digits.
2024-09-08 14:51:58.231 KST client backend[3076346] pg_regress/json_encoding CONTEXT:  JSON data, line 1: "\u"
2024-09-08 14:51:58.231 KST client backend[3076346] pg_regress/json_encoding STATEMENT:  SELECT '"\u"'::json;
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json DETAIL:  Expected ":", but found "}".
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: {"abc"}
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '{"abc"}'::json;
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding DETAIL:  "\u" must be followed by four hexadecimal digits.
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding CONTEXT:  JSON data, line 1: "\u00"
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding STATEMENT:  SELECT '"\u00"'::json;
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding DETAIL:  "\u" must be followed by four hexadecimal digits.
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding CONTEXT:  JSON data, line 1: "\u000g...
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding STATEMENT:  SELECT '"\u000g"'::json;
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json DETAIL:  Expected string or "}", but found "1".
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: {1...
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '{1:"abc"}'::json;
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json DETAIL:  Expected ":", but found ",".
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: {"abc",...
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '{"abc",1}'::json;
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json DETAIL:  Token "=" is invalid.
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: {"abc"=...
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '{"abc"=1}'::json;
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json DETAIL:  Expected JSON value, but found ":".
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: {"abc"::...
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '{"abc"::1}'::json;
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding ERROR:  invalid Unicode escape sequence at or near "\u" of jsonpath input at character 8
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding STATEMENT:  SELECT '"\u"'::jsonpath;
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json DETAIL:  Expected "," or "}", but found ":".
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: {"abc":1:...
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '{"abc":1:2}'::json;
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding ERROR:  invalid input syntax for type json
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding DETAIL:  Unicode high surrogate must not follow a high surrogate.
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding CONTEXT:  JSON data, line 1: { "a":  "\ud83d\ud83d...
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding STATEMENT:  select json '{ "a":  "\ud83d\ud83d" }' -> 'a';
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json DETAIL:  Expected string, but found "3".
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: {"abc":1,3...
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '{"abc":1,3}'::json;
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding ERROR:  invalid Unicode escape sequence at or near "\u00" of jsonpath input at character 8
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding STATEMENT:  SELECT '"\u00"'::jsonpath;
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding ERROR:  invalid input syntax for type json
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding DETAIL:  Unicode low surrogate must follow a high surrogate.
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding CONTEXT:  JSON data, line 1: { "a":  "\ude04...
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding STATEMENT:  select json '{ "a":  "\ude04\ud83d" }' -> 'a';
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding ERROR:  invalid Unicode escape sequence at or near "\u000" of jsonpath input at character 8
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding STATEMENT:  SELECT '"\u000g"'::jsonpath;
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding ERROR:  unsupported Unicode escape sequence at character 8
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding DETAIL:  \u0000 cannot be converted to text.
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding STATEMENT:  SELECT '"\u0000"'::jsonpath;
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding ERROR:  invalid input syntax for type json
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding DETAIL:  Unicode low surrogate must follow a high surrogate.
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding CONTEXT:  JSON data, line 1: { "a":  "\ud83dX...
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding STATEMENT:  select json '{ "a":  "\ud83dX" }' -> 'a';
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding ERROR:  invalid input syntax for type json
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding DETAIL:  Unicode low surrogate must follow a high surrogate.
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding CONTEXT:  JSON data, line 1: { "a":  "\ude04...
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding STATEMENT:  select json '{ "a":  "\ude04X" }' -> 'a';
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json ERROR:  stack depth limit exceeded
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json HINT:  Increase the configuration parameter "max_stack_depth" (currently 100kB), after ensuring the platform's stack depth limit is adequate.
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT repeat('[', 10000)::json;
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding ERROR:  invalid input syntax for type jsonpath at character 8
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding DETAIL:  Unicode high surrogate must not follow a high surrogate.
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding STATEMENT:  select '"\ud83d\ud83d"'::jsonpath;
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding ERROR:  invalid input syntax for type jsonpath at character 8
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding DETAIL:  Unicode low surrogate must follow a high surrogate.
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding STATEMENT:  select '"\ude04\ud83d"'::jsonpath;
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding ERROR:  invalid input syntax for type jsonpath at character 8
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding DETAIL:  Unicode low surrogate must follow a high surrogate.
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding STATEMENT:  select '"\ud83dX"'::jsonpath;
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding ERROR:  invalid input syntax for type jsonpath at character 8
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding DETAIL:  Unicode low surrogate must follow a high surrogate.
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding STATEMENT:  select '"\ude04X"'::jsonpath;
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json ERROR:  stack depth limit exceeded
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json HINT:  Increase the configuration parameter "max_stack_depth" (currently 100kB), after ensuring the platform's stack depth limit is adequate.
2024-09-08 14:51:58.232 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT repeat('{"a":', 10000)::json;
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding ERROR:  unsupported Unicode escape sequence at character 8
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding DETAIL:  \u0000 cannot be converted to text.
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding STATEMENT:  select '"null \u0000 escape"'::jsonpath as not_unescaped;
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding ERROR:  unsupported Unicode escape sequence
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding DETAIL:  \u0000 cannot be converted to text.
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding CONTEXT:  JSON data, line 1: { "a":  "null \u0000...
2024-09-08 14:51:58.232 KST client backend[3076346] pg_regress/json_encoding STATEMENT:  select json '{ "a":  "null \u0000 escape" }' ->> 'a' as fails;
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding ERROR:  invalid Unicode escape sequence at or near "\u" of jsonpath input at character 8
2024-09-08 14:51:58.232 KST client backend[3076347] pg_regress/jsonpath_encoding STATEMENT:  SELECT '$."\u"'::jsonpath;
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding ERROR:  invalid Unicode escape sequence at or near "\u00" of jsonpath input at character 8
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding STATEMENT:  SELECT '$."\u00"'::jsonpath;
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json DETAIL:  Expected end of input, but found "false".
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: true false
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT 'true false'::json;
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding ERROR:  invalid Unicode escape sequence at or near "\u000" of jsonpath input at character 8
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding STATEMENT:  SELECT '$."\u000g"'::jsonpath;
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json DETAIL:  Expected end of input, but found ",".
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: true,...
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT 'true, false'::json;
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding DETAIL:  "\u" must be followed by four hexadecimal digits.
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding CONTEXT:  JSON data, line 1: "\u"
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding STATEMENT:  SELECT '"\u"'::jsonb;
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding ERROR:  unsupported Unicode escape sequence at character 8
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding DETAIL:  \u0000 cannot be converted to text.
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding STATEMENT:  SELECT '$."\u0000"'::jsonpath;
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json DETAIL:  Token "truf" is invalid.
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: truf
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT 'truf'::json;
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding DETAIL:  "\u" must be followed by four hexadecimal digits.
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding CONTEXT:  JSON data, line 1: "\u00"
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding STATEMENT:  SELECT '"\u00"'::jsonb;
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json DETAIL:  Token "trues" is invalid.
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: trues
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT 'trues'::json;
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding DETAIL:  "\u" must be followed by four hexadecimal digits.
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding CONTEXT:  JSON data, line 1: "\u000g...
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding STATEMENT:  SELECT '"\u000g"'::jsonb;
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json DETAIL:  The input string ended unexpectedly.
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1: 
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT ''::json;
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json DETAIL:  The input string ended unexpectedly.
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 1:     
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '    '::json;
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding ERROR:  invalid input syntax for type jsonpath at character 8
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding DETAIL:  Unicode high surrogate must not follow a high surrogate.
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding STATEMENT:  select '$."\ud83d\ud83d"'::jsonpath;
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding ERROR:  invalid input syntax for type jsonpath at character 8
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding DETAIL:  Unicode low surrogate must follow a high surrogate.
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding STATEMENT:  select '$."\ude04\ud83d"'::jsonpath;
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding ERROR:  unsupported Unicode escape sequence at character 8
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding DETAIL:  \u0000 cannot be converted to text.
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding CONTEXT:  JSON data, line 1: "\u0000...
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding STATEMENT:  SELECT '"\u0000"'::jsonb;
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding ERROR:  invalid input syntax for type jsonpath at character 8
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding DETAIL:  Unicode low surrogate must follow a high surrogate.
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding STATEMENT:  select '$."\ud83dX"'::jsonpath;
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json DETAIL:  Expected JSON value, but found ",".
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 3: 		"two":,...
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '{
			"one": 1,
			"two":,"two",  -- ERROR extraneous comma before field "two"
			"three":
			true}'::json;
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding ERROR:  invalid input syntax for type jsonpath at character 8
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding DETAIL:  Unicode low surrogate must follow a high surrogate.
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding STATEMENT:  select '$."\ude04X"'::jsonpath;
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json DETAIL:  Expected JSON value, but found "}".
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json CONTEXT:  JSON data, line 4: ...yveryveryveryveryveryveryveryverylongfieldname":}
2024-09-08 14:51:58.233 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT '{
			"one": 1,
			"two":"two",
			"averyveryveryveryveryveryveryveryveryverylongfieldname":}'::json;
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding ERROR:  unsupported Unicode escape sequence at character 8
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding DETAIL:  \u0000 cannot be converted to text.
2024-09-08 14:51:58.233 KST client backend[3076347] pg_regress/jsonpath_encoding STATEMENT:  select '$."null \u0000 escape"'::jsonpath as not_unescaped;
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding ERROR:  invalid input syntax for type json at character 14
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding DETAIL:  Unicode high surrogate must not follow a high surrogate.
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding CONTEXT:  JSON data, line 1: { "a":  "\ud83d\ud83d...
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding STATEMENT:  SELECT jsonb '{ "a":  "\ud83d\ud83d" }' -> 'a';
2024-09-08 14:51:58.233 KST client backend[3076349] pg_regress/sqljson ERROR:  cannot set JSON encoding for non-bytea output types at character 35
2024-09-08 14:51:58.233 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECT(RETURNING text FORMAT JSON ENCODING UTF8);
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding ERROR:  invalid input syntax for type json at character 14
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding DETAIL:  Unicode low surrogate must follow a high surrogate.
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding CONTEXT:  JSON data, line 1: { "a":  "\ude04...
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding STATEMENT:  SELECT jsonb '{ "a":  "\ude04\ud83d" }' -> 'a';
2024-09-08 14:51:58.233 KST client backend[3076349] pg_regress/sqljson ERROR:  unrecognized JSON encoding: invalid_encoding
2024-09-08 14:51:58.233 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECT(RETURNING text FORMAT JSON ENCODING INVALID_ENCODING);
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding ERROR:  invalid input syntax for type json at character 14
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding DETAIL:  Unicode low surrogate must follow a high surrogate.
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding CONTEXT:  JSON data, line 1: { "a":  "\ud83dX...
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding STATEMENT:  SELECT jsonb '{ "a":  "\ud83dX" }' -> 'a';
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding ERROR:  invalid input syntax for type json at character 14
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding DETAIL:  Unicode low surrogate must follow a high surrogate.
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding CONTEXT:  JSON data, line 1: { "a":  "\ude04...
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding STATEMENT:  SELECT jsonb '{ "a":  "\ude04X" }' -> 'a';
2024-09-08 14:51:58.233 KST client backend[3076345] pg_regress/jsonpath ERROR:  LAST is allowed only in array subscripts at character 8
2024-09-08 14:51:58.233 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select 'last'::jsonpath;
2024-09-08 14:51:58.233 KST client backend[3076349] pg_regress/sqljson ERROR:  unsupported JSON encoding at character 36
2024-09-08 14:51:58.233 KST client backend[3076349] pg_regress/sqljson HINT:  Only UTF8 JSON encoding is supported.
2024-09-08 14:51:58.233 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECT(RETURNING bytea FORMAT JSON ENCODING UTF16);
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding ERROR:  unsupported Unicode escape sequence at character 14
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding DETAIL:  \u0000 cannot be converted to text.
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding CONTEXT:  JSON data, line 1: { "a":  "null \u0000...
2024-09-08 14:51:58.233 KST client backend[3076346] pg_regress/json_encoding STATEMENT:  SELECT jsonb '{ "a":  "null \u0000 escape" }' as fails;
2024-09-08 14:51:58.233 KST client backend[3076349] pg_regress/sqljson ERROR:  unsupported JSON encoding at character 36
2024-09-08 14:51:58.233 KST client backend[3076349] pg_regress/sqljson HINT:  Only UTF8 JSON encoding is supported.
2024-09-08 14:51:58.233 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECT(RETURNING bytea FORMAT JSON ENCODING UTF32);
2024-09-08 14:51:58.233 KST client backend[3076345] pg_regress/jsonpath ERROR:  LAST is allowed only in array subscripts at character 8
2024-09-08 14:51:58.233 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '$ ? (last > 0)'::jsonpath;
2024-09-08 14:51:58.233 KST client backend[3076349] pg_regress/sqljson ERROR:  cannot use non-string types with explicit FORMAT JSON clause at character 37
2024-09-08 14:51:58.233 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECT('foo': NULL::int FORMAT JSON);
2024-09-08 14:51:58.233 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath array subscript is out of bounds
2024-09-08 14:51:58.233 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('[1]', 'strict $[1]');
2024-09-08 14:51:58.233 KST client backend[3076349] pg_regress/sqljson ERROR:  JSON ENCODING clause is only allowed for bytea input type at character 37
2024-09-08 14:51:58.233 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECT('foo': NULL::int FORMAT JSON ENCODING UTF8);
2024-09-08 14:51:58.234 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "1.t" of jsonpath input at character 8
2024-09-08 14:51:58.234 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '1.type()'::jsonpath;
2024-09-08 14:51:58.234 KST client backend[3076346] pg_regress/json_encoding ERROR:  unsupported Unicode escape sequence at character 14
2024-09-08 14:51:58.234 KST client backend[3076346] pg_regress/json_encoding DETAIL:  \u0000 cannot be converted to text.
2024-09-08 14:51:58.234 KST client backend[3076346] pg_regress/json_encoding CONTEXT:  JSON data, line 1: { "a":  "null \u0000...
2024-09-08 14:51:58.234 KST client backend[3076346] pg_regress/json_encoding STATEMENT:  SELECT jsonb '{ "a":  "null \u0000 escape" }' ->> 'a' as fails;
2024-09-08 14:51:58.234 KST client backend[3076349] pg_regress/sqljson ERROR:  JSON ENCODING clause is only allowed for bytea input type at character 38
2024-09-08 14:51:58.234 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECT('foo': NULL::json FORMAT JSON ENCODING UTF8);
2024-09-08 14:51:58.234 KST client backend[3076349] pg_regress/sqljson ERROR:  JSON ENCODING clause is only allowed for bytea input type at character 39
2024-09-08 14:51:58.234 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECT('foo': NULL::jsonb FORMAT JSON ENCODING UTF8);
2024-09-08 14:51:58.234 KST client backend[3076349] pg_regress/sqljson ERROR:  null value not allowed for object key
2024-09-08 14:51:58.234 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECT(NULL: 1);
2024-09-08 14:51:58.234 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath array subscript is out of integer range
2024-09-08 14:51:58.234 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('[1]', 'lax $[10000000000000000]');
2024-09-08 14:51:58.234 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath array subscript is out of integer range
2024-09-08 14:51:58.234 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('[1]', 'strict $[10000000000000000]');
2024-09-08 14:51:58.234 KST client backend[3076345] pg_regress/jsonpath ERROR:  invalid regular expression: parentheses () not balanced at character 8
2024-09-08 14:51:58.234 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '$ ? (@ like_regex "(invalid pattern")'::jsonpath;
2024-09-08 14:51:58.234 KST client backend[3076345] pg_regress/jsonpath ERROR:  XQuery "x" flag (expanded regular expressions) is not implemented at character 8
2024-09-08 14:51:58.234 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '$ ? (@ like_regex "pattern" flag "xsms")'::jsonpath;
2024-09-08 14:51:58.234 KST client backend[3076349] pg_regress/sqljson ERROR:  key value must be scalar, not array, composite, or json
2024-09-08 14:51:58.234 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECT(json '[1]': 123);
2024-09-08 14:51:58.235 KST client backend[3076349] pg_regress/sqljson ERROR:  key value must be scalar, not array, composite, or json
2024-09-08 14:51:58.235 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECT(ARRAY[1,2,3]: 'aaa');
2024-09-08 14:51:58.235 KST client backend[3076345] pg_regress/jsonpath ERROR:  invalid input syntax for type jsonpath at character 8
2024-09-08 14:51:58.235 KST client backend[3076345] pg_regress/jsonpath DETAIL:  Unrecognized flag character "a" in LIKE_REGEX predicate.
2024-09-08 14:51:58.235 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '$ ? (@ like_regex "pattern" flag "a")'::jsonpath;
2024-09-08 14:51:58.235 KST client backend[3076345] pg_regress/jsonpath ERROR:  @ is not allowed in root expressions at character 8
2024-09-08 14:51:58.235 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '@ + 1'::jsonpath;
2024-09-08 14:51:58.235 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath member accessor can only be applied to an object
2024-09-08 14:51:58.235 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_exists('[{"a": 1}, {"a": 2}, 3]', 'strict $[*].a', silent => false);
2024-09-08 14:51:58.235 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath member accessor can only be applied to an object
2024-09-08 14:51:58.235 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('1', 'strict $.a');
2024-09-08 14:51:58.235 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath wildcard member accessor can only be applied to an object
2024-09-08 14:51:58.235 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('1', 'strict $.*');
2024-09-08 14:51:58.235 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath member accessor can only be applied to an object
2024-09-08 14:51:58.235 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('[]', 'strict $.a');
2024-09-08 14:51:58.235 KST client backend[3076349] pg_regress/sqljson ERROR:  duplicate JSON object key value: "1"
2024-09-08 14:51:58.235 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECT(1: 1, '1': NULL WITH UNIQUE);
2024-09-08 14:51:58.235 KST client backend[3076349] pg_regress/sqljson ERROR:  duplicate JSON object key value: "1"
2024-09-08 14:51:58.235 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECT(1: 1, '1': NULL ABSENT ON NULL WITH UNIQUE);
2024-09-08 14:51:58.235 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  JSON object does not contain key "a"
2024-09-08 14:51:58.235 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('{}', 'strict $.a');
2024-09-08 14:51:58.235 KST client backend[3076349] pg_regress/sqljson ERROR:  duplicate JSON object key value
2024-09-08 14:51:58.235 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECT(1: 1, '1': NULL NULL ON NULL WITH UNIQUE RETURNING jsonb);
2024-09-08 14:51:58.235 KST client backend[3076349] pg_regress/sqljson ERROR:  duplicate JSON object key value
2024-09-08 14:51:58.235 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECT(1: 1, '1': NULL ABSENT ON NULL WITH UNIQUE RETURNING jsonb);
2024-09-08 14:51:58.235 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath array accessor can only be applied to an array
2024-09-08 14:51:58.235 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('1', 'strict $[1]');
2024-09-08 14:51:58.235 KST client backend[3076349] pg_regress/sqljson ERROR:  duplicate JSON object key value: "1"
2024-09-08 14:51:58.235 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECT(1: 1, '2': NULL, '1': 1 NULL ON NULL WITH UNIQUE);
2024-09-08 14:51:58.236 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath wildcard array accessor can only be applied to an array
2024-09-08 14:51:58.236 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('1', 'strict $[*]');
2024-09-08 14:51:58.236 KST client backend[3076349] pg_regress/sqljson ERROR:  duplicate JSON object key value: "1"
2024-09-08 14:51:58.236 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECT(1: 1, '2': NULL, '1': 1 ABSENT ON NULL WITH UNIQUE);
2024-09-08 14:51:58.236 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath array subscript is out of bounds
2024-09-08 14:51:58.236 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('[]', 'strict $[1]');
2024-09-08 14:51:58.236 KST client backend[3076349] pg_regress/sqljson ERROR:  duplicate JSON object key value
2024-09-08 14:51:58.236 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECT(1: 1, '2': NULL, '1': 1 ABSENT ON NULL WITH UNIQUE RETURNING jsonb);
2024-09-08 14:51:58.236 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath array subscript is not a single numeric value
2024-09-08 14:51:58.236 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('[]', 'strict $["a"]');
2024-09-08 14:51:58.236 KST client backend[3076349] pg_regress/sqljson ERROR:  cannot set JSON encoding for non-bytea output types at character 34
2024-09-08 14:51:58.236 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_ARRAY(RETURNING text FORMAT JSON ENCODING UTF8);
2024-09-08 14:51:58.236 KST client backend[3076349] pg_regress/sqljson ERROR:  unrecognized JSON encoding: invalid_encoding
2024-09-08 14:51:58.236 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_ARRAY(RETURNING text FORMAT JSON ENCODING INVALID_ENCODING);
2024-09-08 14:51:58.236 KST client backend[3076349] pg_regress/sqljson ERROR:  unsupported JSON encoding at character 35
2024-09-08 14:51:58.236 KST client backend[3076349] pg_regress/sqljson HINT:  Only UTF8 JSON encoding is supported.
2024-09-08 14:51:58.236 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_ARRAY(RETURNING bytea FORMAT JSON ENCODING UTF16);
2024-09-08 14:51:58.236 KST client backend[3076349] pg_regress/sqljson ERROR:  unsupported JSON encoding at character 35
2024-09-08 14:51:58.236 KST client backend[3076349] pg_regress/sqljson HINT:  Only UTF8 JSON encoding is supported.
2024-09-08 14:51:58.236 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_ARRAY(RETURNING bytea FORMAT JSON ENCODING UTF32);
2024-09-08 14:51:58.237 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  division by zero
2024-09-08 14:51:58.237 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('[12, {"a": 13}, {"b": 14}]', 'lax $[0 to 10 / 0].a');
2024-09-08 14:51:58.237 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "00" of jsonpath input at character 8
2024-09-08 14:51:58.237 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '00'::jsonpath;
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb DETAIL:  Token "'" is invalid.
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: '...
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT $$''$$::jsonb;
2024-09-08 14:51:58.237 KST client backend[3076345] pg_regress/jsonpath ERROR:  syntax error at end of jsonpath input at character 8
2024-09-08 14:51:58.237 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '0755'::jsonpath;
2024-09-08 14:51:58.237 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath member accessor can only be applied to an object
2024-09-08 14:51:58.237 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('[1,2,3]', 'strict $[*].a');
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb DETAIL:  Token ""abc" is invalid.
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: "abc
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '"abc'::jsonb;
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb DETAIL:  Character with value 0x0a must be escaped.
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: "abc
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '"abc
	def"'::jsonb;
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb DETAIL:  Escape sequence "\v" is invalid.
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: "\v...
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '"\v"'::jsonb;
2024-09-08 14:51:58.237 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath array subscript is out of bounds
2024-09-08 14:51:58.237 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('[]', 'strict $[last]');
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb DETAIL:  Token "01" is invalid.
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: 01
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '01'::jsonb;
2024-09-08 14:51:58.237 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath array subscript is not a single numeric value
2024-09-08 14:51:58.237 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('[1,2,3]', '$[last ? (@.type() == "string")]');
2024-09-08 14:51:58.237 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "1a" of jsonpath input at character 8
2024-09-08 14:51:58.237 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '1a'::jsonpath;
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb DETAIL:  Token "1f2" is invalid.
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: 1f2
2024-09-08 14:51:58.237 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '1f2'::jsonb;
2024-09-08 14:51:58.238 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "1e" of jsonpath input at character 8
2024-09-08 14:51:58.238 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '1e'::jsonpath;
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb DETAIL:  Token "0.x1" is invalid.
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: 0.x1
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '0.x1'::jsonb;
2024-09-08 14:51:58.238 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "1.e" of jsonpath input at character 8
2024-09-08 14:51:58.238 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '1.e'::jsonpath;
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb DETAIL:  Token "1.3ex100" is invalid.
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: 1.3ex100
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '1.3ex100'::jsonb;
2024-09-08 14:51:58.238 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "1.2a" of jsonpath input at character 8
2024-09-08 14:51:58.238 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '1.2a'::jsonpath;
2024-09-08 14:51:58.238 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "1.2e" of jsonpath input at character 8
2024-09-08 14:51:58.238 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '1.2e'::jsonpath;
2024-09-08 14:51:58.238 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  could not find jsonpath variable "value"
2024-09-08 14:51:58.238 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select * from jsonb_path_query('{"a": 10}', '$ ? (@.a < $value)');
2024-09-08 14:51:58.238 KST client backend[3076349] pg_regress/sqljson ERROR:  subquery must return only one column at character 8
2024-09-08 14:51:58.238 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_ARRAY(SELECT FROM (VALUES (1)) foo(i));
2024-09-08 14:51:58.238 KST client backend[3076349] pg_regress/sqljson ERROR:  subquery must return only one column at character 8
2024-09-08 14:51:58.238 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_ARRAY(SELECT i, i FROM (VALUES (1)) foo(i));
2024-09-08 14:51:58.238 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  "vars" argument is not an object
2024-09-08 14:51:58.238 KST client backend[3076348] pg_regress/jsonb_jsonpath DETAIL:  Jsonpath parameters should be encoded as key-value pairs of "vars" object.
2024-09-08 14:51:58.238 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select * from jsonb_path_query('{"a": 10}', '$ ? (@.a < $value)', '1');
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb DETAIL:  Expected JSON value, but found "]".
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: [1,2,]
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '[1,2,]'::jsonb;
2024-09-08 14:51:58.238 KST client backend[3076349] pg_regress/sqljson ERROR:  subquery must return only one column at character 8
2024-09-08 14:51:58.238 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_ARRAY(SELECT * FROM (VALUES (1, 2)) foo(i, j));
2024-09-08 14:51:58.238 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  "vars" argument is not an object
2024-09-08 14:51:58.238 KST client backend[3076348] pg_regress/jsonb_jsonpath DETAIL:  Jsonpath parameters should be encoded as key-value pairs of "vars" object.
2024-09-08 14:51:58.238 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select * from jsonb_path_query('{"a": 10}', '$ ? (@.a < $value)', '[{"value" : 13}]');
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb DETAIL:  The input string ended unexpectedly.
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: [1,2
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '[1,2'::jsonb;
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb DETAIL:  The input string ended unexpectedly.
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: [1,[2]
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '[1,[2]'::jsonb;
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb DETAIL:  Expected ":", but found "}".
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: {"abc"}
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '{"abc"}'::jsonb;
2024-09-08 14:51:58.238 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "1.2e3a" of jsonpath input at character 8
2024-09-08 14:51:58.238 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '1.2e3a'::jsonpath;
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb DETAIL:  Expected string or "}", but found "1".
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: {1...
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '{1:"abc"}'::jsonb;
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb DETAIL:  Expected ":", but found ",".
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: {"abc",...
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '{"abc",1}'::jsonb;
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb DETAIL:  Token "=" is invalid.
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: {"abc"=...
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '{"abc"=1}'::jsonb;
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb DETAIL:  Expected JSON value, but found ":".
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: {"abc"::...
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '{"abc"::1}'::jsonb;
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb DETAIL:  Expected "," or "}", but found ":".
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: {"abc":1:...
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '{"abc":1:2}'::jsonb;
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb DETAIL:  Expected string, but found "3".
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: {"abc":1,3...
2024-09-08 14:51:58.238 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '{"abc":1,3}'::jsonb;
2024-09-08 14:51:58.238 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "0b" of jsonpath input at character 8
2024-09-08 14:51:58.238 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '0b'::jsonpath;
2024-09-08 14:51:58.238 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "1b" of jsonpath input at character 8
2024-09-08 14:51:58.238 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '1b'::jsonpath;
2024-09-08 14:51:58.238 KST client backend[3076345] pg_regress/jsonpath ERROR:  syntax error at end of jsonpath input at character 8
2024-09-08 14:51:58.238 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '0b0x'::jsonpath;
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "0o" of jsonpath input at character 8
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '0o'::jsonpath;
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "1o" of jsonpath input at character 8
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '1o'::jsonpath;
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath ERROR:  syntax error at end of jsonpath input at character 8
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '0o0x'::jsonpath;
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb ERROR:  stack depth limit exceeded
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb HINT:  Increase the configuration parameter "max_stack_depth" (currently 100kB), after ensuring the platform's stack depth limit is adequate.
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT repeat('[', 10000)::jsonb;
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "0x" of jsonpath input at character 8
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '0x'::jsonpath;
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "1x" of jsonpath input at character 8
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '1x'::jsonpath;
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath ERROR:  syntax error at end of jsonpath input at character 8
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '0x0y'::jsonpath;
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb ERROR:  stack depth limit exceeded
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb HINT:  Increase the configuration parameter "max_stack_depth" (currently 100kB), after ensuring the platform's stack depth limit is adequate.
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT repeat('{"a":', 10000)::jsonb;
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath ERROR:  syntax error at end of jsonpath input at character 8
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '_100'::jsonpath;
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "100_" of jsonpath input at character 8
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '100_'::jsonpath;
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath ERROR:  syntax error at end of jsonpath input at character 8
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '100__000'::jsonpath;
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath ERROR:  syntax error at end of jsonpath input at character 8
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '_1_000.5'::jsonpath;
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "1_000_" of jsonpath input at character 8
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '1_000_.5'::jsonpath;
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb DETAIL:  Expected end of input, but found "false".
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: true false
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT 'true false'::jsonb;
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "1_000._" of jsonpath input at character 8
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '1_000._5'::jsonpath;
2024-09-08 14:51:58.239 KST client backend[3076349] pg_regress/sqljson ERROR:  null value not allowed for object key
2024-09-08 14:51:58.239 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECTAGG(NULL: 1);
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb DETAIL:  Expected end of input, but found ",".
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: true,...
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT 'true, false'::jsonb;
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "1_000.5_" of jsonpath input at character 8
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '1_000.5_'::jsonpath;
2024-09-08 14:51:58.239 KST client backend[3076349] pg_regress/sqljson ERROR:  field name must not be null
2024-09-08 14:51:58.239 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECTAGG(NULL: 1 RETURNING jsonb);
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath ERROR:  trailing junk after numeric literal at or near "1_000.5e" of jsonpath input at character 8
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '1_000.5e_1'::jsonpath;
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb DETAIL:  Token "truf" is invalid.
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: truf
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT 'truf'::jsonb;
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath ERROR:  syntax error at end of jsonpath input at character 8
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '0b_10_0101'::jsonpath;
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb DETAIL:  Token "trues" is invalid.
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: trues
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT 'trues'::jsonb;
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath ERROR:  syntax error at end of jsonpath input at character 8
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '0o_273'::jsonpath;
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb DETAIL:  The input string ended unexpectedly.
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1: 
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT ''::jsonb;
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath ERROR:  syntax error at end of jsonpath input at character 8
2024-09-08 14:51:58.239 KST client backend[3076345] pg_regress/jsonpath STATEMENT:  select '0x_42F'::jsonpath;
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb DETAIL:  The input string ended unexpectedly.
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 1:     
2024-09-08 14:51:58.239 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '    '::jsonb;
2024-09-08 14:51:58.240 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.240 KST client backend[3076343] pg_regress/jsonb DETAIL:  Expected JSON value, but found ",".
2024-09-08 14:51:58.240 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 3: 		"two":,...
2024-09-08 14:51:58.240 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '{
			"one": 1,
			"two":,"two",  -- ERROR extraneous comma before field "two"
			"three":
			true}'::jsonb;
2024-09-08 14:51:58.240 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type json at character 8
2024-09-08 14:51:58.240 KST client backend[3076343] pg_regress/jsonb DETAIL:  Expected JSON value, but found "}".
2024-09-08 14:51:58.240 KST client backend[3076343] pg_regress/jsonb CONTEXT:  JSON data, line 4: ...yveryveryveryveryveryveryveryverylongfieldname":}
2024-09-08 14:51:58.240 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT '{
			"one": 1,
			"two":"two",
			"averyveryveryveryveryveryveryveryveryverylongfieldname":}'::jsonb;
2024-09-08 14:51:58.240 KST client backend[3076349] pg_regress/sqljson ERROR:  duplicate JSON object key value: "1"
2024-09-08 14:51:58.240 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECTAGG(k: v WITH UNIQUE KEYS)
	FROM (VALUES (1, 1), (1, NULL), (2, 2)) foo(k, v);
2024-09-08 14:51:58.240 KST client backend[3076349] pg_regress/sqljson ERROR:  duplicate JSON object key value: "1"
2024-09-08 14:51:58.240 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECTAGG(k: v ABSENT ON NULL WITH UNIQUE KEYS)
	FROM (VALUES (1, 1), (1, NULL), (2, 2)) foo(k, v);
2024-09-08 14:51:58.240 KST client backend[3076349] pg_regress/sqljson ERROR:  duplicate JSON object key value
2024-09-08 14:51:58.240 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECTAGG(k: v WITH UNIQUE KEYS RETURNING jsonb)
	FROM (VALUES (1, 1), (1, NULL), (2, 2)) foo(k, v);
2024-09-08 14:51:58.240 KST client backend[3076349] pg_regress/sqljson ERROR:  duplicate JSON object key value
2024-09-08 14:51:58.240 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT JSON_OBJECTAGG(k: v ABSENT ON NULL WITH UNIQUE KEYS RETURNING jsonb)
	FROM (VALUES (1, 1), (1, NULL), (2, 2)) foo(k, v);
2024-09-08 14:51:58.243 KST client backend[3076344] pg_regress/json ERROR:  cannot call json_object_keys on a scalar
2024-09-08 14:51:58.243 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_object_keys(test_json)
	FROM test_json
	WHERE json_type = 'scalar';
2024-09-08 14:51:58.243 KST client backend[3076344] pg_regress/json ERROR:  cannot call json_object_keys on an array
2024-09-08 14:51:58.243 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_object_keys(test_json)
	FROM test_json
	WHERE json_type = 'array';
2024-09-08 14:51:58.243 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  division by zero
2024-09-08 14:51:58.243 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('0', '1 / $');
2024-09-08 14:51:58.243 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  division by zero
2024-09-08 14:51:58.243 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('0', '1 / $ + 2');
2024-09-08 14:51:58.243 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  division by zero
2024-09-08 14:51:58.243 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('0', '-(3 + 1 % $)');
2024-09-08 14:51:58.243 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  right operand of jsonpath operator + is not a single numeric value
2024-09-08 14:51:58.243 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('1', '$ + "2"');
2024-09-08 14:51:58.243 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  right operand of jsonpath operator * is not a single numeric value
2024-09-08 14:51:58.243 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('[1, 2]', '3 * $');
2024-09-08 14:51:58.243 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  operand of unary jsonpath operator - is not a numeric value
2024-09-08 14:51:58.243 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"a"', '-$');
2024-09-08 14:51:58.243 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  operand of unary jsonpath operator + is not a numeric value
2024-09-08 14:51:58.243 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('[1,"2",3]', '+$');
2024-09-08 14:51:58.244 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  left operand of jsonpath operator * is not a single numeric value
2024-09-08 14:51:58.244 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('{"a": [1, 2]}', 'lax $.a * 3');
2024-09-08 14:51:58.245 KST client backend[3076344] pg_regress/json ERROR:  cannot get array length of a non-array
2024-09-08 14:51:58.245 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_array_length('{"f1":1,"f2":[5,6]}');
2024-09-08 14:51:58.245 KST client backend[3076344] pg_regress/json ERROR:  cannot get array length of a scalar
2024-09-08 14:51:58.245 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_array_length('4');
2024-09-08 14:51:58.246 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath item method .size() can only be applied to an array
2024-09-08 14:51:58.246 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('[1,null,true,"11",[],[1],[1,2,3],{},{"a":1,"b":2}]', 'strict $[*].size()');
2024-09-08 14:51:58.246 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath item method .keyvalue() can only be applied to an object
2024-09-08 14:51:58.246 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('[{},1]', '$[*].keyvalue()');
2024-09-08 14:51:58.247 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath item method .keyvalue() can only be applied to an object
2024-09-08 14:51:58.247 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('[{"a": 1, "b": [1, 2]}, {"c": {"a": "bbb"}}]', 'strict $.keyvalue()');
2024-09-08 14:51:58.247 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath item method .keyvalue() can only be applied to an object
2024-09-08 14:51:58.247 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('[{"a": 1, "b": [1, 2]}, {"c": {"a": "bbb"}}]', 'strict $.keyvalue().a');
2024-09-08 14:51:58.247 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath item method .double() can only be applied to a string or numeric value
2024-09-08 14:51:58.247 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('null', '$.double()');
2024-09-08 14:51:58.247 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath item method .double() can only be applied to a string or numeric value
2024-09-08 14:51:58.247 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('true', '$.double()');
2024-09-08 14:51:58.247 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath item method .double() can only be applied to a string or numeric value
2024-09-08 14:51:58.247 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('[]', 'strict $.double()');
2024-09-08 14:51:58.247 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath item method .double() can only be applied to a string or numeric value
2024-09-08 14:51:58.247 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('{}', '$.double()');
2024-09-08 14:51:58.248 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  string argument of jsonpath item method .double() is not a valid representation of a double precision number
2024-09-08 14:51:58.248 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"1.23aaa"', '$.double()');
2024-09-08 14:51:58.248 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  numeric argument of jsonpath item method .double() is out of range for type double precision
2024-09-08 14:51:58.248 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('1e1000', '$.double()');
2024-09-08 14:51:58.248 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  string argument of jsonpath item method .double() is not a valid representation of a double precision number
2024-09-08 14:51:58.248 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"nan"', '$.double()');
2024-09-08 14:51:58.248 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  string argument of jsonpath item method .double() is not a valid representation of a double precision number
2024-09-08 14:51:58.248 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"NaN"', '$.double()');
2024-09-08 14:51:58.248 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  string argument of jsonpath item method .double() is not a valid representation of a double precision number
2024-09-08 14:51:58.248 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"inf"', '$.double()');
2024-09-08 14:51:58.248 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  string argument of jsonpath item method .double() is not a valid representation of a double precision number
2024-09-08 14:51:58.248 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"-inf"', '$.double()');
2024-09-08 14:51:58.248 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot call jsonb_object_keys on a scalar
2024-09-08 14:51:58.248 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_object_keys(test_json) FROM test_jsonb WHERE json_type = 'scalar';
2024-09-08 14:51:58.248 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot call jsonb_object_keys on an array
2024-09-08 14:51:58.248 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_object_keys(test_json) FROM test_jsonb WHERE json_type = 'array';
2024-09-08 14:51:58.248 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath item method .abs() can only be applied to a numeric value
2024-09-08 14:51:58.248 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('{}', '$.abs()');
2024-09-08 14:51:58.248 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath item method .floor() can only be applied to a numeric value
2024-09-08 14:51:58.248 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('true', '$.floor()');
2024-09-08 14:51:58.248 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath item method .ceiling() can only be applied to a numeric value
2024-09-08 14:51:58.248 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"1.2"', '$.ceiling()');
2024-09-08 14:51:58.249 KST client backend[3076349] pg_regress/sqljson ERROR:  cannot use type integer in IS JSON predicate
2024-09-08 14:51:58.249 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT NULL::int IS JSON;
2024-09-08 14:51:58.249 KST client backend[3076349] pg_regress/sqljson ERROR:  invalid byte sequence for encoding "UTF8": 0x00
2024-09-08 14:51:58.249 KST client backend[3076349] pg_regress/sqljson STATEMENT:  SELECT bytea '\x00' IS JSON;
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath item method .datetime() can only be applied to a string
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('null', '$.datetime()');
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath item method .datetime() can only be applied to a string
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('true', '$.datetime()');
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath item method .datetime() can only be applied to a string
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('1', '$.datetime()');
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath item method .datetime() can only be applied to a string
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('[]', 'strict $.datetime()');
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  jsonpath item method .datetime() can only be applied to a string
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('{}', '$.datetime()');
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  datetime format is not recognized: "bogus"
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath HINT:  Use a datetime template argument to specify the input data format.
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"bogus"', '$.datetime()');
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  invalid datetime format separator: "a"
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"12:34"', '$.datetime("aaa")');
2024-09-08 14:51:58.250 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type timestamp: "[100,200,false]"
2024-09-08 14:51:58.250 KST client backend[3076344] pg_regress/json STATEMENT:  select * from json_populate_record(row('x',3,'2012-12-31 15:30:56')::jpop,'{"c":[100,200,false],"x":43.2}') q;
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  invalid value "aa" for "HH24"
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath DETAIL:  Value must be an integer.
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"aaaa"', '$.datetime("HH24")');
2024-09-08 14:51:58.250 KST client backend[3076344] pg_regress/json ERROR:  domain js_int_not_null does not allow null values
2024-09-08 14:51:58.250 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT i FROM json_populate_record(NULL::jsrec_i_not_null, '{"x": 43.2}') q;
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  trailing characters remain in input string after datetime format
2024-09-08 14:51:58.250 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy")');
2024-09-08 14:51:58.250 KST client backend[3076344] pg_regress/json ERROR:  domain js_int_not_null does not allow null values
2024-09-08 14:51:58.250 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT i FROM json_populate_record(NULL::jsrec_i_not_null, '{"i": null}') q;
2024-09-08 14:51:58.251 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  trailing characters remain in input string after datetime format
2024-09-08 14:51:58.251 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy").type()');
2024-09-08 14:51:58.251 KST client backend[3076344] pg_regress/json ERROR:  expected JSON array
2024-09-08 14:51:58.251 KST client backend[3076344] pg_regress/json HINT:  See the value of key "ia".
2024-09-08 14:51:58.251 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT ia FROM json_populate_record(NULL::jsrec, '{"ia": 123}') q;
2024-09-08 14:51:58.251 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  unmatched format character "T"
2024-09-08 14:51:58.251 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"10-03-2017t12:34:56"', '$.datetime("dd-mm-yyyy\"T\"HH24:MI:SS")');
2024-09-08 14:51:58.251 KST client backend[3076344] pg_regress/json ERROR:  expected JSON array
2024-09-08 14:51:58.251 KST client backend[3076344] pg_regress/json HINT:  See the array element [1] of key "ia".
2024-09-08 14:51:58.251 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT ia FROM json_populate_record(NULL::jsrec, '{"ia": [[1], 2]}') q;
2024-09-08 14:51:58.251 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  unmatched format character "T"
2024-09-08 14:51:58.251 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"10-03-2017 12:34:56"', '$.datetime("dd-mm-yyyy\"T\"HH24:MI:SS")');
2024-09-08 14:51:58.251 KST client backend[3076344] pg_regress/json ERROR:  malformed JSON array
2024-09-08 14:51:58.251 KST client backend[3076344] pg_regress/json DETAIL:  Multidimensional arrays must have sub-arrays with matching dimensions.
2024-09-08 14:51:58.251 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT ia FROM json_populate_record(NULL::jsrec, '{"ia": [[1], [2, 3]]}') q;
2024-09-08 14:51:58.251 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot get array length of a non-array
2024-09-08 14:51:58.251 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_array_length('{"f1":1,"f2":[5,6]}');
2024-09-08 14:51:58.251 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot get array length of a scalar
2024-09-08 14:51:58.251 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_array_length('4');
2024-09-08 14:51:58.251 KST client backend[3076344] pg_regress/json ERROR:  expected JSON array
2024-09-08 14:51:58.251 KST client backend[3076344] pg_regress/json HINT:  See the value of key "ia1".
2024-09-08 14:51:58.251 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT ia1 FROM json_populate_record(NULL::jsrec, '{"ia1": 123}') q;
2024-09-08 14:51:58.251 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  input string is too short for datetime format
2024-09-08 14:51:58.251 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy HH24:MI TZH")');
2024-09-08 14:51:58.251 KST client backend[3076344] pg_regress/json ERROR:  expected JSON array
2024-09-08 14:51:58.251 KST client backend[3076344] pg_regress/json HINT:  See the value of key "ia1d".
2024-09-08 14:51:58.251 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT ia1d FROM json_populate_record(NULL::jsrec, '{"ia1d": 123}') q;
2024-09-08 14:51:58.251 KST client backend[3076344] pg_regress/json ERROR:  value for domain js_int_array_1d violates check constraint "js_int_array_1d_check"
2024-09-08 14:51:58.251 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT ia1d FROM json_populate_record(NULL::jsrec, '{"ia1d": [1, "2", null, 4]}') q;
2024-09-08 14:51:58.252 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  input string is too short for datetime format
2024-09-08 14:51:58.252 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"12:34"', '$.datetime("HH24:MI TZH")');
2024-09-08 14:51:58.252 KST client backend[3076344] pg_regress/json ERROR:  malformed JSON array
2024-09-08 14:51:58.252 KST client backend[3076344] pg_regress/json DETAIL:  Multidimensional arrays must have sub-arrays with matching dimensions.
2024-09-08 14:51:58.252 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT ia2 FROM json_populate_record(NULL::jsrec, '{"ia2": [[1, 2], [3]]}') q;
2024-09-08 14:51:58.252 KST client backend[3076344] pg_regress/json ERROR:  expected JSON array
2024-09-08 14:51:58.252 KST client backend[3076344] pg_regress/json HINT:  See the array element [1] of key "ia2".
2024-09-08 14:51:58.252 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT ia2 FROM json_populate_record(NULL::jsrec, '{"ia2": [[1, 2], 3, 4]}') q;
2024-09-08 14:51:58.252 KST client backend[3076344] pg_regress/json ERROR:  value for domain js_int_array_2d violates check constraint "js_int_array_2d_check"
2024-09-08 14:51:58.252 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT ia2d FROM json_populate_record(NULL::jsrec, '{"ia2d": [[1, "2"], [null, 4]]}') q;
2024-09-08 14:51:58.252 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  input string is too short for datetime format
2024-09-08 14:51:58.252 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"10-03-2017 12:34"', '$.datetime("dd-mm-yyyy HH24:MI TZH")');
2024-09-08 14:51:58.252 KST client backend[3076344] pg_regress/json ERROR:  malformed JSON array
2024-09-08 14:51:58.252 KST client backend[3076344] pg_regress/json DETAIL:  Multidimensional arrays must have sub-arrays with matching dimensions.
2024-09-08 14:51:58.252 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT ia3 FROM json_populate_record(NULL::jsrec, '{"ia3": [ [[1, 2], [3, 4]], [[5, 6], [7, 8], [9, 10]] ]}') q;
2024-09-08 14:51:58.252 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  input string is too short for datetime format
2024-09-08 14:51:58.252 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"12:34"', '$.datetime("HH24:MI TZH")');
2024-09-08 14:51:58.252 KST client backend[3076344] pg_regress/json ERROR:  expected JSON array
2024-09-08 14:51:58.252 KST client backend[3076344] pg_regress/json HINT:  See the value of key "ta".
2024-09-08 14:51:58.252 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT ta FROM json_populate_record(NULL::jsrec, '{"ta": 123}') q;
2024-09-08 14:51:58.253 KST client backend[3076344] pg_regress/json ERROR:  expected JSON array
2024-09-08 14:51:58.253 KST client backend[3076344] pg_regress/json HINT:  See the array element [1] of key "ta".
2024-09-08 14:51:58.253 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT ta FROM json_populate_record(NULL::jsrec, '{"ta": [[1, 2, 3], {"k": "v"}]}') q;
2024-09-08 14:51:58.253 KST client backend[3076344] pg_regress/json ERROR:  value too long for type character(10)
2024-09-08 14:51:58.253 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT c FROM json_populate_record(NULL::jsrec, '{"c": "aaaaaaaaaaaaa"}') q;
2024-09-08 14:51:58.253 KST client backend[3076344] pg_regress/json ERROR:  expected JSON array
2024-09-08 14:51:58.253 KST client backend[3076344] pg_regress/json HINT:  See the value of key "ca".
2024-09-08 14:51:58.253 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT ca FROM json_populate_record(NULL::jsrec, '{"ca": 123}') q;
2024-09-08 14:51:58.253 KST client backend[3076344] pg_regress/json ERROR:  value too long for type character(10)
2024-09-08 14:51:58.253 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT ca FROM json_populate_record(NULL::jsrec, '{"ca": ["aaaaaaaaaaaaaaaa"]}') q;
2024-09-08 14:51:58.253 KST client backend[3076344] pg_regress/json ERROR:  expected JSON array
2024-09-08 14:51:58.253 KST client backend[3076344] pg_regress/json HINT:  See the array element [1] of key "ca".
2024-09-08 14:51:58.253 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT ca FROM json_populate_record(NULL::jsrec, '{"ca": [[1, 2, 3], {"k": "v"}]}') q;
2024-09-08 14:51:58.253 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  datetime format is not recognized: "2017-03-10t12:34:56+3:10"
2024-09-08 14:51:58.253 KST client backend[3076348] pg_regress/jsonb_jsonpath HINT:  Use a datetime template argument to specify the input data format.
2024-09-08 14:51:58.253 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"2017-03-10t12:34:56+3:10"', '$.datetime()');
2024-09-08 14:51:58.253 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  datetime format is not recognized: "2017-03-10t12:34:56.789+3:10"
2024-09-08 14:51:58.253 KST client backend[3076348] pg_regress/jsonb_jsonpath HINT:  Use a datetime template argument to specify the input data format.
2024-09-08 14:51:58.253 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query('"2017-03-10t12:34:56.789+3:10"', '$.datetime()');
2024-09-08 14:51:58.254 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  cannot convert value from date to timestamptz without time zone usage
2024-09-08 14:51:58.254 KST client backend[3076348] pg_regress/jsonb_jsonpath HINT:  Use *_tz() function for time zone support.
2024-09-08 14:51:58.254 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query(
		'["2017-03-10", "2017-03-11", "2017-03-09", "12:34:56", "01:02:03+04", "2017-03-10 00:00:00", "2017-03-10 12:34:56", "2017-03-10 01:02:03+04", "2017-03-10 03:00:00+03"]',
		'$[*].datetime() ? (@ == "10.03.2017".datetime("dd.mm.yyyy"))');
2024-09-08 14:51:58.254 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  cannot convert value from date to timestamptz without time zone usage
2024-09-08 14:51:58.254 KST client backend[3076348] pg_regress/jsonb_jsonpath HINT:  Use *_tz() function for time zone support.
2024-09-08 14:51:58.254 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query(
		'["2017-03-10", "2017-03-11", "2017-03-09", "12:34:56", "01:02:03+04", "2017-03-10 00:00:00", "2017-03-10 12:34:56", "2017-03-10 01:02:03+04", "2017-03-10 03:00:00+03"]',
		'$[*].datetime() ? (@ >= "10.03.2017".datetime("dd.mm.yyyy"))');
2024-09-08 14:51:58.254 KST client backend[3076344] pg_regress/json ERROR:  expected JSON array
2024-09-08 14:51:58.254 KST client backend[3076344] pg_regress/json HINT:  See the value of key "jsa".
2024-09-08 14:51:58.254 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT jsa FROM json_populate_record(NULL::jsrec, '{"jsa": 123}') q;
2024-09-08 14:51:58.254 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  cannot convert value from date to timestamptz without time zone usage
2024-09-08 14:51:58.254 KST client backend[3076348] pg_regress/jsonb_jsonpath HINT:  Use *_tz() function for time zone support.
2024-09-08 14:51:58.254 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query(
		'["2017-03-10", "2017-03-11", "2017-03-09", "12:34:56", "01:02:03+04", "2017-03-10 00:00:00", "2017-03-10 12:34:56", "2017-03-10 01:02:03+04", "2017-03-10 03:00:00+03"]',
		'$[*].datetime() ? (@ <  "10.03.2017".datetime("dd.mm.yyyy"))');
2024-09-08 14:51:58.254 KST client backend[3076344] pg_regress/json ERROR:  cannot call populate_composite on a scalar
2024-09-08 14:51:58.254 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT rec FROM json_populate_record(NULL::jsrec, '{"rec": 123}') q;
2024-09-08 14:51:58.254 KST client backend[3076344] pg_regress/json ERROR:  cannot call populate_composite on an array
2024-09-08 14:51:58.254 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT rec FROM json_populate_record(NULL::jsrec, '{"rec": [1, 2]}') q;
2024-09-08 14:51:58.254 KST client backend[3076344] pg_regress/json ERROR:  expected JSON array
2024-09-08 14:51:58.254 KST client backend[3076344] pg_regress/json HINT:  See the value of key "reca".
2024-09-08 14:51:58.254 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT reca FROM json_populate_record(NULL::jsrec, '{"reca": 123}') q;
2024-09-08 14:51:58.255 KST client backend[3076344] pg_regress/json ERROR:  cannot call populate_composite on a scalar
2024-09-08 14:51:58.255 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT reca FROM json_populate_record(NULL::jsrec, '{"reca": [1, 2]}') q;
2024-09-08 14:51:58.255 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  cannot convert value from time to timetz without time zone usage
2024-09-08 14:51:58.255 KST client backend[3076348] pg_regress/jsonb_jsonpath HINT:  Use *_tz() function for time zone support.
2024-09-08 14:51:58.255 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query(
		'["12:34:00", "12:35:00", "12:36:00", "12:35:00+00", "12:35:00+01", "13:35:00+01", "2017-03-10", "2017-03-10 12:35:00", "2017-03-10 12:35:00+01"]',
		'$[*].datetime() ? (@ == "12:35".datetime("HH24:MI"))');
2024-09-08 14:51:58.255 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  cannot convert value from time to timetz without time zone usage
2024-09-08 14:51:58.255 KST client backend[3076348] pg_regress/jsonb_jsonpath HINT:  Use *_tz() function for time zone support.
2024-09-08 14:51:58.255 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query(
		'["12:34:00", "12:35:00", "12:36:00", "12:35:00+00", "12:35:00+01", "13:35:00+01", "2017-03-10", "2017-03-10 12:35:00", "2017-03-10 12:35:00+01"]',
		'$[*].datetime() ? (@ >= "12:35".datetime("HH24:MI"))');
2024-09-08 14:51:58.255 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  cannot convert value from time to timetz without time zone usage
2024-09-08 14:51:58.255 KST client backend[3076348] pg_regress/jsonb_jsonpath HINT:  Use *_tz() function for time zone support.
2024-09-08 14:51:58.255 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query(
		'["12:34:00", "12:35:00", "12:36:00", "12:35:00+00", "12:35:00+01", "13:35:00+01", "2017-03-10", "2017-03-10 12:35:00", "2017-03-10 12:35:00+01"]',
		'$[*].datetime() ? (@ <  "12:35".datetime("HH24:MI"))');
2024-09-08 14:51:58.255 KST client backend[3076344] pg_regress/json ERROR:  could not determine row type for result of json_populate_record
2024-09-08 14:51:58.255 KST client backend[3076344] pg_regress/json HINT:  Provide a non-null record argument, or call the function in the FROM clause using a column definition list.
2024-09-08 14:51:58.255 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_populate_record(null::record, '{"x": 0, "y": 1}');
2024-09-08 14:51:58.255 KST client backend[3076343] pg_regress/jsonb ERROR:  argument list must have even number of elements
2024-09-08 14:51:58.255 KST client backend[3076343] pg_regress/jsonb HINT:  The arguments of jsonb_build_object() must consist of alternating keys and values.
2024-09-08 14:51:58.255 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_build_object('{a,b,c}'::text[]);
2024-09-08 14:51:58.255 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  cannot convert value from time to timetz without time zone usage
2024-09-08 14:51:58.255 KST client backend[3076348] pg_regress/jsonb_jsonpath HINT:  Use *_tz() function for time zone support.
2024-09-08 14:51:58.255 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query(
		'["12:34:00+01", "12:35:00+01", "12:36:00+01", "12:35:00+02", "12:35:00-02", "10:35:00", "11:35:00", "12:35:00", "2017-03-10", "2017-03-10 12:35:00", "2017-03-10 12:35:00 +1"]',
		'$[*].datetime() ? (@ == "12:35 +1".datetime("HH24:MI TZH"))');
2024-09-08 14:51:58.255 KST client backend[3076343] pg_regress/jsonb ERROR:  key value must be scalar, not array, composite, or json
2024-09-08 14:51:58.255 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_build_object('{a,b,c}'::text[], '{d,e,f}'::text[]);
2024-09-08 14:51:58.255 KST client backend[3076343] pg_regress/jsonb ERROR:  argument list must have even number of elements
2024-09-08 14:51:58.255 KST client backend[3076343] pg_regress/jsonb HINT:  The arguments of jsonb_build_object() must consist of alternating keys and values.
2024-09-08 14:51:58.255 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_build_object('a', 'b', 'c');
2024-09-08 14:51:58.255 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  cannot convert value from time to timetz without time zone usage
2024-09-08 14:51:58.255 KST client backend[3076348] pg_regress/jsonb_jsonpath HINT:  Use *_tz() function for time zone support.
2024-09-08 14:51:58.255 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query(
		'["12:34:00+01", "12:35:00+01", "12:36:00+01", "12:35:00+02", "12:35:00-02", "10:35:00", "11:35:00", "12:35:00", "2017-03-10", "2017-03-10 12:35:00", "2017-03-10 12:35:00 +1"]',
		'$[*].datetime() ? (@ >= "12:35 +1".datetime("HH24:MI TZH"))');
2024-09-08 14:51:58.255 KST client backend[3076343] pg_regress/jsonb ERROR:  argument 1: key must not be null
2024-09-08 14:51:58.255 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_build_object(NULL, 'a');
2024-09-08 14:51:58.255 KST client backend[3076344] pg_regress/json ERROR:  value for domain j_ordered_pair violates check constraint "j_ordered_pair_check"
2024-09-08 14:51:58.255 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_populate_record(row(1,2)::j_ordered_pair, '{"x": 1, "y": 0}');
2024-09-08 14:51:58.255 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  cannot convert value from time to timetz without time zone usage
2024-09-08 14:51:58.255 KST client backend[3076348] pg_regress/jsonb_jsonpath HINT:  Use *_tz() function for time zone support.
2024-09-08 14:51:58.255 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query(
		'["12:34:00+01", "12:35:00+01", "12:36:00+01", "12:35:00+02", "12:35:00-02", "10:35:00", "11:35:00", "12:35:00", "2017-03-10", "2017-03-10 12:35:00", "2017-03-10 12:35:00 +1"]',
		'$[*].datetime() ? (@ <  "12:35 +1".datetime("HH24:MI TZH"))');
2024-09-08 14:51:58.255 KST client backend[3076343] pg_regress/jsonb ERROR:  argument list must have even number of elements
2024-09-08 14:51:58.255 KST client backend[3076343] pg_regress/jsonb HINT:  The arguments of jsonb_build_object() must consist of alternating keys and values.
2024-09-08 14:51:58.255 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_build_object(VARIADIC '{a,b,c}'::text[]);
2024-09-08 14:51:58.256 KST client backend[3076343] pg_regress/jsonb ERROR:  argument 1: key must not be null
2024-09-08 14:51:58.256 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_build_object(VARIADIC ARRAY[NULL, 'a']::text[]);
2024-09-08 14:51:58.256 KST client backend[3076344] pg_regress/json ERROR:  invalid input syntax for type timestamp: "[100,200,300]"
2024-09-08 14:51:58.256 KST client backend[3076344] pg_regress/json STATEMENT:  select * from json_populate_recordset(row('def',99,null)::jpop,'[{"c":[100,200,300],"x":43.2},{"a":{"z":true},"b":3,"c":"2012-01-20 10:42:53"}]') q;
2024-09-08 14:51:58.256 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  cannot convert value from timestamp to timestamptz without time zone usage
2024-09-08 14:51:58.256 KST client backend[3076348] pg_regress/jsonb_jsonpath HINT:  Use *_tz() function for time zone support.
2024-09-08 14:51:58.256 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query(
		'["2017-03-10 12:34:00", "2017-03-10 12:35:00", "2017-03-10 12:36:00", "2017-03-10 12:35:00+01", "2017-03-10 13:35:00+01", "2017-03-10 12:35:00-01", "2017-03-10", "2017-03-11", "12:34:56", "12:34:56+01"]',
		'$[*].datetime() ? (@ == "10.03.2017 12:35".datetime("dd.mm.yyyy HH24:MI"))');
2024-09-08 14:51:58.256 KST client backend[3076343] pg_regress/jsonb ERROR:  argument 1: key must not be null
2024-09-08 14:51:58.256 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_build_object(null,2);
2024-09-08 14:51:58.256 KST client backend[3076343] pg_regress/jsonb ERROR:  key value must be scalar, not array, composite, or json
2024-09-08 14:51:58.256 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_build_object(r,2) FROM (SELECT 1 AS a, 2 AS b) r;
2024-09-08 14:51:58.256 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  cannot convert value from timestamp to timestamptz without time zone usage
2024-09-08 14:51:58.256 KST client backend[3076348] pg_regress/jsonb_jsonpath HINT:  Use *_tz() function for time zone support.
2024-09-08 14:51:58.256 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query(
		'["2017-03-10 12:34:00", "2017-03-10 12:35:00", "2017-03-10 12:36:00", "2017-03-10 12:35:00+01", "2017-03-10 13:35:00+01", "2017-03-10 12:35:00-01", "2017-03-10", "2017-03-11", "12:34:56", "12:34:56+01"]',
		'$[*].datetime() ? (@ >= "10.03.2017 12:35".datetime("dd.mm.yyyy HH24:MI"))');
2024-09-08 14:51:58.256 KST client backend[3076343] pg_regress/jsonb ERROR:  key value must be scalar, not array, composite, or json
2024-09-08 14:51:58.256 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_build_object(json '{"a":1,"b":2}', 3);
2024-09-08 14:51:58.256 KST client backend[3076343] pg_regress/jsonb ERROR:  key value must be scalar, not array, composite, or json
2024-09-08 14:51:58.256 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_build_object('{1,2,3}'::int[], 3);
2024-09-08 14:51:58.256 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  cannot convert value from timestamp to timestamptz without time zone usage
2024-09-08 14:51:58.256 KST client backend[3076348] pg_regress/jsonb_jsonpath HINT:  Use *_tz() function for time zone support.
2024-09-08 14:51:58.256 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query(
		'["2017-03-10 12:34:00", "2017-03-10 12:35:00", "2017-03-10 12:36:00", "2017-03-10 12:35:00+01", "2017-03-10 13:35:00+01", "2017-03-10 12:35:00-01", "2017-03-10", "2017-03-11", "12:34:56", "12:34:56+01"]',
		'$[*].datetime() ? (@ < "10.03.2017 12:35".datetime("dd.mm.yyyy HH24:MI"))');
2024-09-08 14:51:58.256 KST client backend[3076343] pg_regress/jsonb ERROR:  field name must not be null
2024-09-08 14:51:58.256 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_object_agg(NULL, '{"a":1}');
2024-09-08 14:51:58.256 KST client backend[3076344] pg_regress/json ERROR:  could not determine row type for result of json_populate_recordset
2024-09-08 14:51:58.256 KST client backend[3076344] pg_regress/json HINT:  Provide a non-null record argument, or call the function in the FROM clause using a column definition list.
2024-09-08 14:51:58.256 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_populate_recordset(null::record, '[{"x": 0, "y": 1}]');
2024-09-08 14:51:58.256 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  cannot convert value from timestamp to timestamptz without time zone usage
2024-09-08 14:51:58.256 KST client backend[3076348] pg_regress/jsonb_jsonpath HINT:  Use *_tz() function for time zone support.
2024-09-08 14:51:58.256 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query(
		'["2017-03-10 12:34:00+01", "2017-03-10 12:35:00+01", "2017-03-10 12:36:00+01", "2017-03-10 12:35:00+02", "2017-03-10 12:35:00-02", "2017-03-10 10:35:00", "2017-03-10 11:35:00", "2017-03-10 12:35:00", "2017-03-10", "2017-03-11", "12:34:56", "12:34:56+01"]',
		'$[*].datetime() ? (@ == "10.03.2017 12:35 +1".datetime("dd.mm.yyyy HH24:MI TZH"))');
2024-09-08 14:51:58.257 KST client backend[3076344] pg_regress/json ERROR:  could not determine row type for result of json_populate_recordset
2024-09-08 14:51:58.257 KST client backend[3076344] pg_regress/json HINT:  Provide a non-null record argument, or call the function in the FROM clause using a column definition list.
2024-09-08 14:51:58.257 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_populate_recordset(null::record, '[]');
2024-09-08 14:51:58.257 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  cannot convert value from timestamp to timestamptz without time zone usage
2024-09-08 14:51:58.257 KST client backend[3076348] pg_regress/jsonb_jsonpath HINT:  Use *_tz() function for time zone support.
2024-09-08 14:51:58.257 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query(
		'["2017-03-10 12:34:00+01", "2017-03-10 12:35:00+01", "2017-03-10 12:36:00+01", "2017-03-10 12:35:00+02", "2017-03-10 12:35:00-02", "2017-03-10 10:35:00", "2017-03-10 11:35:00", "2017-03-10 12:35:00", "2017-03-10", "2017-03-11", "12:34:56", "12:34:56+01"]',
		'$[*].datetime() ? (@ >= "10.03.2017 12:35 +1".datetime("dd.mm.yyyy HH24:MI TZH"))');
2024-09-08 14:51:58.257 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  cannot convert value from timestamp to timestamptz without time zone usage
2024-09-08 14:51:58.257 KST client backend[3076348] pg_regress/jsonb_jsonpath HINT:  Use *_tz() function for time zone support.
2024-09-08 14:51:58.257 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  select jsonb_path_query(
		'["2017-03-10 12:34:00+01", "2017-03-10 12:35:00+01", "2017-03-10 12:36:00+01", "2017-03-10 12:35:00+02", "2017-03-10 12:35:00-02", "2017-03-10 10:35:00", "2017-03-10 11:35:00", "2017-03-10 12:35:00", "2017-03-10", "2017-03-11", "12:34:56", "12:34:56+01"]',
		'$[*].datetime() ? (@ < "10.03.2017 12:35 +1".datetime("dd.mm.yyyy HH24:MI TZH"))');
2024-09-08 14:51:58.257 KST client backend[3076344] pg_regress/json ERROR:  value for domain j_ordered_pair violates check constraint "j_ordered_pair_check"
2024-09-08 14:51:58.257 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_populate_recordset(row(1,2)::j_ordered_pair, '[{"x": 1, "y": 0}]');
2024-09-08 14:51:58.257 KST client backend[3076344] pg_regress/json ERROR:  function return row and query-specified return row do not match
2024-09-08 14:51:58.257 KST client backend[3076344] pg_regress/json DETAIL:  Returned row contains 1 attribute, but query expects 2.
2024-09-08 14:51:58.257 KST client backend[3076344] pg_regress/json STATEMENT:  select * from json_populate_recordset(row(0::int),'[{"a":"1","b":"2"},{"a":"3"}]') q (a text, b text);
2024-09-08 14:51:58.257 KST client backend[3076344] pg_regress/json ERROR:  function return row and query-specified return row do not match
2024-09-08 14:51:58.257 KST client backend[3076344] pg_regress/json DETAIL:  Returned type integer at ordinal position 1, but query expects text.
2024-09-08 14:51:58.257 KST client backend[3076344] pg_regress/json STATEMENT:  select * from json_populate_recordset(row(0::int,0::int),'[{"a":"1","b":"2"},{"a":"3"}]') q (a text, b text);
2024-09-08 14:51:58.257 KST client backend[3076344] pg_regress/json ERROR:  function return row and query-specified return row do not match
2024-09-08 14:51:58.257 KST client backend[3076344] pg_regress/json DETAIL:  Returned row contains 3 attributes, but query expects 2.
2024-09-08 14:51:58.257 KST client backend[3076344] pg_regress/json STATEMENT:  select * from json_populate_recordset(row(0::int,0::int,0::int),'[{"a":"1","b":"2"},{"a":"3"}]') q (a text, b text);
2024-09-08 14:51:58.257 KST client backend[3076344] pg_regress/json ERROR:  function return row and query-specified return row do not match
2024-09-08 14:51:58.257 KST client backend[3076344] pg_regress/json DETAIL:  Returned type integer at ordinal position 1, but query expects text.
2024-09-08 14:51:58.257 KST client backend[3076344] pg_regress/json STATEMENT:  select * from json_populate_recordset(row(1000000000::int,50::int),'[{"b":"2"},{"a":"3"}]') q (a text, b text);
2024-09-08 14:51:58.257 KST client backend[3076343] pg_regress/jsonb ERROR:  field name must not be null
2024-09-08 14:51:58.257 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_object_agg(name, type) FROM foo;
2024-09-08 14:51:58.257 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  could not find jsonpath variable "undefined_var"
2024-09-08 14:51:58.257 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  SELECT jsonb_path_query('[{"a": 1}]', '$undefined_var');
2024-09-08 14:51:58.258 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  JSON object does not contain key "a"
2024-09-08 14:51:58.258 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  SELECT jsonb_path_query_array('[{"a": 1}, {"a": 2}, {}]', 'strict $[*].a');
2024-09-08 14:51:58.258 KST client backend[3076343] pg_regress/jsonb ERROR:  array must have even number of elements
2024-09-08 14:51:58.258 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_object('{a,b,c}');
2024-09-08 14:51:58.258 KST client backend[3076343] pg_regress/jsonb ERROR:  array must have two columns
2024-09-08 14:51:58.258 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_object('{{a},{b}}');
2024-09-08 14:51:58.258 KST client backend[3076343] pg_regress/jsonb ERROR:  array must have two columns
2024-09-08 14:51:58.258 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_object('{{a,b,c},{b,c,d}}');
2024-09-08 14:51:58.258 KST client backend[3076343] pg_regress/jsonb ERROR:  wrong number of array subscripts
2024-09-08 14:51:58.258 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_object('{{{a,b},{c,d}},{{b,c},{d,e}}}');
2024-09-08 14:51:58.258 KST client backend[3076343] pg_regress/jsonb ERROR:  wrong number of array subscripts
2024-09-08 14:51:58.258 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_object('{{a,1},{b,2},{3,NULL},{"d e f","a b c"}}', '{{a,1},{b,2},{3,NULL},{"d e f","a b c"}}');
2024-09-08 14:51:58.258 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  JSON object does not contain key "a"
2024-09-08 14:51:58.258 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  SELECT jsonb_path_query_first('[{"a": 1}, {"a": 2}, {}]', 'strict $[*].a');
2024-09-08 14:51:58.258 KST client backend[3076343] pg_regress/jsonb ERROR:  mismatched array dimensions
2024-09-08 14:51:58.258 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select jsonb_object('{a,b,c,"d e f",g}','{1,2,3,"a b c"}');
2024-09-08 14:51:58.258 KST client backend[3076343] pg_regress/jsonb ERROR:  mismatched array dimensions
2024-09-08 14:51:58.258 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select jsonb_object('{a,b,c,"d e f"}','{1,2,3,"a b c",g}');
2024-09-08 14:51:58.258 KST client backend[3076343] pg_regress/jsonb ERROR:  null value not allowed for object key
2024-09-08 14:51:58.258 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select jsonb_object('{a,b,NULL,"d e f"}','{1,2,3,"a b c"}');
2024-09-08 14:51:58.258 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  could not find jsonpath variable "undefined_var"
2024-09-08 14:51:58.258 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  SELECT jsonb_path_query_first('[{"a": 1}]', '$undefined_var');
2024-09-08 14:51:58.259 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  could not find jsonpath variable "undefined_var"
2024-09-08 14:51:58.259 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  SELECT jsonb_path_exists('[{"a": 1}]', '$undefined_var');
2024-09-08 14:51:58.259 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  single boolean result is expected
2024-09-08 14:51:58.259 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  SELECT jsonb_path_match('1', '$', silent => false);
2024-09-08 14:51:58.259 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  single boolean result is expected
2024-09-08 14:51:58.259 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  SELECT jsonb_path_match('"a"', '$', silent => false);
2024-09-08 14:51:58.259 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  single boolean result is expected
2024-09-08 14:51:58.259 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  SELECT jsonb_path_match('{}', '$', silent => false);
2024-09-08 14:51:58.259 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  single boolean result is expected
2024-09-08 14:51:58.259 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  SELECT jsonb_path_match('[true]', '$', silent => false);
2024-09-08 14:51:58.259 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  single boolean result is expected
2024-09-08 14:51:58.259 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  SELECT jsonb_path_match('{}', 'lax $.a', silent => false);
2024-09-08 14:51:58.259 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  JSON object does not contain key "a"
2024-09-08 14:51:58.259 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  SELECT jsonb_path_match('{}', 'strict $.a', silent => false);
2024-09-08 14:51:58.259 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  single boolean result is expected
2024-09-08 14:51:58.259 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  SELECT jsonb_path_match('[true, true]', '$[*]', silent => false);
2024-09-08 14:51:58.259 KST client backend[3076348] pg_regress/jsonb_jsonpath ERROR:  could not find jsonpath variable "undefined_var"
2024-09-08 14:51:58.259 KST client backend[3076348] pg_regress/jsonb_jsonpath STATEMENT:  SELECT jsonb_path_match('[{"a": 1}]', '$undefined_var');
2024-09-08 14:51:58.261 KST client backend[3076344] pg_regress/json ERROR:  argument list must have even number of elements
2024-09-08 14:51:58.261 KST client backend[3076344] pg_regress/json HINT:  The arguments of json_build_object() must consist of alternating keys and values.
2024-09-08 14:51:58.261 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_build_object('{a,b,c}'::text[]);
2024-09-08 14:51:58.261 KST client backend[3076344] pg_regress/json ERROR:  key value must be scalar, not array, composite, or json
2024-09-08 14:51:58.261 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_build_object('{a,b,c}'::text[], '{d,e,f}'::text[]);
2024-09-08 14:51:58.261 KST client backend[3076344] pg_regress/json ERROR:  argument list must have even number of elements
2024-09-08 14:51:58.261 KST client backend[3076344] pg_regress/json HINT:  The arguments of json_build_object() must consist of alternating keys and values.
2024-09-08 14:51:58.261 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_build_object('a', 'b', 'c');
2024-09-08 14:51:58.261 KST client backend[3076344] pg_regress/json ERROR:  null value not allowed for object key
2024-09-08 14:51:58.261 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_build_object(NULL, 'a');
2024-09-08 14:51:58.261 KST client backend[3076344] pg_regress/json ERROR:  argument list must have even number of elements
2024-09-08 14:51:58.261 KST client backend[3076344] pg_regress/json HINT:  The arguments of json_build_object() must consist of alternating keys and values.
2024-09-08 14:51:58.261 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_build_object(VARIADIC '{a,b,c}'::text[]);
2024-09-08 14:51:58.261 KST client backend[3076344] pg_regress/json ERROR:  null value not allowed for object key
2024-09-08 14:51:58.261 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_build_object(VARIADIC ARRAY[NULL, 'a']::text[]);
2024-09-08 14:51:58.262 KST client backend[3076344] pg_regress/json ERROR:  null value not allowed for object key
2024-09-08 14:51:58.262 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_build_object(null,2);
2024-09-08 14:51:58.262 KST client backend[3076344] pg_regress/json ERROR:  key value must be scalar, not array, composite, or json
2024-09-08 14:51:58.262 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_build_object(r,2) FROM (SELECT 1 AS a, 2 AS b) r;
2024-09-08 14:51:58.262 KST client backend[3076344] pg_regress/json ERROR:  key value must be scalar, not array, composite, or json
2024-09-08 14:51:58.262 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_build_object(json '{"a":1,"b":2}', 3);
2024-09-08 14:51:58.262 KST client backend[3076344] pg_regress/json ERROR:  key value must be scalar, not array, composite, or json
2024-09-08 14:51:58.262 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_build_object('{1,2,3}'::int[], 3);
2024-09-08 14:51:58.263 KST client backend[3076344] pg_regress/json ERROR:  null value not allowed for object key
2024-09-08 14:51:58.263 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_object_agg(name, type) FROM foo;
2024-09-08 14:51:58.263 KST client backend[3076344] pg_regress/json ERROR:  array must have even number of elements
2024-09-08 14:51:58.263 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_object('{a,b,c}');
2024-09-08 14:51:58.263 KST client backend[3076344] pg_regress/json ERROR:  array must have two columns
2024-09-08 14:51:58.263 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_object('{{a},{b}}');
2024-09-08 14:51:58.263 KST client backend[3076344] pg_regress/json ERROR:  array must have two columns
2024-09-08 14:51:58.263 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_object('{{a,b,c},{b,c,d}}');
2024-09-08 14:51:58.263 KST client backend[3076344] pg_regress/json ERROR:  wrong number of array subscripts
2024-09-08 14:51:58.263 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_object('{{{a,b},{c,d}},{{b,c},{d,e}}}');
2024-09-08 14:51:58.263 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type timestamp: "[100, 200, false]"
2024-09-08 14:51:58.263 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT * FROM jsonb_populate_record(row('x',3,'2012-12-31 15:30:56')::jbpop,'{"c":[100,200,false],"x":43.2}') q;
2024-09-08 14:51:58.263 KST client backend[3076344] pg_regress/json ERROR:  wrong number of array subscripts
2024-09-08 14:51:58.263 KST client backend[3076344] pg_regress/json STATEMENT:  SELECT json_object('{{a,1},{b,2},{3,NULL},{"d e f","a b c"}}', '{{a,1},{b,2},{3,NULL},{"d e f","a b c"}}');
2024-09-08 14:51:58.263 KST client backend[3076344] pg_regress/json ERROR:  mismatched array dimensions
2024-09-08 14:51:58.263 KST client backend[3076344] pg_regress/json STATEMENT:  select json_object('{a,b,c,"d e f",g}','{1,2,3,"a b c"}');
2024-09-08 14:51:58.263 KST client backend[3076344] pg_regress/json ERROR:  mismatched array dimensions
2024-09-08 14:51:58.263 KST client backend[3076344] pg_regress/json STATEMENT:  select json_object('{a,b,c,"d e f"}','{1,2,3,"a b c",g}');
2024-09-08 14:51:58.263 KST client backend[3076343] pg_regress/jsonb ERROR:  domain jsb_int_not_null does not allow null values
2024-09-08 14:51:58.263 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT i FROM jsonb_populate_record(NULL::jsbrec_i_not_null, '{"x": 43.2}') q;
2024-09-08 14:51:58.263 KST client backend[3076344] pg_regress/json ERROR:  null value not allowed for object key
2024-09-08 14:51:58.263 KST client backend[3076344] pg_regress/json STATEMENT:  select json_object('{a,b,NULL,"d e f"}','{1,2,3,"a b c"}');
2024-09-08 14:51:58.263 KST client backend[3076343] pg_regress/jsonb ERROR:  domain jsb_int_not_null does not allow null values
2024-09-08 14:51:58.263 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT i FROM jsonb_populate_record(NULL::jsbrec_i_not_null, '{"i": null}') q;
2024-09-08 14:51:58.264 KST client backend[3076343] pg_regress/jsonb ERROR:  expected JSON array
2024-09-08 14:51:58.264 KST client backend[3076343] pg_regress/jsonb HINT:  See the value of key "ia".
2024-09-08 14:51:58.264 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT ia FROM jsonb_populate_record(NULL::jsbrec, '{"ia": 123}') q;
2024-09-08 14:51:58.264 KST client backend[3076343] pg_regress/jsonb ERROR:  expected JSON array
2024-09-08 14:51:58.264 KST client backend[3076343] pg_regress/jsonb HINT:  See the array element [1] of key "ia".
2024-09-08 14:51:58.264 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT ia FROM jsonb_populate_record(NULL::jsbrec, '{"ia": [[1], 2]}') q;
2024-09-08 14:51:58.264 KST client backend[3076343] pg_regress/jsonb ERROR:  malformed JSON array
2024-09-08 14:51:58.264 KST client backend[3076343] pg_regress/jsonb DETAIL:  Multidimensional arrays must have sub-arrays with matching dimensions.
2024-09-08 14:51:58.264 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT ia FROM jsonb_populate_record(NULL::jsbrec, '{"ia": [[1], [2, 3]]}') q;
2024-09-08 14:51:58.264 KST client backend[3076344] pg_regress/json ERROR:  expected JSON array
2024-09-08 14:51:58.264 KST client backend[3076344] pg_regress/json HINT:  See the value of key "ia".
2024-09-08 14:51:58.264 KST client backend[3076344] pg_regress/json STATEMENT:  select * from json_to_record('{"ia": 123}') as x(ia _int4);
2024-09-08 14:51:58.264 KST client backend[3076343] pg_regress/jsonb ERROR:  expected JSON array
2024-09-08 14:51:58.264 KST client backend[3076343] pg_regress/jsonb HINT:  See the value of key "ia1".
2024-09-08 14:51:58.264 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT ia1 FROM jsonb_populate_record(NULL::jsbrec, '{"ia1": 123}') q;
2024-09-08 14:51:58.264 KST client backend[3076344] pg_regress/json ERROR:  expected JSON array
2024-09-08 14:51:58.264 KST client backend[3076344] pg_regress/json HINT:  See the array element [1] of key "ia".
2024-09-08 14:51:58.264 KST client backend[3076344] pg_regress/json STATEMENT:  select * from json_to_record('{"ia": [[1], 2]}') as x(ia _int4);
2024-09-08 14:51:58.264 KST client backend[3076344] pg_regress/json ERROR:  malformed JSON array
2024-09-08 14:51:58.264 KST client backend[3076344] pg_regress/json DETAIL:  Multidimensional arrays must have sub-arrays with matching dimensions.
2024-09-08 14:51:58.264 KST client backend[3076344] pg_regress/json STATEMENT:  select * from json_to_record('{"ia": [[1], [2, 3]]}') as x(ia _int4);
2024-09-08 14:51:58.264 KST client backend[3076343] pg_regress/jsonb ERROR:  expected JSON array
2024-09-08 14:51:58.264 KST client backend[3076343] pg_regress/jsonb HINT:  See the value of key "ia1d".
2024-09-08 14:51:58.264 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT ia1d FROM jsonb_populate_record(NULL::jsbrec, '{"ia1d": 123}') q;
2024-09-08 14:51:58.264 KST client backend[3076343] pg_regress/jsonb ERROR:  value for domain jsb_int_array_1d violates check constraint "jsb_int_array_1d_check"
2024-09-08 14:51:58.264 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT ia1d FROM jsonb_populate_record(NULL::jsbrec, '{"ia1d": [1, "2", null, 4]}') q;
2024-09-08 14:51:58.265 KST client backend[3076343] pg_regress/jsonb ERROR:  malformed JSON array
2024-09-08 14:51:58.265 KST client backend[3076343] pg_regress/jsonb DETAIL:  Multidimensional arrays must have sub-arrays with matching dimensions.
2024-09-08 14:51:58.265 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT ia2 FROM jsonb_populate_record(NULL::jsbrec, '{"ia2": [[1, 2], [3]]}') q;
2024-09-08 14:51:58.265 KST client backend[3076343] pg_regress/jsonb ERROR:  expected JSON array
2024-09-08 14:51:58.265 KST client backend[3076343] pg_regress/jsonb HINT:  See the array element [1] of key "ia2".
2024-09-08 14:51:58.265 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT ia2 FROM jsonb_populate_record(NULL::jsbrec, '{"ia2": [[1, 2], 3, 4]}') q;
2024-09-08 14:51:58.265 KST client backend[3076343] pg_regress/jsonb ERROR:  value for domain jsb_int_array_2d violates check constraint "jsb_int_array_2d_check"
2024-09-08 14:51:58.265 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT ia2d FROM jsonb_populate_record(NULL::jsbrec, '{"ia2d": [[1, "2"], [null, 4]]}') q;
2024-09-08 14:51:58.265 KST client backend[3076343] pg_regress/jsonb ERROR:  malformed JSON array
2024-09-08 14:51:58.265 KST client backend[3076343] pg_regress/jsonb DETAIL:  Multidimensional arrays must have sub-arrays with matching dimensions.
2024-09-08 14:51:58.265 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT ia3 FROM jsonb_populate_record(NULL::jsbrec, '{"ia3": [ [[1, 2], [3, 4]], [[5, 6], [7, 8], [9, 10]] ]}') q;
2024-09-08 14:51:58.265 KST client backend[3076343] pg_regress/jsonb ERROR:  expected JSON array
2024-09-08 14:51:58.265 KST client backend[3076343] pg_regress/jsonb HINT:  See the value of key "ta".
2024-09-08 14:51:58.265 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT ta FROM jsonb_populate_record(NULL::jsbrec, '{"ta": 123}') q;
2024-09-08 14:51:58.265 KST client backend[3076343] pg_regress/jsonb ERROR:  expected JSON array
2024-09-08 14:51:58.265 KST client backend[3076343] pg_regress/jsonb HINT:  See the array element [1] of key "ta".
2024-09-08 14:51:58.265 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT ta FROM jsonb_populate_record(NULL::jsbrec, '{"ta": [[1, 2, 3], {"k": "v"}]}') q;
2024-09-08 14:51:58.266 KST client backend[3076343] pg_regress/jsonb ERROR:  value too long for type character(10)
2024-09-08 14:51:58.266 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT c FROM jsonb_populate_record(NULL::jsbrec, '{"c": "aaaaaaaaaaaaa"}') q;
2024-09-08 14:51:58.266 KST client backend[3076343] pg_regress/jsonb ERROR:  expected JSON array
2024-09-08 14:51:58.266 KST client backend[3076343] pg_regress/jsonb HINT:  See the value of key "ca".
2024-09-08 14:51:58.266 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT ca FROM jsonb_populate_record(NULL::jsbrec, '{"ca": 123}') q;
2024-09-08 14:51:58.266 KST client backend[3076343] pg_regress/jsonb ERROR:  value too long for type character(10)
2024-09-08 14:51:58.266 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT ca FROM jsonb_populate_record(NULL::jsbrec, '{"ca": ["aaaaaaaaaaaaaaaa"]}') q;
2024-09-08 14:51:58.266 KST client backend[3076343] pg_regress/jsonb ERROR:  expected JSON array
2024-09-08 14:51:58.266 KST client backend[3076343] pg_regress/jsonb HINT:  See the array element [1] of key "ca".
2024-09-08 14:51:58.266 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT ca FROM jsonb_populate_record(NULL::jsbrec, '{"ca": [[1, 2, 3], {"k": "v"}]}') q;
2024-09-08 14:51:58.267 KST client backend[3076343] pg_regress/jsonb ERROR:  expected JSON array
2024-09-08 14:51:58.267 KST client backend[3076343] pg_regress/jsonb HINT:  See the value of key "jsa".
2024-09-08 14:51:58.267 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsa FROM jsonb_populate_record(NULL::jsbrec, '{"jsa": 123}') q;
2024-09-08 14:51:58.267 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot call populate_composite on a scalar
2024-09-08 14:51:58.267 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT rec FROM jsonb_populate_record(NULL::jsbrec, '{"rec": 123}') q;
2024-09-08 14:51:58.267 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot call populate_composite on an array
2024-09-08 14:51:58.267 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT rec FROM jsonb_populate_record(NULL::jsbrec, '{"rec": [1, 2]}') q;
2024-09-08 14:51:58.267 KST client backend[3076343] pg_regress/jsonb ERROR:  expected JSON array
2024-09-08 14:51:58.267 KST client backend[3076343] pg_regress/jsonb HINT:  See the value of key "reca".
2024-09-08 14:51:58.267 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT reca FROM jsonb_populate_record(NULL::jsbrec, '{"reca": 123}') q;
2024-09-08 14:51:58.267 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot call populate_composite on a scalar
2024-09-08 14:51:58.267 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT reca FROM jsonb_populate_record(NULL::jsbrec, '{"reca": [1, 2]}') q;
2024-09-08 14:51:58.267 KST client backend[3076344] pg_regress/json ERROR:  wrong flag in flag array: ""
2024-09-08 14:51:58.267 KST client backend[3076344] pg_regress/json HINT:  Possible values are: "string", "numeric", "boolean", "key", and "all".
2024-09-08 14:51:58.267 KST client backend[3076344] pg_regress/json STATEMENT:  select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '""');
2024-09-08 14:51:58.267 KST client backend[3076344] pg_regress/json ERROR:  wrong flag type, only arrays and scalars are allowed
2024-09-08 14:51:58.267 KST client backend[3076344] pg_regress/json STATEMENT:  select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '{}');
2024-09-08 14:51:58.267 KST client backend[3076344] pg_regress/json ERROR:  flag array element is not a string
2024-09-08 14:51:58.267 KST client backend[3076344] pg_regress/json HINT:  Possible values are: "string", "numeric", "boolean", "key", and "all".
2024-09-08 14:51:58.267 KST client backend[3076344] pg_regress/json STATEMENT:  select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, 'null');
2024-09-08 14:51:58.267 KST client backend[3076344] pg_regress/json ERROR:  flag array element is not a string
2024-09-08 14:51:58.267 KST client backend[3076344] pg_regress/json HINT:  Possible values are: "string", "numeric", "boolean", "key", and "all".
2024-09-08 14:51:58.267 KST client backend[3076344] pg_regress/json STATEMENT:  select json_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::json, '["all", null]');
2024-09-08 14:51:58.268 KST client backend[3076343] pg_regress/jsonb ERROR:  could not determine row type for result of jsonb_populate_record
2024-09-08 14:51:58.268 KST client backend[3076343] pg_regress/jsonb HINT:  Provide a non-null record argument, or call the function in the FROM clause using a column definition list.
2024-09-08 14:51:58.268 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_populate_record(null::record, '{"x": 0, "y": 1}');
2024-09-08 14:51:58.268 KST client backend[3076343] pg_regress/jsonb ERROR:  value for domain jb_ordered_pair violates check constraint "jb_ordered_pair_check"
2024-09-08 14:51:58.268 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_populate_record(row(1,2)::jb_ordered_pair, '{"x": 1, "y": 0}');
2024-09-08 14:51:58.268 KST client backend[3076343] pg_regress/jsonb ERROR:  invalid input syntax for type timestamp: "[100, 200, 300]"
2024-09-08 14:51:58.268 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT * FROM jsonb_populate_recordset(row('def',99,NULL)::jbpop,'[{"c":[100,200,300],"x":43.2},{"a":{"z":true},"b":3,"c":"2012-01-20 10:42:53"}]') q;
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb ERROR:  could not determine row type for result of jsonb_populate_recordset
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb HINT:  Provide a non-null record argument, or call the function in the FROM clause using a column definition list.
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_populate_recordset(null::record, '[{"x": 0, "y": 1}]');
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb ERROR:  could not determine row type for result of jsonb_populate_recordset
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb HINT:  Provide a non-null record argument, or call the function in the FROM clause using a column definition list.
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_populate_recordset(null::record, '[]');
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb ERROR:  value for domain jb_ordered_pair violates check constraint "jb_ordered_pair_check"
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb STATEMENT:  SELECT jsonb_populate_recordset(row(1,2)::jb_ordered_pair, '[{"x": 1, "y": 0}]');
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb ERROR:  function return row and query-specified return row do not match
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb DETAIL:  Returned row contains 1 attribute, but query expects 2.
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select * from jsonb_populate_recordset(row(0::int),'[{"a":"1","b":"2"},{"a":"3"}]') q (a text, b text);
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb ERROR:  function return row and query-specified return row do not match
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb DETAIL:  Returned type integer at ordinal position 1, but query expects text.
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select * from jsonb_populate_recordset(row(0::int,0::int),'[{"a":"1","b":"2"},{"a":"3"}]') q (a text, b text);
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb ERROR:  function return row and query-specified return row do not match
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb DETAIL:  Returned row contains 3 attributes, but query expects 2.
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select * from jsonb_populate_recordset(row(0::int,0::int,0::int),'[{"a":"1","b":"2"},{"a":"3"}]') q (a text, b text);
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb ERROR:  function return row and query-specified return row do not match
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb DETAIL:  Returned type integer at ordinal position 1, but query expects text.
2024-09-08 14:51:58.269 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select * from jsonb_populate_recordset(row(1000000000::int,50::int),'[{"b":"2"},{"a":"3"}]') q (a text, b text);
2024-09-08 14:51:58.270 KST client backend[3076343] pg_regress/jsonb ERROR:  expected JSON array
2024-09-08 14:51:58.270 KST client backend[3076343] pg_regress/jsonb HINT:  See the value of key "ia".
2024-09-08 14:51:58.270 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select * from jsonb_to_record('{"ia": 123}') as x(ia _int4);
2024-09-08 14:51:58.270 KST client backend[3076343] pg_regress/jsonb ERROR:  expected JSON array
2024-09-08 14:51:58.270 KST client backend[3076343] pg_regress/jsonb HINT:  See the array element [1] of key "ia".
2024-09-08 14:51:58.270 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select * from jsonb_to_record('{"ia": [[1], 2]}') as x(ia _int4);
2024-09-08 14:51:58.270 KST client backend[3076343] pg_regress/jsonb ERROR:  malformed JSON array
2024-09-08 14:51:58.270 KST client backend[3076343] pg_regress/jsonb DETAIL:  Multidimensional arrays must have sub-arrays with matching dimensions.
2024-09-08 14:51:58.270 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select * from jsonb_to_record('{"ia": [[1], [2, 3]]}') as x(ia _int4);
2024-09-08 14:51:58.334 KST client backend[3076343] pg_regress/jsonb ERROR:  path element at position 2 is null
2024-09-08 14:51:58.334 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select jsonb_set('{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}'::jsonb, '{d,NULL,0}', '[1,2,3]');
2024-09-08 14:51:58.334 KST client backend[3076343] pg_regress/jsonb ERROR:  path element at position 2 is null
2024-09-08 14:51:58.334 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select jsonb_set('{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}'::jsonb, '{d,NULL,0}', '{"1": 2}');
2024-09-08 14:51:58.334 KST client backend[3076343] pg_regress/jsonb ERROR:  path element at position 2 is not an integer: "-1e"
2024-09-08 14:51:58.334 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select '{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}'::jsonb #- '{b,-1e}';
2024-09-08 14:51:58.334 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot delete from scalar
2024-09-08 14:51:58.334 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select '"a"'::jsonb - 'a';
2024-09-08 14:51:58.334 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot delete from scalar
2024-09-08 14:51:58.334 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select '"a"'::jsonb - 1;
2024-09-08 14:51:58.334 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot delete from object using integer index
2024-09-08 14:51:58.334 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select '{}'::jsonb -  1;
2024-09-08 14:51:58.335 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot delete path in scalar
2024-09-08 14:51:58.335 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select '"a"'::jsonb #- '{a}';
2024-09-08 14:51:58.335 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot set path in scalar
2024-09-08 14:51:58.335 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select jsonb_set('"a"','{a}','"b"');
2024-09-08 14:51:58.335 KST client backend[3076343] pg_regress/jsonb ERROR:  path element at position 2 is not an integer: "non_integer"
2024-09-08 14:51:58.335 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select jsonb_set('{"a": [1, 2, 3]}', '{a, non_integer}', '"new_value"');
2024-09-08 14:51:58.335 KST client backend[3076343] pg_regress/jsonb ERROR:  path element at position 3 is not an integer: "non_integer"
2024-09-08 14:51:58.335 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select jsonb_set('{"a": {"b": [1, 2, 3]}}', '{a, b, non_integer}', '"new_value"');
2024-09-08 14:51:58.335 KST client backend[3076343] pg_regress/jsonb ERROR:  path element at position 3 is null
2024-09-08 14:51:58.335 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select jsonb_set('{"a": {"b": [1, 2, 3]}}', '{a, b, NULL}', '"new_value"');
2024-09-08 14:51:58.336 KST client backend[3076343] pg_regress/jsonb ERROR:  null_value_treatment must be "delete_key", "return_target", "use_json_null", or "raise_exception"
2024-09-08 14:51:58.336 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select jsonb_set_lax('{"a":1,"b":2}', '{b}', null, true, null);
2024-09-08 14:51:58.336 KST client backend[3076343] pg_regress/jsonb ERROR:  null_value_treatment must be "delete_key", "return_target", "use_json_null", or "raise_exception"
2024-09-08 14:51:58.336 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select jsonb_set_lax('{"a":1,"b":2}', '{b}', null, true, 'no_such_treatment');
2024-09-08 14:51:58.336 KST client backend[3076343] pg_regress/jsonb ERROR:  JSON value must not be null
2024-09-08 14:51:58.336 KST client backend[3076343] pg_regress/jsonb DETAIL:  Exception was raised because null_value_treatment is "raise_exception".
2024-09-08 14:51:58.336 KST client backend[3076343] pg_regress/jsonb HINT:  To avoid, either change the null_value_treatment argument or ensure that an SQL NULL is not passed.
2024-09-08 14:51:58.336 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select jsonb_set_lax('{"a":1,"b":2}', '{b}', null, null_value_treatment => 'raise_exception') as raise_exception;
2024-09-08 14:51:58.337 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot replace existing key
2024-09-08 14:51:58.337 KST client backend[3076343] pg_regress/jsonb HINT:  Try using the function jsonb_set to replace key value.
2024-09-08 14:51:58.337 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select jsonb_insert('{"a": {"b": "value"}}', '{a, b}', '"new_value"');
2024-09-08 14:51:58.337 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot replace existing key
2024-09-08 14:51:58.337 KST client backend[3076343] pg_regress/jsonb HINT:  Try using the function jsonb_set to replace key value.
2024-09-08 14:51:58.337 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select jsonb_insert('{"a": {"b": "value"}}', '{a, b}', '"new_value"', true);
2024-09-08 14:51:58.337 KST client backend[3076343] pg_regress/jsonb ERROR:  subscript type numeric is not supported at character 34
2024-09-08 14:51:58.337 KST client backend[3076343] pg_regress/jsonb HINT:  jsonb subscript must be coercible to either integer or text.
2024-09-08 14:51:58.337 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select ('[1, "2", null]'::jsonb)[1.0];
2024-09-08 14:51:58.338 KST client backend[3076343] pg_regress/jsonb ERROR:  jsonb subscript does not support slices at character 32
2024-09-08 14:51:58.338 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select ('{"a": 1}'::jsonb)['a':'b'];
2024-09-08 14:51:58.338 KST client backend[3076343] pg_regress/jsonb ERROR:  jsonb subscript does not support slices at character 36
2024-09-08 14:51:58.338 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select ('[1, "2", null]'::jsonb)[1:2];
2024-09-08 14:51:58.338 KST client backend[3076343] pg_regress/jsonb ERROR:  jsonb subscript does not support slices at character 35
2024-09-08 14:51:58.338 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select ('[1, "2", null]'::jsonb)[:2];
2024-09-08 14:51:58.338 KST client backend[3076343] pg_regress/jsonb ERROR:  jsonb subscript does not support slices at character 34
2024-09-08 14:51:58.338 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select ('[1, "2", null]'::jsonb)[1:];
2024-09-08 14:51:58.338 KST client backend[3076343] pg_regress/jsonb ERROR:  jsonb subscript does not support slices
2024-09-08 14:51:58.338 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select ('[1, "2", null]'::jsonb)[:];
2024-09-08 14:51:58.340 KST client backend[3076343] pg_regress/jsonb ERROR:  jsonb subscript in assignment must not be null
2024-09-08 14:51:58.340 KST client backend[3076343] pg_regress/jsonb STATEMENT:  update test_jsonb_subscript set test_json[NULL] = '1';
2024-09-08 14:51:58.341 KST client backend[3076343] pg_regress/jsonb ERROR:  path element at position 1 is out of range: -8
2024-09-08 14:51:58.341 KST client backend[3076343] pg_regress/jsonb STATEMENT:  update test_jsonb_subscript set test_json[-8] = '1';
2024-09-08 14:51:58.343 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot replace existing key
2024-09-08 14:51:58.343 KST client backend[3076343] pg_regress/jsonb DETAIL:  The path assumes key is a composite object, but it is a scalar value.
2024-09-08 14:51:58.343 KST client backend[3076343] pg_regress/jsonb STATEMENT:  update test_jsonb_subscript set test_json['a']['b'] = '1';
2024-09-08 14:51:58.343 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot replace existing key
2024-09-08 14:51:58.343 KST client backend[3076343] pg_regress/jsonb DETAIL:  The path assumes key is a composite object, but it is a scalar value.
2024-09-08 14:51:58.343 KST client backend[3076343] pg_regress/jsonb STATEMENT:  update test_jsonb_subscript set test_json['a']['b']['c'] = '1';
2024-09-08 14:51:58.343 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot replace existing key
2024-09-08 14:51:58.343 KST client backend[3076343] pg_regress/jsonb DETAIL:  The path assumes key is a composite object, but it is a scalar value.
2024-09-08 14:51:58.343 KST client backend[3076343] pg_regress/jsonb STATEMENT:  update test_jsonb_subscript set test_json['a'][0] = '1';
2024-09-08 14:51:58.343 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot replace existing key
2024-09-08 14:51:58.343 KST client backend[3076343] pg_regress/jsonb DETAIL:  The path assumes key is a composite object, but it is a scalar value.
2024-09-08 14:51:58.343 KST client backend[3076343] pg_regress/jsonb STATEMENT:  update test_jsonb_subscript set test_json['a'][0]['c'] = '1';
2024-09-08 14:51:58.343 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot replace existing key
2024-09-08 14:51:58.343 KST client backend[3076343] pg_regress/jsonb DETAIL:  The path assumes key is a composite object, but it is a scalar value.
2024-09-08 14:51:58.343 KST client backend[3076343] pg_regress/jsonb STATEMENT:  update test_jsonb_subscript set test_json['a'][0][0] = '1';
2024-09-08 14:51:58.343 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot replace existing key
2024-09-08 14:51:58.343 KST client backend[3076343] pg_regress/jsonb DETAIL:  The path assumes key is a composite object, but it is a scalar value.
2024-09-08 14:51:58.343 KST client backend[3076343] pg_regress/jsonb STATEMENT:  update test_jsonb_subscript set test_json[0] = '1';
2024-09-08 14:51:58.344 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot replace existing key
2024-09-08 14:51:58.344 KST client backend[3076343] pg_regress/jsonb DETAIL:  The path assumes key is a composite object, but it is a scalar value.
2024-09-08 14:51:58.344 KST client backend[3076343] pg_regress/jsonb STATEMENT:  update test_jsonb_subscript set test_json[0][0] = '1';
2024-09-08 14:51:58.348 KST client backend[3076343] pg_regress/jsonb ERROR:  wrong flag in flag array: ""
2024-09-08 14:51:58.348 KST client backend[3076343] pg_regress/jsonb HINT:  Possible values are: "string", "numeric", "boolean", "key", and "all".
2024-09-08 14:51:58.348 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select jsonb_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::jsonb, '""');
2024-09-08 14:51:58.348 KST client backend[3076343] pg_regress/jsonb ERROR:  wrong flag type, only arrays and scalars are allowed
2024-09-08 14:51:58.348 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select jsonb_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::jsonb, '{}');
2024-09-08 14:51:58.348 KST client backend[3076343] pg_regress/jsonb ERROR:  flag array element is not a string
2024-09-08 14:51:58.348 KST client backend[3076343] pg_regress/jsonb HINT:  Possible values are: "string", "numeric", "boolean", "key", and "all".
2024-09-08 14:51:58.348 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select jsonb_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::jsonb, 'null');
2024-09-08 14:51:58.348 KST client backend[3076343] pg_regress/jsonb ERROR:  flag array element is not a string
2024-09-08 14:51:58.348 KST client backend[3076343] pg_regress/jsonb HINT:  Possible values are: "string", "numeric", "boolean", "key", and "all".
2024-09-08 14:51:58.348 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select jsonb_to_tsvector('english', '{"a": "aaa in bbb", "b": 123, "c": 456, "d": true, "f": false, "g": null}'::jsonb, '["all", null]');
2024-09-08 14:51:58.348 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot cast jsonb array to type boolean
2024-09-08 14:51:58.348 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select '[]'::jsonb::bool;
2024-09-08 14:51:58.348 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot cast jsonb array to type double precision
2024-09-08 14:51:58.348 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select '[1.0]'::jsonb::float;
2024-09-08 14:51:58.349 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot cast jsonb string to type integer
2024-09-08 14:51:58.349 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select '"hello"'::jsonb::int4;
2024-09-08 14:51:58.349 KST client backend[3076343] pg_regress/jsonb ERROR:  cannot cast jsonb object to type numeric
2024-09-08 14:51:58.349 KST client backend[3076343] pg_regress/jsonb STATEMENT:  select '{}'::jsonb::numeric;
2024-09-08 14:51:58.372 KST client backend[3076373] pg_regress/plancache ERROR:  relation "pcachetest" does not exist at character 35
2024-09-08 14:51:58.372 KST client backend[3076373] pg_regress/plancache STATEMENT:  EXECUTE prepstmt;
2024-09-08 14:51:58.372 KST client backend[3076373] pg_regress/plancache ERROR:  relation "pcachetest" does not exist at character 44
2024-09-08 14:51:58.372 KST client backend[3076373] pg_regress/plancache STATEMENT:  EXECUTE prepstmt2(123);
2024-09-08 14:51:58.373 KST client backend[3076373] pg_regress/plancache ERROR:  cached plan must not change result type
2024-09-08 14:51:58.373 KST client backend[3076373] pg_regress/plancache STATEMENT:  EXECUTE prepstmt;
2024-09-08 14:51:58.373 KST client backend[3076373] pg_regress/plancache ERROR:  cached plan must not change result type
2024-09-08 14:51:58.373 KST client backend[3076373] pg_regress/plancache STATEMENT:  EXECUTE prepstmt2(123);
2024-09-08 14:51:58.373 KST client backend[3076385] pg_regress/prepare ERROR:  prepared statement "q1" already exists
2024-09-08 14:51:58.373 KST client backend[3076385] pg_regress/prepare STATEMENT:  PREPARE q1 AS SELECT 2;
2024-09-08 14:51:58.374 KST client backend[3076387] pg_regress/domain ERROR:  cannot drop type domaindroptest because other objects depend on it
2024-09-08 14:51:58.374 KST client backend[3076387] pg_regress/domain DETAIL:  type dependenttypetest depends on type domaindroptest
2024-09-08 14:51:58.374 KST client backend[3076387] pg_regress/domain HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:58.374 KST client backend[3076387] pg_regress/domain STATEMENT:  drop domain domaindroptest;
2024-09-08 14:51:58.375 KST client backend[3076387] pg_regress/domain ERROR:  type "domaindroptest" does not exist
2024-09-08 14:51:58.375 KST client backend[3076387] pg_regress/domain STATEMENT:  drop domain domaindroptest cascade;
2024-09-08 14:51:58.375 KST client backend[3076390] pg_regress/alter_table ERROR:  relation "attmp_wrong" does not exist
2024-09-08 14:51:58.375 KST client backend[3076390] pg_regress/alter_table STATEMENT:  COMMENT ON TABLE attmp_wrong IS 'table comment';
2024-09-08 14:51:58.375 KST client backend[3076392] pg_regress/sequence ERROR:  INCREMENT must not be zero
2024-09-08 14:51:58.375 KST client backend[3076392] pg_regress/sequence STATEMENT:  CREATE SEQUENCE sequence_testx INCREMENT BY 0;
2024-09-08 14:51:58.376 KST client backend[3076392] pg_regress/sequence ERROR:  MINVALUE (20) must be less than MAXVALUE (-1)
2024-09-08 14:51:58.376 KST client backend[3076392] pg_regress/sequence STATEMENT:  CREATE SEQUENCE sequence_testx INCREMENT BY -1 MINVALUE 20;
2024-09-08 14:51:58.376 KST client backend[3076392] pg_regress/sequence ERROR:  MINVALUE (1) must be less than MAXVALUE (-20)
2024-09-08 14:51:58.376 KST client backend[3076392] pg_regress/sequence STATEMENT:  CREATE SEQUENCE sequence_testx INCREMENT BY 1 MAXVALUE -20;
2024-09-08 14:51:58.376 KST client backend[3076392] pg_regress/sequence ERROR:  START value (10) cannot be greater than MAXVALUE (-1)
2024-09-08 14:51:58.376 KST client backend[3076392] pg_regress/sequence STATEMENT:  CREATE SEQUENCE sequence_testx INCREMENT BY -1 START 10;
2024-09-08 14:51:58.376 KST client backend[3076390] pg_regress/alter_table ERROR:  column name "xmin" conflicts with a system column name
2024-09-08 14:51:58.376 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE attmp ADD COLUMN xmin integer;
2024-09-08 14:51:58.376 KST client backend[3076392] pg_regress/sequence ERROR:  START value (-10) cannot be less than MINVALUE (1)
2024-09-08 14:51:58.376 KST client backend[3076392] pg_regress/sequence STATEMENT:  CREATE SEQUENCE sequence_testx INCREMENT BY 1 START -10;
2024-09-08 14:51:58.376 KST client backend[3076392] pg_regress/sequence ERROR:  CACHE (0) must be greater than zero
2024-09-08 14:51:58.376 KST client backend[3076392] pg_regress/sequence STATEMENT:  CREATE SEQUENCE sequence_testx CACHE 0;
2024-09-08 14:51:58.376 KST client backend[3076394] pg_regress/polymorphism ERROR:  operator does not exist: point + integer at character 13
2024-09-08 14:51:58.376 KST client backend[3076394] pg_regress/polymorphism HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.376 KST client backend[3076394] pg_regress/polymorphism QUERY:  
	  select x + 1
	
2024-09-08 14:51:58.376 KST client backend[3076394] pg_regress/polymorphism CONTEXT:  SQL function "polyf" during inlining
2024-09-08 14:51:58.376 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select polyf(point(3,4));
2024-09-08 14:51:58.376 KST client backend[3076393] pg_regress/conversion ERROR:  conversion "myconv" already exists
2024-09-08 14:51:58.376 KST client backend[3076393] pg_regress/conversion STATEMENT:  CREATE CONVERSION myconv FOR 'LATIN1' TO 'UTF8' FROM iso8859_1_to_utf8;
2024-09-08 14:51:58.377 KST client backend[3076392] pg_regress/sequence ERROR:  invalid OWNED BY option
2024-09-08 14:51:58.377 KST client backend[3076392] pg_regress/sequence HINT:  Specify OWNED BY table.column or OWNED BY NONE.
2024-09-08 14:51:58.377 KST client backend[3076392] pg_regress/sequence STATEMENT:  CREATE SEQUENCE sequence_testx OWNED BY nobody;
2024-09-08 14:51:58.377 KST client backend[3076393] pg_regress/conversion ERROR:  default conversion for LATIN1 to UTF8 already exists
2024-09-08 14:51:58.377 KST client backend[3076393] pg_regress/conversion STATEMENT:  CREATE DEFAULT CONVERSION public.mydef2 FOR 'LATIN1' TO 'UTF8' FROM iso8859_1_to_utf8;
2024-09-08 14:51:58.377 KST client backend[3076393] pg_regress/conversion ERROR:  conversion "myconv_bad" does not exist
2024-09-08 14:51:58.377 KST client backend[3076393] pg_regress/conversion STATEMENT:  COMMENT ON CONVERSION myconv_bad IS 'foo';
2024-09-08 14:51:58.377 KST client backend[3076392] pg_regress/sequence ERROR:  sequence cannot be owned by relation "pg_class_oid_index"
2024-09-08 14:51:58.377 KST client backend[3076392] pg_regress/sequence DETAIL:  This operation is not supported for indexes.
2024-09-08 14:51:58.377 KST client backend[3076392] pg_regress/sequence STATEMENT:  CREATE SEQUENCE sequence_testx OWNED BY pg_class_oid_index.oid;
2024-09-08 14:51:58.377 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine element type of "anyarray" argument
2024-09-08 14:51:58.377 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select polyf(stavalues1) from pg_statistic;
2024-09-08 14:51:58.377 KST client backend[3076387] pg_regress/domain ERROR:  value too long for type character varying(5)
2024-09-08 14:51:58.377 KST client backend[3076387] pg_regress/domain STATEMENT:  INSERT INTO basictest values ('88', 'haha', 'short text', '123.12');
2024-09-08 14:51:58.378 KST client backend[3076387] pg_regress/domain ERROR:  value too long for type character varying(5)
2024-09-08 14:51:58.378 KST client backend[3076387] pg_regress/domain CONTEXT:  COPY basictest, line 1, column testvarchar: "notsoshorttext"
2024-09-08 14:51:58.378 KST client backend[3076387] pg_regress/domain STATEMENT:  COPY basictest (testvarchar) FROM stdin;
2024-09-08 14:51:58.378 KST client backend[3076394] pg_regress/polymorphism ERROR:  return type anyarray is not supported for SQL functions
2024-09-08 14:51:58.378 KST client backend[3076394] pg_regress/polymorphism CONTEXT:  SQL function "polyf" during inlining
2024-09-08 14:51:58.378 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select polyf(stavalues1) from pg_statistic;
2024-09-08 14:51:58.378 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine result data type
2024-09-08 14:51:58.378 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyrange requires at least one input of type anyrange or anymultirange.
2024-09-08 14:51:58.378 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  create function polyf(x anyelement) returns anyrange as $$
	  select array[x + 1, x + 2]
	$$ language sql;
2024-09-08 14:51:58.378 KST client backend[3076392] pg_regress/sequence ERROR:  sequence must be in same schema as table it is linked to
2024-09-08 14:51:58.378 KST client backend[3076392] pg_regress/sequence STATEMENT:  CREATE SEQUENCE sequence_testx OWNED BY pg_class.relname;
2024-09-08 14:51:58.378 KST client backend[3076385] pg_regress/prepare ERROR:  wrong number of parameters for prepared statement "q3"
2024-09-08 14:51:58.378 KST client backend[3076385] pg_regress/prepare DETAIL:  Expected 5 parameters but got 1.
2024-09-08 14:51:58.378 KST client backend[3076385] pg_regress/prepare STATEMENT:  EXECUTE q3('bool');
2024-09-08 14:51:58.378 KST client backend[3076385] pg_regress/prepare ERROR:  wrong number of parameters for prepared statement "q3"
2024-09-08 14:51:58.378 KST client backend[3076385] pg_regress/prepare DETAIL:  Expected 5 parameters but got 6.
2024-09-08 14:51:58.378 KST client backend[3076385] pg_regress/prepare STATEMENT:  EXECUTE q3('bytea', 5::smallint, 10.5::float, false, 4::bigint, true);
2024-09-08 14:51:58.378 KST client backend[3076385] pg_regress/prepare ERROR:  parameter $3 of type boolean cannot be coerced to the expected type double precision at character 38
2024-09-08 14:51:58.378 KST client backend[3076385] pg_regress/prepare HINT:  You will need to rewrite or cast the expression.
2024-09-08 14:51:58.378 KST client backend[3076385] pg_regress/prepare STATEMENT:  EXECUTE q3(5::smallint, 10.5::float, false, 4::bigint, 'bytea');
2024-09-08 14:51:58.378 KST client backend[3076385] pg_regress/prepare ERROR:  type "nonexistenttype" does not exist at character 12
2024-09-08 14:51:58.378 KST client backend[3076385] pg_regress/prepare STATEMENT:  PREPARE q4(nonexistenttype) AS SELECT $1;
2024-09-08 14:51:58.379 KST client backend[3076398] pg_regress/with ERROR:  could not implement recursive UNION
2024-09-08 14:51:58.379 KST client backend[3076398] pg_regress/with DETAIL:  All column datatypes must be hashable.
2024-09-08 14:51:58.379 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE t(n) AS (
	    VALUES (1::money)
	UNION
	    SELECT n+1::money FROM t WHERE n < 100::money
	)
	SELECT sum(n) FROM t;
2024-09-08 14:51:58.379 KST client backend[3076392] pg_regress/sequence ERROR:  column "b" of relation "sequence_test_table" does not exist
2024-09-08 14:51:58.379 KST client backend[3076392] pg_regress/sequence STATEMENT:  CREATE SEQUENCE sequence_testx OWNED BY sequence_test_table.b;
2024-09-08 14:51:58.379 KST client backend[3076394] pg_regress/polymorphism ERROR:  function polyf(int4range, integer, numeric) does not exist at character 8
2024-09-08 14:51:58.379 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.379 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select polyf(int4range(42, 49), 11, 4.5) as fail;
2024-09-08 14:51:58.379 KST client backend[3076391] pg_regress/copy2 ERROR:  column "xyz" of relation "x" does not exist
2024-09-08 14:51:58.379 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x (xyz) from stdin;
2024-09-08 14:51:58.379 KST client backend[3076391] pg_regress/copy2 ERROR:  conflicting or redundant options at character 32
2024-09-08 14:51:58.379 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin (format CSV, FORMAT CSV);
2024-09-08 14:51:58.379 KST client backend[3076391] pg_regress/copy2 ERROR:  conflicting or redundant options at character 32
2024-09-08 14:51:58.379 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin (freeze off, freeze on);
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  conflicting or redundant options at character 35
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin (delimiter ',', delimiter ',');
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  conflicting or redundant options at character 30
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin (null ' ', null ' ');
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  conflicting or redundant options at character 32
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin (header off, header on);
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  conflicting or redundant options at character 31
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin (quote ':', quote ':');
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  conflicting or redundant options at character 32
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin (escape ':', escape ':');
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  conflicting or redundant options at character 37
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin (force_quote (a), force_quote *);
2024-09-08 14:51:58.380 KST client backend[3076394] pg_regress/polymorphism ERROR:  function polyf(int4multirange, integer, numeric) does not exist at character 8
2024-09-08 14:51:58.380 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.380 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select polyf(multirange(int4range(42, 49)), 11, 4.5) as fail;
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  conflicting or redundant options at character 40
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin (force_not_null (a), force_not_null (b));
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  conflicting or redundant options at character 36
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin (force_null (a), force_null (b));
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  conflicting or redundant options at character 45
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin (convert_selectively (a), convert_selectively (b));
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  conflicting or redundant options at character 42
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin (encoding 'sql_ascii', encoding 'sql_ascii');
2024-09-08 14:51:58.380 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine result data type
2024-09-08 14:51:58.380 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anycompatiblerange requires at least one input of type anycompatiblerange or anycompatiblemultirange.
2024-09-08 14:51:58.380 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  create function polyf(x anycompatible) returns anycompatiblerange as $$
	  select array[x + 1, x + 2]
	$$ language sql;
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  cannot specify DELIMITER in BINARY mode
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x to stdin (format BINARY, delimiter ',');
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  cannot specify NULL in BINARY mode
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x to stdin (format BINARY, null 'x');
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  COPY force quote available only in CSV mode
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x to stdin (format TEXT, force_quote(a));
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  COPY force quote only available using COPY TO
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin (format CSV, force_quote(a));
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  COPY force not null available only in CSV mode
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x to stdout (format TEXT, force_not_null(a));
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  COPY force not null only available using COPY FROM
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x to stdin (format CSV, force_not_null(a));
2024-09-08 14:51:58.380 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 32
2024-09-08 14:51:58.380 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.380 KST client backend[3076399] pg_regress/xml STATEMENT:  INSERT INTO xmltest VALUES (1, '<value>one</value>');
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  COPY force null available only in CSV mode
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x to stdout (format TEXT, force_null(a));
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  COPY force null only available using COPY FROM
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x to stdin (format CSV, force_null(a));
2024-09-08 14:51:58.380 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 32
2024-09-08 14:51:58.380 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.380 KST client backend[3076399] pg_regress/xml STATEMENT:  INSERT INTO xmltest VALUES (2, '<value>two</value>');
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  column "d" specified more than once
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x (a, b, c, d, e, d, c) from stdin;
2024-09-08 14:51:58.380 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 32
2024-09-08 14:51:58.380 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.380 KST client backend[3076399] pg_regress/xml STATEMENT:  INSERT INTO xmltest VALUES (3, '<wrong');
2024-09-08 14:51:58.380 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine result data type
2024-09-08 14:51:58.380 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anycompatiblemultirange requires at least one input of type anycompatiblerange or anycompatiblemultirange.
2024-09-08 14:51:58.380 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  create function polyf(x anycompatible) returns anycompatiblemultirange as $$
	  select array[x + 1, x + 2]
	$$ language sql;
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  invalid input syntax for type integer: ""
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 CONTEXT:  COPY x, line 1, column a: ""
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin;
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  missing data for column "e"
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 CONTEXT:  COPY x, line 1: "2000	230	23	23"
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin;
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  missing data for column "e"
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 CONTEXT:  COPY x, line 1: "2001	231	\N	\N"
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin;
2024-09-08 14:51:58.380 KST client backend[3076395] pg_regress/rowtypes ERROR:  malformed record literal: "(Joe)" at character 8
2024-09-08 14:51:58.380 KST client backend[3076395] pg_regress/rowtypes DETAIL:  Too few columns.
2024-09-08 14:51:58.380 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select '(Joe)'::fullname;
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 ERROR:  extra data after last expected column
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 CONTEXT:  COPY x, line 1: "2002	232	40	50	60	70	80"
2024-09-08 14:51:58.380 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin;
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT pg_input_is_valid('<value>one</value>', 'xml');
2024-09-08 14:51:58.381 KST client backend[3076395] pg_regress/rowtypes ERROR:  malformed record literal: "(Joe,,)" at character 8
2024-09-08 14:51:58.381 KST client backend[3076395] pg_regress/rowtypes DETAIL:  Too many columns.
2024-09-08 14:51:58.381 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select '(Joe,,)'::fullname;
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT pg_input_is_valid('<value>one</', 'xml');
2024-09-08 14:51:58.381 KST client backend[3076395] pg_regress/rowtypes ERROR:  malformed record literal: "[]" at character 8
2024-09-08 14:51:58.381 KST client backend[3076395] pg_regress/rowtypes DETAIL:  Missing left parenthesis.
2024-09-08 14:51:58.381 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select '[]'::fullname;
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT message FROM pg_input_error_info('<value>one</', 'xml');
2024-09-08 14:51:58.381 KST client backend[3076395] pg_regress/rowtypes ERROR:  malformed record literal: "(Joe,Blow) /" at character 8
2024-09-08 14:51:58.381 KST client backend[3076395] pg_regress/rowtypes DETAIL:  Junk after right parenthesis.
2024-09-08 14:51:58.381 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select '(Joe,Blow) /'::fullname;
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT pg_input_is_valid('<?xml version="1.0" standalone="y"?><foo/>', 'xml');
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT message FROM pg_input_error_info('<?xml version="1.0" standalone="y"?><foo/>', 'xml');
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlcomment('test');
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlcomment('-test');
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlcomment('test-');
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlcomment('--test');
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlcomment('te st');
2024-09-08 14:51:58.381 KST client backend[3076391] pg_regress/copy2 ERROR:  WHERE clause not allowed with COPY TO at character 18
2024-09-08 14:51:58.381 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x TO stdout WHERE a = 1;
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlconcat(xmlcomment('hello'),
	                 xmlelement(NAME qux, 'foo'),
	                 xmlcomment('world'));
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 18
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlconcat('hello', 'you');
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml ERROR:  argument of XMLCONCAT must be type xml, not type integer at character 18
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlconcat(1, 2);
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 18
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlconcat('bad', '<syntax');
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 18
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlconcat('<foo/>', NULL, '<?xml version="1.1" standalone="no"?><bar/>');
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 18
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.381 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlconcat('<?xml version="1.1"?><foo/>', NULL, '<?xml version="1.1" standalone="no"?><bar/>');
2024-09-08 14:51:58.381 KST client backend[3076394] pg_regress/polymorphism ERROR:  function polyf(integer, numeric[], integer, numeric) does not exist at character 48
2024-09-08 14:51:58.381 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.381 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select x, pg_typeof(x), y, pg_typeof(y)
	  from polyf(11, array[1, 2.2], 42, 34.5);
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlelement(name element,
	                  xmlattributes (1 as one, 'deuce' as two),
	                  'content');
2024-09-08 14:51:58.382 KST client backend[3076391] pg_regress/copy2 ERROR:  column "f" does not exist at character 25
2024-09-08 14:51:58.382 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin WHERE f > 60003;
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlelement(name element,
	                  xmlattributes ('unnamed and wrong'));
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlelement(name element, xmlelement(name nested, 'stuff'));
2024-09-08 14:51:58.382 KST client backend[3076391] pg_regress/copy2 ERROR:  aggregate functions are not allowed in COPY FROM WHERE conditions at character 29
2024-09-08 14:51:58.382 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin WHERE a = max(x.b);
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlelement(name employee, xmlforest(name, age, salary as pay)) FROM emp;
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlelement(name duplicate, xmlattributes(1 as a, 2 as b, 3 as a));
2024-09-08 14:51:58.382 KST client backend[3076387] pg_regress/domain ERROR:  division by zero
2024-09-08 14:51:58.382 KST client backend[3076387] pg_regress/domain STATEMENT:  select * from pg_input_error_info('0', 'weirdfloat');
2024-09-08 14:51:58.382 KST client backend[3076391] pg_regress/copy2 ERROR:  cannot use subquery in COPY FROM WHERE condition at character 27
2024-09-08 14:51:58.382 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin WHERE a IN (SELECT 1 FROM x);
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlelement(name num, 37);
2024-09-08 14:51:58.382 KST client backend[3076394] pg_regress/polymorphism ERROR:  could not determine polymorphic type because input has type unknown
2024-09-08 14:51:58.382 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select polyf(null);
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlelement(name foo, text 'bar');
2024-09-08 14:51:58.382 KST client backend[3076391] pg_regress/copy2 ERROR:  set-returning functions are not allowed in COPY FROM WHERE conditions at character 31
2024-09-08 14:51:58.382 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin WHERE a IN (generate_series(1,5));
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlelement(name foo, xml 'bar');
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlelement(name foo, text 'b<a/>r');
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlelement(name foo, xml 'b<a/>r');
2024-09-08 14:51:58.382 KST client backend[3076391] pg_regress/copy2 ERROR:  window functions are not allowed in COPY FROM WHERE conditions at character 29
2024-09-08 14:51:58.382 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY x from stdin WHERE a = row_number() over(b);
2024-09-08 14:51:58.382 KST client backend[3076398] pg_regress/with ERROR:  operator does not exist: text + integer at character 63
2024-09-08 14:51:58.382 KST client backend[3076398] pg_regress/with HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.382 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE t(n) AS (
	    SELECT '7'
	UNION ALL
	    SELECT n+1 FROM t WHERE n < 10
	)
	SELECT n, pg_typeof(n) FROM t;
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlelement(name foo, array[1, 2, 3]);
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlelement(name foo, bytea 'bar');
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlelement(name foo, bytea 'bar');
2024-09-08 14:51:58.382 KST client backend[3076394] pg_regress/polymorphism ERROR:  could not determine polymorphic type because input has type unknown
2024-09-08 14:51:58.382 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select polyf(null);
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlelement(name foo, xmlattributes(true as bar));
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlelement(name foo, xmlattributes('2009-04-09 00:24:37'::timestamp as bar));
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlelement(name foo, xmlattributes('infinity'::timestamp as bar));
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlelement(name foo, xmlattributes('<>&"''' as funny, xml 'b<a/>r' as funnier));
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(content '');
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(content '  ');
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.382 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(content 'abc');
2024-09-08 14:51:58.382 KST client backend[3076394] pg_regress/polymorphism ERROR:  could not determine polymorphic type anycompatiblerange because input has type unknown
2024-09-08 14:51:58.382 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select polyf(null);
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(content '<abc>x</abc>');
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(content '<invalidentity>&</invalidentity>');
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(content '<undefinedentity>&idontexist;</undefinedentity>');
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(content '<invalidns xmlns=''&lt;''/>');
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(content '<relativens xmlns=''relative''/>');
2024-09-08 14:51:58.383 KST client backend[3076400] pg_regress/temp ERROR:  relation "temptest" does not exist at character 15
2024-09-08 14:51:58.383 KST client backend[3076400] pg_regress/temp STATEMENT:  SELECT * FROM temptest;
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(content '<twoerrors>&idontexist;</unbalanced>');
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(content '<nosuchprefix:tag/>');
2024-09-08 14:51:58.383 KST client backend[3076394] pg_regress/polymorphism ERROR:  could not determine polymorphic type because input has type unknown
2024-09-08 14:51:58.383 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select polyf(null);
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(document '   ');
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(document 'abc');
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(document '<abc>x</abc>');
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(document '<invalidentity>&</abc>');
2024-09-08 14:51:58.383 KST client backend[3076395] pg_regress/rowtypes ERROR:  missing FROM-clause entry for table "q" at character 12
2024-09-08 14:51:58.383 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select f1, q.c1 from quadtable;
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(document '<undefinedentity>&idontexist;</abc>');
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(document '<invalidns xmlns=''&lt;''/>');
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(document '<relativens xmlns=''relative''/>');
2024-09-08 14:51:58.383 KST client backend[3076394] pg_regress/polymorphism ERROR:  could not determine polymorphic type anycompatiblerange because input has type unknown
2024-09-08 14:51:58.383 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select polyf(null);
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(document '<twoerrors>&idontexist;</unbalanced>');
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlparse(document '<nosuchprefix:tag/>');
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlpi(name foo);
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlpi(name xml);
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlpi(name xmlstuff);
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlpi(name foo, 'bar');
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlpi(name foo, 'in?>valid');
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.383 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlpi(name foo, null);
2024-09-08 14:51:58.383 KST client backend[3076394] pg_regress/polymorphism ERROR:  could not determine polymorphic type anycompatiblemultirange because input has type unknown
2024-09-08 14:51:58.383 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select polyf(null);
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlpi(name xml, null);
2024-09-08 14:51:58.384 KST client backend[3076392] pg_regress/sequence ERROR:  sequence type must be smallint, integer, or bigint
2024-09-08 14:51:58.384 KST client backend[3076392] pg_regress/sequence STATEMENT:  CREATE SEQUENCE sequence_testx AS text;
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlpi(name xmlstuff, null);
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlpi(name "xml-stylesheet", 'href="mystyle.css" type="text/css"');
2024-09-08 14:51:58.384 KST client backend[3076392] pg_regress/sequence ERROR:  type "nosuchtype" does not exist at character 35
2024-09-08 14:51:58.384 KST client backend[3076392] pg_regress/sequence STATEMENT:  CREATE SEQUENCE sequence_testx AS nosuchtype;
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlpi(name foo, '   bar');
2024-09-08 14:51:58.384 KST client backend[3076392] pg_regress/sequence ERROR:  MAXVALUE (100000) is out of range for sequence data type smallint
2024-09-08 14:51:58.384 KST client backend[3076392] pg_regress/sequence STATEMENT:  CREATE SEQUENCE sequence_testx AS smallint MAXVALUE 100000;
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 20
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlroot(xml '<foo/>', version no value, standalone no value);
2024-09-08 14:51:58.384 KST client backend[3076392] pg_regress/sequence ERROR:  MINVALUE (-100000) is out of range for sequence data type smallint
2024-09-08 14:51:58.384 KST client backend[3076392] pg_regress/sequence STATEMENT:  CREATE SEQUENCE sequence_testx AS smallint MINVALUE -100000;
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 20
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlroot(xml '<foo/>', version '2.0');
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 20
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlroot(xml '<foo/>', version no value, standalone yes);
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 20
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlroot(xml '<?xml version="1.1"?><foo/>', version no value, standalone yes);
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 28
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlroot(xmlroot(xml '<foo/>', version '1.0'), version '1.1', standalone no);
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 16
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlroot('<?xml version="1.1" standalone="yes"?><foo/>', version no value, standalone no);
2024-09-08 14:51:58.384 KST client backend[3076387] pg_regress/domain ERROR:  value too long for type character varying(4)
2024-09-08 14:51:58.384 KST client backend[3076387] pg_regress/domain STATEMENT:  INSERT INTO domarrtest values (NULL, '{{"toolong","b","c"},{"d","e","f"}}');
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 16
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlroot('<?xml version="1.1" standalone="yes"?><foo/>', version no value, standalone no value);
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 16
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlroot('<?xml version="1.1" standalone="yes"?><foo/>', version no value);
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlroot (
	  xmlelement (
	    name gazonk,
	    xmlattributes (
	      'val' AS name,
	      1 + 1 AS num
	    ),
	    xmlelement (
	      NAME qux,
	      'foo'
	    )
	  ),
	  version '1.0',
	  standalone yes
	);
2024-09-08 14:51:58.384 KST client backend[3076392] pg_regress/sequence ERROR:  MAXVALUE (100000) is out of range for sequence data type smallint
2024-09-08 14:51:58.384 KST client backend[3076392] pg_regress/sequence STATEMENT:  ALTER SEQUENCE sequence_test8 AS smallint;
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 29
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(content 'good' as char(10));
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(document 'bad' as text);
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(DOCUMENT '<foo><bar><val x="y">42</val></bar></foo>' AS text INDENT);
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(CONTENT  '<foo><bar><val x="y">42</val></bar></foo>' AS text INDENT);
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.384 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(DOCUMENT '<foo><bar><val x="y">42</val></bar></foo>' AS text NO INDENT);
2024-09-08 14:51:58.384 KST client backend[3076387] pg_regress/domain ERROR:  value too long for type character varying(4)
2024-09-08 14:51:58.384 KST client backend[3076387] pg_regress/domain CONTEXT:  COPY domarrtest, line 1, column testchar4arr: "{qwerty,w,e}"
2024-09-08 14:51:58.384 KST client backend[3076387] pg_regress/domain STATEMENT:  COPY domarrtest FROM stdin;
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(CONTENT  '<foo><bar><val x="y">42</val></bar></foo>' AS text NO INDENT);
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(DOCUMENT '<foo>73</foo><bar><val x="y">42</val></bar>' AS text INDENT);
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(CONTENT  '<foo>73</foo><bar><val x="y">42</val></bar>' AS text INDENT);
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(DOCUMENT 'text node<foo>73</foo>text node<bar><val x="y">42</val></bar>' AS text INDENT);
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(CONTENT  'text node<foo>73</foo>text node<bar><val x="y">42</val></bar>' AS text INDENT);
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(DOCUMENT '<foo><bar><val x="y">42</val><val x="y">text node<val>73</val></val></bar></foo>' AS text INDENT);
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(CONTENT  '<foo><bar><val x="y">42</val><val x="y">text node<val>73</val></val></bar></foo>' AS text INDENT);
2024-09-08 14:51:58.385 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine transition data type
2024-09-08 14:51:58.385 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyarray requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.385 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggp02a(*) (SFUNC = stfnp, STYPE = anyarray,
	  FINALFUNC = ffp, INITCOND = '{}');
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(DOCUMENT '' AS text INDENT);
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(CONTENT  '' AS text INDENT);
2024-09-08 14:51:58.385 KST client backend[3076395] pg_regress/rowtypes ERROR:  cannot alter table "fullname" because column "people.fn" uses its row type
2024-09-08 14:51:58.385 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  alter table fullname add column suffix text default '';
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(DOCUMENT '  ' AS text INDENT);
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(CONTENT  '  ' AS text INDENT);
2024-09-08 14:51:58.385 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine transition data type
2024-09-08 14:51:58.385 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyarray requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.385 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggp04a(*) (SFUNC = stfp, STYPE = anyarray,
	  FINALFUNC = ffp, INITCOND = '{}');
2024-09-08 14:51:58.385 KST client backend[3076392] pg_regress/sequence ERROR:  MINVALUE (-100000) is out of range for sequence data type smallint
2024-09-08 14:51:58.385 KST client backend[3076392] pg_regress/sequence STATEMENT:  ALTER SEQUENCE sequence_test10 AS smallint;
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(DOCUMENT '<?xml version="1.0" encoding="UTF-8"?><foo><bar><val>73</val></bar></foo>' AS text INDENT);
2024-09-08 14:51:58.385 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine transition data type
2024-09-08 14:51:58.385 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyarray requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.385 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggp04b(*) (SFUNC = stfp, STYPE = anyarray,
	  INITCOND = '{}');
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(CONTENT  '<?xml version="1.0" encoding="UTF-8"?><foo><bar><val>73</val></bar></foo>' AS text INDENT);
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(DOCUMENT '<!DOCTYPE a><a/>' AS text INDENT);
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(CONTENT  '<!DOCTYPE a><a/>' AS text INDENT);
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(DOCUMENT '<foo><bar></bar></foo>' AS text INDENT);
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(CONTENT  '<foo><bar></bar></foo>' AS text INDENT);
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(DOCUMENT '<foo><bar><val x="y">42</val></bar></foo>' AS text) = xmlserialize(DOCUMENT '<foo><bar><val x="y">42</val></bar></foo>' AS text NO INDENT);
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.385 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlserialize(CONTENT  '<foo><bar><val x="y">42</val></bar></foo>' AS text) = xmlserialize(CONTENT '<foo><bar><val x="y">42</val></bar></foo>' AS text NO INDENT);
2024-09-08 14:51:58.385 KST client backend[3076394] pg_regress/polymorphism ERROR:  function tfnp(integer[], anyelement) does not exist
2024-09-08 14:51:58.385 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggp07a(BASETYPE = anyelement, SFUNC = tfnp, STYPE = int[],
	  FINALFUNC = ffp, INITCOND = '{}');
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 12
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml '<foo>bar</foo>' IS DOCUMENT;
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 12
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml '<foo>bar</foo><bar>foo</bar>' IS DOCUMENT;
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 12
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml '<abc/>' IS NOT DOCUMENT;
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 12
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml 'abc' IS NOT DOCUMENT;
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 8
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT '<>' IS NOT DOCUMENT;
2024-09-08 14:51:58.386 KST client backend[3076395] pg_regress/rowtypes ERROR:  subfield "c1" is of type complex but expression is of type integer at character 22
2024-09-08 14:51:58.386 KST client backend[3076395] pg_regress/rowtypes HINT:  You will need to rewrite or cast the expression.
2024-09-08 14:51:58.386 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  update quadtable set q.c1 = 12;
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlelement(name employees, xmlagg(xmlelement(name name, name))) FROM emp;
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlpi(name ":::_xml_abc135.%-&_");
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlpi(name "123");
2024-09-08 14:51:58.386 KST client backend[3076394] pg_regress/polymorphism ERROR:  function tf1p(integer[], anyelement) does not exist
2024-09-08 14:51:58.386 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggp11a(BASETYPE = anyelement, SFUNC = tf1p, STYPE = int[],
	  FINALFUNC = ffp, INITCOND = '{}');
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 39
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml STATEMENT:  PREPARE foo (xml) AS SELECT xmlconcat('<foo/>', $1);
2024-09-08 14:51:58.386 KST client backend[3076394] pg_regress/polymorphism ERROR:  function tf1p(integer[], anyelement) does not exist
2024-09-08 14:51:58.386 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggp11b(BASETYPE = anyelement, SFUNC = tf1p, STYPE = int[],
	  INITCOND = '{}');
2024-09-08 14:51:58.386 KST client backend[3076394] pg_regress/polymorphism ERROR:  function tfp(integer[], anyelement) does not exist
2024-09-08 14:51:58.386 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggp12a(BASETYPE = anyelement, SFUNC = tfp, STYPE = int[],
	  FINALFUNC = ffp, INITCOND = '{}');
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml ERROR:  prepared statement "foo" does not exist
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml STATEMENT:  EXECUTE foo ('<bar/>');
2024-09-08 14:51:58.386 KST client backend[3076394] pg_regress/polymorphism ERROR:  function tfp(integer[], anyelement) does not exist
2024-09-08 14:51:58.386 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggp12b(BASETYPE = anyelement, SFUNC = tfp, STYPE = int[],
	  INITCOND = '{}');
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml ERROR:  prepared statement "foo" does not exist
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml STATEMENT:  EXECUTE foo ('bad');
2024-09-08 14:51:58.386 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine transition data type
2024-09-08 14:51:58.386 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyarray requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.386 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggp13a(BASETYPE = int, SFUNC = tfnp, STYPE = anyarray,
	  FINALFUNC = ffp, INITCOND = '{}');
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 12
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml '<!DOCTYPE a><a/><b/>';
2024-09-08 14:51:58.386 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine transition data type
2024-09-08 14:51:58.386 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyarray requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.386 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggp14a(BASETYPE = int, SFUNC = tf2p, STYPE = anyarray,
	  FINALFUNC = ffp, INITCOND = '{}');
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml ERROR:  prepared statement "foo" does not exist
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml STATEMENT:  EXECUTE foo ('<bar/>');
2024-09-08 14:51:58.386 KST client backend[3076394] pg_regress/polymorphism ERROR:  function tfnp(anyarray, anyelement) does not exist
2024-09-08 14:51:58.386 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggp15a(BASETYPE = anyelement, SFUNC = tfnp,
	  STYPE = anyarray, FINALFUNC = ffp, INITCOND = '{}');
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml ERROR:  prepared statement "foo" does not exist
2024-09-08 14:51:58.386 KST client backend[3076399] pg_regress/xml STATEMENT:  EXECUTE foo ('good');
2024-09-08 14:51:58.386 KST client backend[3076394] pg_regress/polymorphism ERROR:  function tf2p(anyarray, anyelement) does not exist
2024-09-08 14:51:58.386 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggp16a(BASETYPE = anyelement, SFUNC = tf2p,
	  STYPE = anyarray, FINALFUNC = ffp, INITCOND = '{}');
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 12
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml '<!-- in SQL:2006+ a doc is content too--> <?y z?> <!DOCTYPE a><a/>';
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine transition data type
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyarray requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggp17a(BASETYPE = int, SFUNC = tf1p, STYPE = anyarray,
	  FINALFUNC = ffp, INITCOND = '{}');
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 12
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml '<?xml version="1.0"?> <!-- hi--> <!DOCTYPE a><a/>';
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine transition data type
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyarray requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggp17b(BASETYPE = int, SFUNC = tf1p, STYPE = anyarray,
	  INITCOND = '{}');
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 12
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml '<!DOCTYPE a><a/>';
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine transition data type
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyarray requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggp18a(BASETYPE = int, SFUNC = tfp, STYPE = anyarray,
	  FINALFUNC = ffp, INITCOND = '{}');
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 12
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml '<!-- hi--> oops <!DOCTYPE a><a/>';
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine transition data type
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyarray requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggp18b(BASETYPE = int, SFUNC = tfp, STYPE = anyarray,
	  INITCOND = '{}');
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 12
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml '<!-- hi--> <oops/> <!DOCTYPE a><a/>';
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism ERROR:  function tf1p(anyarray, anyelement) does not exist
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggp19a(BASETYPE = anyelement, SFUNC = tf1p,
	  STYPE = anyarray, FINALFUNC = ffp, INITCOND = '{}');
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 12
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml '<!DOCTYPE a><a/><b/>';
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism ERROR:  function tf1p(anyarray, anyelement) does not exist
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggp19b(BASETYPE = anyelement, SFUNC = tf1p,
	  STYPE = anyarray, INITCOND = '{}');
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 42
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml STATEMENT:  CREATE VIEW xmlview2 AS SELECT xmlconcat('hello', 'you');
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml STATEMENT:  CREATE VIEW xmlview3 AS SELECT xmlelement(name element, xmlattributes (1 as ":one:", 'deuce' as two), 'content&');
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.387 KST client backend[3076399] pg_regress/xml STATEMENT:  CREATE VIEW xmlview4 AS SELECT xmlelement(name employee, xmlforest(name, age, salary as pay)) FROM emp;
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine transition data type
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyarray requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn02a(*) (SFUNC = stfnp, STYPE = anyarray,
	  FINALFUNC = ffnp, INITCOND = '{}');
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine transition data type
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyarray requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.387 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn02b(*) (SFUNC = stfnp, STYPE = anyarray,
	  INITCOND = '{}');
2024-09-08 14:51:58.388 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine transition data type
2024-09-08 14:51:58.388 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyarray requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.388 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn04a(*) (SFUNC = stfp, STYPE = anyarray,
	  FINALFUNC = ffnp, INITCOND = '{}');
2024-09-08 14:51:58.388 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.388 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.388 KST client backend[3076399] pg_regress/xml STATEMENT:  CREATE VIEW xmlview6 AS SELECT xmlpi(name foo, 'bar');
2024-09-08 14:51:58.388 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 44
2024-09-08 14:51:58.388 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.388 KST client backend[3076399] pg_regress/xml STATEMENT:  CREATE VIEW xmlview7 AS SELECT xmlroot(xml '<foo/>', version no value, standalone yes);
2024-09-08 14:51:58.388 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 53
2024-09-08 14:51:58.388 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.388 KST client backend[3076399] pg_regress/xml STATEMENT:  CREATE VIEW xmlview8 AS SELECT xmlserialize(content 'good' as char(10));
2024-09-08 14:51:58.388 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 53
2024-09-08 14:51:58.388 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.388 KST client backend[3076399] pg_regress/xml STATEMENT:  CREATE VIEW xmlview9 AS SELECT xmlserialize(content 'good' as text);
2024-09-08 14:51:58.388 KST client backend[3076394] pg_regress/polymorphism ERROR:  function tfnp(integer[], anyelement) does not exist
2024-09-08 14:51:58.388 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn07a(BASETYPE = anyelement, SFUNC = tfnp, STYPE = int[],
	  FINALFUNC = ffnp, INITCOND = '{}');
2024-09-08 14:51:58.388 KST client backend[3076388] pg_regress/truncate ERROR:  cannot truncate a table referenced in a foreign key constraint
2024-09-08 14:51:58.388 KST client backend[3076388] pg_regress/truncate DETAIL:  Table "trunc_b" references "truncate_a".
2024-09-08 14:51:58.388 KST client backend[3076388] pg_regress/truncate HINT:  Truncate table "trunc_b" at the same time, or use TRUNCATE ... CASCADE.
2024-09-08 14:51:58.388 KST client backend[3076388] pg_regress/truncate STATEMENT:  TRUNCATE TABLE truncate_a;
2024-09-08 14:51:58.388 KST client backend[3076394] pg_regress/polymorphism ERROR:  function tfnp(integer[], anyelement) does not exist
2024-09-08 14:51:58.388 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn07b(BASETYPE = anyelement, SFUNC = tfnp, STYPE = int[],
	  INITCOND = '{}');
2024-09-08 14:51:58.388 KST client backend[3076396] pg_regress/returning ERROR:  cannot perform INSERT RETURNING on relation "voo"
2024-09-08 14:51:58.388 KST client backend[3076396] pg_regress/returning HINT:  You need an unconditional ON INSERT DO INSTEAD rule with a RETURNING clause.
2024-09-08 14:51:58.388 KST client backend[3076396] pg_regress/returning STATEMENT:  INSERT INTO voo VALUES(12,'zoo') RETURNING *, f1*2;
2024-09-08 14:51:58.388 KST client backend[3076388] pg_regress/truncate ERROR:  cannot truncate a table referenced in a foreign key constraint
2024-09-08 14:51:58.388 KST client backend[3076388] pg_regress/truncate DETAIL:  Table "trunc_e" references "truncate_a".
2024-09-08 14:51:58.388 KST client backend[3076388] pg_regress/truncate HINT:  Truncate table "trunc_e" at the same time, or use TRUNCATE ... CASCADE.
2024-09-08 14:51:58.388 KST client backend[3076388] pg_regress/truncate STATEMENT:  TRUNCATE TABLE truncate_a,trunc_b;
2024-09-08 14:51:58.388 KST client backend[3076396] pg_regress/returning ERROR:  RETURNING list has too many entries
2024-09-08 14:51:58.388 KST client backend[3076396] pg_regress/returning STATEMENT:  CREATE OR REPLACE RULE voo_i AS ON INSERT TO voo DO INSTEAD
	  INSERT INTO foo VALUES(new.*, 57) RETURNING *;
2024-09-08 14:51:58.389 KST client backend[3076390] pg_regress/alter_table ERROR:  column number must be in range from 1 to 32767 at character 36
2024-09-08 14:51:58.389 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER INDEX attmp_idx ALTER COLUMN 0 SET STATISTICS 1000;
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism ERROR:  function tf1p(integer[], anyelement) does not exist
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn11a(BASETYPE = anyelement, SFUNC = tf1p, STYPE = int[],
	  FINALFUNC = ffnp, INITCOND = '{}');
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism ERROR:  function tfp(integer[], anyelement) does not exist
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn12a(BASETYPE = anyelement, SFUNC = tfp, STYPE = int[],
	  FINALFUNC = ffnp, INITCOND = '{}');
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine transition data type
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyarray requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn13a(BASETYPE = int, SFUNC = tfnp, STYPE = anyarray,
	  FINALFUNC = ffnp, INITCOND = '{}');
2024-09-08 14:51:58.389 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot alter statistics on non-expression column "a" of index "attmp_idx"
2024-09-08 14:51:58.389 KST client backend[3076390] pg_regress/alter_table HINT:  Alter statistics on table column instead.
2024-09-08 14:51:58.389 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER INDEX attmp_idx ALTER COLUMN 1 SET STATISTICS 1000;
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine transition data type
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyarray requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn13b(BASETYPE = int, SFUNC = tfnp, STYPE = anyarray,
	  INITCOND = '{}');
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine transition data type
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyarray requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn14a(BASETYPE = int, SFUNC = tf2p, STYPE = anyarray,
	  FINALFUNC = ffnp, INITCOND = '{}');
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine transition data type
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyarray requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn14b(BASETYPE = int, SFUNC = tf2p, STYPE = anyarray,
	  INITCOND = '{}');
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism ERROR:  function tfnp(anyarray, anyelement) does not exist
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn15a(BASETYPE = anyelement, SFUNC = tfnp,
	  STYPE = anyarray, FINALFUNC = ffnp, INITCOND = '{}');
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism ERROR:  function tfnp(anyarray, anyelement) does not exist
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn15b(BASETYPE = anyelement, SFUNC = tfnp,
	  STYPE = anyarray, INITCOND = '{}');
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism ERROR:  function tf2p(anyarray, anyelement) does not exist
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn16a(BASETYPE = anyelement, SFUNC = tf2p,
	  STYPE = anyarray, FINALFUNC = ffnp, INITCOND = '{}');
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism ERROR:  function tf2p(anyarray, anyelement) does not exist
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn16b(BASETYPE = anyelement, SFUNC = tf2p,
	  STYPE = anyarray, INITCOND = '{}');
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine transition data type
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyarray requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn17a(BASETYPE = int, SFUNC = tf1p, STYPE = anyarray,
	  FINALFUNC = ffnp, INITCOND = '{}');
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine transition data type
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anyarray requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn18a(BASETYPE = int, SFUNC = tfp, STYPE = anyarray,
	  FINALFUNC = ffnp, INITCOND = '{}');
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism ERROR:  function tf1p(anyarray, anyelement) does not exist
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn19a(BASETYPE = anyelement, SFUNC = tf1p,
	  STYPE = anyarray, FINALFUNC = ffnp, INITCOND = '{}');
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism ERROR:  function ffnp(anyarray) does not exist
2024-09-08 14:51:58.389 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  CREATE AGGREGATE myaggn20a(BASETYPE = anyelement, SFUNC = tfp,
	  STYPE = anyarray, FINALFUNC = ffnp, INITCOND = '{}');
2024-09-08 14:51:58.389 KST client backend[3076387] pg_regress/domain ERROR:  duplicate key value violates unique constraint "dcomptable_d1_key"
2024-09-08 14:51:58.389 KST client backend[3076387] pg_regress/domain DETAIL:  Key (d1)=((1,2)) already exists.
2024-09-08 14:51:58.389 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into dcomptable values (row(1,2)::dcomptype);
2024-09-08 14:51:58.390 KST client backend[3076392] pg_regress/sequence ERROR:  null value in column "f2" of relation "serialtest1" violates not-null constraint
2024-09-08 14:51:58.390 KST client backend[3076392] pg_regress/sequence DETAIL:  Failing row contains (wrong, null).
2024-09-08 14:51:58.390 KST client backend[3076392] pg_regress/sequence STATEMENT:  INSERT INTO serialTest1 VALUES ('wrong', NULL);
2024-09-08 14:51:58.390 KST client backend[3076373] pg_regress/plancache ERROR:  new row for relation "pc_list_part_def" violates partition constraint
2024-09-08 14:51:58.390 KST client backend[3076373] pg_regress/plancache DETAIL:  Failing row contains (null).
2024-09-08 14:51:58.390 KST client backend[3076373] pg_regress/plancache STATEMENT:  execute pstmt_def_insert(null);
2024-09-08 14:51:58.390 KST client backend[3076373] pg_regress/plancache ERROR:  new row for relation "pc_list_part_def" violates partition constraint
2024-09-08 14:51:58.390 KST client backend[3076373] pg_regress/plancache DETAIL:  Failing row contains (1).
2024-09-08 14:51:58.390 KST client backend[3076373] pg_regress/plancache STATEMENT:  execute pstmt_def_insert(1);
2024-09-08 14:51:58.390 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 18
2024-09-08 14:51:58.390 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.390 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath('', '<!-- error -->');
2024-09-08 14:51:58.390 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 26
2024-09-08 14:51:58.390 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.390 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath('//text()', '<local:data xmlns:local="http://127.0.0.1"><local:piece id="1">number one</local:piece><local:piece id="2" /></local:data>');
2024-09-08 14:51:58.390 KST client backend[3076388] pg_regress/truncate ERROR:  cannot truncate a table referenced in a foreign key constraint
2024-09-08 14:51:58.390 KST client backend[3076388] pg_regress/truncate DETAIL:  Table "trunc_b" references "truncate_a".
2024-09-08 14:51:58.390 KST client backend[3076388] pg_regress/truncate HINT:  Truncate table "trunc_b" at the same time, or use TRUNCATE ... CASCADE.
2024-09-08 14:51:58.390 KST client backend[3076388] pg_regress/truncate STATEMENT:  TRUNCATE TABLE truncate_a,trunc_e;
2024-09-08 14:51:58.390 KST client backend[3076387] pg_regress/domain ERROR:  column "d1" of table "dcomptable" contains values that violate the new constraint
2024-09-08 14:51:58.390 KST client backend[3076387] pg_regress/domain STATEMENT:  alter domain dcomptype add constraint c2 check ((value).r > (value).i);
2024-09-08 14:51:58.390 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 33
2024-09-08 14:51:58.390 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.390 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath('//loc:piece/@id', '<local:data xmlns:local="http://127.0.0.1"><local:piece id="1">number one</local:piece><local:piece id="2" /></local:data>', ARRAY[ARRAY['loc', 'http://127.0.0.1']]);
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 29
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath('//loc:piece', '<local:data xmlns:local="http://127.0.0.1"><local:piece id="1">number one</local:piece><local:piece id="2" /></local:data>', ARRAY[ARRAY['loc', 'http://127.0.0.1']]);
2024-09-08 14:51:58.391 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dcomptype violates check constraint "c1"
2024-09-08 14:51:58.391 KST client backend[3076387] pg_regress/domain STATEMENT:  select row(2,1)::dcomptype;
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 29
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath('//loc:piece', '<local:data xmlns:local="http://127.0.0.1" xmlns="http://127.0.0.2"><local:piece id="1"><internal>number one</internal><internal2/></local:piece><local:piece id="2" /></local:data>', ARRAY[ARRAY['loc', 'http://127.0.0.1']]);
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 21
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath('//b', '<a>one <b>two</b> three <b>etc</b></a>');
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 26
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath('//text()', '<root>&lt;</root>');
2024-09-08 14:51:58.391 KST client backend[3076388] pg_regress/truncate ERROR:  cannot truncate a table referenced in a foreign key constraint
2024-09-08 14:51:58.391 KST client backend[3076388] pg_regress/truncate DETAIL:  Table "trunc_d" references "trunc_c".
2024-09-08 14:51:58.391 KST client backend[3076388] pg_regress/truncate HINT:  Truncate table "trunc_d" at the same time, or use TRUNCATE ... CASCADE.
2024-09-08 14:51:58.391 KST client backend[3076388] pg_regress/truncate STATEMENT:  TRUNCATE TABLE trunc_c;
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 26
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath('//@value', '<root value="&lt;"/>');
2024-09-08 14:51:58.391 KST client backend[3076373] pg_regress/plancache ERROR:  new row for relation "pc_list_part_def" violates partition constraint
2024-09-08 14:51:58.391 KST client backend[3076373] pg_regress/plancache DETAIL:  Failing row contains (2).
2024-09-08 14:51:58.391 KST client backend[3076373] pg_regress/plancache STATEMENT:  execute pstmt_def_insert(2);
2024-09-08 14:51:58.391 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dcomptype violates check constraint "c1"
2024-09-08 14:51:58.391 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into dcomptable values (row(2,1)::comptype);
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 33
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath('''<<invalid>>''', '<root/>');
2024-09-08 14:51:58.391 KST client backend[3076378] pg_regress/limit ERROR:  SKIP LOCKED and WITH TIES options cannot be used together
2024-09-08 14:51:58.391 KST client backend[3076378] pg_regress/limit STATEMENT:  SELECT  thousand
			FROM onek WHERE thousand < 5
			ORDER BY thousand FETCH FIRST 1 ROW WITH TIES FOR UPDATE SKIP LOCKED;
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 28
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath('count(//*)', '<root><sub/><sub/></root>');
2024-09-08 14:51:58.391 KST client backend[3076378] pg_regress/limit ERROR:  WITH TIES cannot be specified without ORDER BY clause
2024-09-08 14:51:58.391 KST client backend[3076378] pg_regress/limit STATEMENT:  SELECT ''::text AS two, unique1, unique2, stringu1
			FROM onek WHERE unique1 > 50
			FETCH FIRST 2 ROW WITH TIES;
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath('count(//*)=0', '<root><sub/><sub/></root>');
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 30
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath('count(//*)=3', '<root><sub/><sub/></root>');
2024-09-08 14:51:58.391 KST client backend[3076388] pg_regress/truncate ERROR:  cannot truncate a table referenced in a foreign key constraint
2024-09-08 14:51:58.391 KST client backend[3076388] pg_regress/truncate DETAIL:  Table "trunc_e" references "trunc_c".
2024-09-08 14:51:58.391 KST client backend[3076388] pg_regress/truncate HINT:  Truncate table "trunc_e" at the same time, or use TRUNCATE ... CASCADE.
2024-09-08 14:51:58.391 KST client backend[3076388] pg_regress/truncate STATEMENT:  TRUNCATE TABLE trunc_c,trunc_d;
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 26
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath('name(/*)', '<root><sub/><sub/></root>');
2024-09-08 14:51:58.391 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dcomptype violates check constraint "c1"
2024-09-08 14:51:58.391 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into dcomptable (d1.r, d1.i) values(100, 99);
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 28
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath('/nosuchtag', '<root/>');
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 22
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.391 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath('root', '<root/>');
2024-09-08 14:51:58.391 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dcomptype violates check constraint "c1"
2024-09-08 14:51:58.391 KST client backend[3076387] pg_regress/domain STATEMENT:  update dcomptable set d1.r = (d1).r + 1 where (d1).i > 0;
2024-09-08 14:51:58.391 KST client backend[3076380] pg_regress/plpgsql ERROR:  function tg_hub_adjustslots_wrong(character, integer, integer) does not exist
2024-09-08 14:51:58.391 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  COMMENT ON FUNCTION tg_hub_adjustslots_wrong(bpchar, integer, integer) IS 'function with args';
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml LOG:  skip: unsupported XML feature
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml CONTEXT:  PL/pgSQL function inline_code_block line 32 at RAISE
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml STATEMENT:  DO $$
	DECLARE
	  xml_declaration text := '<?xml version="1.0" encoding="ISO-8859-1"?>';
	  degree_symbol text;
	  res xml[];
	BEGIN
	  -- Per the documentation, except when the server encoding is UTF8, xpath()
	  -- may not work on non-ASCII data.  The untranslatable_character and
	  -- undefined_function traps below, currently dead code, will become relevant
	  -- if we remove this limitation.
	  IF current_setting('server_encoding') <> 'UTF8' THEN
	    RAISE LOG 'skip: encoding % unsupported for xpath',
	      current_setting('server_encoding');
	    RETURN;
	  END IF;
	
	  degree_symbol := convert_from('\xc2b0', 'UTF8');
	  res := xpath('text()', (xml_declaration ||
	    '<x>' || degree_symbol || '</x>')::xml);
	  IF degree_symbol <> res[1]::text THEN
	    RAISE 'expected % (%), got % (%)',
	      degree_symbol, convert_to(degree_symbol, 'UTF8'),
	      res[1], convert_to(res[1]::text, 'UTF8');
	  END IF;
	EXCEPTION
	  -- character with byte sequence 0xc2 0xb0 in encoding "UTF8" has no equivalent in encoding "LATIN8"
	  WHEN untranslatable_character
	  -- default conversion function for encoding "UTF8" to "MULE_INTERNAL" does not exist
	  OR undefined_function
	  -- unsupported XML feature
	  OR feature_not_supported THEN
	    RAISE LOG 'skip: %', SQLERRM;
	END
	$$;
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 64
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlexists('//town[text() = ''Toronto'']' PASSING BY REF '<towns><town>Bidford-on-Avon</town><town>Cwmbran</town><town>Bristol</town></towns>');
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 64
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlexists('//town[text() = ''Cwmbran'']' PASSING BY REF '<towns><town>Bidford-on-Avon</town><town>Cwmbran</town><town>Bristol</town></towns>');
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 53
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xmlexists('count(/nosuchtag)' PASSING BY REF '<root/>');
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 52
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath_exists('//town[text() = ''Toronto'']','<towns><town>Bidford-on-Avon</town><town>Cwmbran</town><town>Bristol</town></towns>'::xml);
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 52
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath_exists('//town[text() = ''Cwmbran'']','<towns><town>Bidford-on-Avon</town><town>Cwmbran</town><town>Bristol</town></towns>'::xml);
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 42
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath_exists('count(/nosuchtag)', '<root/>'::xml);
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 32
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml STATEMENT:  INSERT INTO xmltest VALUES (4, '<menu><beers><name>Budvar</name><cost>free</cost><name>Carling</name><cost>lots</cost></beers></menu>'::xml);
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 32
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml STATEMENT:  INSERT INTO xmltest VALUES (5, '<menu><beers><name>Molson</name><cost>free</cost><name>Carling</name><cost>lots</cost></beers></menu>'::xml);
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 32
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml STATEMENT:  INSERT INTO xmltest VALUES (6, '<myns:menu xmlns:myns="http://myns.com"><myns:beers><myns:name>Budvar</myns:name><myns:cost>free</myns:cost><myns:name>Carling</myns:name><myns:cost>lots</myns:cost></myns:beers></myns:menu>'::xml);
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 32
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.392 KST client backend[3076399] pg_regress/xml STATEMENT:  INSERT INTO xmltest VALUES (7, '<myns:menu xmlns:myns="http://myns.com"><myns:beers><myns:name>Molson</myns:name><myns:cost>free</myns:cost><myns:name>Carling</myns:name><myns:cost>lots</myns:cost></myns:beers></myns:menu>'::xml);
2024-09-08 14:51:58.393 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot alter statistics on non-expression column "b" of index "attmp_idx"
2024-09-08 14:51:58.393 KST client backend[3076390] pg_regress/alter_table HINT:  Alter statistics on table column instead.
2024-09-08 14:51:58.393 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER INDEX attmp_idx ALTER COLUMN 3 SET STATISTICS 1000;
2024-09-08 14:51:58.393 KST client backend[3076390] pg_regress/alter_table ERROR:  column number 4 of relation "attmp_idx" does not exist
2024-09-08 14:51:58.393 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER INDEX attmp_idx ALTER COLUMN 4 SET STATISTICS 1000;
2024-09-08 14:51:58.393 KST client backend[3076392] pg_regress/sequence ERROR:  smallint out of range
2024-09-08 14:51:58.393 KST client backend[3076392] pg_regress/sequence STATEMENT:  INSERT INTO serialTest2 (f1, f3)
	  VALUES ('bogus', -32769);
2024-09-08 14:51:58.393 KST client backend[3076392] pg_regress/sequence ERROR:  smallint out of range
2024-09-08 14:51:58.393 KST client backend[3076392] pg_regress/sequence STATEMENT:  INSERT INTO serialTest2 (f1, f4)
	  VALUES ('bogus', -32769);
2024-09-08 14:51:58.393 KST client backend[3076392] pg_regress/sequence ERROR:  smallint out of range
2024-09-08 14:51:58.393 KST client backend[3076392] pg_regress/sequence STATEMENT:  INSERT INTO serialTest2 (f1, f3)
	  VALUES ('bogus', 32768);
2024-09-08 14:51:58.393 KST client backend[3076392] pg_regress/sequence ERROR:  smallint out of range
2024-09-08 14:51:58.393 KST client backend[3076392] pg_regress/sequence STATEMENT:  INSERT INTO serialTest2 (f1, f4)
	  VALUES ('bogus', 32768);
2024-09-08 14:51:58.393 KST client backend[3076388] pg_regress/truncate ERROR:  cannot truncate a table referenced in a foreign key constraint
2024-09-08 14:51:58.393 KST client backend[3076388] pg_regress/truncate DETAIL:  Table "trunc_b" references "truncate_a".
2024-09-08 14:51:58.393 KST client backend[3076388] pg_regress/truncate HINT:  Truncate table "trunc_b" at the same time, or use TRUNCATE ... CASCADE.
2024-09-08 14:51:58.393 KST client backend[3076388] pg_regress/truncate STATEMENT:  TRUNCATE TABLE trunc_c,trunc_d,trunc_e,truncate_a;
2024-09-08 14:51:58.393 KST client backend[3076392] pg_regress/sequence ERROR:  bigint out of range
2024-09-08 14:51:58.393 KST client backend[3076392] pg_regress/sequence STATEMENT:  INSERT INTO serialTest2 (f1, f5)
	  VALUES ('bogus', -9223372036854775809);
2024-09-08 14:51:58.393 KST client backend[3076392] pg_regress/sequence ERROR:  bigint out of range
2024-09-08 14:51:58.393 KST client backend[3076392] pg_regress/sequence STATEMENT:  INSERT INTO serialTest2 (f1, f6)
	  VALUES ('bogus', -9223372036854775809);
2024-09-08 14:51:58.393 KST client backend[3076392] pg_regress/sequence ERROR:  bigint out of range
2024-09-08 14:51:58.393 KST client backend[3076392] pg_regress/sequence STATEMENT:  INSERT INTO serialTest2 (f1, f5)
	  VALUES ('bogus', 9223372036854775808);
2024-09-08 14:51:58.393 KST client backend[3076392] pg_regress/sequence ERROR:  bigint out of range
2024-09-08 14:51:58.393 KST client backend[3076392] pg_regress/sequence STATEMENT:  INSERT INTO serialTest2 (f1, f6)
	  VALUES ('bogus', 9223372036854775808);
2024-09-08 14:51:58.394 KST client backend[3076391] pg_regress/copy2 ERROR:  cannot perform COPY FREEZE because the table was not created or truncated in the current subtransaction
2024-09-08 14:51:58.394 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY vistest FROM stdin CSV FREEZE;
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed_document('<foo>bar</foo>');
2024-09-08 14:51:58.395 KST client backend[3076396] pg_regress/returning ERROR:  invalid reference to FROM-clause entry for table "foo" at character 49
2024-09-08 14:51:58.395 KST client backend[3076396] pg_regress/returning HINT:  Perhaps you meant to reference the table alias "bar".
2024-09-08 14:51:58.395 KST client backend[3076396] pg_regress/returning STATEMENT:  INSERT INTO foo AS bar DEFAULT VALUES RETURNING foo.*;
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed_document('abc');
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed_content('<foo>bar</foo>');
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed_content('abc');
2024-09-08 14:51:58.395 KST client backend[3076391] pg_regress/copy2 ERROR:  cannot perform COPY FREEZE because the table was not created or truncated in the current subtransaction
2024-09-08 14:51:58.395 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY vistest FROM stdin CSV FREEZE;
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed('abc');
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed('<>');
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed('<abc/>');
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed('<foo>bar</foo>');
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed('<foo>bar</foo');
2024-09-08 14:51:58.395 KST client backend[3076392] pg_regress/sequence ERROR:  currval of sequence "sequence_test" is not yet defined in this session
2024-09-08 14:51:58.395 KST client backend[3076392] pg_regress/sequence STATEMENT:  SELECT currval('sequence_test'::regclass);
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed('<foo><bar>baz</foo>');
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.395 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed('<local:data xmlns:local="http://127.0.0.1"><local:piece id="1">number one</local:piece><local:piece id="2" /></local:data>');
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed('<pg:foo xmlns:pg="http://postgresql.org/stuff">bar</my:foo>');
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed('<pg:foo xmlns:pg="http://postgresql.org/stuff">bar</pg:foo>');
2024-09-08 14:51:58.396 KST client backend[3076390] pg_regress/alter_table ERROR:  relation "attmp" does not exist at character 15
2024-09-08 14:51:58.396 KST client backend[3076390] pg_regress/alter_table STATEMENT:  SELECT * FROM attmp;
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed('<invalidentity>&</abc>');
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed('<undefinedentity>&idontexist;</abc>');
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed('<invalidns xmlns=''&lt;''/>');
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed('<relativens xmlns=''relative''/>');
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed('<twoerrors>&idontexist;</unbalanced>');
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xml_is_well_formed('abc');
2024-09-08 14:51:58.396 KST client backend[3076400] pg_regress/temp ERROR:  relation "temptest" does not exist at character 15
2024-09-08 14:51:58.396 KST client backend[3076400] pg_regress/temp STATEMENT:  SELECT * FROM temptest;
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 20
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath('/*', '<invalidns xmlns=''&lt;''/>');
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 20
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath('/*', '<nosuchprefix:tag/>');
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 20
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT xpath('/*', '<relativens xmlns=''relative''/>');
2024-09-08 14:51:58.396 KST client backend[3076388] pg_regress/truncate ERROR:  cannot truncate a table referenced in a foreign key constraint
2024-09-08 14:51:58.396 KST client backend[3076388] pg_regress/truncate DETAIL:  Table "trunc_b" references "truncate_a".
2024-09-08 14:51:58.396 KST client backend[3076388] pg_regress/truncate HINT:  Truncate table "trunc_b" at the same time, or use TRUNCATE ... CASCADE.
2024-09-08 14:51:58.396 KST client backend[3076388] pg_regress/truncate STATEMENT:  TRUNCATE TABLE truncate_a RESTRICT;
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT XMLPARSE(DOCUMENT '<!DOCTYPE foo [<!ENTITY c SYSTEM "/etc/passwd">]><foo>&c;</foo>');
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT XMLPARSE(DOCUMENT '<!DOCTYPE foo [<!ENTITY c SYSTEM "/etc/no.such.file">]><foo>&c;</foo>');
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.396 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT XMLPARSE(DOCUMENT '<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd"><chapter>&nbsp;</chapter>');
2024-09-08 14:51:58.396 KST client backend[3076391] pg_regress/copy2 ERROR:  cannot perform COPY FREEZE because the table was not created or truncated in the current subtransaction
2024-09-08 14:51:58.396 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY vistest FROM stdin CSV FREEZE;
2024-09-08 14:51:58.397 KST client backend[3076378] pg_regress/limit ERROR:  row count cannot be null in FETCH FIRST ... WITH TIES clause
2024-09-08 14:51:58.397 KST client backend[3076378] pg_regress/limit STATEMENT:  CREATE VIEW limit_thousand_v_3 AS SELECT thousand FROM onek WHERE thousand < 995
			ORDER BY thousand FETCH FIRST NULL ROWS WITH TIES;
2024-09-08 14:51:58.397 KST client backend[3076400] pg_regress/temp ERROR:  relation "temptest" does not exist at character 15
2024-09-08 14:51:58.397 KST client backend[3076400] pg_regress/temp STATEMENT:  SELECT * FROM temptest;
2024-09-08 14:51:58.397 KST client backend[3076394] pg_regress/polymorphism ERROR:  function add_group(smallint[], bigint, integer) does not exist
2024-09-08 14:51:58.397 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  create aggregate build_group(int8, integer) (
	  SFUNC = add_group,
	  STYPE = int2[]
	);
2024-09-08 14:51:58.398 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 28
2024-09-08 14:51:58.398 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.398 KST client backend[3076399] pg_regress/xml STATEMENT:  INSERT INTO xmldata VALUES('<ROWS>
	<ROW id="1">
	  <COUNTRY_ID>AU</COUNTRY_ID>
	  <COUNTRY_NAME>Australia</COUNTRY_NAME>
	  <REGION_ID>3</REGION_ID>
	</ROW>
	<ROW id="2">
	  <COUNTRY_ID>CN</COUNTRY_ID>
	  <COUNTRY_NAME>China</COUNTRY_NAME>
	  <REGION_ID>3</REGION_ID>
	</ROW>
	<ROW id="3">
	  <COUNTRY_ID>HK</COUNTRY_ID>
	  <COUNTRY_NAME>HongKong</COUNTRY_NAME>
	  <REGION_ID>3</REGION_ID>
	</ROW>
	<ROW id="4">
	  <COUNTRY_ID>IN</COUNTRY_ID>
	  <COUNTRY_NAME>India</COUNTRY_NAME>
	  <REGION_ID>3</REGION_ID>
	</ROW>
	<ROW id="5">
	  <COUNTRY_ID>JP</COUNTRY_ID>
	  <COUNTRY_NAME>Japan</COUNTRY_NAME>
	  <REGION_ID>3</REGION_ID><PREMIER_NAME>Sinzo Abe</PREMIER_NAME>
	</ROW>
	<ROW id="6">
	  <COUNTRY_ID>SG</COUNTRY_ID>
	  <COUNTRY_NAME>Singapore</COUNTRY_NAME>
	  <REGION_ID>3</REGION_ID><SIZE unit="km">791</SIZE>
	</ROW>
	</ROWS>');
2024-09-08 14:51:58.399 KST client backend[3076390] pg_regress/alter_table ERROR:  must be owner of index part_attmp_index
2024-09-08 14:51:58.399 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER INDEX part_attmp_index RENAME TO fail;
2024-09-08 14:51:58.399 KST client backend[3076390] pg_regress/alter_table ERROR:  must be owner of index part_attmp1_index
2024-09-08 14:51:58.399 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER INDEX part_attmp1_index RENAME TO fail;
2024-09-08 14:51:58.399 KST client backend[3076390] pg_regress/alter_table ERROR:  must be owner of table part_at2tmp
2024-09-08 14:51:58.399 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE part_at2tmp RENAME TO fail;
2024-09-08 14:51:58.399 KST client backend[3076390] pg_regress/alter_table ERROR:  must be owner of table part_at2tmp1
2024-09-08 14:51:58.399 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE part_at2tmp1 RENAME TO fail;
2024-09-08 14:51:58.399 KST client backend[3076392] pg_regress/sequence ERROR:  cannot drop sequence t1_f1_seq because other objects depend on it
2024-09-08 14:51:58.399 KST client backend[3076392] pg_regress/sequence DETAIL:  default value for column f1 of table t1 depends on sequence t1_f1_seq
2024-09-08 14:51:58.399 KST client backend[3076392] pg_regress/sequence HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:58.399 KST client backend[3076392] pg_regress/sequence STATEMENT:  DROP SEQUENCE t1_f1_seq;
2024-09-08 14:51:58.400 KST client backend[3076392] pg_regress/sequence ERROR:  cannot drop sequence myseq2 because other objects depend on it
2024-09-08 14:51:58.400 KST client backend[3076392] pg_regress/sequence DETAIL:  default value for column f2 of table t1 depends on sequence myseq2
2024-09-08 14:51:58.400 KST client backend[3076392] pg_regress/sequence HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:58.400 KST client backend[3076392] pg_regress/sequence STATEMENT:  DROP SEQUENCE myseq2;
2024-09-08 14:51:58.400 KST client backend[3076391] pg_regress/copy2 ERROR:  null value in column "b" of relation "forcetest" violates not-null constraint
2024-09-08 14:51:58.400 KST client backend[3076391] pg_regress/copy2 DETAIL:  Failing row contains (3, null, , null, null).
2024-09-08 14:51:58.400 KST client backend[3076391] pg_regress/copy2 CONTEXT:  COPY forcetest, line 1: "3,,"""
2024-09-08 14:51:58.400 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY forcetest (a, b, c) FROM STDIN WITH (FORMAT csv, FORCE_NULL(b), FORCE_NOT_NULL(c));
2024-09-08 14:51:58.400 KST client backend[3076391] pg_regress/copy2 ERROR:  FORCE_NOT_NULL column "b" not referenced by COPY
2024-09-08 14:51:58.400 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY forcetest (d, e) FROM STDIN WITH (FORMAT csv, FORCE_NOT_NULL(b));
2024-09-08 14:51:58.400 KST client backend[3076391] pg_regress/copy2 ERROR:  FORCE_NULL column "b" not referenced by COPY
2024-09-08 14:51:58.400 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY forcetest (d, e) FROM STDIN WITH (FORMAT csv, FORCE_NULL(b));
2024-09-08 14:51:58.400 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dcomptype violates check constraint "c1"
2024-09-08 14:51:58.400 KST client backend[3076387] pg_regress/domain STATEMENT:  select makedcomp(2,1);
2024-09-08 14:51:58.401 KST client backend[3076400] pg_regress/temp ERROR:  relation "temptest" does not exist at character 15
2024-09-08 14:51:58.401 KST client backend[3076400] pg_regress/temp STATEMENT:  SELECT * FROM temptest;
2024-09-08 14:51:58.401 KST client backend[3076392] pg_regress/sequence ERROR:  sequence "t1_f1_seq" does not exist
2024-09-08 14:51:58.401 KST client backend[3076392] pg_regress/sequence STATEMENT:  DROP SEQUENCE t1_f1_seq;
2024-09-08 14:51:58.401 KST client backend[3076400] pg_regress/temp ERROR:  ON COMMIT can only be used on temporary tables
2024-09-08 14:51:58.401 KST client backend[3076400] pg_regress/temp STATEMENT:  CREATE TABLE temptest(col int) ON COMMIT DELETE ROWS;
2024-09-08 14:51:58.401 KST client backend[3076400] pg_regress/temp ERROR:  ON COMMIT can only be used on temporary tables
2024-09-08 14:51:58.401 KST client backend[3076400] pg_regress/temp STATEMENT:  CREATE TABLE temptest(col) ON COMMIT DELETE ROWS AS SELECT 1;
2024-09-08 14:51:58.401 KST client backend[3076399] pg_regress/xml ERROR:  XMLTABLE function has 1 columns available but 2 columns specified
2024-09-08 14:51:58.401 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT * FROM XMLTABLE (ROW () PASSING null COLUMNS v1 timestamp) AS f (v1, v2);
2024-09-08 14:51:58.401 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 129
2024-09-08 14:51:58.401 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.401 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT * FROM XMLTABLE(XMLNAMESPACES('http://x.y' AS zz),
	                      '/zz:rows/zz:row'
	                      PASSING '<rows xmlns="http://x.y"><row><a>10</a></row></rows>'
	                      COLUMNS a int PATH 'zz:a');
2024-09-08 14:51:58.401 KST client backend[3076392] pg_regress/sequence ERROR:  "serialtest1" is not a sequence
2024-09-08 14:51:58.401 KST client backend[3076392] pg_regress/sequence STATEMENT:  ALTER SEQUENCE serialTest1 CYCLE;
2024-09-08 14:51:58.401 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 158
2024-09-08 14:51:58.401 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.401 KST client backend[3076399] pg_regress/xml STATEMENT:  CREATE VIEW xmltableview2 AS SELECT * FROM XMLTABLE(XMLNAMESPACES('http://x.y' AS zz),
	                      '/zz:rows/zz:row'
	                      PASSING '<rows xmlns="http://x.y"><row><a>10</a></row></rows>'
	                      COLUMNS a int PATH 'zz:a');
2024-09-08 14:51:58.401 KST client backend[3076399] pg_regress/xml ERROR:  relation "xmltableview2" does not exist at character 15
2024-09-08 14:51:58.401 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT * FROM xmltableview2;
2024-09-08 14:51:58.401 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 125
2024-09-08 14:51:58.401 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.401 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT * FROM XMLTABLE(XMLNAMESPACES(DEFAULT 'http://x.y'),
	                      '/rows/row'
	                      PASSING '<rows xmlns="http://x.y"><row><a>10</a></row></rows>'
	                      COLUMNS a int PATH 'a');
2024-09-08 14:51:58.401 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 59
2024-09-08 14:51:58.401 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.401 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT * FROM XMLTABLE('.'
	                       PASSING '<foo/>'
	                       COLUMNS a text PATH 'foo/namespace::node()');
2024-09-08 14:51:58.402 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 40
2024-09-08 14:51:58.402 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.402 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT * FROM xmltable('/root' passing '<root><element>a1a<!-- aaaa -->a2a<?aaaaa?> <!--z-->  bbbb<x>xxx</x>cccc</element></root>' COLUMNS element text);
2024-09-08 14:51:58.402 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 40
2024-09-08 14:51:58.402 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.402 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT * FROM xmltable('/root' passing '<root><element>a1a<!-- aaaa -->a2a<?aaaaa?> <!--z-->  bbbb<x>xxx</x>cccc</element></root>' COLUMNS element text PATH 'element/text()');
2024-09-08 14:51:58.402 KST client backend[3076392] pg_regress/sequence ERROR:  RESTART value (0) cannot be less than MINVALUE (1)
2024-09-08 14:51:58.402 KST client backend[3076392] pg_regress/sequence STATEMENT:  ALTER SEQUENCE sequence_test2 RESTART WITH 0;
2024-09-08 14:51:58.402 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 38
2024-09-08 14:51:58.402 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.402 KST client backend[3076399] pg_regress/xml STATEMENT:  select * from xmltable('d/r' passing '<d><r><c><![CDATA[<hello> &"<>!<a>foo</a>]]></c></r><r><c>2</c></r></d>' columns c text);
2024-09-08 14:51:58.402 KST client backend[3076392] pg_regress/sequence ERROR:  RESTART value (40) cannot be greater than MAXVALUE (-1)
2024-09-08 14:51:58.402 KST client backend[3076392] pg_regress/sequence STATEMENT:  ALTER SEQUENCE sequence_test4 RESTART WITH 40;
2024-09-08 14:51:58.402 KST client backend[3076388] pg_regress/truncate ERROR:  cannot truncate a table referenced in a foreign key constraint
2024-09-08 14:51:58.402 KST client backend[3076388] pg_regress/truncate DETAIL:  Table "truncate_a" references "trunc_c".
2024-09-08 14:51:58.402 KST client backend[3076388] pg_regress/truncate HINT:  Truncate table "truncate_a" at the same time, or use TRUNCATE ... CASCADE.
2024-09-08 14:51:58.402 KST client backend[3076388] pg_regress/truncate STATEMENT:  TRUNCATE TABLE trunc_c;
2024-09-08 14:51:58.402 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 39
2024-09-08 14:51:58.402 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.402 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT * FROM xmltable('/x/a' PASSING '<x><a><ent>&apos;</ent></a><a><ent>&quot;</ent></a><a><ent>&amp;</ent></a><a><ent>&lt;</ent></a><a><ent>&gt;</ent></a></x>' COLUMNS ent text);
2024-09-08 14:51:58.402 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 39
2024-09-08 14:51:58.402 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.402 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT * FROM xmltable('/x/a' PASSING '<x><a><ent>&apos;</ent></a><a><ent>&quot;</ent></a><a><ent>&amp;</ent></a><a><ent>&lt;</ent></a><a><ent>&gt;</ent></a></x>' COLUMNS ent xml);
2024-09-08 14:51:58.402 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dcomptype violates check constraint "c1"
2024-09-08 14:51:58.402 KST client backend[3076387] pg_regress/domain STATEMENT:  select row(0,1)::dcomptype;
2024-09-08 14:51:58.403 KST client backend[3076388] pg_regress/truncate ERROR:  cannot truncate a table referenced in a foreign key constraint
2024-09-08 14:51:58.403 KST client backend[3076388] pg_regress/truncate DETAIL:  Table "trunc_d" references "trunc_c".
2024-09-08 14:51:58.403 KST client backend[3076388] pg_regress/truncate HINT:  Truncate table "trunc_d" at the same time, or use TRUNCATE ... CASCADE.
2024-09-08 14:51:58.403 KST client backend[3076388] pg_regress/truncate STATEMENT:  TRUNCATE TABLE trunc_c,truncate_a;
2024-09-08 14:51:58.403 KST client backend[3076388] pg_regress/truncate ERROR:  cannot truncate a table referenced in a foreign key constraint
2024-09-08 14:51:58.403 KST client backend[3076388] pg_regress/truncate DETAIL:  Table "trunc_e" references "trunc_c".
2024-09-08 14:51:58.403 KST client backend[3076388] pg_regress/truncate HINT:  Truncate table "trunc_e" at the same time, or use TRUNCATE ... CASCADE.
2024-09-08 14:51:58.403 KST client backend[3076388] pg_regress/truncate STATEMENT:  TRUNCATE TABLE trunc_c,truncate_a,trunc_d;
2024-09-08 14:51:58.403 KST client backend[3076388] pg_regress/truncate ERROR:  cannot truncate a table referenced in a foreign key constraint
2024-09-08 14:51:58.403 KST client backend[3076388] pg_regress/truncate DETAIL:  Table "trunc_b" references "truncate_a".
2024-09-08 14:51:58.403 KST client backend[3076388] pg_regress/truncate HINT:  Truncate table "trunc_b" at the same time, or use TRUNCATE ... CASCADE.
2024-09-08 14:51:58.403 KST client backend[3076388] pg_regress/truncate STATEMENT:  TRUNCATE TABLE trunc_c,truncate_a,trunc_d,trunc_e;
2024-09-08 14:51:58.403 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 28
2024-09-08 14:51:58.403 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.403 KST client backend[3076399] pg_regress/xml STATEMENT:  INSERT INTO xmldata VALUES('<ROWS>
	<ROW id="10">
	  <COUNTRY_ID>CZ</COUNTRY_ID>
	  <COUNTRY_NAME>Czech Republic</COUNTRY_NAME>
	  <REGION_ID>2</REGION_ID><PREMIER_NAME>Milos Zeman</PREMIER_NAME>
	</ROW>
	<ROW id="11">
	  <COUNTRY_ID>DE</COUNTRY_ID>
	  <COUNTRY_NAME>Germany</COUNTRY_NAME>
	  <REGION_ID>2</REGION_ID>
	</ROW>
	<ROW id="12">
	  <COUNTRY_ID>FR</COUNTRY_ID>
	  <COUNTRY_NAME>France</COUNTRY_NAME>
	  <REGION_ID>2</REGION_ID>
	</ROW>
	</ROWS>');
2024-09-08 14:51:58.403 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 28
2024-09-08 14:51:58.403 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.403 KST client backend[3076399] pg_regress/xml STATEMENT:  INSERT INTO xmldata VALUES('<ROWS>
	<ROW id="20">
	  <COUNTRY_ID>EG</COUNTRY_ID>
	  <COUNTRY_NAME>Egypt</COUNTRY_NAME>
	  <REGION_ID>1</REGION_ID>
	</ROW>
	<ROW id="21">
	  <COUNTRY_ID>SD</COUNTRY_ID>
	  <COUNTRY_NAME>Sudan</COUNTRY_NAME>
	  <REGION_ID>1</REGION_ID>
	</ROW>
	</ROWS>');
2024-09-08 14:51:58.403 KST client backend[3076387] pg_regress/domain ERROR:  operator does not exist: character varying > double precision
2024-09-08 14:51:58.403 KST client backend[3076387] pg_regress/domain HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.403 KST client backend[3076387] pg_regress/domain STATEMENT:  alter type comptype alter attribute r type varchar;
2024-09-08 14:51:58.404 KST client backend[3076392] pg_regress/sequence ERROR:  nextval: reached maximum value of sequence "sequence_test2" (36)
2024-09-08 14:51:58.404 KST client backend[3076392] pg_regress/sequence STATEMENT:  SELECT nextval('sequence_test2');
2024-09-08 14:51:58.404 KST client backend[3076400] pg_regress/temp ERROR:  unsupported ON COMMIT and foreign key combination
2024-09-08 14:51:58.404 KST client backend[3076400] pg_regress/temp DETAIL:  Table "temptest4" references "temptest3", but they do not have the same ON COMMIT setting.
2024-09-08 14:51:58.404 KST client backend[3076400] pg_regress/temp STATEMENT:  COMMIT;
2024-09-08 14:51:58.404 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.404 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.404 KST client backend[3076399] pg_regress/xml STATEMENT:  WITH
	   x AS (SELECT proname, proowner, procost::numeric, pronargs,
	                array_to_string(proargnames,',') as proargnames,
	                case when proargtypes <> '' then array_to_string(proargtypes::oid[],',') end as proargtypes
	           FROM pg_proc WHERE proname = 'f_leak'),
	   y AS (SELECT xmlelement(name proc,
	                           xmlforest(proname, proowner,
	                                     procost, pronargs,
	                                     proargnames, proargtypes)) as proc
	           FROM x),
	   z AS (SELECT xmltable.*
	           FROM y,
	                LATERAL xmltable('/proc' PASSING proc
	                                 COLUMNS proname name,
	                                         proowner oid,
	                                         procost float,
	                                         pronargs int,
	                                         proargnames text,
	                                         proargtypes text))
	   SELECT * FROM z
	   EXCEPT SELECT * FROM x;
2024-09-08 14:51:58.405 KST client backend[3076390] pg_regress/alter_table ERROR:  must be owner of index onek_unique1
2024-09-08 14:51:58.405 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER INDEX onek_unique1 RENAME TO fail;
2024-09-08 14:51:58.405 KST client backend[3076387] pg_regress/domain ERROR:  cannot drop column r of composite type comptype because other objects depend on it
2024-09-08 14:51:58.405 KST client backend[3076387] pg_regress/domain DETAIL:  constraint c1 depends on column r of composite type comptype
2024-09-08 14:51:58.405 KST client backend[3076387] pg_regress/domain HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:58.405 KST client backend[3076387] pg_regress/domain STATEMENT:  alter type comptype drop attribute r;
2024-09-08 14:51:58.405 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.405 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.405 KST client backend[3076399] pg_regress/xml STATEMENT:  WITH
	   x AS (SELECT proname, proowner, procost::numeric, pronargs,
	                array_to_string(proargnames,',') as proargnames,
	                case when proargtypes <> '' then array_to_string(proargtypes::oid[],',') end as proargtypes
	           FROM pg_proc),
	   y AS (SELECT xmlelement(name data,
	                           xmlagg(xmlelement(name proc,
	                                             xmlforest(proname, proowner, procost,
	                                                       pronargs, proargnames, proargtypes)))) as doc
	           FROM x),
	   z AS (SELECT xmltable.*
	           FROM y,
	                LATERAL xmltable('/data/proc' PASSING doc
	                                 COLUMNS proname name,
	                                         proowner oid,
	                                         procost float,
	                                         pronargs int,
	                                         proargnames text,
	                                         proargtypes text))
	   SELECT * FROM z
	   EXCEPT SELECT * FROM x;
2024-09-08 14:51:58.405 KST client backend[3076392] pg_regress/sequence ERROR:  nextval: reached minimum value of sequence "sequence_test2" (-36)
2024-09-08 14:51:58.405 KST client backend[3076392] pg_regress/sequence STATEMENT:  SELECT nextval('sequence_test2');
2024-09-08 14:51:58.406 KST client backend[3076392] pg_regress/sequence ERROR:  setval: value -100 is out of bounds for sequence "sequence_test2" (5..36)
2024-09-08 14:51:58.406 KST client backend[3076392] pg_regress/sequence STATEMENT:  SELECT setval('sequence_test2', -100);
2024-09-08 14:51:58.406 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 29
2024-09-08 14:51:58.406 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.406 KST client backend[3076399] pg_regress/xml STATEMENT:  INSERT INTO xmltest2 VALUES('<d><r><ac>1</ac></r></d>', 'A');
2024-09-08 14:51:58.406 KST client backend[3076392] pg_regress/sequence ERROR:  setval: value 100 is out of bounds for sequence "sequence_test2" (5..36)
2024-09-08 14:51:58.406 KST client backend[3076392] pg_regress/sequence STATEMENT:  SELECT setval('sequence_test2', 100);
2024-09-08 14:51:58.406 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 29
2024-09-08 14:51:58.406 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.406 KST client backend[3076399] pg_regress/xml STATEMENT:  INSERT INTO xmltest2 VALUES('<d><r><bc>2</bc></r></d>', 'B');
2024-09-08 14:51:58.406 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 29
2024-09-08 14:51:58.406 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.406 KST client backend[3076399] pg_regress/xml STATEMENT:  INSERT INTO xmltest2 VALUES('<d><r><cc>3</cc></r></d>', 'C');
2024-09-08 14:51:58.406 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 29
2024-09-08 14:51:58.406 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.406 KST client backend[3076399] pg_regress/xml STATEMENT:  INSERT INTO xmltest2 VALUES('<d><r><dc>2</dc></r></d>', 'D');
2024-09-08 14:51:58.406 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 36
2024-09-08 14:51:58.406 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.406 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT * FROM XMLTABLE('*' PASSING '<a>a</a>' COLUMNS a xml PATH '.', b text PATH '.', c text PATH '"hi"', d boolean PATH '. = "a"', e integer PATH 'string-length(.)');
2024-09-08 14:51:58.406 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature at character 36
2024-09-08 14:51:58.406 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.406 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT * FROM XMLTABLE('*' PASSING '<e>pre<!--c1--><?pi arg?><![CDATA[&ent1]]><n2>&amp;deep</n2>post</e>' COLUMNS x xml PATH '/e/n2', y xml PATH '/');
2024-09-08 14:51:58.407 KST client backend[3076399] pg_regress/xml ERROR:  unsupported XML feature
2024-09-08 14:51:58.407 KST client backend[3076399] pg_regress/xml DETAIL:  This functionality requires the server to be built with libxml support.
2024-09-08 14:51:58.407 KST client backend[3076399] pg_regress/xml STATEMENT:  SELECT * FROM XMLTABLE('.' PASSING XMLELEMENT(NAME a) columns a varchar(20) PATH '"<foo/>"', b xml PATH '"<foo/>"');
2024-09-08 14:51:58.408 KST client backend[3076391] pg_regress/copy2 ERROR:  new row for relation "check_con_tbl" violates check constraint "check_con_tbl_check"
2024-09-08 14:51:58.408 KST client backend[3076391] pg_regress/copy2 DETAIL:  Failing row contains (0).
2024-09-08 14:51:58.408 KST client backend[3076391] pg_regress/copy2 CONTEXT:  COPY check_con_tbl, line 1: "0"
2024-09-08 14:51:58.408 KST client backend[3076391] pg_regress/copy2 STATEMENT:  copy check_con_tbl from stdin;
2024-09-08 14:51:58.408 KST client backend[3076387] pg_regress/domain ERROR:  duplicate key value violates unique constraint "dcomptable_d1_key"
2024-09-08 14:51:58.408 KST client backend[3076387] pg_regress/domain DETAIL:  Key (d1)=({"(1,2)"}) already exists.
2024-09-08 14:51:58.408 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into dcomptable values (array[row(1,2)]::dcomptypea);
2024-09-08 14:51:58.408 KST client backend[3076400] pg_regress/temp ERROR:  function nonempty(unknown) does not exist at character 8
2024-09-08 14:51:58.408 KST client backend[3076400] pg_regress/temp HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.408 KST client backend[3076400] pg_regress/temp STATEMENT:  select nonempty('');
2024-09-08 14:51:58.408 KST client backend[3076400] pg_regress/temp ERROR:  value for domain nonempty violates check constraint "nonempty_check"
2024-09-08 14:51:58.408 KST client backend[3076400] pg_regress/temp STATEMENT:  select pg_temp.nonempty('');
2024-09-08 14:51:58.408 KST client backend[3076400] pg_regress/temp ERROR:  value for domain nonempty violates check constraint "nonempty_check"
2024-09-08 14:51:58.408 KST client backend[3076400] pg_regress/temp STATEMENT:  select ''::nonempty;
2024-09-08 14:51:58.409 KST client backend[3076387] pg_regress/domain ERROR:  column "d1" of table "dcomptable" contains values that violate the new constraint
2024-09-08 14:51:58.409 KST client backend[3076387] pg_regress/domain STATEMENT:  alter domain dcomptypea add constraint c2 check (value[1].r > value[1].i);
2024-09-08 14:51:58.409 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dcomptypea violates check constraint "c1"
2024-09-08 14:51:58.409 KST client backend[3076387] pg_regress/domain STATEMENT:  select array[row(2,1)]::dcomptypea;
2024-09-08 14:51:58.409 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot compare arrays of different element types
2024-09-08 14:51:58.409 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select max(histogram_bounds) from pg_stats where tablename = 'pg_am';
2024-09-08 14:51:58.409 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dcomptypea violates check constraint "c1"
2024-09-08 14:51:58.409 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into dcomptable values (array[row(2,1)]::comptype[]);
2024-09-08 14:51:58.410 KST client backend[3076394] pg_regress/polymorphism ERROR:  function "array_in" in FROM has unsupported return type anyarray at character 15
2024-09-08 14:51:58.410 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select * from array_in('{1,2,3}','int4'::regtype,-1);
2024-09-08 14:51:58.410 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot accept a value of type anyrange
2024-09-08 14:51:58.410 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select anyrange_in('[10,20)','int4range'::regtype,-1);
2024-09-08 14:51:58.410 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dcomptypea violates check constraint "c1"
2024-09-08 14:51:58.410 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into dcomptable (d1[1].r, d1[1].i) values(100, 99);
2024-09-08 14:51:58.410 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dcomptypea violates check constraint "c1"
2024-09-08 14:51:58.410 KST client backend[3076387] pg_regress/domain STATEMENT:  update dcomptable set d1[1].r = d1[1].r + 1 where d1[1].i > 0;
2024-09-08 14:51:58.410 KST client backend[3076390] pg_regress/alter_table ERROR:  must be owner of view attmp_view_new
2024-09-08 14:51:58.410 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER VIEW attmp_view_new RENAME TO fail;
2024-09-08 14:51:58.410 KST client backend[3076391] pg_regress/copy2 ERROR:  permission denied for table rls_t1
2024-09-08 14:51:58.410 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY rls_t1 TO stdout;
2024-09-08 14:51:58.410 KST client backend[3076394] pg_regress/polymorphism ERROR:  function myleast() does not exist at character 8
2024-09-08 14:51:58.410 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.410 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select myleast();
2024-09-08 14:51:58.410 KST client backend[3076391] pg_regress/copy2 ERROR:  permission denied for table rls_t1
2024-09-08 14:51:58.410 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY rls_t1 (a, b, c) TO stdout;
2024-09-08 14:51:58.410 KST client backend[3076391] pg_regress/copy2 ERROR:  permission denied for table rls_t1
2024-09-08 14:51:58.410 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY rls_t1 (c) TO stdout;
2024-09-08 14:51:58.411 KST client backend[3076394] pg_regress/polymorphism ERROR:  function formarray(numeric, numeric[]) does not exist at character 8
2024-09-08 14:51:58.411 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.411 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select formarray(1.1, array[1.2,55.5]);
2024-09-08 14:51:58.411 KST client backend[3076394] pg_regress/polymorphism ERROR:  function formarray(integer, text) does not exist at character 8
2024-09-08 14:51:58.411 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.411 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select formarray(1, 'x'::text);
2024-09-08 14:51:58.411 KST client backend[3076394] pg_regress/polymorphism ERROR:  function formarray(integer, text[]) does not exist at character 8
2024-09-08 14:51:58.411 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.411 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select formarray(1, variadic array['x'::text]);
2024-09-08 14:51:58.412 KST client backend[3076391] pg_regress/copy2 ERROR:  cannot copy to view "instead_of_insert_tbl_view"
2024-09-08 14:51:58.412 KST client backend[3076391] pg_regress/copy2 HINT:  To enable copying to a view, provide an INSTEAD OF INSERT trigger.
2024-09-08 14:51:58.412 KST client backend[3076391] pg_regress/copy2 STATEMENT:  COPY instead_of_insert_tbl_view FROM stdin;
2024-09-08 14:51:58.412 KST client backend[3076394] pg_regress/polymorphism ERROR:  function dfunc(integer, integer, integer) does not exist at character 8
2024-09-08 14:51:58.412 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.412 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select dfunc(10, 20, 30);
2024-09-08 14:51:58.412 KST client backend[3076394] pg_regress/polymorphism ERROR:  function dfunc() does not exist
2024-09-08 14:51:58.412 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  drop function dfunc();
2024-09-08 14:51:58.412 KST client backend[3076394] pg_regress/polymorphism ERROR:  function dfunc(integer) does not exist
2024-09-08 14:51:58.412 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  drop function dfunc(int);
2024-09-08 14:51:58.412 KST client backend[3076394] pg_regress/polymorphism ERROR:  input parameters after one with a default value must also have defaults
2024-09-08 14:51:58.412 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  create function dfunc(a int = 1, b int) returns int as $$
	  select $1 + $2;
	$$ language sql;
2024-09-08 14:51:58.414 KST client backend[3076394] pg_regress/polymorphism ERROR:  function dfunc() is not unique at character 8
2024-09-08 14:51:58.414 KST client backend[3076394] pg_regress/polymorphism HINT:  Could not choose a best candidate function. You might need to add explicit type casts.
2024-09-08 14:51:58.414 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select dfunc();
2024-09-08 14:51:58.414 KST client backend[3076394] pg_regress/polymorphism ERROR:  function dfunc() is not unique at character 8
2024-09-08 14:51:58.414 KST client backend[3076394] pg_regress/polymorphism HINT:  Could not choose a best candidate function. You might need to add explicit type casts.
2024-09-08 14:51:58.414 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select dfunc();
2024-09-08 14:51:58.414 KST client backend[3076394] pg_regress/polymorphism ERROR:  function dfunc(integer) is not unique at character 8
2024-09-08 14:51:58.414 KST client backend[3076394] pg_regress/polymorphism HINT:  Could not choose a best candidate function. You might need to add explicit type casts.
2024-09-08 14:51:58.414 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select dfunc(1);
2024-09-08 14:51:58.415 KST client backend[3076394] pg_regress/polymorphism ERROR:  function dfunc(integer, integer) is not unique at character 8
2024-09-08 14:51:58.415 KST client backend[3076394] pg_regress/polymorphism HINT:  Could not choose a best candidate function. You might need to add explicit type casts.
2024-09-08 14:51:58.415 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select dfunc(1, 2);
2024-09-08 14:51:58.415 KST client backend[3076392] pg_regress/sequence ERROR:  relation "asdf" does not exist
2024-09-08 14:51:58.415 KST client backend[3076392] pg_regress/sequence STATEMENT:  COMMENT ON SEQUENCE asdf IS 'won''t work';
2024-09-08 14:51:58.415 KST client backend[3076394] pg_regress/polymorphism ERROR:  only input parameters can have default values
2024-09-08 14:51:58.415 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  create function dfunc(out int = 20) returns int as $$
	  select 1;
	$$ language sql;
2024-09-08 14:51:58.415 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot drop index onek_unique1_constraint because constraint onek_unique1_constraint on table onek requires it
2024-09-08 14:51:58.415 KST client backend[3076390] pg_regress/alter_table HINT:  You can drop constraint onek_unique1_constraint on table onek instead.
2024-09-08 14:51:58.415 KST client backend[3076390] pg_regress/alter_table STATEMENT:  DROP INDEX onek_unique1_constraint;
2024-09-08 14:51:58.415 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot drop index onek_unique1_constraint_foo because constraint onek_unique1_constraint_foo on table onek requires it
2024-09-08 14:51:58.415 KST client backend[3076390] pg_regress/alter_table HINT:  You can drop constraint onek_unique1_constraint_foo on table onek instead.
2024-09-08 14:51:58.415 KST client backend[3076390] pg_regress/alter_table STATEMENT:  DROP INDEX onek_unique1_constraint_foo;
2024-09-08 14:51:58.415 KST client backend[3076398] pg_regress/with ERROR:  search column "foo" not in WITH query column list at character 146
2024-09-08 14:51:58.415 KST client backend[3076398] pg_regress/with STATEMENT:  with recursive search_graph(f, t, label) as (
		select * from graph0 g
		union all
		select g.*
		from graph0 g, search_graph sg
		where g.f = sg.t
	) search depth first by foo, tar set seq
	select * from search_graph;
2024-09-08 14:51:58.415 KST client backend[3076398] pg_regress/with ERROR:  search sequence column name "label" already used in WITH query column list at character 146
2024-09-08 14:51:58.415 KST client backend[3076398] pg_regress/with STATEMENT:  with recursive search_graph(f, t, label) as (
		select * from graph0 g
		union all
		select g.*
		from graph0 g, search_graph sg
		where g.f = sg.t
	) search depth first by f, t set label
	select * from search_graph;
2024-09-08 14:51:58.415 KST client backend[3076398] pg_regress/with ERROR:  search column "f" specified more than once at character 146
2024-09-08 14:51:58.415 KST client backend[3076398] pg_regress/with STATEMENT:  with recursive search_graph(f, t, label) as (
		select * from graph0 g
		union all
		select g.*
		from graph0 g, search_graph sg
		where g.f = sg.t
	) search depth first by f, t, f set seq
	select * from search_graph;
2024-09-08 14:51:58.416 KST client backend[3076394] pg_regress/polymorphism ERROR:  function dfunc() does not exist at character 8
2024-09-08 14:51:58.416 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.416 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select dfunc();
2024-09-08 14:51:58.416 KST client backend[3076398] pg_regress/with ERROR:  with a SEARCH or CYCLE clause, the left side of the UNION must be a SELECT
2024-09-08 14:51:58.416 KST client backend[3076398] pg_regress/with STATEMENT:  with recursive search_graph(f, t, label) as (
		select * from graph0 g
		union all
		select * from graph0 g
		union all
		select g.*
		from graph0 g, search_graph sg
		where g.f = sg.t
	) search depth first by f, t set seq
	select * from search_graph order by seq;
2024-09-08 14:51:58.416 KST client backend[3076392] pg_regress/sequence ERROR:  lastval is not yet defined in this session
2024-09-08 14:51:58.416 KST client backend[3076392] pg_regress/sequence STATEMENT:  SELECT lastval();
2024-09-08 14:51:58.416 KST client backend[3076398] pg_regress/with ERROR:  with a SEARCH or CYCLE clause, the right side of the UNION must be a SELECT
2024-09-08 14:51:58.416 KST client backend[3076398] pg_regress/with STATEMENT:  with recursive search_graph(f, t, label) as (
		select * from graph0 g
		union all
		(select * from graph0 g
		union all
		select g.*
		from graph0 g, search_graph sg
		where g.f = sg.t)
	) search depth first by f, t set seq
	select * from search_graph order by seq;
2024-09-08 14:51:58.416 KST client backend[3076398] pg_regress/with ERROR:  with a SEARCH or CYCLE clause, the recursive reference to WITH query "x" must be at the top level of its right-hand SELECT
2024-09-08 14:51:58.416 KST client backend[3076398] pg_regress/with STATEMENT:  with recursive x(col) as (
		select 1
		union
		(with x as (select * from x)
		 select * from x)
	) search depth first by col set seq
	select * from x;
2024-09-08 14:51:58.416 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot remove parameter defaults from existing function
2024-09-08 14:51:58.416 KST client backend[3076394] pg_regress/polymorphism HINT:  Use DROP FUNCTION dfunc(integer[]) first.
2024-09-08 14:51:58.416 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  create or replace function dfunc(a variadic int[]) returns int as
	$$ select array_upper($1, 1) $$ language sql;
2024-09-08 14:51:58.416 KST client backend[3076392] pg_regress/sequence ERROR:  lastval is not yet defined in this session
2024-09-08 14:51:58.416 KST client backend[3076392] pg_regress/sequence STATEMENT:  SELECT lastval();
2024-09-08 14:51:58.417 KST client backend[3076387] pg_regress/domain ERROR:  value for domain posint violates check constraint "posint_check"
2024-09-08 14:51:58.417 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into pitable values(array[-1]);
2024-09-08 14:51:58.417 KST client backend[3076387] pg_regress/domain ERROR:  value for domain posint violates check constraint "posint_check" at character 28
2024-09-08 14:51:58.417 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into pitable values('{0}');
2024-09-08 14:51:58.417 KST client backend[3076394] pg_regress/polymorphism ERROR:  function dfunc(integer) is not unique at character 8
2024-09-08 14:51:58.417 KST client backend[3076394] pg_regress/polymorphism HINT:  Could not choose a best candidate function. You might need to add explicit type casts.
2024-09-08 14:51:58.417 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select dfunc(1);
2024-09-08 14:51:58.417 KST client backend[3076387] pg_regress/domain ERROR:  value for domain posint violates check constraint "posint_check"
2024-09-08 14:51:58.417 KST client backend[3076387] pg_regress/domain STATEMENT:  update pitable set f1[1] = 0;
2024-09-08 14:51:58.418 KST client backend[3076394] pg_regress/polymorphism ERROR:  function dfunc(integer) does not exist at character 15
2024-09-08 14:51:58.418 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.418 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select * from dfunc(0);
2024-09-08 14:51:58.418 KST client backend[3076400] pg_regress/temp ERROR:  cannot PREPARE a transaction that has operated on temporary objects
2024-09-08 14:51:58.418 KST client backend[3076400] pg_regress/temp STATEMENT:  prepare transaction 'twophase_func';
2024-09-08 14:51:58.418 KST client backend[3076394] pg_regress/polymorphism ERROR:  argument name "x" used more than once at character 39
2024-09-08 14:51:58.418 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select * from dfunc(x := 20, b := 10, x := 30);
2024-09-08 14:51:58.418 KST client backend[3076394] pg_regress/polymorphism ERROR:  positional argument cannot follow named argument at character 34
2024-09-08 14:51:58.418 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select * from dfunc(10, b := 20, 30);
2024-09-08 14:51:58.418 KST client backend[3076394] pg_regress/polymorphism ERROR:  function dfunc(x => integer, b => integer, c => integer) does not exist at character 15
2024-09-08 14:51:58.418 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.418 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select * from dfunc(x := 10, b := 20, c := 30);
2024-09-08 14:51:58.418 KST client backend[3076394] pg_regress/polymorphism ERROR:  function dfunc(integer, integer, a => integer) does not exist at character 15
2024-09-08 14:51:58.418 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.418 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select * from dfunc(10, 10, a := 20);
2024-09-08 14:51:58.418 KST client backend[3076394] pg_regress/polymorphism ERROR:  function dfunc(integer, c => integer, d => integer) does not exist at character 15
2024-09-08 14:51:58.418 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.418 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select * from dfunc(1,c := 2,d := 3);
2024-09-08 14:51:58.418 KST client backend[3076400] pg_regress/temp ERROR:  cannot PREPARE a transaction that has operated on temporary objects
2024-09-08 14:51:58.418 KST client backend[3076400] pg_regress/temp STATEMENT:  prepare transaction 'twophase_func';
2024-09-08 14:51:58.418 KST client backend[3076400] pg_regress/temp ERROR:  cannot PREPARE a transaction that has operated on temporary objects
2024-09-08 14:51:58.418 KST client backend[3076400] pg_regress/temp STATEMENT:  prepare transaction 'twophase_operator';
2024-09-08 14:51:58.419 KST client backend[3076400] pg_regress/temp ERROR:  cannot PREPARE a transaction that has operated on temporary objects
2024-09-08 14:51:58.419 KST client backend[3076400] pg_regress/temp STATEMENT:  prepare transaction 'twophase_type';
2024-09-08 14:51:58.419 KST client backend[3076394] pg_regress/polymorphism ERROR:  function dfunc(unknown, c => integer, b => date) does not exist at character 15
2024-09-08 14:51:58.419 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.419 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select * from dfunc('Hello World', c := 20, b := '2009-07-25'::date);
2024-09-08 14:51:58.419 KST client backend[3076387] pg_regress/domain ERROR:  value too long for type character varying(4)
2024-09-08 14:51:58.419 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into vc4table values(array['too long']);
2024-09-08 14:51:58.419 KST client backend[3076400] pg_regress/temp ERROR:  cannot PREPARE a transaction that has operated on temporary objects
2024-09-08 14:51:58.419 KST client backend[3076400] pg_regress/temp STATEMENT:  prepare transaction 'twophase_view';
2024-09-08 14:51:58.420 KST client backend[3076400] pg_regress/temp ERROR:  cannot PREPARE a transaction that has operated on temporary objects
2024-09-08 14:51:58.420 KST client backend[3076400] pg_regress/temp STATEMENT:  prepare transaction 'twophase_sequence';
2024-09-08 14:51:58.420 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot change name of input parameter "c"
2024-09-08 14:51:58.420 KST client backend[3076394] pg_regress/polymorphism HINT:  Use DROP FUNCTION dfunc(character varying,numeric) first.
2024-09-08 14:51:58.420 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  create or replace function dfunc(a varchar = 'def a', out _a varchar, x numeric = NULL, out _c numeric)
	returns record as $$
	  select $1, $2;
	$$ language sql;
2024-09-08 14:51:58.420 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot change name of input parameter "c"
2024-09-08 14:51:58.420 KST client backend[3076394] pg_regress/polymorphism HINT:  Use DROP FUNCTION dfunc(character varying,numeric) first.
2024-09-08 14:51:58.420 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  create or replace function dfunc(a varchar = 'def a', out _a varchar, numeric = NULL, out _c numeric)
	returns record as $$
	  select $1, $2;
	$$ language sql;
2024-09-08 14:51:58.420 KST client backend[3076394] pg_regress/polymorphism ERROR:  parameter name "a" used more than once
2024-09-08 14:51:58.420 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  create function testpolym(a int, a int) returns int as $$ select 1;$$ language sql;
2024-09-08 14:51:58.420 KST client backend[3076394] pg_regress/polymorphism ERROR:  parameter name "a" used more than once
2024-09-08 14:51:58.420 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  create function testpolym(int, out a int, out a int) returns int as $$ select 1;$$ language sql;
2024-09-08 14:51:58.420 KST client backend[3076394] pg_regress/polymorphism ERROR:  parameter name "a" used more than once
2024-09-08 14:51:58.420 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  create function testpolym(out a int, inout a int) returns int as $$ select 1;$$ language sql;
2024-09-08 14:51:58.420 KST client backend[3076394] pg_regress/polymorphism ERROR:  parameter name "a" used more than once
2024-09-08 14:51:58.420 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  create function testpolym(a int, inout a int) returns int as $$ select 1;$$ language sql;
2024-09-08 14:51:58.420 KST client backend[3076400] pg_regress/temp ERROR:  cannot PREPARE a transaction that has operated on temporary objects
2024-09-08 14:51:58.420 KST client backend[3076400] pg_regress/temp STATEMENT:  prepare transaction 'twophase_tab';
2024-09-08 14:51:58.420 KST client backend[3076400] pg_regress/temp ERROR:  cannot PREPARE a transaction that has operated on temporary objects
2024-09-08 14:51:58.420 KST client backend[3076400] pg_regress/temp STATEMENT:  prepare transaction 'twophase_tab';
2024-09-08 14:51:58.420 KST client backend[3076400] pg_regress/temp ERROR:  cannot PREPARE a transaction that has operated on temporary objects
2024-09-08 14:51:58.420 KST client backend[3076400] pg_regress/temp STATEMENT:  prepare transaction 'twophase_tab';
2024-09-08 14:51:58.421 KST client backend[3076400] pg_regress/temp ERROR:  cannot PREPARE a transaction that has operated on temporary objects
2024-09-08 14:51:58.421 KST client backend[3076400] pg_regress/temp STATEMENT:  prepare transaction 'twophase_tab';
2024-09-08 14:51:58.421 KST client backend[3076387] pg_regress/domain ERROR:  column "f1" is of type dposinta[] but expression is of type integer[] at character 34
2024-09-08 14:51:58.421 KST client backend[3076387] pg_regress/domain HINT:  You will need to rewrite or cast the expression.
2024-09-08 14:51:58.421 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into dposintatable values(array[array[42]]);
2024-09-08 14:51:58.421 KST client backend[3076387] pg_regress/domain ERROR:  column "f1" is of type dposinta[] but expression is of type posint[] at character 34
2024-09-08 14:51:58.421 KST client backend[3076387] pg_regress/domain HINT:  You will need to rewrite or cast the expression.
2024-09-08 14:51:58.421 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into dposintatable values(array[array[42]::posint[]]);
2024-09-08 14:51:58.421 KST client backend[3076391] pg_regress/copy2 ERROR:  cannot specify DEFAULT in BINARY mode
2024-09-08 14:51:58.421 KST client backend[3076391] pg_regress/copy2 STATEMENT:  copy copy_default from stdin with (format binary, default '\D');
2024-09-08 14:51:58.421 KST client backend[3076391] pg_regress/copy2 ERROR:  COPY default representation cannot use newline or carriage return
2024-09-08 14:51:58.421 KST client backend[3076391] pg_regress/copy2 STATEMENT:  copy copy_default from stdin with (default E'\n');
2024-09-08 14:51:58.421 KST client backend[3076392] pg_regress/sequence ERROR:  cannot execute nextval() in a read-only transaction
2024-09-08 14:51:58.421 KST client backend[3076392] pg_regress/sequence STATEMENT:  SELECT nextval('sequence_test2');
2024-09-08 14:51:58.421 KST client backend[3076391] pg_regress/copy2 ERROR:  COPY default representation cannot use newline or carriage return
2024-09-08 14:51:58.421 KST client backend[3076391] pg_regress/copy2 STATEMENT:  copy copy_default from stdin with (default E'\r');
2024-09-08 14:51:58.421 KST client backend[3076391] pg_regress/copy2 ERROR:  COPY delimiter must not appear in the DEFAULT specification
2024-09-08 14:51:58.421 KST client backend[3076391] pg_regress/copy2 STATEMENT:  copy copy_default from stdin with (delimiter ';', default 'test;test');
2024-09-08 14:51:58.421 KST client backend[3076392] pg_regress/sequence ERROR:  cannot execute setval() in a read-only transaction
2024-09-08 14:51:58.421 KST client backend[3076392] pg_regress/sequence STATEMENT:  SELECT setval('sequence_test2', 1);
2024-09-08 14:51:58.421 KST client backend[3076391] pg_regress/copy2 ERROR:  CSV quote character must not appear in the DEFAULT specification
2024-09-08 14:51:58.421 KST client backend[3076391] pg_regress/copy2 STATEMENT:  copy copy_default from stdin with (format csv, quote '"', default 'test"test');
2024-09-08 14:51:58.421 KST client backend[3076391] pg_regress/copy2 ERROR:  NULL specification and DEFAULT specification cannot be the same
2024-09-08 14:51:58.421 KST client backend[3076391] pg_regress/copy2 STATEMENT:  copy copy_default from stdin with (default '\N');
2024-09-08 14:51:58.422 KST client backend[3076391] pg_regress/copy2 ERROR:  unexpected default marker in COPY data
2024-09-08 14:51:58.422 KST client backend[3076391] pg_regress/copy2 DETAIL:  Column "id" has no default value.
2024-09-08 14:51:58.422 KST client backend[3076391] pg_regress/copy2 CONTEXT:  COPY copy_default, line 1: "\D	value	'2022-07-04'"
2024-09-08 14:51:58.422 KST client backend[3076391] pg_regress/copy2 STATEMENT:  copy copy_default from stdin with (default '\D');
2024-09-08 14:51:58.422 KST client backend[3076391] pg_regress/copy2 ERROR:  unexpected default marker in COPY data
2024-09-08 14:51:58.422 KST client backend[3076391] pg_regress/copy2 DETAIL:  Column "id" has no default value.
2024-09-08 14:51:58.422 KST client backend[3076391] pg_regress/copy2 CONTEXT:  COPY copy_default, line 1: "\D,value,2022-07-04"
2024-09-08 14:51:58.422 KST client backend[3076391] pg_regress/copy2 STATEMENT:  copy copy_default from stdin with (format csv, default '\D');
2024-09-08 14:51:58.422 KST client backend[3076387] pg_regress/domain ERROR:  wrong number of array subscripts
2024-09-08 14:51:58.422 KST client backend[3076387] pg_regress/domain STATEMENT:  update dposintatable set f1[2][1] = array[97];
2024-09-08 14:51:58.422 KST client backend[3076387] pg_regress/domain ERROR:  syntax error at or near "[" at character 33
2024-09-08 14:51:58.422 KST client backend[3076387] pg_regress/domain STATEMENT:  update dposintatable set (f1[2])[1] = array[98];
2024-09-08 14:51:58.422 KST client backend[3076392] pg_regress/sequence ERROR:  permission denied for sequence seq3
2024-09-08 14:51:58.422 KST client backend[3076392] pg_regress/sequence STATEMENT:  SELECT nextval('seq3');
2024-09-08 14:51:58.424 KST client backend[3076398] pg_regress/with ERROR:  cycle column "foo" not in WITH query column list at character 144
2024-09-08 14:51:58.424 KST client backend[3076398] pg_regress/with STATEMENT:  with recursive search_graph(f, t, label) as (
		select * from graph g
		union all
		select g.*
		from graph g, search_graph sg
		where g.f = sg.t
	) cycle foo, tar set is_cycle using path
	select * from search_graph;
2024-09-08 14:51:58.424 KST client backend[3076398] pg_regress/with ERROR:  CYCLE types boolean and integer cannot be matched at character 184
2024-09-08 14:51:58.424 KST client backend[3076398] pg_regress/with STATEMENT:  with recursive search_graph(f, t, label) as (
		select * from graph g
		union all
		select g.*
		from graph g, search_graph sg
		where g.f = sg.t
	) cycle f, t set is_cycle to true default 55 using path
	select * from search_graph;
2024-09-08 14:51:58.424 KST client backend[3076398] pg_regress/with ERROR:  could not identify an equality operator for type point
2024-09-08 14:51:58.424 KST client backend[3076398] pg_regress/with STATEMENT:  with recursive search_graph(f, t, label) as (
		select * from graph g
		union all
		select g.*
		from graph g, search_graph sg
		where g.f = sg.t
	) cycle f, t set is_cycle to point '(1,1)' default point '(0,0)' using path
	select * from search_graph;
2024-09-08 14:51:58.424 KST client backend[3076398] pg_regress/with ERROR:  cycle mark column name "label" already used in WITH query column list at character 144
2024-09-08 14:51:58.424 KST client backend[3076398] pg_regress/with STATEMENT:  with recursive search_graph(f, t, label) as (
		select * from graph g
		union all
		select g.*
		from graph g, search_graph sg
		where g.f = sg.t
	) cycle f, t set label to true default false using path
	select * from search_graph;
2024-09-08 14:51:58.424 KST client backend[3076398] pg_regress/with ERROR:  cycle path column name "label" already used in WITH query column list at character 144
2024-09-08 14:51:58.424 KST client backend[3076398] pg_regress/with STATEMENT:  with recursive search_graph(f, t, label) as (
		select * from graph g
		union all
		select g.*
		from graph g, search_graph sg
		where g.f = sg.t
	) cycle f, t set is_cycle to true default false using label
	select * from search_graph;
2024-09-08 14:51:58.424 KST client backend[3076398] pg_regress/with ERROR:  cycle mark column name and cycle path column name are the same at character 144
2024-09-08 14:51:58.424 KST client backend[3076398] pg_regress/with STATEMENT:  with recursive search_graph(f, t, label) as (
		select * from graph g
		union all
		select g.*
		from graph g, search_graph sg
		where g.f = sg.t
	) cycle f, t set foo to true default false using foo
	select * from search_graph;
2024-09-08 14:51:58.424 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot rename inherited constraint "con1"
2024-09-08 14:51:58.424 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE constraint_rename_test2 RENAME CONSTRAINT con1 TO con1foo;
2024-09-08 14:51:58.424 KST client backend[3076398] pg_regress/with ERROR:  cycle column "f" specified more than once at character 144
2024-09-08 14:51:58.424 KST client backend[3076398] pg_regress/with STATEMENT:  with recursive search_graph(f, t, label) as (
		select * from graph g
		union all
		select g.*
		from graph g, search_graph sg
		where g.f = sg.t
	) cycle f, t, f set is_cycle to true default false using path
	select * from search_graph;
2024-09-08 14:51:58.424 KST client backend[3076401] pg_regress/temp ERROR:  cannot PREPARE a transaction that has operated on temporary objects
2024-09-08 14:51:58.424 KST client backend[3076401] pg_regress/temp STATEMENT:  PREPARE TRANSACTION 'twophase_search';
2024-09-08 14:51:58.424 KST client backend[3076398] pg_regress/with ERROR:  search sequence column name and cycle mark column name are the same at character 144
2024-09-08 14:51:58.424 KST client backend[3076398] pg_regress/with STATEMENT:  with recursive search_graph(f, t, label) as (
		select * from graph g
		union all
		select g.*
		from graph g, search_graph sg
		where g.f = sg.t
	) search depth first by f, t set foo
	  cycle f, t set foo to true default false using path
	select * from search_graph;
2024-09-08 14:51:58.424 KST client backend[3076390] pg_regress/alter_table ERROR:  inherited constraint "con1" must be renamed in child tables too
2024-09-08 14:51:58.424 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE ONLY constraint_rename_test RENAME CONSTRAINT con1 TO con1foo;
2024-09-08 14:51:58.424 KST client backend[3076398] pg_regress/with ERROR:  search sequence column name and cycle path column name are the same at character 144
2024-09-08 14:51:58.424 KST client backend[3076398] pg_regress/with STATEMENT:  with recursive search_graph(f, t, label) as (
		select * from graph g
		union all
		select g.*
		from graph g, search_graph sg
		where g.f = sg.t
	) search depth first by f, t set foo
	  cycle f, t set is_cycle to true default false using foo
	select * from search_graph;
2024-09-08 14:51:58.425 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dcomptype violates check constraint "dcomptype_check"
2024-09-08 14:51:58.425 KST client backend[3076387] pg_regress/domain STATEMENT:  update dcomptable set f1[1].cf1 = -1;
2024-09-08 14:51:58.426 KST client backend[3076392] pg_regress/sequence ERROR:  permission denied for sequence seq3
2024-09-08 14:51:58.426 KST client backend[3076392] pg_regress/sequence STATEMENT:  SELECT currval('seq3');
2024-09-08 14:51:58.426 KST client backend[3076383] pg_regress/rangefuncs ERROR:  function result type must be integer because of OUT parameters
2024-09-08 14:51:58.426 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  CREATE OR REPLACE FUNCTION rngfunc(in f1 int, out f2 int) RETURNS float
	AS 'select $1+1' LANGUAGE sql;
2024-09-08 14:51:58.426 KST client backend[3076383] pg_regress/rangefuncs ERROR:  function result type must be record because of OUT parameters
2024-09-08 14:51:58.426 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  CREATE OR REPLACE FUNCTION rngfunc(in f1 int, out f2 int, out f3 text) RETURNS int
	AS 'select $1+1' LANGUAGE sql;
2024-09-08 14:51:58.426 KST client backend[3076383] pg_regress/rangefuncs ERROR:  cannot change return type of existing function
2024-09-08 14:51:58.426 KST client backend[3076383] pg_regress/rangefuncs HINT:  Use DROP FUNCTION rngfunc(integer) first.
2024-09-08 14:51:58.426 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  CREATE OR REPLACE FUNCTION rngfunc(in f1 int, out f2 int, out f3 text)
	RETURNS record
	AS 'select $1+1' LANGUAGE sql;
2024-09-08 14:51:58.426 KST client backend[3076391] pg_regress/copy2 ERROR:  COPY DEFAULT only available using COPY FROM
2024-09-08 14:51:58.426 KST client backend[3076391] pg_regress/copy2 STATEMENT:  copy (select 1 as test) TO stdout with (default '\D');
2024-09-08 14:51:58.427 KST client backend[3076394] pg_regress/polymorphism ERROR:  function anyctest(integer, point) does not exist at character 29
2024-09-08 14:51:58.427 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.427 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select x, pg_typeof(x) from anyctest(11, point(1,2)) x;
2024-09-08 14:51:58.427 KST client backend[3076394] pg_regress/polymorphism ERROR:  function anyctest(integer, integer[]) does not exist at character 29
2024-09-08 14:51:58.427 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.427 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select x, pg_typeof(x) from anyctest(11, array[1,2]) x;
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain ERROR:  domain dnotnull does not allow null values
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain STATEMENT:  INSERT INTO nulltest DEFAULT VALUES;
2024-09-08 14:51:58.428 KST client backend[3076383] pg_regress/rangefuncs ERROR:  could not determine polymorphic type because input has type unknown
2024-09-08 14:51:58.428 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  SELECT dup('xyz');
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain ERROR:  domain dcheck does not allow null values
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into nulltest values ('a', 'b', 'c', 'd', NULL);
2024-09-08 14:51:58.428 KST client backend[3076383] pg_regress/rangefuncs ERROR:  cannot change name of input parameter "f1"
2024-09-08 14:51:58.428 KST client backend[3076383] pg_regress/rangefuncs HINT:  Use DROP FUNCTION dup(anyelement) first.
2024-09-08 14:51:58.428 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  CREATE OR REPLACE FUNCTION dup (inout f2 anyelement, out f3 anyarray)
	AS 'select $1, array[$1,$1]' LANGUAGE sql;
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain ERROR:  new row for relation "nulltest" violates check constraint "nulltest_col5_check"
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain DETAIL:  Failing row contains (a, b, c, d, a).
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into nulltest values ('a', 'b', 'c', 'd', 'a');
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain ERROR:  domain dnotnull does not allow null values
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain STATEMENT:  INSERT INTO nulltest values (NULL, 'b', 'c', 'd', 'd');
2024-09-08 14:51:58.428 KST client backend[3076392] pg_regress/sequence ERROR:  permission denied for sequence seq3
2024-09-08 14:51:58.428 KST client backend[3076392] pg_regress/sequence STATEMENT:  SELECT lastval();
2024-09-08 14:51:58.428 KST client backend[3076394] pg_regress/polymorphism ERROR:  function anyctest(integer, point[]) does not exist at character 29
2024-09-08 14:51:58.428 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.428 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select x, pg_typeof(x) from anyctest(11, array[point(1,2)]) x;
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain ERROR:  domain dnotnull does not allow null values
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain STATEMENT:  INSERT INTO nulltest values ('a', NULL, 'c', 'd', 'c');
2024-09-08 14:51:58.428 KST client backend[3076394] pg_regress/polymorphism ERROR:  function anyctest(integer, integer) does not exist at character 29
2024-09-08 14:51:58.428 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.428 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select x, pg_typeof(x) from anyctest(11, 12) x;
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain ERROR:  null value in column "col3" of relation "nulltest" violates not-null constraint
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain DETAIL:  Failing row contains (a, b, null, d, c).
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain STATEMENT:  INSERT INTO nulltest values ('a', 'b', NULL, 'd', 'c');
2024-09-08 14:51:58.428 KST client backend[3076383] pg_regress/rangefuncs ERROR:  cannot determine result data type
2024-09-08 14:51:58.428 KST client backend[3076383] pg_regress/rangefuncs DETAIL:  A result of type anyelement requires at least one input of type anyelement, anyarray, anynonarray, anyenum, anyrange, or anymultirange.
2024-09-08 14:51:58.428 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  CREATE FUNCTION bad (f1 int, out f2 anyelement, out f3 anyarray)
	AS 'select $1, array[$1,$1]' LANGUAGE sql;
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain ERROR:  null value in column "col3" of relation "nulltest" violates not-null constraint
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain DETAIL:  Failing row contains (a, b, null, d, d).
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain CONTEXT:  COPY nulltest, line 1: "a	b	\N	d	d"
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain STATEMENT:  COPY nulltest FROM stdin;
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain ERROR:  domain dcheck does not allow null values
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain CONTEXT:  COPY nulltest, line 1, column col5: null input
2024-09-08 14:51:58.428 KST client backend[3076387] pg_regress/domain STATEMENT:  COPY nulltest FROM stdin;
2024-09-08 14:51:58.429 KST client backend[3076387] pg_regress/domain ERROR:  new row for relation "nulltest" violates check constraint "nulltest_col5_check"
2024-09-08 14:51:58.429 KST client backend[3076387] pg_regress/domain DETAIL:  Failing row contains (a, b, c, null, a).
2024-09-08 14:51:58.429 KST client backend[3076387] pg_regress/domain CONTEXT:  COPY nulltest, line 3: "a	b	c	\N	a"
2024-09-08 14:51:58.429 KST client backend[3076387] pg_regress/domain STATEMENT:  COPY nulltest FROM stdin;
2024-09-08 14:51:58.429 KST client backend[3076394] pg_regress/polymorphism ERROR:  function anyctest(integer, integer) does not exist at character 29
2024-09-08 14:51:58.429 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.429 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select x, pg_typeof(x) from anyctest(11, 12) x;
2024-09-08 14:51:58.429 KST client backend[3076394] pg_regress/polymorphism ERROR:  function anyctest(numeric, int4range) does not exist at character 29
2024-09-08 14:51:58.429 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.429 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select x, pg_typeof(x) from anyctest(11.2, int4range(4,7)) x;
2024-09-08 14:51:58.429 KST client backend[3076394] pg_regress/polymorphism ERROR:  could not determine polymorphic type anycompatiblerange because input has type unknown
2024-09-08 14:51:58.429 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select x, pg_typeof(x) from anyctest(11.2, '[4,7)') x;
2024-09-08 14:51:58.429 KST client backend[3076387] pg_regress/domain ERROR:  domain dnotnull does not allow null values
2024-09-08 14:51:58.429 KST client backend[3076387] pg_regress/domain STATEMENT:  SELECT cast(NULL as dnotnull);
2024-09-08 14:51:58.429 KST client backend[3076387] pg_regress/domain ERROR:  domain dnotnull does not allow null values
2024-09-08 14:51:58.429 KST client backend[3076387] pg_regress/domain STATEMENT:  SELECT cast(cast(NULL as dnull) as dnotnull);
2024-09-08 14:51:58.429 KST client backend[3076387] pg_regress/domain ERROR:  domain dnotnull does not allow null values
2024-09-08 14:51:58.429 KST client backend[3076387] pg_regress/domain STATEMENT:  SELECT cast(col4 as dnotnull) from nulltest;
2024-09-08 14:51:58.429 KST client backend[3076394] pg_regress/polymorphism ERROR:  function anyctest(int4range, numrange) does not exist at character 29
2024-09-08 14:51:58.429 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.429 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select x, pg_typeof(x) from anyctest(int4range(11,12), numrange(4,7)) x;
2024-09-08 14:51:58.429 KST client backend[3076398] pg_regress/with ERROR:  WITH query "x" has 1 columns available but 2 columns specified at character 6
2024-09-08 14:51:58.429 KST client backend[3076398] pg_regress/with STATEMENT:  WITH x(n, b) AS (SELECT 1)
	SELECT * FROM x;
2024-09-08 14:51:58.429 KST client backend[3076398] pg_regress/with ERROR:  recursive query "x" does not have the form non-recursive-term UNION [ALL] recursive-term at character 16
2024-09-08 14:51:58.429 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE x(n) AS (SELECT 1 INTERSECT SELECT n+1 FROM x)
		SELECT * FROM x;
2024-09-08 14:51:58.429 KST client backend[3076398] pg_regress/with ERROR:  recursive query "x" does not have the form non-recursive-term UNION [ALL] recursive-term at character 16
2024-09-08 14:51:58.429 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE x(n) AS (SELECT 1 INTERSECT ALL SELECT n+1 FROM x)
		SELECT * FROM x;
2024-09-08 14:51:58.429 KST client backend[3076398] pg_regress/with ERROR:  recursive query "x" does not have the form non-recursive-term UNION [ALL] recursive-term at character 16
2024-09-08 14:51:58.429 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE x(n) AS (SELECT 1 EXCEPT SELECT n+1 FROM x)
		SELECT * FROM x;
2024-09-08 14:51:58.429 KST client backend[3076398] pg_regress/with ERROR:  recursive query "x" does not have the form non-recursive-term UNION [ALL] recursive-term at character 16
2024-09-08 14:51:58.429 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE x(n) AS (SELECT 1 EXCEPT ALL SELECT n+1 FROM x)
		SELECT * FROM x;
2024-09-08 14:51:58.429 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine result data type
2024-09-08 14:51:58.429 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anycompatiblerange requires at least one input of type anycompatiblerange or anycompatiblemultirange.
2024-09-08 14:51:58.429 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  create function anyctest(anycompatible)
	returns anycompatiblerange as $$
	  select $1
	$$ language sql;
2024-09-08 14:51:58.429 KST client backend[3076398] pg_regress/with ERROR:  recursive query "x" does not have the form non-recursive-term UNION [ALL] recursive-term at character 16
2024-09-08 14:51:58.429 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE x(n) AS (SELECT n FROM x)
		SELECT * FROM x;
2024-09-08 14:51:58.429 KST client backend[3076398] pg_regress/with ERROR:  recursive reference to query "x" must not appear within its non-recursive term at character 39
2024-09-08 14:51:58.429 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE x(n) AS (SELECT n FROM x UNION ALL SELECT 1)
		SELECT * FROM x;
2024-09-08 14:51:58.429 KST client backend[3076392] pg_regress/sequence ERROR:  permission denied for sequence seq3
2024-09-08 14:51:58.429 KST client backend[3076392] pg_regress/sequence STATEMENT:  SELECT setval('seq3', 5);
2024-09-08 14:51:58.430 KST client backend[3076394] pg_regress/polymorphism ERROR:  function anyctest(integer, integer) does not exist at character 29
2024-09-08 14:51:58.430 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.430 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select x, pg_typeof(x) from anyctest(11, 12) x;
2024-09-08 14:51:58.430 KST client backend[3076383] pg_regress/rangefuncs ERROR:  cannot determine result data type
2024-09-08 14:51:58.430 KST client backend[3076383] pg_regress/rangefuncs DETAIL:  A result of type anycompatible requires at least one input of type anycompatible, anycompatiblearray, anycompatiblenonarray, anycompatiblerange, or anycompatiblemultirange.
2024-09-08 14:51:58.430 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  CREATE FUNCTION bad (f1 anyarray, out f2 anycompatible, out f3 anycompatiblearray)
	AS 'select $1, array[$1,$1]' LANGUAGE sql;
2024-09-08 14:51:58.430 KST client backend[3076394] pg_regress/polymorphism ERROR:  function anyctest(numeric, int4multirange) does not exist at character 29
2024-09-08 14:51:58.430 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.430 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select x, pg_typeof(x) from anyctest(11.2, multirange(int4range(4,7))) x;
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with ERROR:  recursive reference to query "x" must not appear within an outer join at character 95
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE x(n) AS (SELECT a FROM y WHERE a = 1
		UNION ALL
		SELECT x.n+1 FROM y LEFT JOIN x ON x.n = y.a WHERE n < 10)
	SELECT * FROM x;
2024-09-08 14:51:58.430 KST client backend[3076392] pg_regress/sequence ERROR:  must be owner of sequence sequence_test2
2024-09-08 14:51:58.430 KST client backend[3076392] pg_regress/sequence STATEMENT:  ALTER SEQUENCE sequence_test2 START WITH 1;
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with ERROR:  recursive reference to query "x" must not appear within an outer join at character 83
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE x(n) AS (SELECT a FROM y WHERE a = 1
		UNION ALL
		SELECT x.n+1 FROM x RIGHT JOIN y ON x.n = y.a WHERE n < 10)
	SELECT * FROM x;
2024-09-08 14:51:58.430 KST client backend[3076394] pg_regress/polymorphism ERROR:  could not determine polymorphic type anycompatiblemultirange because input has type unknown
2024-09-08 14:51:58.430 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select x, pg_typeof(x) from anyctest(11.2, '{[4,7)}') x;
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with ERROR:  recursive reference to query "x" must not appear within an outer join at character 83
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE x(n) AS (SELECT a FROM y WHERE a = 1
		UNION ALL
		SELECT x.n+1 FROM x FULL JOIN y ON x.n = y.a WHERE n < 10)
	SELECT * FROM x;
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with ERROR:  recursive reference to query "x" must not appear within a subquery at character 114
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE x(n) AS (SELECT 1 UNION ALL SELECT n+1 FROM x
	                          WHERE n IN (SELECT * FROM x))
	  SELECT * FROM x;
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with ERROR:  aggregate functions are not allowed in a recursive query's recursive term at character 51
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE x(n) AS (SELECT 1 UNION ALL SELECT count(*) FROM x)
	  SELECT * FROM x;
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with ERROR:  aggregate functions are not allowed in a recursive query's recursive term at character 51
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE x(n) AS (SELECT 1 UNION ALL SELECT sum(n) FROM x)
	  SELECT * FROM x;
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with ERROR:  ORDER BY in a recursive query is not implemented at character 71
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE x(n) AS (SELECT 1 UNION ALL SELECT n+1 FROM x ORDER BY 1)
	  SELECT * FROM x;
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with ERROR:  OFFSET in a recursive query is not implemented at character 78
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE x(n) AS (SELECT 1 UNION ALL SELECT n+1 FROM x LIMIT 10 OFFSET 1)
	  SELECT * FROM x;
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with ERROR:  FOR UPDATE/SHARE in a recursive query is not implemented
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE x(n) AS (SELECT 1 UNION ALL SELECT n+1 FROM x FOR UPDATE)
	  SELECT * FROM x;
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with ERROR:  recursive reference to query "x" must not appear within a subquery at character 77
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE x(id) AS (values (1)
	    UNION ALL
	    SELECT (SELECT * FROM x) FROM x WHERE id < 5
	) SELECT * FROM x;
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with ERROR:  mutual recursion between WITH items is not implemented at character 18
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE
	  x (id) AS (SELECT 1 UNION ALL SELECT id+1 FROM y WHERE id < 5),
	  y (id) AS (SELECT 1 UNION ALL SELECT id+1 FROM x WHERE id < 5)
	SELECT * FROM x;
2024-09-08 14:51:58.430 KST client backend[3076394] pg_regress/polymorphism ERROR:  function anyctest(int4multirange, nummultirange) does not exist at character 29
2024-09-08 14:51:58.430 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.430 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select x, pg_typeof(x) from anyctest(multirange(int4range(11,12)), multirange(numrange(4,7))) x;
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with ERROR:  recursive reference to query "foo" must not appear more than once at character 140
2024-09-08 14:51:58.430 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE foo(i) AS
	    (values (1)
	    UNION ALL
	       (SELECT i+1 FROM foo WHERE i < 10
	          UNION ALL
	       SELECT i+1 FROM foo WHERE i < 5)
	) SELECT * FROM foo;
2024-09-08 14:51:58.431 KST client backend[3076398] pg_regress/with ERROR:  recursive reference to query "foo" must not appear more than once at character 158
2024-09-08 14:51:58.431 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE foo(i) AS
	    (values (1)
	    UNION ALL
		   SELECT * FROM
	       (SELECT i+1 FROM foo WHERE i < 10
	          UNION ALL
	       SELECT i+1 FROM foo WHERE i < 5) AS t
	) SELECT * FROM foo;
2024-09-08 14:51:58.431 KST client backend[3076398] pg_regress/with ERROR:  recursive reference to query "foo" must not appear within EXCEPT at character 137
2024-09-08 14:51:58.431 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE foo(i) AS
	    (values (1)
	    UNION ALL
	       (SELECT i+1 FROM foo WHERE i < 10
	          EXCEPT
	       SELECT i+1 FROM foo WHERE i < 5)
	) SELECT * FROM foo;
2024-09-08 14:51:58.431 KST client backend[3076398] pg_regress/with ERROR:  recursive reference to query "foo" must not appear more than once at character 140
2024-09-08 14:51:58.431 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE foo(i) AS
	    (values (1)
	    UNION ALL
	       (SELECT i+1 FROM foo WHERE i < 10
	          INTERSECT
	       SELECT i+1 FROM foo WHERE i < 5)
	) SELECT * FROM foo;
2024-09-08 14:51:58.431 KST client backend[3076394] pg_regress/polymorphism ERROR:  cannot determine result data type
2024-09-08 14:51:58.431 KST client backend[3076394] pg_regress/polymorphism DETAIL:  A result of type anycompatiblemultirange requires at least one input of type anycompatiblerange or anycompatiblemultirange.
2024-09-08 14:51:58.431 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  create function anyctest(anycompatible)
	returns anycompatiblemultirange as $$
	  select $1
	$$ language sql;
2024-09-08 14:51:58.431 KST client backend[3076398] pg_regress/with ERROR:  recursive query "foo" column 1 has type integer in non-recursive term but type numeric overall at character 37
2024-09-08 14:51:58.431 KST client backend[3076398] pg_regress/with HINT:  Cast the output of the non-recursive term to the correct type.
2024-09-08 14:51:58.431 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE foo(i) AS
	   (SELECT i FROM (VALUES(1),(2)) t(i)
	   UNION ALL
	   SELECT (i+1)::numeric(10,0) FROM foo WHERE i < 10)
	SELECT * FROM foo;
2024-09-08 14:51:58.431 KST client backend[3076398] pg_regress/with ERROR:  recursive query "foo" column 1 has type numeric(3,0) in non-recursive term but type numeric overall at character 37
2024-09-08 14:51:58.431 KST client backend[3076398] pg_regress/with HINT:  Cast the output of the non-recursive term to the correct type.
2024-09-08 14:51:58.431 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE foo(i) AS
	   (SELECT i::numeric(3,0) FROM (VALUES(1),(2)) t(i)
	   UNION ALL
	   SELECT (i+1)::numeric(10,0) FROM foo WHERE i < 10)
	SELECT * FROM foo;
2024-09-08 14:51:58.431 KST client backend[3076394] pg_regress/polymorphism ERROR:  function anyctest(integer[], integer[]) does not exist at character 29
2024-09-08 14:51:58.431 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.431 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select x, pg_typeof(x) from anyctest(array[11], array[1,2]) x;
2024-09-08 14:51:58.431 KST client backend[3076398] pg_regress/with ERROR:  cannot refer to OLD within WITH query
2024-09-08 14:51:58.431 KST client backend[3076398] pg_regress/with STATEMENT:  CREATE RULE r2 AS ON UPDATE TO x DO INSTEAD
	    WITH t AS (SELECT OLD.*) UPDATE y SET a = t.n FROM t;
2024-09-08 14:51:58.432 KST client backend[3076394] pg_regress/polymorphism ERROR:  function anyctest(integer, numeric[], integer, numeric) does not exist at character 29
2024-09-08 14:51:58.432 KST client backend[3076394] pg_regress/polymorphism HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.432 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select x, pg_typeof(x) from anyctest(11, array[1, 2.2], 42, 34.5) x;
2024-09-08 14:51:58.432 KST client backend[3076398] pg_regress/with ERROR:  relation "outermost" does not exist at character 96
2024-09-08 14:51:58.432 KST client backend[3076398] pg_regress/with DETAIL:  There is a WITH item named "outermost", but it cannot be referenced from this part of the query.
2024-09-08 14:51:58.432 KST client backend[3076398] pg_regress/with HINT:  Use WITH RECURSIVE, or re-order the WITH items to remove forward references.
2024-09-08 14:51:58.432 KST client backend[3076398] pg_regress/with STATEMENT:  WITH outermost(x) AS (
	  SELECT 1
	  UNION (WITH innermost as (SELECT 2)
	         SELECT * FROM outermost  -- fail
	         UNION SELECT * FROM innermost)
	)
	SELECT * FROM outermost ORDER BY 1;
2024-09-08 14:51:58.432 KST client backend[3076394] pg_regress/polymorphism ERROR:  invalid input syntax for type integer: "12.2" at character 42
2024-09-08 14:51:58.432 KST client backend[3076394] pg_regress/polymorphism STATEMENT:  select x, pg_typeof(x) from anyctest(11, '12.2') x;
2024-09-08 14:51:58.432 KST client backend[3076398] pg_regress/with ERROR:  recursive reference to query "outermost" must not appear within a subquery at character 69
2024-09-08 14:51:58.432 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE outermost(x) AS (
	  WITH innermost as (SELECT 2 FROM outermost) -- fail
	    SELECT * FROM innermost
	    UNION SELECT * from outermost
	)
	SELECT * FROM outermost ORDER BY 1;
2024-09-08 14:51:58.433 KST client backend[3076387] pg_regress/domain ERROR:  null value in column "col5" of relation "defaulttest" violates not-null constraint
2024-09-08 14:51:58.433 KST client backend[3076387] pg_regress/domain DETAIL:  Failing row contains (3, 12, 5, 0, null, 88, 8000, 12.12).
2024-09-08 14:51:58.433 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into defaulttest(col4) values(0);
2024-09-08 14:51:58.433 KST client backend[3076387] pg_regress/domain ERROR:  null value in column "col5" of relation "defaulttest" violates not-null constraint
2024-09-08 14:51:58.433 KST client backend[3076387] pg_regress/domain DETAIL:  Failing row contains (3, 12, 5, 0, null, 88, 8000, 12.12).
2024-09-08 14:51:58.433 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into defaulttest(col4) values(0);
2024-09-08 14:51:58.433 KST client backend[3076395] pg_regress/rowtypes ERROR:  could not determine interpretation of row comparison operator ~~ at character 25
2024-09-08 14:51:58.433 KST client backend[3076395] pg_regress/rowtypes HINT:  Row comparison operators must be associated with btree operator families.
2024-09-08 14:51:58.433 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select ROW('ABC','DEF') ~~ ROW('DEF','ABC') as fail;
2024-09-08 14:51:58.436 KST client backend[3076387] pg_regress/domain ERROR:  column "col1" of table "domnotnull" contains null values
2024-09-08 14:51:58.436 KST client backend[3076387] pg_regress/domain STATEMENT:  alter domain dnotnulltest set not null;
2024-09-08 14:51:58.436 KST client backend[3076387] pg_regress/domain ERROR:  column "col2" of table "domnotnull" contains null values
2024-09-08 14:51:58.436 KST client backend[3076387] pg_regress/domain STATEMENT:  alter domain dnotnulltest set not null;
2024-09-08 14:51:58.436 KST client backend[3076387] pg_regress/domain ERROR:  domain dnotnulltest does not allow null values
2024-09-08 14:51:58.436 KST client backend[3076387] pg_regress/domain STATEMENT:  update domnotnull set col1 = null;
2024-09-08 14:51:58.437 KST client backend[3076398] pg_regress/with ERROR:  INSERT ... SELECT rule actions are not supported for queries having data-modifying statements in WITH
2024-09-08 14:51:58.437 KST client backend[3076398] pg_regress/with STATEMENT:  WITH t1 AS ( DELETE FROM bug6051 RETURNING * )
	INSERT INTO bug6051 SELECT * FROM t1;
2024-09-08 14:51:58.438 KST client backend[3076387] pg_regress/domain ERROR:  column "col1" of table "domcontest" contains values that violate the new constraint
2024-09-08 14:51:58.438 KST client backend[3076387] pg_regress/domain STATEMENT:  alter domain con add constraint t check (VALUE < 1);
2024-09-08 14:51:58.439 KST client backend[3076387] pg_regress/domain ERROR:  value for domain con violates check constraint "con_check"
2024-09-08 14:51:58.439 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into domcontest values (-5);
2024-09-08 14:51:58.439 KST client backend[3076387] pg_regress/domain ERROR:  value for domain con violates check constraint "t"
2024-09-08 14:51:58.439 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into domcontest values (42);
2024-09-08 14:51:58.439 KST client backend[3076387] pg_regress/domain ERROR:  value for domain con violates check constraint "con_check"
2024-09-08 14:51:58.439 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into domcontest values (-5);
2024-09-08 14:51:58.439 KST client backend[3076387] pg_regress/domain ERROR:  constraint "nonexistent" of domain "con" does not exist
2024-09-08 14:51:58.439 KST client backend[3076387] pg_regress/domain STATEMENT:  alter domain con drop constraint nonexistent;
2024-09-08 14:51:58.440 KST client backend[3076387] pg_regress/domain ERROR:  column "stuff" of table "thethings" contains values that violate the new constraint
2024-09-08 14:51:58.440 KST client backend[3076387] pg_regress/domain STATEMENT:  ALTER DOMAIN things ADD CONSTRAINT meow CHECK (VALUE < 11);
2024-09-08 14:51:58.440 KST client backend[3076395] pg_regress/rowtypes ERROR:  cannot compare dissimilar column types bigint and integer at record column 1
2024-09-08 14:51:58.440 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select * from int8_tbl i8 where i8 in (row(123,456));
2024-09-08 14:51:58.440 KST client backend[3076387] pg_regress/domain ERROR:  column "stuff" of table "thethings" contains values that violate the new constraint
2024-09-08 14:51:58.440 KST client backend[3076387] pg_regress/domain STATEMENT:  ALTER DOMAIN things VALIDATE CONSTRAINT meow;
2024-09-08 14:51:58.441 KST client backend[3076395] pg_regress/rowtypes ERROR:  could not identify column "nosuch" in record data type at character 9
2024-09-08 14:51:58.441 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select (row(1, 2.0)).nosuch;
2024-09-08 14:51:58.441 KST client backend[3076395] pg_regress/rowtypes ERROR:  could not identify column "f3" in record data type at character 9
2024-09-08 14:51:58.441 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select (r).f3 from (select row(1, 2.0) as r) ss;
2024-09-08 14:51:58.441 KST client backend[3076395] pg_regress/rowtypes ERROR:  cannot compare rows of zero length at character 14
2024-09-08 14:51:58.441 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select ROW() = ROW();
2024-09-08 14:51:58.442 KST client backend[3076387] pg_regress/domain ERROR:  domain dom does not allow null values
2024-09-08 14:51:58.442 KST client backend[3076387] pg_regress/domain STATEMENT:  select * from domview;
2024-09-08 14:51:58.442 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dom violates check constraint "domchkgt6"
2024-09-08 14:51:58.442 KST client backend[3076387] pg_regress/domain STATEMENT:  select * from domview;
2024-09-08 14:51:58.442 KST client backend[3076383] pg_regress/rangefuncs LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3076383.0", size 140000
2024-09-08 14:51:58.442 KST client backend[3076383] pg_regress/rangefuncs CONTEXT:  SQL function "rngfunc1" statement 1
2024-09-08 14:51:58.442 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  select t.a, t, t.a from rngfunc1(10000) t limit 1;
2024-09-08 14:51:58.442 KST client backend[3076383] pg_regress/rangefuncs LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3076383.1", size 277788
2024-09-08 14:51:58.442 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  select t.a, t, t.a from rngfunc1(10000) t limit 1;
2024-09-08 14:51:58.443 KST client backend[3076395] pg_regress/rowtypes ERROR:  could not identify an ordering operator for type cantcompare at character 27
2024-09-08 14:51:58.443 KST client backend[3076395] pg_regress/rowtypes HINT:  Use an explicit ordering operator or modify the query.
2024-09-08 14:51:58.443 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select * from cc order by f1;
2024-09-08 14:51:58.444 KST client backend[3076398] pg_regress/with ERROR:  WITH RECURSIVE is not supported for MERGE statement
2024-09-08 14:51:58.444 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE cte_basic AS (SELECT 1 a, 'cte_basic val' b)
	MERGE INTO m USING (select 0 k, 'merge source SubPlan' v) o ON m.k=o.k
	WHEN MATCHED THEN UPDATE SET v = (SELECT b || ' merge update' FROM cte_basic WHERE cte_basic.a = m.k LIMIT 1)
	WHEN NOT MATCHED THEN INSERT VALUES(o.k, o.v);
2024-09-08 14:51:58.444 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dtop violates check constraint "dinter_check"
2024-09-08 14:51:58.444 KST client backend[3076387] pg_regress/domain STATEMENT:  select 'y1234'::dtop;
2024-09-08 14:51:58.444 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dtop violates check constraint "dinter_check"
2024-09-08 14:51:58.444 KST client backend[3076387] pg_regress/domain STATEMENT:  select 'y123'::dtop;
2024-09-08 14:51:58.444 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dtop violates check constraint "dinter_check"
2024-09-08 14:51:58.444 KST client backend[3076387] pg_regress/domain STATEMENT:  select 'yz23'::dtop;
2024-09-08 14:51:58.444 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dtop violates check constraint "dtop_check"
2024-09-08 14:51:58.444 KST client backend[3076387] pg_regress/domain STATEMENT:  select 'xz23'::dtop;
2024-09-08 14:51:58.445 KST client backend[3076395] pg_regress/rowtypes ERROR:  cannot compare dissimilar column types integer and text at record column 2
2024-09-08 14:51:58.445 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select row(1, 2)::testtype1 < row(1, 'abc')::testtype3;
2024-09-08 14:51:58.445 KST client backend[3076395] pg_regress/rowtypes ERROR:  cannot compare dissimilar column types integer and text at record column 2
2024-09-08 14:51:58.445 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select row(1, 2)::testtype1 <> row(1, 'abc')::testtype3;
2024-09-08 14:51:58.445 KST client backend[3076387] pg_regress/domain ERROR:  value too long for type character varying(4)
2024-09-08 14:51:58.445 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into dtest values('x1234');
2024-09-08 14:51:58.445 KST client backend[3076387] pg_regress/domain ERROR:  value too long for type character varying(4)
2024-09-08 14:51:58.445 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into dtest values('y1234');
2024-09-08 14:51:58.445 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dtop violates check constraint "dinter_check"
2024-09-08 14:51:58.445 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into dtest values('y123');
2024-09-08 14:51:58.445 KST client backend[3076395] pg_regress/rowtypes ERROR:  cannot compare record types with different numbers of columns
2024-09-08 14:51:58.445 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select row(1, 2)::testtype1 < row(1)::testtype5;
2024-09-08 14:51:58.445 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dtop violates check constraint "dinter_check"
2024-09-08 14:51:58.445 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into dtest values('yz23');
2024-09-08 14:51:58.445 KST client backend[3076395] pg_regress/rowtypes ERROR:  cannot compare record types with different numbers of columns
2024-09-08 14:51:58.445 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select row(1, 2)::testtype1 <> row(1)::testtype5;
2024-09-08 14:51:58.445 KST client backend[3076387] pg_regress/domain ERROR:  value for domain dtop violates check constraint "dtop_check"
2024-09-08 14:51:58.445 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into dtest values('xz23');
2024-09-08 14:51:58.446 KST client backend[3076395] pg_regress/rowtypes ERROR:  could not identify a comparison function for type point
2024-09-08 14:51:58.446 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select row(1, '(1,2)')::testtype6 < row(1, '(1,3)')::testtype6;
2024-09-08 14:51:58.446 KST client backend[3076395] pg_regress/rowtypes ERROR:  could not identify an equality operator for type point
2024-09-08 14:51:58.446 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select row(1, '(1,2)')::testtype6 <> row(1, '(1,3)')::testtype6;
2024-09-08 14:51:58.447 KST client backend[3076380] pg_regress/plpgsql ERROR:  duplicate key value violates unique constraint "pfield_name"
2024-09-08 14:51:58.447 KST client backend[3076380] pg_regress/plpgsql DETAIL:  Key (name)=(PF1_1) already exists.
2024-09-08 14:51:58.447 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  insert into PField values ('PF1_1', 'should fail due to unique index');
2024-09-08 14:51:58.447 KST client backend[3076380] pg_regress/plpgsql ERROR:  WS.not.there         does not exist
2024-09-08 14:51:58.447 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function tg_backlink_set(character,character) line 30 at RAISE
	PL/pgSQL function tg_backlink_a() line 17 at assignment
2024-09-08 14:51:58.447 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  update PSlot set backlink = 'WS.not.there' where slotname = 'PS.base.a1';
2024-09-08 14:51:58.448 KST client backend[3076380] pg_regress/plpgsql ERROR:  illegal backlink beginning with XX
2024-09-08 14:51:58.448 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function tg_backlink_set(character,character) line 47 at RAISE
	PL/pgSQL function tg_backlink_a() line 17 at assignment
2024-09-08 14:51:58.448 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  update PSlot set backlink = 'XX.illegal' where slotname = 'PS.base.a1';
2024-09-08 14:51:58.448 KST client backend[3076383] pg_regress/rangefuncs ERROR:  a column definition list is required for functions returning "record" at character 15
2024-09-08 14:51:58.448 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  select * from array_to_set(array['one', 'two']);
2024-09-08 14:51:58.448 KST client backend[3076387] pg_regress/domain ERROR:  domain str_domain does not allow null values
2024-09-08 14:51:58.448 KST client backend[3076387] pg_regress/domain STATEMENT:  alter table domain_test add column c str_domain;
2024-09-08 14:51:58.448 KST client backend[3076383] pg_regress/rangefuncs ERROR:  return type mismatch in function declared to return record
2024-09-08 14:51:58.448 KST client backend[3076383] pg_regress/rangefuncs DETAIL:  Final statement returns integer instead of point at column 1.
2024-09-08 14:51:58.448 KST client backend[3076383] pg_regress/rangefuncs CONTEXT:  SQL function "array_to_set" during startup
2024-09-08 14:51:58.448 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  select * from array_to_set(array['one', 'two']) as t(f1 point,f2 text);
2024-09-08 14:51:58.448 KST client backend[3076380] pg_regress/plpgsql ERROR:  PS.not.there         does not exist
2024-09-08 14:51:58.448 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function tg_slotlink_set(character,character) line 30 at RAISE
	PL/pgSQL function tg_slotlink_a() line 17 at assignment
2024-09-08 14:51:58.448 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  update PSlot set slotlink = 'PS.not.there' where slotname = 'PS.base.a1';
2024-09-08 14:51:58.449 KST client backend[3076380] pg_regress/plpgsql ERROR:  illegal slotlink beginning with XX
2024-09-08 14:51:58.449 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function tg_slotlink_set(character,character) line 77 at RAISE
	PL/pgSQL function tg_slotlink_a() line 17 at assignment
2024-09-08 14:51:58.449 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  update PSlot set slotlink = 'XX.illegal' where slotname = 'PS.base.a1';
2024-09-08 14:51:58.449 KST client backend[3076380] pg_regress/plpgsql ERROR:  duplicate key value violates unique constraint "hslot_name"
2024-09-08 14:51:58.449 KST client backend[3076380] pg_regress/plpgsql DETAIL:  Key (slotname)=(HS.base.hub1.1      ) already exists.
2024-09-08 14:51:58.449 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  insert into HSlot values ('HS', 'base.hub1', 1, '');
2024-09-08 14:51:58.449 KST client backend[3076383] pg_regress/rangefuncs ERROR:  return type mismatch in function declared to return record
2024-09-08 14:51:58.449 KST client backend[3076383] pg_regress/rangefuncs DETAIL:  Final statement returns integer instead of point at column 1.
2024-09-08 14:51:58.449 KST client backend[3076383] pg_regress/rangefuncs CONTEXT:  SQL function "array_to_set" during inlining
2024-09-08 14:51:58.449 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  select * from array_to_set(array['one', 'two']) as t(f1 point,f2 text);
2024-09-08 14:51:58.449 KST client backend[3076380] pg_regress/plpgsql ERROR:  no manual manipulation of HSlot
2024-09-08 14:51:58.449 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function tg_hslot_biu() line 12 at RAISE
2024-09-08 14:51:58.449 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  insert into HSlot values ('HS', 'base.hub1', 20, '');
2024-09-08 14:51:58.449 KST client backend[3076380] pg_regress/plpgsql ERROR:  no manual manipulation of HSlot
2024-09-08 14:51:58.449 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function tg_hslot_bd() line 12 at RAISE
2024-09-08 14:51:58.449 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  delete from HSlot;
2024-09-08 14:51:58.449 KST client backend[3076380] pg_regress/plpgsql ERROR:  system "notthere" does not exist
2024-09-08 14:51:58.449 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function tg_iface_biu() line 8 at RAISE
2024-09-08 14:51:58.449 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  insert into IFace values ('IF', 'notthere', 'eth0', '');
2024-09-08 14:51:58.450 KST client backend[3076380] pg_regress/plpgsql ERROR:  IFace slotname "IF.orion.ethernet_interface_name_too_long" too long (20 char max)
2024-09-08 14:51:58.450 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function tg_iface_biu() line 14 at RAISE
2024-09-08 14:51:58.450 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  insert into IFace values ('IF', 'orion', 'ethernet_interface_name_too_long', '');
2024-09-08 14:51:58.450 KST client backend[3076387] pg_regress/domain ERROR:  value for domain str_domain2 violates check constraint "str_domain2_check"
2024-09-08 14:51:58.450 KST client backend[3076387] pg_regress/domain STATEMENT:  alter table domain_test add column d str_domain2;
2024-09-08 14:51:58.450 KST client backend[3076395] pg_regress/rowtypes ERROR:  cannot compare dissimilar column types integer and text at record column 2
2024-09-08 14:51:58.450 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select row(1, 2)::testtype1 *< row(1, 'abc')::testtype3;
2024-09-08 14:51:58.450 KST client backend[3076395] pg_regress/rowtypes ERROR:  cannot compare dissimilar column types integer and text at record column 2
2024-09-08 14:51:58.450 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select row(1, 2)::testtype1 *<> row(1, 'abc')::testtype3;
2024-09-08 14:51:58.450 KST client backend[3076383] pg_regress/rangefuncs ERROR:  a column definition list is required for functions returning "record" at character 15
2024-09-08 14:51:58.450 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  select * from testrngfunc();
2024-09-08 14:51:58.451 KST client backend[3076395] pg_regress/rowtypes ERROR:  cannot compare record types with different numbers of columns
2024-09-08 14:51:58.451 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select row(1, 2)::testtype1 *< row(1)::testtype5;
2024-09-08 14:51:58.451 KST client backend[3076395] pg_regress/rowtypes ERROR:  cannot compare record types with different numbers of columns
2024-09-08 14:51:58.451 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select row(1, 2)::testtype1 *<> row(1)::testtype5;
2024-09-08 14:51:58.451 KST client backend[3076387] pg_regress/domain ERROR:  value for domain pos_int violates check constraint "pos_int_check"
2024-09-08 14:51:58.451 KST client backend[3076387] pg_regress/domain STATEMENT:  execute s1(0);
2024-09-08 14:51:58.451 KST client backend[3076383] pg_regress/rangefuncs ERROR:  a column definition list is required for functions returning "record" at character 15
2024-09-08 14:51:58.451 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  select * from testrngfunc();
2024-09-08 14:51:58.451 KST client backend[3076387] pg_regress/domain ERROR:  domain pos_int does not allow null values
2024-09-08 14:51:58.451 KST client backend[3076387] pg_regress/domain STATEMENT:  execute s1(NULL);
2024-09-08 14:51:58.452 KST client backend[3076387] pg_regress/domain ERROR:  domain pos_int does not allow null values
2024-09-08 14:51:58.452 KST client backend[3076387] pg_regress/domain CONTEXT:  PL/pgSQL function doubledecrement(pos_int) line 2 during statement block local variable initialization
2024-09-08 14:51:58.452 KST client backend[3076387] pg_regress/domain STATEMENT:  select doubledecrement(3);
2024-09-08 14:51:58.452 KST client backend[3076390] pg_regress/alter_table ERROR:  column "c" referenced in foreign key constraint does not exist
2024-09-08 14:51:58.452 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE attmp3 add constraint attmpconstr foreign key(c) references attmp2 match full;
2024-09-08 14:51:58.452 KST client backend[3076390] pg_regress/alter_table ERROR:  column "b" referenced in foreign key constraint does not exist
2024-09-08 14:51:58.452 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE attmp3 add constraint attmpconstr foreign key(a) references attmp2(b) match full;
2024-09-08 14:51:58.452 KST client backend[3076387] pg_regress/domain ERROR:  value for domain pos_int violates check constraint "pos_int_check"
2024-09-08 14:51:58.452 KST client backend[3076387] pg_regress/domain CONTEXT:  PL/pgSQL function doubledecrement(pos_int) line 2 during statement block local variable initialization
2024-09-08 14:51:58.452 KST client backend[3076387] pg_regress/domain STATEMENT:  select doubledecrement(3);
2024-09-08 14:51:58.452 KST client backend[3076387] pg_regress/domain ERROR:  domain pos_int does not allow null values
2024-09-08 14:51:58.452 KST client backend[3076387] pg_regress/domain STATEMENT:  select doubledecrement(null);
2024-09-08 14:51:58.452 KST client backend[3076387] pg_regress/domain ERROR:  value for domain pos_int violates check constraint "pos_int_check"
2024-09-08 14:51:58.452 KST client backend[3076387] pg_regress/domain STATEMENT:  select doubledecrement(0);
2024-09-08 14:51:58.452 KST client backend[3076387] pg_regress/domain ERROR:  value for domain pos_int violates check constraint "pos_int_check"
2024-09-08 14:51:58.452 KST client backend[3076387] pg_regress/domain CONTEXT:  PL/pgSQL function doubledecrement(pos_int) line 4 at assignment
2024-09-08 14:51:58.452 KST client backend[3076387] pg_regress/domain STATEMENT:  select doubledecrement(1);
2024-09-08 14:51:58.453 KST client backend[3076387] pg_regress/domain ERROR:  value for domain pos_int violates check constraint "pos_int_check"
2024-09-08 14:51:58.453 KST client backend[3076387] pg_regress/domain CONTEXT:  PL/pgSQL function doubledecrement(pos_int) while casting return value to function's return type
2024-09-08 14:51:58.453 KST client backend[3076387] pg_regress/domain STATEMENT:  select doubledecrement(2);
2024-09-08 14:51:58.453 KST client backend[3076390] pg_regress/alter_table ERROR:  insert or update on table "attmp3" violates foreign key constraint "attmpconstr"
2024-09-08 14:51:58.453 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key (a)=(5) is not present in table "attmp2".
2024-09-08 14:51:58.453 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE attmp3 add constraint attmpconstr foreign key (a) references attmp2 match full;
2024-09-08 14:51:58.454 KST client backend[3076387] pg_regress/domain ERROR:  cannot alter type "posint" because column "ddtest2.f1" uses it
2024-09-08 14:51:58.454 KST client backend[3076387] pg_regress/domain STATEMENT:  alter domain posint add constraint c1 check(value >= 0);
2024-09-08 14:51:58.455 KST client backend[3076383] pg_regress/rangefuncs ERROR:  a column definition list is redundant for a function returning a named composite type at character 34
2024-09-08 14:51:58.455 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  select * from testrngfunc() as t(f1 int8,f2 int8);
2024-09-08 14:51:58.455 KST client backend[3076390] pg_regress/alter_table ERROR:  insert or update on table "attmp3" violates foreign key constraint "attmpconstr"
2024-09-08 14:51:58.455 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key (a)=(5) is not present in table "attmp2".
2024-09-08 14:51:58.455 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE attmp3 validate constraint attmpconstr;
2024-09-08 14:51:58.455 KST client backend[3076383] pg_regress/rangefuncs ERROR:  a column definition list is redundant for a function with OUT parameters at character 38
2024-09-08 14:51:58.455 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  select * from pg_get_keywords() as t(f1 int8,f2 int8);
2024-09-08 14:51:58.455 KST client backend[3076383] pg_regress/rangefuncs ERROR:  a column definition list is only allowed for functions returning "record" at character 27
2024-09-08 14:51:58.455 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  select * from sin(3) as t(f1 int8,f2 int8);
2024-09-08 14:51:58.455 KST client backend[3076380] pg_regress/plpgsql ERROR:  operator does not exist: point + integer at character 3
2024-09-08 14:51:58.455 KST client backend[3076380] pg_regress/plpgsql HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.455 KST client backend[3076380] pg_regress/plpgsql QUERY:  x + 1
2024-09-08 14:51:58.455 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function f1(anyelement) line 3 at RETURN
2024-09-08 14:51:58.455 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select f1(point(3,4));
2024-09-08 14:51:58.455 KST client backend[3076390] pg_regress/alter_table ERROR:  check constraint "b_greater_than_ten" of relation "attmp3" is violated by some row
2024-09-08 14:51:58.455 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE attmp3 ADD CONSTRAINT b_greater_than_ten CHECK (b > 10);
2024-09-08 14:51:58.456 KST client backend[3076398] pg_regress/with ERROR:  recursive query "t" must not contain data-modifying statements at character 16
2024-09-08 14:51:58.456 KST client backend[3076398] pg_regress/with STATEMENT:  WITH RECURSIVE t AS (
		INSERT INTO y
			SELECT * FROM t
	)
	VALUES(FALSE);
2024-09-08 14:51:58.456 KST client backend[3076387] pg_regress/domain ERROR:  cannot alter type "posint" because column "ddtest2.f1" uses it
2024-09-08 14:51:58.456 KST client backend[3076387] pg_regress/domain STATEMENT:  alter domain posint add constraint c1 check(value >= 0);
2024-09-08 14:51:58.456 KST client backend[3076390] pg_regress/alter_table ERROR:  check constraint "b_greater_than_ten" of relation "attmp3" is violated by some row
2024-09-08 14:51:58.456 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE attmp3 VALIDATE CONSTRAINT b_greater_than_ten;
2024-09-08 14:51:58.456 KST client backend[3076398] pg_regress/with ERROR:  WITH query "t" does not have a RETURNING clause at character 54
2024-09-08 14:51:58.456 KST client backend[3076398] pg_regress/with STATEMENT:  WITH t AS (
		INSERT INTO y VALUES(0)
	)
	SELECT * FROM t;
2024-09-08 14:51:58.456 KST client backend[3076398] pg_regress/with ERROR:  WITH clause containing a data-modifying statement must be at the top level at character 23
2024-09-08 14:51:58.456 KST client backend[3076398] pg_regress/with STATEMENT:  SELECT * FROM (
		WITH t AS (UPDATE y SET a=a+1 RETURNING *)
		SELECT * FROM t
	) ss;
2024-09-08 14:51:58.456 KST client backend[3076388] pg_regress/truncate ERROR:  relation "truncate_a_id1" does not exist at character 16
2024-09-08 14:51:58.456 KST client backend[3076388] pg_regress/truncate STATEMENT:  SELECT nextval('truncate_a_id1');
2024-09-08 14:51:58.456 KST client backend[3076398] pg_regress/with ERROR:  conditional DO INSTEAD rules are not supported for data-modifying statements in WITH
2024-09-08 14:51:58.456 KST client backend[3076398] pg_regress/with STATEMENT:  WITH t AS (
		INSERT INTO y VALUES(0)
	)
	VALUES(FALSE);
2024-09-08 14:51:58.456 KST client backend[3076398] pg_regress/with ERROR:  DO INSTEAD NOTHING rules are not supported for data-modifying statements in WITH
2024-09-08 14:51:58.456 KST client backend[3076398] pg_regress/with STATEMENT:  WITH t AS (
		INSERT INTO y VALUES(0)
	)
	VALUES(FALSE);
2024-09-08 14:51:58.456 KST client backend[3076380] pg_regress/plpgsql ERROR:  cannot determine element type of "anyarray" argument
2024-09-08 14:51:58.456 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select f1(stavalues1) from pg_statistic;
2024-09-08 14:51:58.457 KST client backend[3076398] pg_regress/with ERROR:  DO INSTEAD NOTIFY rules are not supported for data-modifying statements in WITH
2024-09-08 14:51:58.457 KST client backend[3076398] pg_regress/with STATEMENT:  WITH t AS (
		INSERT INTO y VALUES(0)
	)
	VALUES(FALSE);
2024-09-08 14:51:58.457 KST client backend[3076398] pg_regress/with ERROR:  DO ALSO rules are not supported for data-modifying statements in WITH
2024-09-08 14:51:58.457 KST client backend[3076398] pg_regress/with STATEMENT:  WITH t AS (
		INSERT INTO y VALUES(0)
	)
	VALUES(FALSE);
2024-09-08 14:51:58.457 KST client backend[3076388] pg_regress/truncate ERROR:  cannot truncate only a partitioned table
2024-09-08 14:51:58.457 KST client backend[3076388] pg_regress/truncate HINT:  Do not specify the ONLY keyword, or use TRUNCATE ONLY on the partitions directly.
2024-09-08 14:51:58.457 KST client backend[3076388] pg_regress/truncate STATEMENT:  TRUNCATE ONLY truncparted;
2024-09-08 14:51:58.457 KST client backend[3076398] pg_regress/with ERROR:  multi-statement DO INSTEAD rules are not supported for data-modifying statements in WITH
2024-09-08 14:51:58.457 KST client backend[3076398] pg_regress/with STATEMENT:  WITH t AS (
		INSERT INTO y VALUES(0)
	)
	VALUES(FALSE);
2024-09-08 14:51:58.457 KST client backend[3076380] pg_regress/plpgsql ERROR:  PL/pgSQL functions cannot accept type anyarray
2024-09-08 14:51:58.457 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  compilation of PL/pgSQL function "f1" near line 1
2024-09-08 14:51:58.457 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select f1(stavalues1) from pg_statistic;
2024-09-08 14:51:58.457 KST client backend[3076398] pg_regress/with ERROR:  syntax error at or near "with" at character 19
2024-09-08 14:51:58.457 KST client backend[3076398] pg_regress/with STATEMENT:  create table foo (with baz);
2024-09-08 14:51:58.457 KST client backend[3076398] pg_regress/with ERROR:  syntax error at or near "with" at character 19
2024-09-08 14:51:58.457 KST client backend[3076398] pg_regress/with STATEMENT:  create table foo (with ordinality);
2024-09-08 14:51:58.457 KST client backend[3076395] pg_regress/rowtypes ERROR:  column "f1" is of type integer but expression is of type compos at character 82
2024-09-08 14:51:58.457 KST client backend[3076395] pg_regress/rowtypes HINT:  You will need to rewrite or cast the expression.
2024-09-08 14:51:58.457 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  create function fcompos1(v compos) returns void as $$
	insert into compos values (v);  -- fail
	$$ language sql;
2024-09-08 14:51:58.457 KST client backend[3076380] pg_regress/plpgsql ERROR:  cannot determine result data type
2024-09-08 14:51:58.457 KST client backend[3076380] pg_regress/plpgsql DETAIL:  A result of type anyrange requires at least one input of type anyrange or anymultirange.
2024-09-08 14:51:58.457 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  create function f1(x anyelement) returns anyrange as $$
	begin
	  return array[x + 1, x + 2];
	end$$ language plpgsql;
2024-09-08 14:51:58.457 KST client backend[3076398] pg_regress/with ERROR:  relation "with_test" does not exist at character 43
2024-09-08 14:51:58.457 KST client backend[3076398] pg_regress/with STATEMENT:  WITH with_test AS (SELECT 42) INSERT INTO with_test VALUES (1);
2024-09-08 14:51:58.458 KST client backend[3076387] pg_regress/domain ERROR:  cannot alter type "posint" because column "ddtest2.f1" uses it
2024-09-08 14:51:58.458 KST client backend[3076387] pg_regress/domain STATEMENT:  alter domain posint add constraint c1 check(value >= 0);
2024-09-08 14:51:58.458 KST client backend[3076388] pg_regress/truncate ERROR:  cannot truncate only a partitioned table
2024-09-08 14:51:58.458 KST client backend[3076388] pg_regress/truncate HINT:  Do not specify the ONLY keyword, or use TRUNCATE ONLY on the partitions directly.
2024-09-08 14:51:58.458 KST client backend[3076388] pg_regress/truncate STATEMENT:  TRUNCATE ONLY truncparted;
2024-09-08 14:51:58.458 KST client backend[3076390] pg_regress/alter_table ERROR:  check constraint "b_le_20" of relation "attmp6" is violated by some row
2024-09-08 14:51:58.458 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE attmp3 VALIDATE CONSTRAINT b_le_20;
2024-09-08 14:51:58.459 KST client backend[3076395] pg_regress/rowtypes ERROR:  function text(fullname) does not exist at character 8
2024-09-08 14:51:58.459 KST client backend[3076395] pg_regress/rowtypes HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.459 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select text(fullname) from fullname;
2024-09-08 14:51:58.459 KST client backend[3076395] pg_regress/rowtypes ERROR:  column fullname.text does not exist at character 8
2024-09-08 14:51:58.459 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select fullname.text from fullname;
2024-09-08 14:51:58.459 KST client backend[3076383] pg_regress/rangefuncs ERROR:  cannot drop column moredrop of table users because other objects depend on it
2024-09-08 14:51:58.459 KST client backend[3076383] pg_regress/rangefuncs DETAIL:  view usersview depends on column moredrop of table users
2024-09-08 14:51:58.459 KST client backend[3076383] pg_regress/rangefuncs HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:58.459 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  alter table users drop column moredrop;
2024-09-08 14:51:58.459 KST client backend[3076395] pg_regress/rowtypes ERROR:  function text(record) does not exist at character 8
2024-09-08 14:51:58.459 KST client backend[3076395] pg_regress/rowtypes HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.459 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select text(row('Jim', 'Beam'));
2024-09-08 14:51:58.459 KST client backend[3076395] pg_regress/rowtypes ERROR:  could not identify column "text" in record data type at character 9
2024-09-08 14:51:58.459 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  select (row('Jim', 'Beam')).text;
2024-09-08 14:51:58.459 KST client backend[3076387] pg_regress/domain ERROR:  cannot alter type "posint" because column "ddtest2.f1" uses it
2024-09-08 14:51:58.459 KST client backend[3076387] pg_regress/domain STATEMENT:  alter domain posint add constraint c1 check(value >= 0);
2024-09-08 14:51:58.459 KST client backend[3076380] pg_regress/plpgsql ERROR:  function f1(int4range, integer, numeric) does not exist at character 8
2024-09-08 14:51:58.459 KST client backend[3076380] pg_regress/plpgsql HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.459 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select f1(int4range(42, 49), 11, 4.5) as fail;
2024-09-08 14:51:58.460 KST client backend[3076380] pg_regress/plpgsql ERROR:  cannot determine result data type
2024-09-08 14:51:58.460 KST client backend[3076380] pg_regress/plpgsql DETAIL:  A result of type anycompatiblerange requires at least one input of type anycompatiblerange or anycompatiblemultirange.
2024-09-08 14:51:58.460 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  create function f1(x anycompatible) returns anycompatiblerange as $$
	begin
	  return array[x + 1, x + 2];
	end$$ language plpgsql;
2024-09-08 14:51:58.461 KST client backend[3076380] pg_regress/plpgsql ERROR:  function f1(integer, numeric[], integer, numeric) does not exist at character 48
2024-09-08 14:51:58.461 KST client backend[3076380] pg_regress/plpgsql HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.461 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select x, pg_typeof(x), y, pg_typeof(y)
	  from f1(11, array[1, 2.2], 42, 34.5);
2024-09-08 14:51:58.462 KST client backend[3076390] pg_regress/alter_table ERROR:  check constraint "check_a_is_2" of relation "parent_noinh_convalid" is violated by some row
2024-09-08 14:51:58.462 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table parent_noinh_convalid validate constraint check_a_is_2;
2024-09-08 14:51:58.462 KST client backend[3076383] pg_regress/rangefuncs ERROR:  attribute 5 of type record has been dropped
2024-09-08 14:51:58.462 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  select * from usersview;
2024-09-08 14:51:58.462 KST client backend[3076383] pg_regress/rangefuncs ERROR:  cannot alter type of a column used by a view or rule
2024-09-08 14:51:58.462 KST client backend[3076383] pg_regress/rangefuncs DETAIL:  rule _RETURN on view usersview depends on column "seq"
2024-09-08 14:51:58.462 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  alter table users alter column seq type numeric;
2024-09-08 14:51:58.462 KST client backend[3076380] pg_regress/plpgsql ERROR:  RETURN cannot have a parameter in function with OUT parameters at character 74
2024-09-08 14:51:58.462 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  create function f1(in i int, out j int) returns int as $$
	begin
	  return i+1;
	end$$ language plpgsql;
2024-09-08 14:51:58.462 KST client backend[3076387] pg_regress/domain ERROR:  cannot alter type "posint" because column "ddtest2.f1" uses it
2024-09-08 14:51:58.462 KST client backend[3076387] pg_regress/domain STATEMENT:  alter domain posint add constraint c1 check(value >= 0);
2024-09-08 14:51:58.463 KST client backend[3076390] pg_regress/alter_table ERROR:  there is no unique constraint matching given keys for referenced table "attmp4"
2024-09-08 14:51:58.463 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE attmp5 add constraint attmpconstr foreign key(a) references attmp4(a) match full;
2024-09-08 14:51:58.464 KST client backend[3076387] pg_regress/domain ERROR:  value for domain posint2 violates check constraint "posint2_check"
2024-09-08 14:51:58.464 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into ddtest2 values(11);
2024-09-08 14:51:58.464 KST client backend[3076387] pg_regress/domain ERROR:  value for domain posint2 violates check constraint "c1"
2024-09-08 14:51:58.464 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into ddtest2 values(-2);
2024-09-08 14:51:58.465 KST client backend[3076387] pg_regress/domain ERROR:  column "f1" of table "ddtest2" contains values that violate the new constraint
2024-09-08 14:51:58.465 KST client backend[3076387] pg_regress/domain STATEMENT:  alter domain posint add constraint c2 check(value >= 10);
2024-09-08 14:51:58.465 KST client backend[3076383] pg_regress/rangefuncs ERROR:  attribute 2 of type record has wrong type
2024-09-08 14:51:58.465 KST client backend[3076383] pg_regress/rangefuncs DETAIL:  Table has type numeric, but query expects integer.
2024-09-08 14:51:58.465 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  select * from usersview;
2024-09-08 14:51:58.465 KST client backend[3076388] pg_regress/truncate ERROR:  cannot truncate a table referenced in a foreign key constraint
2024-09-08 14:51:58.465 KST client backend[3076388] pg_regress/truncate DETAIL:  Table "truncpart" references "truncprim".
2024-09-08 14:51:58.465 KST client backend[3076388] pg_regress/truncate HINT:  Truncate table "truncpart" at the same time, or use TRUNCATE ... CASCADE.
2024-09-08 14:51:58.465 KST client backend[3076388] pg_regress/truncate STATEMENT:  TRUNCATE TABLE truncprim;
2024-09-08 14:51:58.466 KST client backend[3076387] pg_regress/domain ERROR:  numeric field overflow
2024-09-08 14:51:58.466 KST client backend[3076387] pg_regress/domain DETAIL:  A field with precision 4, scale 2 must round to an absolute value less than 10^2.
2024-09-08 14:51:58.466 KST client backend[3076387] pg_regress/domain CONTEXT:  PL/pgSQL function array_elem_check(numeric) line 5 at assignment
2024-09-08 14:51:58.466 KST client backend[3076387] pg_regress/domain STATEMENT:  select array_elem_check(121.00);
2024-09-08 14:51:58.466 KST client backend[3076387] pg_regress/domain ERROR:  numeric field overflow
2024-09-08 14:51:58.466 KST client backend[3076387] pg_regress/domain DETAIL:  A field with precision 4, scale 2 must round to an absolute value less than 10^2.
2024-09-08 14:51:58.466 KST client backend[3076387] pg_regress/domain CONTEXT:  PL/pgSQL function array_elem_check(numeric) line 5 at assignment
2024-09-08 14:51:58.466 KST client backend[3076387] pg_regress/domain STATEMENT:  select array_elem_check(121.00);
2024-09-08 14:51:58.467 KST client backend[3076387] pg_regress/domain ERROR:  numeric field overflow
2024-09-08 14:51:58.467 KST client backend[3076387] pg_regress/domain DETAIL:  A field with precision 4, scale 2 must round to an absolute value less than 10^2.
2024-09-08 14:51:58.467 KST client backend[3076387] pg_regress/domain CONTEXT:  PL/pgSQL function array_elem_check(numeric) line 5 at assignment
2024-09-08 14:51:58.467 KST client backend[3076387] pg_regress/domain STATEMENT:  select array_elem_check(121.00);
2024-09-08 14:51:58.467 KST client backend[3076383] pg_regress/rangefuncs ERROR:  function return row and query-specified return row do not match
2024-09-08 14:51:58.467 KST client backend[3076383] pg_regress/rangefuncs DETAIL:  Returned type integer at ordinal position 2, but query expects numeric.
2024-09-08 14:51:58.467 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  select * from rngfuncbar();
2024-09-08 14:51:58.467 KST client backend[3076383] pg_regress/rangefuncs ERROR:  function return row and query-specified return row do not match
2024-09-08 14:51:58.467 KST client backend[3076383] pg_regress/rangefuncs DETAIL:  Returned row contains 3 attributes, but query expects 2.
2024-09-08 14:51:58.467 KST client backend[3076383] pg_regress/rangefuncs STATEMENT:  select * from rngfuncbar();
2024-09-08 14:51:58.467 KST client backend[3076387] pg_regress/domain ERROR:  value for domain orderedpair violates check constraint "orderedpair_check"
2024-09-08 14:51:58.467 KST client backend[3076387] pg_regress/domain STATEMENT:  select array[2,1]::orderedpair;
2024-09-08 14:51:58.468 KST client backend[3076395] pg_regress/rowtypes ERROR:  missing FROM-clause entry for table "d" at character 8
2024-09-08 14:51:58.468 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  SELECT d.a FROM (SELECT compositetable AS d FROM compositetable) s;
2024-09-08 14:51:58.468 KST client backend[3076395] pg_regress/rowtypes ERROR:  column "ctid" not found in data type compositetable at character 9
2024-09-08 14:51:58.468 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  SELECT (d).ctid FROM (SELECT compositetable AS d FROM compositetable) s;
2024-09-08 14:51:58.468 KST client backend[3076395] pg_regress/rowtypes ERROR:  column "nonexistent" not found in data type compositetable at character 9
2024-09-08 14:51:58.468 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  SELECT (NULL::compositetable).nonexistent;
2024-09-08 14:51:58.468 KST client backend[3076395] pg_regress/rowtypes ERROR:  column "oid" not found in data type compositetable at character 9
2024-09-08 14:51:58.468 KST client backend[3076395] pg_regress/rowtypes STATEMENT:  SELECT (NULL::compositetable).oid;
2024-09-08 14:51:58.468 KST client backend[3076387] pg_regress/domain ERROR:  value for domain orderedpair violates check constraint "orderedpair_check"
2024-09-08 14:51:58.468 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into op values (array[2,1]);
2024-09-08 14:51:58.469 KST client backend[3076387] pg_regress/domain ERROR:  value for domain orderedpair violates check constraint "orderedpair_check"
2024-09-08 14:51:58.469 KST client backend[3076387] pg_regress/domain STATEMENT:  update op set f1[2] = 0;
2024-09-08 14:51:58.469 KST client backend[3076387] pg_regress/domain ERROR:  value for domain orderedpair violates check constraint "orderedpair_check"
2024-09-08 14:51:58.469 KST client backend[3076387] pg_regress/domain CONTEXT:  PL/pgSQL function array_elem_check(integer) line 5 at assignment
2024-09-08 14:51:58.469 KST client backend[3076387] pg_regress/domain STATEMENT:  select array_elem_check(-1);
2024-09-08 14:51:58.470 KST client backend[3076387] pg_regress/domain ERROR:  value for domain di violates check constraint "pos"
2024-09-08 14:51:58.470 KST client backend[3076387] pg_regress/domain CONTEXT:  PL/pgSQL function dom_check(integer) line 4 at assignment
2024-09-08 14:51:58.470 KST client backend[3076387] pg_regress/domain STATEMENT:  select dom_check(0);
2024-09-08 14:51:58.471 KST client backend[3076387] pg_regress/domain ERROR:  value for domain di violates check constraint "pos"
2024-09-08 14:51:58.471 KST client backend[3076387] pg_regress/domain CONTEXT:  PL/pgSQL function dom_check(integer) line 4 at assignment
2024-09-08 14:51:58.471 KST client backend[3076387] pg_regress/domain STATEMENT:  select dom_check(0);
2024-09-08 14:51:58.472 KST client backend[3076387] pg_regress/domain ERROR:  value for domain inotnull violates check constraint "inotnull_check"
2024-09-08 14:51:58.472 KST client backend[3076387] pg_regress/domain STATEMENT:  select null::inotnull;
2024-09-08 14:51:58.472 KST client backend[3076387] pg_regress/domain ERROR:  value for domain inotnull violates check constraint "inotnull_check"
2024-09-08 14:51:58.472 KST client backend[3076387] pg_regress/domain STATEMENT:  insert into dom_table values (null);
2024-09-08 14:51:58.475 KST client backend[3076380] pg_regress/plpgsql ERROR:  cursor "test1" does not exist
2024-09-08 14:51:58.475 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  fetch next from test1;
2024-09-08 14:51:58.476 KST client backend[3076380] pg_regress/plpgsql ERROR:  variable "rc" is declared CONSTANT
2024-09-08 14:51:58.476 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function constant_refcursor() line 5 at OPEN
2024-09-08 14:51:58.476 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select constant_refcursor();
2024-09-08 14:51:58.476 KST client backend[3076390] pg_regress/alter_table ERROR:  foreign key constraint "fktable_ftest1_fkey" cannot be implemented
2024-09-08 14:51:58.476 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key columns "ftest1" and "ptest1" are of incompatible types: inet and integer.
2024-09-08 14:51:58.476 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1) references pktable;
2024-09-08 14:51:58.476 KST client backend[3076390] pg_regress/alter_table ERROR:  foreign key constraint "fktable_ftest1_fkey" cannot be implemented
2024-09-08 14:51:58.476 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key columns "ftest1" and "ptest1" are of incompatible types: inet and integer.
2024-09-08 14:51:58.476 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1) references pktable(ptest1);
2024-09-08 14:51:58.478 KST client backend[3076380] pg_regress/plpgsql ERROR:  value for parameter "param2" of cursor "c1" specified more than once at character 198
2024-09-08 14:51:58.478 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  create function namedparmcursor_test3() returns void as $$
	declare
	    c1 cursor (param1 int, param2 int) for select * from rc_test where a > param1 and b > param2;
	begin
	    open c1(param2 := 20, 21);
	end
	$$ language plpgsql;
2024-09-08 14:51:58.478 KST client backend[3076380] pg_regress/plpgsql ERROR:  value for parameter "param1" of cursor "c1" specified more than once at character 188
2024-09-08 14:51:58.478 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  create function namedparmcursor_test4() returns void as $$
	declare
	    c1 cursor (param1 int, param2 int) for select * from rc_test where a > param1 and b > param2;
	begin
	    open c1(20, param1 := 21);
	end
	$$ language plpgsql;
2024-09-08 14:51:58.478 KST client backend[3076390] pg_regress/alter_table ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_ftest1_fkey"
2024-09-08 14:51:58.478 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key (ftest1)=(43) is not present in table "pktable".
2024-09-08 14:51:58.478 KST client backend[3076390] pg_regress/alter_table STATEMENT:  INSERT INTO FKTABLE VALUES(43);
2024-09-08 14:51:58.478 KST client backend[3076380] pg_regress/plpgsql ERROR:  value for parameter "p2" of cursor "c1" specified more than once at character 191
2024-09-08 14:51:58.478 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  create function namedparmcursor_test5() returns void as $$
	declare
	  c1 cursor (p1 int, p2 int) for
	    select * from tenk1 where thousand = p1 and tenthous = p2;
	begin
	  open c1 (p2 := 77, p2 := 42);
	end
	$$ language plpgsql;
2024-09-08 14:51:58.479 KST client backend[3076380] pg_regress/plpgsql ERROR:  not enough arguments for cursor "c1" at character 189
2024-09-08 14:51:58.479 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  create function namedparmcursor_test6() returns void as $$
	declare
	  c1 cursor (p1 int, p2 int) for
	    select * from tenk1 where thousand = p1 and tenthous = p2;
	begin
	  open c1 (p2 := 77);
	end
	$$ language plpgsql;
2024-09-08 14:51:58.479 KST client backend[3076380] pg_regress/plpgsql ERROR:  division by zero
2024-09-08 14:51:58.479 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  SQL expression "42/0 AS p1, 77 AS p2"
	PL/pgSQL function namedparmcursor_test7() line 6 at OPEN
2024-09-08 14:51:58.479 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select namedparmcursor_test7();
2024-09-08 14:51:58.479 KST client backend[3076390] pg_regress/alter_table ERROR:  foreign key constraint "fktable_ftest1_fkey" cannot be implemented
2024-09-08 14:51:58.479 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key columns "ftest1" and "ptest1" are of incompatible types: numeric and integer.
2024-09-08 14:51:58.479 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1) references pktable;
2024-09-08 14:51:58.481 KST client backend[3076380] pg_regress/plpgsql ERROR:  too many parameters specified for RAISE
2024-09-08 14:51:58.481 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  compilation of PL/pgSQL function "raise_test1" near line 3
2024-09-08 14:51:58.481 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  create function raise_test1(int) returns int as $$
	begin
	    raise notice 'This message has too many parameters!', $1;
	    return $1;
	end;
	$$ language plpgsql;
2024-09-08 14:51:58.481 KST client backend[3076380] pg_regress/plpgsql ERROR:  too few parameters specified for RAISE
2024-09-08 14:51:58.481 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  compilation of PL/pgSQL function "raise_test2" near line 3
2024-09-08 14:51:58.481 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  create function raise_test2(int) returns int as $$
	begin
	    raise notice 'This message has too few parameters: %, %, %', $1, $1;
	    return $1;
	end;
	$$ language plpgsql;
2024-09-08 14:51:58.482 KST client backend[3076380] pg_regress/plpgsql ERROR:  syntax error at or near "Johnny" at character 83
2024-09-08 14:51:58.482 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  create function bad_sql1() returns int as $$
	declare a int;
	begin
	    a := 5;
	    Johnny Yuma;
	    a := 10;
	    return a;
	end$$ language plpgsql;
2024-09-08 14:51:58.482 KST client backend[3076380] pg_regress/plpgsql ERROR:  syntax error at or near "the" at character 99
2024-09-08 14:51:58.482 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  create function bad_sql2() returns int as $$
	declare r record;
	begin
	    for r in select I fought the law, the law won LOOP
	        raise notice 'in loop';
	    end loop;
	    return 5;
	end;$$ language plpgsql;
2024-09-08 14:51:58.482 KST client backend[3076380] pg_regress/plpgsql ERROR:  missing expression at or near ";" at character 74
2024-09-08 14:51:58.482 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  create function missing_return_expr() returns int as $$
	begin
	    return ;
	end;$$ language plpgsql;
2024-09-08 14:51:58.483 KST client backend[3076380] pg_regress/plpgsql ERROR:  RETURN cannot have a parameter in function returning void at character 72
2024-09-08 14:51:58.483 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  create function void_return_expr() returns void as $$
	begin
	    return 5;
	end;$$ language plpgsql;
2024-09-08 14:51:58.483 KST client backend[3076390] pg_regress/alter_table ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_ftest1_fkey"
2024-09-08 14:51:58.483 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key (ftest1)=(43) is not present in table "pktable".
2024-09-08 14:51:58.483 KST client backend[3076390] pg_regress/alter_table STATEMENT:  INSERT INTO FKTABLE VALUES(43);
2024-09-08 14:51:58.483 KST client backend[3076380] pg_regress/plpgsql ERROR:  control reached end of function without RETURN
2024-09-08 14:51:58.483 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function missing_return_expr()
2024-09-08 14:51:58.483 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select missing_return_expr();
2024-09-08 14:51:58.486 KST client backend[3076390] pg_regress/alter_table ERROR:  foreign key constraint "fktable_ftest1_ftest2_fkey" cannot be implemented
2024-09-08 14:51:58.486 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key columns "ftest1" and "ptest1" are of incompatible types: cidr and integer.
2024-09-08 14:51:58.486 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1, ftest2) references pktable;
2024-09-08 14:51:58.487 KST client backend[3076380] pg_regress/plpgsql ERROR:  column "sqlstate" does not exist at character 1
2024-09-08 14:51:58.487 KST client backend[3076380] pg_regress/plpgsql QUERY:  sqlstate
2024-09-08 14:51:58.487 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function excpt_test1() line 3 at RAISE
2024-09-08 14:51:58.487 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select excpt_test1();
2024-09-08 14:51:58.487 KST client backend[3076380] pg_regress/plpgsql ERROR:  column "sqlstate" does not exist at character 1
2024-09-08 14:51:58.487 KST client backend[3076380] pg_regress/plpgsql QUERY:  sqlstate
2024-09-08 14:51:58.487 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function excpt_test2() line 5 at RAISE
2024-09-08 14:51:58.487 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select excpt_test2();
2024-09-08 14:51:58.487 KST client backend[3076390] pg_regress/alter_table ERROR:  foreign key constraint "fktable_ftest1_ftest2_fkey" cannot be implemented
2024-09-08 14:51:58.487 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key columns "ftest1" and "ptest1" are of incompatible types: cidr and integer.
2024-09-08 14:51:58.487 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1, ftest2)
	     references pktable(ptest1, ptest2);
2024-09-08 14:51:58.488 KST client backend[3076390] pg_regress/alter_table ERROR:  foreign key constraint "fktable_ftest1_ftest2_fkey" cannot be implemented
2024-09-08 14:51:58.488 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key columns "ftest1" and "ptest2" are of incompatible types: integer and inet.
2024-09-08 14:51:58.488 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1, ftest2)
	     references pktable(ptest2, ptest1);
2024-09-08 14:51:58.489 KST client backend[3076390] pg_regress/alter_table ERROR:  foreign key constraint "fktable_ftest2_ftest1_fkey" cannot be implemented
2024-09-08 14:51:58.489 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key columns "ftest2" and "ptest1" are of incompatible types: inet and integer.
2024-09-08 14:51:58.489 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest2, ftest1)
	     references pktable(ptest1, ptest2);
2024-09-08 14:51:58.491 KST client backend[3076397] pg_regress/largeobject ERROR:  large object read request is too large
2024-09-08 14:51:58.491 KST client backend[3076397] pg_regress/largeobject STATEMENT:  SELECT lo_get(34715);
2024-09-08 14:51:58.492 KST client backend[3076397] pg_regress/largeobject ERROR:  cannot execute lo_open(INV_WRITE) in a read-only transaction
2024-09-08 14:51:58.492 KST client backend[3076397] pg_regress/largeobject STATEMENT:  SELECT lo_open(2121, x'20000'::int);
2024-09-08 14:51:58.492 KST client backend[3076397] pg_regress/largeobject ERROR:  cannot execute lo_create() in a read-only transaction
2024-09-08 14:51:58.492 KST client backend[3076397] pg_regress/largeobject STATEMENT:  SELECT lo_create(42);
2024-09-08 14:51:58.492 KST client backend[3076397] pg_regress/largeobject ERROR:  cannot execute lo_creat() in a read-only transaction
2024-09-08 14:51:58.492 KST client backend[3076397] pg_regress/largeobject STATEMENT:  SELECT lo_creat(42);
2024-09-08 14:51:58.492 KST client backend[3076397] pg_regress/largeobject ERROR:  cannot execute lo_unlink() in a read-only transaction
2024-09-08 14:51:58.492 KST client backend[3076397] pg_regress/largeobject STATEMENT:  SELECT lo_unlink(42);
2024-09-08 14:51:58.492 KST client backend[3076397] pg_regress/largeobject ERROR:  cannot execute lowrite() in a read-only transaction
2024-09-08 14:51:58.492 KST client backend[3076397] pg_regress/largeobject STATEMENT:  SELECT lowrite(42, 'x');
2024-09-08 14:51:58.492 KST client backend[3076397] pg_regress/largeobject ERROR:  cannot execute lo_import() in a read-only transaction
2024-09-08 14:51:58.492 KST client backend[3076397] pg_regress/largeobject STATEMENT:  SELECT lo_import('/home/vldb/postgresql-16.2/bld/src/test/regress/results/lotest.txt');
2024-09-08 14:51:58.493 KST client backend[3076397] pg_regress/largeobject ERROR:  cannot execute lo_truncate() in a read-only transaction
2024-09-08 14:51:58.493 KST client backend[3076397] pg_regress/largeobject STATEMENT:  SELECT lo_truncate(42, 0);
2024-09-08 14:51:58.493 KST client backend[3076397] pg_regress/largeobject ERROR:  cannot execute lo_truncate64() in a read-only transaction
2024-09-08 14:51:58.493 KST client backend[3076397] pg_regress/largeobject STATEMENT:  SELECT lo_truncate64(42, 0);
2024-09-08 14:51:58.493 KST client backend[3076397] pg_regress/largeobject ERROR:  cannot execute lo_from_bytea() in a read-only transaction
2024-09-08 14:51:58.493 KST client backend[3076397] pg_regress/largeobject STATEMENT:  SELECT lo_from_bytea(0, 'x');
2024-09-08 14:51:58.493 KST client backend[3076397] pg_regress/largeobject ERROR:  cannot execute lo_put() in a read-only transaction
2024-09-08 14:51:58.493 KST client backend[3076397] pg_regress/largeobject STATEMENT:  SELECT lo_put(42, 0, 'x');
2024-09-08 14:51:58.494 KST client backend[3076380] pg_regress/plpgsql ERROR:  query returned more than one row
2024-09-08 14:51:58.494 KST client backend[3076380] pg_regress/plpgsql HINT:  Make sure the query returns a single row, or use LIMIT 1.
2024-09-08 14:51:58.494 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function stricttest() line 5 at SQL statement
2024-09-08 14:51:58.494 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select stricttest();
2024-09-08 14:51:58.495 KST client backend[3076390] pg_regress/alter_table ERROR:  new row for relation "atacc1" violates check constraint "atacc_test1"
2024-09-08 14:51:58.495 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (2).
2024-09-08 14:51:58.495 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (test) values (2);
2024-09-08 14:51:58.495 KST client backend[3076380] pg_regress/plpgsql ERROR:  query returned no rows
2024-09-08 14:51:58.495 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function stricttest() line 5 at SQL statement
2024-09-08 14:51:58.495 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select stricttest();
2024-09-08 14:51:58.496 KST client backend[3076380] pg_regress/plpgsql ERROR:  query returned more than one row
2024-09-08 14:51:58.496 KST client backend[3076380] pg_regress/plpgsql HINT:  Make sure the query returns a single row, or use LIMIT 1.
2024-09-08 14:51:58.496 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function stricttest() line 5 at SQL statement
2024-09-08 14:51:58.496 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select stricttest();
2024-09-08 14:51:58.496 KST client backend[3076390] pg_regress/alter_table ERROR:  check constraint "atacc_test1" of relation "atacc1" is violated by some row
2024-09-08 14:51:58.496 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 add constraint atacc_test1 check (test>3);
2024-09-08 14:51:58.497 KST client backend[3076380] pg_regress/plpgsql ERROR:  query returned no rows
2024-09-08 14:51:58.497 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function stricttest() line 5 at EXECUTE
2024-09-08 14:51:58.497 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select stricttest();
2024-09-08 14:51:58.497 KST client backend[3076380] pg_regress/plpgsql ERROR:  query returned more than one row
2024-09-08 14:51:58.497 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function stricttest() line 5 at EXECUTE
2024-09-08 14:51:58.497 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select stricttest();
2024-09-08 14:51:58.497 KST client backend[3076390] pg_regress/alter_table ERROR:  column "test1" does not exist
2024-09-08 14:51:58.497 KST client backend[3076390] pg_regress/alter_table HINT:  Perhaps you meant to reference the column "atacc1.test".
2024-09-08 14:51:58.497 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 add constraint atacc_test1 check (test1>3);
2024-09-08 14:51:58.498 KST client backend[3076380] pg_regress/plpgsql ERROR:  query returned no rows
2024-09-08 14:51:58.498 KST client backend[3076380] pg_regress/plpgsql DETAIL:  parameters: p1 = '2', p3 = 'foo'
2024-09-08 14:51:58.498 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function stricttest() line 8 at SQL statement
2024-09-08 14:51:58.498 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select stricttest();
2024-09-08 14:51:58.498 KST client backend[3076390] pg_regress/alter_table ERROR:  new row for relation "atacc1" violates check constraint "atacc_test1"
2024-09-08 14:51:58.498 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (4, 4, 2).
2024-09-08 14:51:58.498 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (test,test2,test3) values (4,4,2);
2024-09-08 14:51:58.498 KST client backend[3076380] pg_regress/plpgsql ERROR:  query returned no rows
2024-09-08 14:51:58.498 KST client backend[3076380] pg_regress/plpgsql DETAIL:  parameters: p1 = '2', p3 = '''Valame Dios!'' dijo Sancho; ''no le dije yo a vuestra merced que mirase bien lo que hacia?'''
2024-09-08 14:51:58.498 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function stricttest() line 8 at SQL statement
2024-09-08 14:51:58.498 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select stricttest();
2024-09-08 14:51:58.498 KST client backend[3076380] pg_regress/plpgsql ERROR:  query returned more than one row
2024-09-08 14:51:58.498 KST client backend[3076380] pg_regress/plpgsql DETAIL:  parameters: p1 = '2', p3 = 'foo'
2024-09-08 14:51:58.498 KST client backend[3076380] pg_regress/plpgsql HINT:  Make sure the query returns a single row, or use LIMIT 1.
2024-09-08 14:51:58.498 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function stricttest() line 8 at SQL statement
2024-09-08 14:51:58.498 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select stricttest();
2024-09-08 14:51:58.499 KST client backend[3076380] pg_regress/plpgsql ERROR:  query returned more than one row
2024-09-08 14:51:58.499 KST client backend[3076380] pg_regress/plpgsql HINT:  Make sure the query returns a single row, or use LIMIT 1.
2024-09-08 14:51:58.499 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function stricttest() line 5 at SQL statement
2024-09-08 14:51:58.499 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select stricttest();
2024-09-08 14:51:58.499 KST client backend[3076390] pg_regress/alter_table ERROR:  new row for relation "atacc1" violates check constraint "atacc1_check"
2024-09-08 14:51:58.499 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (4, 3).
2024-09-08 14:51:58.499 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (test2, test) values (3, 4);
2024-09-08 14:51:58.499 KST client backend[3076380] pg_regress/plpgsql ERROR:  query returned no rows
2024-09-08 14:51:58.499 KST client backend[3076380] pg_regress/plpgsql DETAIL:  parameters: $1 = '0', $2 = 'foo'
2024-09-08 14:51:58.499 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function stricttest() line 5 at EXECUTE
2024-09-08 14:51:58.499 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select stricttest();
2024-09-08 14:51:58.500 KST client backend[3076380] pg_regress/plpgsql ERROR:  query returned more than one row
2024-09-08 14:51:58.500 KST client backend[3076380] pg_regress/plpgsql DETAIL:  parameters: $1 = '1'
2024-09-08 14:51:58.500 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function stricttest() line 5 at EXECUTE
2024-09-08 14:51:58.500 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select stricttest();
2024-09-08 14:51:58.500 KST client backend[3076380] pg_regress/plpgsql ERROR:  query returned more than one row
2024-09-08 14:51:58.500 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function stricttest() line 5 at EXECUTE
2024-09-08 14:51:58.500 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select stricttest();
2024-09-08 14:51:58.500 KST client backend[3076380] pg_regress/plpgsql ERROR:  query returned more than one row
2024-09-08 14:51:58.500 KST client backend[3076380] pg_regress/plpgsql HINT:  Make sure the query returns a single row, or use LIMIT 1.
2024-09-08 14:51:58.500 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function stricttest() line 10 at SQL statement
2024-09-08 14:51:58.500 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select stricttest();
2024-09-08 14:51:58.501 KST client backend[3076390] pg_regress/alter_table ERROR:  new row for relation "atacc2" violates check constraint "foo"
2024-09-08 14:51:58.501 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (-3).
2024-09-08 14:51:58.501 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc2 (test2) values (-3);
2024-09-08 14:51:58.501 KST client backend[3076380] pg_regress/plpgsql ERROR:  query returned more than one row
2024-09-08 14:51:58.501 KST client backend[3076380] pg_regress/plpgsql DETAIL:  parameters: p1 = '2', p3 = 'foo'
2024-09-08 14:51:58.501 KST client backend[3076380] pg_regress/plpgsql HINT:  Make sure the query returns a single row, or use LIMIT 1.
2024-09-08 14:51:58.501 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function stricttest() line 10 at SQL statement
2024-09-08 14:51:58.501 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select stricttest();
2024-09-08 14:51:58.501 KST client backend[3076390] pg_regress/alter_table ERROR:  new row for relation "atacc3" violates check constraint "foo"
2024-09-08 14:51:58.501 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (null, -3, null).
2024-09-08 14:51:58.501 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc3 (test2) values (-3);
2024-09-08 14:51:58.501 KST client backend[3076380] pg_regress/plpgsql WARNING:  variable "in1" shadows a previously defined variable at character 88
2024-09-08 14:51:58.501 KST client backend[3076380] pg_regress/plpgsql WARNING:  variable "out1" shadows a previously defined variable at character 97
2024-09-08 14:51:58.502 KST client backend[3076380] pg_regress/plpgsql WARNING:  variable "in1" shadows a previously defined variable at character 88
2024-09-08 14:51:58.502 KST client backend[3076380] pg_regress/plpgsql WARNING:  variable "out1" shadows a previously defined variable at character 97
2024-09-08 14:51:58.503 KST client backend[3076380] pg_regress/plpgsql WARNING:  variable "f1" shadows a previously defined variable at character 93
2024-09-08 14:51:58.503 KST client backend[3076390] pg_regress/alter_table ERROR:  relation "atacc2" is not a parent of relation "atacc3"
2024-09-08 14:51:58.503 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc3 no inherit atacc2;
2024-09-08 14:51:58.503 KST client backend[3076380] pg_regress/plpgsql WARNING:  variable "in1" shadows a previously defined variable at character 76
2024-09-08 14:51:58.503 KST client backend[3076380] pg_regress/plpgsql WARNING:  variable "in1" shadows a previously defined variable at character 101
2024-09-08 14:51:58.503 KST client backend[3076380] pg_regress/plpgsql WARNING:  variable "f1" shadows a previously defined variable at character 88
2024-09-08 14:51:58.503 KST client backend[3076390] pg_regress/alter_table ERROR:  child table is missing constraint "foo"
2024-09-08 14:51:58.503 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc3 inherit atacc2;
2024-09-08 14:51:58.504 KST client backend[3076380] pg_regress/plpgsql ERROR:  variable "f1" shadows a previously defined variable at character 78
2024-09-08 14:51:58.504 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  create or replace function shadowtest(f1 int)
		returns boolean as $$
	declare f1 int; begin return 1; end $$ language plpgsql;
2024-09-08 14:51:58.504 KST client backend[3076390] pg_regress/alter_table ERROR:  child table is missing column "test2"
2024-09-08 14:51:58.504 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc3 inherit atacc2;
2024-09-08 14:51:58.504 KST client backend[3076380] pg_regress/plpgsql ERROR:  function shadowtest(integer) does not exist at character 8
2024-09-08 14:51:58.504 KST client backend[3076380] pg_regress/plpgsql HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.504 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select shadowtest(1);
2024-09-08 14:51:58.504 KST client backend[3076390] pg_regress/alter_table ERROR:  child table "atacc3" has different type for column "test2"
2024-09-08 14:51:58.504 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc3 inherit atacc2;
2024-09-08 14:51:58.504 KST client backend[3076380] pg_regress/plpgsql WARNING:  query returned more than one row
2024-09-08 14:51:58.504 KST client backend[3076380] pg_regress/plpgsql HINT:  Make sure the query returns a single row, or use LIMIT 1.
2024-09-08 14:51:58.504 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function inline_code_block line 4 at SQL statement
2024-09-08 14:51:58.504 KST client backend[3076380] pg_regress/plpgsql ERROR:  query returned more than one row
2024-09-08 14:51:58.504 KST client backend[3076380] pg_regress/plpgsql HINT:  Make sure the query returns a single row, or use LIMIT 1.
2024-09-08 14:51:58.504 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function inline_code_block line 4 at SQL statement
2024-09-08 14:51:58.504 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  do $$
	declare x int;
	begin
	  select v from generate_series(1,2) g(v) into x;
	end;
	$$;
2024-09-08 14:51:58.505 KST client backend[3076390] pg_regress/alter_table ERROR:  relation "atacc2" would be inherited from more than once
2024-09-08 14:51:58.505 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc3 inherit atacc2;
2024-09-08 14:51:58.505 KST client backend[3076390] pg_regress/alter_table ERROR:  circular inheritance not allowed
2024-09-08 14:51:58.505 KST client backend[3076390] pg_regress/alter_table DETAIL:  "atacc3" is already a child of "atacc2".
2024-09-08 14:51:58.505 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc2 inherit atacc3;
2024-09-08 14:51:58.505 KST client backend[3076390] pg_regress/alter_table ERROR:  circular inheritance not allowed
2024-09-08 14:51:58.505 KST client backend[3076390] pg_regress/alter_table DETAIL:  "atacc2" is already a child of "atacc2".
2024-09-08 14:51:58.505 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc2 inherit atacc2;
2024-09-08 14:51:58.505 KST client backend[3076380] pg_regress/plpgsql WARNING:  number of source and target fields in assignment does not match
2024-09-08 14:51:58.505 KST client backend[3076380] pg_regress/plpgsql DETAIL:  strict_multi_assignment check of extra_warnings is active.
2024-09-08 14:51:58.505 KST client backend[3076380] pg_regress/plpgsql HINT:  Make sure the query returns the exact list of columns.
2024-09-08 14:51:58.505 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function inline_code_block line 6 at SQL statement
2024-09-08 14:51:58.505 KST client backend[3076380] pg_regress/plpgsql WARNING:  number of source and target fields in assignment does not match
2024-09-08 14:51:58.505 KST client backend[3076380] pg_regress/plpgsql DETAIL:  strict_multi_assignment check of extra_warnings is active.
2024-09-08 14:51:58.505 KST client backend[3076380] pg_regress/plpgsql HINT:  Make sure the query returns the exact list of columns.
2024-09-08 14:51:58.505 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function inline_code_block line 8 at SQL statement
2024-09-08 14:51:58.505 KST client backend[3076380] pg_regress/plpgsql ERROR:  number of source and target fields in assignment does not match
2024-09-08 14:51:58.505 KST client backend[3076380] pg_regress/plpgsql DETAIL:  strict_multi_assignment check of extra_errors is active.
2024-09-08 14:51:58.505 KST client backend[3076380] pg_regress/plpgsql HINT:  Make sure the query returns the exact list of columns.
2024-09-08 14:51:58.505 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function inline_code_block line 6 at SQL statement
2024-09-08 14:51:58.505 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  do $$
	declare
	  x int;
	  y int;
	begin
	  select 1 into x, y;
	  select 1,2 into x, y;
	  select 1,2,3 into x, y;
	end
	$$;
2024-09-08 14:51:58.506 KST client backend[3076380] pg_regress/plpgsql ERROR:  number of source and target fields in assignment does not match
2024-09-08 14:51:58.506 KST client backend[3076380] pg_regress/plpgsql DETAIL:  strict_multi_assignment check of extra_errors is active.
2024-09-08 14:51:58.506 KST client backend[3076380] pg_regress/plpgsql HINT:  Make sure the query returns the exact list of columns.
2024-09-08 14:51:58.506 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function inline_code_block line 8 at SQL statement
2024-09-08 14:51:58.506 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  do $$
	declare
	  x int;
	  y int;
	begin
	  select * from test_01 into x, y; -- should be ok
	  raise notice 'ok';
	  select * from test_01 into x;    -- should to fail
	end;
	$$;
2024-09-08 14:51:58.506 KST client backend[3076380] pg_regress/plpgsql ERROR:  number of source and target fields in assignment does not match
2024-09-08 14:51:58.506 KST client backend[3076380] pg_regress/plpgsql DETAIL:  strict_multi_assignment check of extra_errors is active.
2024-09-08 14:51:58.506 KST client backend[3076380] pg_regress/plpgsql HINT:  Make sure the query returns the exact list of columns.
2024-09-08 14:51:58.506 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function inline_code_block line 7 at SQL statement
2024-09-08 14:51:58.506 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  do $$
	declare
	  t test_01;
	begin
	  select 1, 2 into t;  -- should be ok
	  raise notice 'ok';
	  select 1, 2, 3 into t; -- should fail;
	end;
	$$;
2024-09-08 14:51:58.506 KST client backend[3076380] pg_regress/plpgsql ERROR:  number of source and target fields in assignment does not match
2024-09-08 14:51:58.506 KST client backend[3076380] pg_regress/plpgsql DETAIL:  strict_multi_assignment check of extra_errors is active.
2024-09-08 14:51:58.506 KST client backend[3076380] pg_regress/plpgsql HINT:  Make sure the query returns the exact list of columns.
2024-09-08 14:51:58.506 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function inline_code_block line 5 at SQL statement
2024-09-08 14:51:58.506 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  do $$
	declare
	  t test_01;
	begin
	  select 1 into t; -- should fail;
	end;
	$$;
2024-09-08 14:51:58.507 KST client backend[3076390] pg_regress/alter_table ERROR:  new row for relation "atacc1" violates check constraint "foo"
2024-09-08 14:51:58.507 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (-3).
2024-09-08 14:51:58.507 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (test) values (-3);
2024-09-08 14:51:58.507 KST client backend[3076390] pg_regress/alter_table ERROR:  check constraint "foo" of relation "atacc2" is violated by some row
2024-09-08 14:51:58.507 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc2 add constraint foo check (test>0) no inherit;
2024-09-08 14:51:58.508 KST client backend[3076380] pg_regress/plpgsql ERROR:  cursor can only scan forward
2024-09-08 14:51:58.508 KST client backend[3076380] pg_regress/plpgsql HINT:  Declare it with SCROLL option to enable backward scan.
2024-09-08 14:51:58.508 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function sc_test() line 7 at FETCH
2024-09-08 14:51:58.508 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select * from sc_test();
2024-09-08 14:51:58.509 KST client backend[3076390] pg_regress/alter_table ERROR:  duplicate key value violates unique constraint "atacc_test1"
2024-09-08 14:51:58.509 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key (test)=(2) already exists.
2024-09-08 14:51:58.509 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (test) values (2);
2024-09-08 14:51:58.509 KST client backend[3076390] pg_regress/alter_table ERROR:  could not create unique index "atacc_test1"
2024-09-08 14:51:58.509 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key (test)=(0) is duplicated.
2024-09-08 14:51:58.509 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter column test type integer using 0;
2024-09-08 14:51:58.511 KST client backend[3076390] pg_regress/alter_table ERROR:  could not create unique index "atacc_test1"
2024-09-08 14:51:58.511 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key (test)=(2) is duplicated.
2024-09-08 14:51:58.511 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 add constraint atacc_test1 unique (test);
2024-09-08 14:51:58.512 KST client backend[3076390] pg_regress/alter_table ERROR:  column "test1" named in key does not exist
2024-09-08 14:51:58.512 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 add constraint atacc_test1 unique (test1);
2024-09-08 14:51:58.513 KST client backend[3076390] pg_regress/alter_table ERROR:  duplicate key value violates unique constraint "atacc_test1"
2024-09-08 14:51:58.513 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key (test, test2)=(4, 4) already exists.
2024-09-08 14:51:58.513 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (test,test2) values (4,4);
2024-09-08 14:51:58.515 KST client backend[3076390] pg_regress/alter_table ERROR:  duplicate key value violates unique constraint "atacc1_test_key"
2024-09-08 14:51:58.515 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key (test)=(3) already exists.
2024-09-08 14:51:58.515 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (test2, test) values (2, 3);
2024-09-08 14:51:58.517 KST client backend[3076390] pg_regress/alter_table ERROR:  duplicate key value violates unique constraint "atacc_test1"
2024-09-08 14:51:58.517 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key (test)=(2) already exists.
2024-09-08 14:51:58.517 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (test) values (2);
2024-09-08 14:51:58.517 KST client backend[3076390] pg_regress/alter_table ERROR:  null value in column "test" of relation "atacc1" violates not-null constraint
2024-09-08 14:51:58.517 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (4, null).
2024-09-08 14:51:58.517 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (test) values(NULL);
2024-09-08 14:51:58.517 KST client backend[3076390] pg_regress/alter_table ERROR:  multiple primary keys for table "atacc1" are not allowed
2024-09-08 14:51:58.517 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 add constraint atacc_oid1 primary key(id);
2024-09-08 14:51:58.517 KST client backend[3076380] pg_regress/plpgsql ERROR:  cursor FOR loop must use a bound cursor variable at character 98
2024-09-08 14:51:58.517 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  create or replace function forc_bad() returns void as $$
	declare
	  c refcursor;
	begin
	  for r in c loop
	    raise notice '%', r.i;
	  end loop;
	end;
	$$ language plpgsql;
2024-09-08 14:51:58.519 KST client backend[3076390] pg_regress/alter_table ERROR:  could not create unique index "atacc_test1"
2024-09-08 14:51:58.519 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key (test)=(2) is duplicated.
2024-09-08 14:51:58.519 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 add constraint atacc_test1 primary key (test);
2024-09-08 14:51:58.520 KST client backend[3076390] pg_regress/alter_table ERROR:  column "test" of relation "atacc1" contains null values
2024-09-08 14:51:58.520 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 add constraint atacc_test1 primary key (test);
2024-09-08 14:51:58.521 KST client backend[3076390] pg_regress/alter_table ERROR:  column "test1" of relation "atacc1" does not exist
2024-09-08 14:51:58.521 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 add constraint atacc_test1 primary key (test1);
2024-09-08 14:51:58.522 KST client backend[3076380] pg_regress/plpgsql ERROR:  returned record type does not match expected record type
2024-09-08 14:51:58.522 KST client backend[3076380] pg_regress/plpgsql DETAIL:  Returned type unknown does not match expected type character varying in column 2.
2024-09-08 14:51:58.522 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function compos() while casting return value to function's return type
2024-09-08 14:51:58.522 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select compos();
2024-09-08 14:51:58.522 KST client backend[3076390] pg_regress/alter_table ERROR:  column "test2" of relation "atacc1" contains null values
2024-09-08 14:51:58.522 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 add column test2 int primary key;
2024-09-08 14:51:58.524 KST client backend[3076380] pg_regress/plpgsql ERROR:  cannot return non-composite value from function returning composite type
2024-09-08 14:51:58.524 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function compos() line 3 at RETURN
2024-09-08 14:51:58.524 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select compos();
2024-09-08 14:51:58.524 KST client backend[3076380] pg_regress/plpgsql ERROR:  cannot return non-composite value from function returning composite type
2024-09-08 14:51:58.524 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function compos() line 4 at RETURN
2024-09-08 14:51:58.524 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select * from compos();
2024-09-08 14:51:58.525 KST client backend[3076380] pg_regress/plpgsql ERROR:  invalid input syntax for type integer: "(1,hello)"
2024-09-08 14:51:58.525 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function compos() while casting return value to function's return type
2024-09-08 14:51:58.525 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select compos();
2024-09-08 14:51:58.525 KST client backend[3076380] pg_regress/plpgsql ERROR:  invalid input syntax for type integer: "(1,hello)"
2024-09-08 14:51:58.525 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function compos() while casting return value to function's return type
2024-09-08 14:51:58.525 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select compos();
2024-09-08 14:51:58.526 KST client backend[3076380] pg_regress/plpgsql ERROR:  1 2 3
2024-09-08 14:51:58.526 KST client backend[3076380] pg_regress/plpgsql DETAIL:  some detail info
2024-09-08 14:51:58.526 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function raise_test() line 5 at RAISE
2024-09-08 14:51:58.526 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select raise_test();
2024-09-08 14:51:58.526 KST client backend[3076380] pg_regress/plpgsql ERROR:  check me
2024-09-08 14:51:58.526 KST client backend[3076380] pg_regress/plpgsql DETAIL:  some detail info
2024-09-08 14:51:58.526 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function raise_test() line 3 at RAISE
2024-09-08 14:51:58.526 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select raise_test();
2024-09-08 14:51:58.527 KST client backend[3076380] pg_regress/plpgsql ERROR:  check me
2024-09-08 14:51:58.527 KST client backend[3076380] pg_regress/plpgsql DETAIL:  some detail info
2024-09-08 14:51:58.527 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function raise_test() line 3 at RAISE
2024-09-08 14:51:58.527 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select raise_test();
2024-09-08 14:51:58.527 KST client backend[3076380] pg_regress/plpgsql ERROR:  check me
2024-09-08 14:51:58.527 KST client backend[3076380] pg_regress/plpgsql DETAIL:  some detail info
2024-09-08 14:51:58.527 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function raise_test() line 3 at RAISE
2024-09-08 14:51:58.527 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select raise_test();
2024-09-08 14:51:58.528 KST client backend[3076380] pg_regress/plpgsql ERROR:  division_by_zero
2024-09-08 14:51:58.528 KST client backend[3076380] pg_regress/plpgsql DETAIL:  some detail info
2024-09-08 14:51:58.528 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function raise_test() line 3 at RAISE
2024-09-08 14:51:58.528 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select raise_test();
2024-09-08 14:51:58.528 KST client backend[3076380] pg_regress/plpgsql ERROR:  division_by_zero
2024-09-08 14:51:58.528 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function raise_test() line 3 at RAISE
2024-09-08 14:51:58.528 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select raise_test();
2024-09-08 14:51:58.528 KST client backend[3076380] pg_regress/plpgsql ERROR:  1234F
2024-09-08 14:51:58.528 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function raise_test() line 3 at RAISE
2024-09-08 14:51:58.528 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select raise_test();
2024-09-08 14:51:58.528 KST client backend[3076380] pg_regress/plpgsql ERROR:  custom message
2024-09-08 14:51:58.528 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function raise_test() line 3 at RAISE
2024-09-08 14:51:58.528 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select raise_test();
2024-09-08 14:51:58.529 KST client backend[3076380] pg_regress/plpgsql ERROR:  custom message
2024-09-08 14:51:58.529 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function raise_test() line 3 at RAISE
2024-09-08 14:51:58.529 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select raise_test();
2024-09-08 14:51:58.529 KST client backend[3076380] pg_regress/plpgsql ERROR:  RAISE option already specified: MESSAGE
2024-09-08 14:51:58.529 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function raise_test() line 3 at RAISE
2024-09-08 14:51:58.529 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select raise_test();
2024-09-08 14:51:58.529 KST client backend[3076380] pg_regress/plpgsql ERROR:  RAISE option already specified: ERRCODE
2024-09-08 14:51:58.529 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function raise_test() line 3 at RAISE
2024-09-08 14:51:58.529 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select raise_test();
2024-09-08 14:51:58.530 KST client backend[3076380] pg_regress/plpgsql ERROR:  RAISE without parameters cannot be used outside an exception handler
2024-09-08 14:51:58.530 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function raise_test() line 3 at RAISE
2024-09-08 14:51:58.530 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select raise_test();
2024-09-08 14:51:58.531 KST client backend[3076390] pg_regress/alter_table ERROR:  check constraint "atacc1_chk" of relation "atacc1" is violated by some row
2024-09-08 14:51:58.531 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 validate constraint atacc1_chk, alter a type int;
2024-09-08 14:51:58.531 KST client backend[3076380] pg_regress/plpgsql ERROR:  GET STACKED DIAGNOSTICS cannot be used outside an exception handler
2024-09-08 14:51:58.531 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function stacked_diagnostics_test() line 6 at GET STACKED DIAGNOSTICS
2024-09-08 14:51:58.531 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select stacked_diagnostics_test();
2024-09-08 14:51:58.532 KST client backend[3076380] pg_regress/plpgsql ERROR:  substitute message
2024-09-08 14:51:58.532 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function raise_test() line 7 at RAISE
2024-09-08 14:51:58.532 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select raise_test();
2024-09-08 14:51:58.533 KST client backend[3076390] pg_regress/alter_table ERROR:  multiple primary keys for table "atacc1" are not allowed
2024-09-08 14:51:58.533 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 add constraint atacc_test2 primary key (test);
2024-09-08 14:51:58.533 KST client backend[3076390] pg_regress/alter_table ERROR:  duplicate key value violates unique constraint "atacc_test1"
2024-09-08 14:51:58.533 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key (test, test2)=(4, 4) already exists.
2024-09-08 14:51:58.533 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (test,test2) values (4,4);
2024-09-08 14:51:58.533 KST client backend[3076390] pg_regress/alter_table ERROR:  null value in column "test" of relation "atacc1" violates not-null constraint
2024-09-08 14:51:58.533 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (null, 3).
2024-09-08 14:51:58.533 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (test,test2) values (NULL,3);
2024-09-08 14:51:58.533 KST client backend[3076390] pg_regress/alter_table ERROR:  null value in column "test2" of relation "atacc1" violates not-null constraint
2024-09-08 14:51:58.533 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (3, null).
2024-09-08 14:51:58.533 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (test,test2) values (3, NULL);
2024-09-08 14:51:58.533 KST client backend[3076390] pg_regress/alter_table ERROR:  null value in column "test" of relation "atacc1" violates not-null constraint
2024-09-08 14:51:58.533 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (null, null).
2024-09-08 14:51:58.533 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (test,test2) values (NULL,NULL);
2024-09-08 14:51:58.534 KST client backend[3076390] pg_regress/alter_table ERROR:  duplicate key value violates unique constraint "atacc1_pkey"
2024-09-08 14:51:58.534 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key (test)=(3) already exists.
2024-09-08 14:51:58.534 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (test2, test) values (2, 3);
2024-09-08 14:51:58.535 KST client backend[3076390] pg_regress/alter_table ERROR:  null value in column "test" of relation "atacc1" violates not-null constraint
2024-09-08 14:51:58.535 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (null, 1).
2024-09-08 14:51:58.535 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (test2, test) values (1, NULL);
2024-09-08 14:51:58.535 KST client backend[3076390] pg_regress/alter_table ERROR:  permission denied: "pg_class" is a system catalog
2024-09-08 14:51:58.535 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table pg_class alter column relname drop not null;
2024-09-08 14:51:58.535 KST client backend[3076390] pg_regress/alter_table ERROR:  permission denied: "pg_class" is a system catalog
2024-09-08 14:51:58.535 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table pg_class alter relname set not null;
2024-09-08 14:51:58.535 KST client backend[3076390] pg_regress/alter_table ERROR:  relation "non_existent" does not exist
2024-09-08 14:51:58.535 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table non_existent alter column bar set not null;
2024-09-08 14:51:58.535 KST client backend[3076390] pg_regress/alter_table ERROR:  relation "non_existent" does not exist
2024-09-08 14:51:58.535 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table non_existent alter column bar drop not null;
2024-09-08 14:51:58.536 KST client backend[3076390] pg_regress/alter_table ERROR:  column "test" is in a primary key
2024-09-08 14:51:58.536 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter column test drop not null;
2024-09-08 14:51:58.536 KST client backend[3076390] pg_regress/alter_table ERROR:  column "test" of relation "atacc1" contains null values
2024-09-08 14:51:58.536 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter test set not null;
2024-09-08 14:51:58.537 KST client backend[3076390] pg_regress/alter_table ERROR:  column "bar" of relation "atacc1" does not exist
2024-09-08 14:51:58.537 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter bar set not null;
2024-09-08 14:51:58.537 KST client backend[3076390] pg_regress/alter_table ERROR:  column "bar" of relation "atacc1" does not exist
2024-09-08 14:51:58.537 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter bar drop not null;
2024-09-08 14:51:58.537 KST client backend[3076390] pg_regress/alter_table ERROR:  ALTER action ALTER COLUMN ... DROP NOT NULL cannot be performed on relation "myview"
2024-09-08 14:51:58.537 KST client backend[3076390] pg_regress/alter_table DETAIL:  This operation is not supported for views.
2024-09-08 14:51:58.537 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table myview alter column test drop not null;
2024-09-08 14:51:58.537 KST client backend[3076390] pg_regress/alter_table ERROR:  ALTER action ALTER COLUMN ... SET NOT NULL cannot be performed on relation "myview"
2024-09-08 14:51:58.537 KST client backend[3076390] pg_regress/alter_table DETAIL:  This operation is not supported for views.
2024-09-08 14:51:58.537 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table myview alter column test set not null;
2024-09-08 14:51:58.538 KST client backend[3076380] pg_regress/plpgsql ERROR:  SELECT INTO query does not return tuples
2024-09-08 14:51:58.538 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  SQL statement "select 10 into no_such_table"
	PL/pgSQL function rttest() line 3 at RETURN QUERY
2024-09-08 14:51:58.538 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select * from rttest();
2024-09-08 14:51:58.538 KST client backend[3076380] pg_regress/plpgsql ERROR:  SELECT INTO query does not return tuples
2024-09-08 14:51:58.538 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  SQL statement "select 10 into no_such_table"
	PL/pgSQL function rttest() line 3 at RETURN QUERY
2024-09-08 14:51:58.538 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select * from rttest();
2024-09-08 14:51:58.538 KST client backend[3076380] pg_regress/plpgsql ERROR:  relation "no_such_table" does not exist at character 15
2024-09-08 14:51:58.538 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select * from no_such_table;
2024-09-08 14:51:58.538 KST client backend[3076390] pg_regress/alter_table ERROR:  column "test_a" of relation "atacc1" contains null values
2024-09-08 14:51:58.538 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter test_a set not null;
2024-09-08 14:51:58.539 KST client backend[3076390] pg_regress/alter_table ERROR:  column "test_a" of relation "atacc1" contains null values
2024-09-08 14:51:58.539 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter test_a set not null;
2024-09-08 14:51:58.540 KST client backend[3076390] pg_regress/alter_table ERROR:  column "test_b" of relation "atacc1" contains null values
2024-09-08 14:51:58.540 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter test_a set not null, alter test_b set not null;
2024-09-08 14:51:58.540 KST client backend[3076390] pg_regress/alter_table ERROR:  column "test_b" of relation "atacc1" contains null values
2024-09-08 14:51:58.540 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter test_b set not null, alter test_a set not null;
2024-09-08 14:51:58.542 KST client backend[3076390] pg_regress/alter_table ERROR:  null value in column "a" of relation "parent" violates not-null constraint
2024-09-08 14:51:58.542 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (null).
2024-09-08 14:51:58.542 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into parent values (NULL);
2024-09-08 14:51:58.542 KST client backend[3076390] pg_regress/alter_table ERROR:  null value in column "a" of relation "child" violates not-null constraint
2024-09-08 14:51:58.542 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (null, foo).
2024-09-08 14:51:58.542 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into child (a, b) values (NULL, 'foo');
2024-09-08 14:51:58.542 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "parent" contains null values
2024-09-08 14:51:58.542 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table only parent alter a set not null;
2024-09-08 14:51:58.542 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "child" contains null values
2024-09-08 14:51:58.542 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table child alter a set not null;
2024-09-08 14:51:58.543 KST client backend[3076390] pg_regress/alter_table ERROR:  null value in column "a" of relation "parent" violates not-null constraint
2024-09-08 14:51:58.543 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (null).
2024-09-08 14:51:58.543 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into parent values (NULL);
2024-09-08 14:51:58.543 KST client backend[3076390] pg_regress/alter_table ERROR:  null value in column "a" of relation "child" violates not-null constraint
2024-09-08 14:51:58.543 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (null, foo).
2024-09-08 14:51:58.543 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into child (a, b) values (NULL, 'foo');
2024-09-08 14:51:58.543 KST client backend[3076390] pg_regress/alter_table ERROR:  null value in column "a" of relation "child" violates not-null constraint
2024-09-08 14:51:58.543 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (null, foo).
2024-09-08 14:51:58.543 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into child (a, b) values (NULL, 'foo');
2024-09-08 14:51:58.544 KST client backend[3076380] pg_regress/plpgsql ERROR:  schema "nonexistent" does not exist
2024-09-08 14:51:58.544 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  SQL function "error1" statement 1
	PL/pgSQL function error2(text) line 3 at RETURN
2024-09-08 14:51:58.544 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select error2('nonexistent.stuffs');
2024-09-08 14:51:58.546 KST client backend[3076390] pg_regress/alter_table ERROR:  invalid input syntax for type integer: "wrong_datatype"
2024-09-08 14:51:58.546 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table def_test alter column c1 set default 'wrong_datatype';
2024-09-08 14:51:58.546 KST client backend[3076390] pg_regress/alter_table ERROR:  column "c3" of relation "def_test" does not exist
2024-09-08 14:51:58.546 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table def_test alter column c3 set default 30;
2024-09-08 14:51:58.546 KST client backend[3076380] pg_regress/plpgsql ERROR:  invalid input syntax for type date: "-1"
2024-09-08 14:51:58.546 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  SQL function "sql_to_date" statement 1
	PL/pgSQL function cast_invoker(integer) while casting return value to function's return type
2024-09-08 14:51:58.546 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select cast_invoker(-1);
2024-09-08 14:51:58.547 KST client backend[3076380] pg_regress/plpgsql ERROR:  division by zero
2024-09-08 14:51:58.547 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  SQL expression "1/0"
	PL/pgSQL function fail() line 3 at RETURN
2024-09-08 14:51:58.547 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select fail();
2024-09-08 14:51:58.547 KST client backend[3076380] pg_regress/plpgsql ERROR:  division by zero
2024-09-08 14:51:58.547 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  SQL expression "1/0"
	PL/pgSQL function fail() line 3 at RETURN
2024-09-08 14:51:58.547 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select fail();
2024-09-08 14:51:58.548 KST client backend[3076380] pg_regress/plpgsql WARNING:  nonstandard use of \\ in a string literal at character 78
2024-09-08 14:51:58.548 KST client backend[3076380] pg_regress/plpgsql HINT:  Use the escape string syntax for backslashes, e.g., E'\\'.
2024-09-08 14:51:58.548 KST client backend[3076380] pg_regress/plpgsql WARNING:  nonstandard use of \\ in a string literal at character 106
2024-09-08 14:51:58.548 KST client backend[3076380] pg_regress/plpgsql HINT:  Use the escape string syntax for backslashes, e.g., E'\\'.
2024-09-08 14:51:58.548 KST client backend[3076380] pg_regress/plpgsql WARNING:  nonstandard use of \\ in a string literal at character 106
2024-09-08 14:51:58.548 KST client backend[3076380] pg_regress/plpgsql HINT:  Use the escape string syntax for backslashes, e.g., E'\\'.
2024-09-08 14:51:58.548 KST client backend[3076380] pg_regress/plpgsql WARNING:  nonstandard use of \\ in a string literal at character 1
2024-09-08 14:51:58.548 KST client backend[3076380] pg_regress/plpgsql HINT:  Use the escape string syntax for backslashes, e.g., E'\\'.
2024-09-08 14:51:58.548 KST client backend[3076380] pg_regress/plpgsql QUERY:  'foo\\bar\041baz'
2024-09-08 14:51:58.548 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function strtest() line 4 at RETURN
2024-09-08 14:51:58.548 KST client backend[3076390] pg_regress/alter_table ERROR:  permission denied: "pg_class" is a system catalog
2024-09-08 14:51:58.548 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table pg_class drop column relname;
2024-09-08 14:51:58.548 KST client backend[3076390] pg_regress/alter_table ERROR:  relation "nosuchtable" does not exist
2024-09-08 14:51:58.548 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table nosuchtable drop column bar;
2024-09-08 14:51:58.549 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "atacc1" does not exist
2024-09-08 14:51:58.549 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 drop a;
2024-09-08 14:51:58.549 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" does not exist at character 31
2024-09-08 14:51:58.549 KST client backend[3076390] pg_regress/alter_table STATEMENT:  select * from atacc1 order by a;
2024-09-08 14:51:58.549 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" does not exist at character 31
2024-09-08 14:51:58.549 KST client backend[3076390] pg_regress/alter_table STATEMENT:  select * from atacc1 order by "........pg.dropped.1........";
2024-09-08 14:51:58.549 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" does not exist at character 31
2024-09-08 14:51:58.549 KST client backend[3076390] pg_regress/alter_table STATEMENT:  select * from atacc1 group by a;
2024-09-08 14:51:58.549 KST client backend[3076380] pg_regress/plpgsql ERROR:  RETURN cannot have a parameter in function returning void at character 36
2024-09-08 14:51:58.549 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  DO LANGUAGE plpgsql $$begin return 1; end$$;
2024-09-08 14:51:58.549 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" does not exist at character 31
2024-09-08 14:51:58.549 KST client backend[3076390] pg_regress/alter_table STATEMENT:  select * from atacc1 group by "........pg.dropped.1........";
2024-09-08 14:51:58.550 KST client backend[3076380] pg_regress/plpgsql ERROR:  column "foo" does not exist at character 33
2024-09-08 14:51:58.550 KST client backend[3076380] pg_regress/plpgsql QUERY:  SELECT rtrim(roomno) AS roomno, foo FROM Room ORDER BY roomno
2024-09-08 14:51:58.550 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function inline_code_block line 4 at FOR over SELECT rows
2024-09-08 14:51:58.550 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  DO $$
	DECLARE r record;
	BEGIN
	    FOR r IN SELECT rtrim(roomno) AS roomno, foo FROM Room ORDER BY roomno
	    LOOP
	        RAISE NOTICE '%, %', r.roomno, r.comment;
	    END LOOP;
	END$$;
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" does not exist at character 8
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table STATEMENT:  select a from atacc1;
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table ERROR:  column atacc1.a does not exist at character 8
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table STATEMENT:  select atacc1.a from atacc1;
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" does not exist at character 8
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table STATEMENT:  select a,b,c,d from atacc1;
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" does not exist at character 28
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table STATEMENT:  select * from atacc1 where a = 1;
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" does not exist at character 8
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table STATEMENT:  select "........pg.dropped.1........" from atacc1;
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table ERROR:  column atacc1.........pg.dropped.1........ does not exist at character 8
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table STATEMENT:  select atacc1."........pg.dropped.1........" from atacc1;
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" does not exist at character 8
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table STATEMENT:  select "........pg.dropped.1........",b,c,d from atacc1;
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" does not exist at character 28
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table STATEMENT:  select * from atacc1 where "........pg.dropped.1........" = 1;
2024-09-08 14:51:58.550 KST client backend[3076380] pg_regress/plpgsql ERROR:  column "x" does not exist at character 1
2024-09-08 14:51:58.550 KST client backend[3076380] pg_regress/plpgsql QUERY:  x + 1
2024-09-08 14:51:58.550 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function inline_code_block line 2 during statement block local variable initialization
2024-09-08 14:51:58.550 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  do $$
	declare x int := x + 1;  -- error
	begin
	  raise notice 'x = %', x;
	end;
	$$;
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "atacc1" does not exist at character 19
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table STATEMENT:  update atacc1 set a = 3;
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" does not exist at character 31
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table STATEMENT:  update atacc1 set b = 2 where a = 3;
2024-09-08 14:51:58.550 KST client backend[3076380] pg_regress/plpgsql ERROR:  column "x" does not exist at character 1
2024-09-08 14:51:58.550 KST client backend[3076380] pg_regress/plpgsql QUERY:  x + 1
2024-09-08 14:51:58.550 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function inline_code_block line 2 during statement block local variable initialization
2024-09-08 14:51:58.550 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  do $$
	declare y int := x + 1;  -- error
	        x int := 42;
	begin
	  raise notice 'x = %, y = %', x, y;
	end;
	$$;
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" of relation "atacc1" does not exist at character 19
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table STATEMENT:  update atacc1 set "........pg.dropped.1........" = 3;
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" does not exist at character 31
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table STATEMENT:  update atacc1 set b = 2 where "........pg.dropped.1........" = 3;
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table ERROR:  INSERT has more expressions than target columns at character 40
2024-09-08 14:51:58.550 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 values (10, 11, 12, 13);
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table ERROR:  INSERT has more expressions than target columns at character 45
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 values (default, 11, 12, 13);
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "atacc1" does not exist at character 21
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (a) values (10);
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "atacc1" does not exist at character 21
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (a) values (default);
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "atacc1" does not exist at character 21
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (a,b,c,d) values (10,11,12,13);
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "atacc1" does not exist at character 21
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 (a,b,c,d) values (default,11,12,13);
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" of relation "atacc1" does not exist at character 21
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 ("........pg.dropped.1........") values (10);
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" of relation "atacc1" does not exist at character 21
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 ("........pg.dropped.1........") values (default);
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" of relation "atacc1" does not exist at character 21
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 ("........pg.dropped.1........",b,c,d) values (10,11,12,13);
2024-09-08 14:51:58.551 KST client backend[3076380] pg_regress/plpgsql ERROR:  column reference "q1" is ambiguous at character 8
2024-09-08 14:51:58.551 KST client backend[3076380] pg_regress/plpgsql DETAIL:  It could refer to either a PL/pgSQL variable or a table column.
2024-09-08 14:51:58.551 KST client backend[3076380] pg_regress/plpgsql QUERY:  select q1,q2 from int8_tbl
2024-09-08 14:51:58.551 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function conflict_test() line 5 at FOR over SELECT rows
2024-09-08 14:51:58.551 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select * from conflict_test();
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" of relation "atacc1" does not exist at character 21
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1 ("........pg.dropped.1........",b,c,d) values (default,11,12,13);
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" does not exist at character 26
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table STATEMENT:  delete from atacc1 where a = 3;
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" does not exist at character 26
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table STATEMENT:  delete from atacc1 where "........pg.dropped.1........" = 3;
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table ERROR:  column "bar" of relation "atacc1" does not exist
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 drop bar;
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table ERROR:  syntax error at or near "WITH" at character 24
2024-09-08 14:51:58.551 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 SET WITH OIDS;
2024-09-08 14:51:58.552 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot drop system column "xmin"
2024-09-08 14:51:58.552 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 drop xmin;
2024-09-08 14:51:58.552 KST client backend[3076390] pg_regress/alter_table ERROR:  ALTER action DROP COLUMN cannot be performed on relation "myview"
2024-09-08 14:51:58.552 KST client backend[3076390] pg_regress/alter_table DETAIL:  This operation is not supported for views.
2024-09-08 14:51:58.552 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table myview drop d;
2024-09-08 14:51:58.552 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "atacc1" does not exist
2024-09-08 14:51:58.552 KST client backend[3076390] pg_regress/alter_table STATEMENT:  analyze atacc1(a);
2024-09-08 14:51:58.552 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" of relation "atacc1" does not exist
2024-09-08 14:51:58.552 KST client backend[3076390] pg_regress/alter_table STATEMENT:  analyze atacc1("........pg.dropped.1........");
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "atacc1" does not exist
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table STATEMENT:  vacuum analyze atacc1(a);
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" of relation "atacc1" does not exist
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table STATEMENT:  vacuum analyze atacc1("........pg.dropped.1........");
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "atacc1" does not exist
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table STATEMENT:  comment on column atacc1.a is 'testing';
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" of relation "atacc1" does not exist
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table STATEMENT:  comment on column atacc1."........pg.dropped.1........" is 'testing';
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "atacc1" does not exist
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter a set storage plain;
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" of relation "atacc1" does not exist
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter "........pg.dropped.1........" set storage plain;
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "atacc1" does not exist
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter a set statistics 0;
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" of relation "atacc1" does not exist
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter "........pg.dropped.1........" set statistics 0;
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "atacc1" does not exist
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter a set default 3;
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" of relation "atacc1" does not exist
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter "........pg.dropped.1........" set default 3;
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "atacc1" does not exist
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter a drop default;
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" of relation "atacc1" does not exist
2024-09-08 14:51:58.553 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter "........pg.dropped.1........" drop default;
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "atacc1" does not exist
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter a set not null;
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" of relation "atacc1" does not exist
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter "........pg.dropped.1........" set not null;
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "atacc1" does not exist
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter a drop not null;
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" of relation "atacc1" does not exist
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 alter "........pg.dropped.1........" drop not null;
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" does not exist
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 rename a to x;
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" does not exist
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 rename "........pg.dropped.1........" to x;
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "atacc1" does not exist
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 add primary key(a);
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" of relation "atacc1" does not exist
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 add primary key("........pg.dropped.1........");
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" named in key does not exist
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 add unique(a);
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" named in key does not exist
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 add unique("........pg.dropped.1........");
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" does not exist
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 add check (a > 3);
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" does not exist
2024-09-08 14:51:58.554 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 add check ("........pg.dropped.1........" > 3);
2024-09-08 14:51:58.555 KST client backend[3076380] pg_regress/plpgsql ERROR:  FOREACH ... SLICE loop variable must be of an array type
2024-09-08 14:51:58.555 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function foreach_test(anyarray) line 4 at FOREACH over array
2024-09-08 14:51:58.555 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select foreach_test(ARRAY[1,2,3,4]);
2024-09-08 14:51:58.555 KST client backend[3076380] pg_regress/plpgsql ERROR:  FOREACH ... SLICE loop variable must be of an array type
2024-09-08 14:51:58.555 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function foreach_test(anyarray) line 4 at FOREACH over array
2024-09-08 14:51:58.555 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select foreach_test(ARRAY[[1,2],[3,4]]);
2024-09-08 14:51:58.555 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" referenced in foreign key constraint does not exist
2024-09-08 14:51:58.555 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 add foreign key (a) references atacc2(id);
2024-09-08 14:51:58.555 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" referenced in foreign key constraint does not exist
2024-09-08 14:51:58.555 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc1 add foreign key ("........pg.dropped.1........") references atacc2(id);
2024-09-08 14:51:58.555 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" referenced in foreign key constraint does not exist
2024-09-08 14:51:58.555 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc2 add foreign key (id) references atacc1(a);
2024-09-08 14:51:58.555 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" referenced in foreign key constraint does not exist
2024-09-08 14:51:58.555 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table atacc2 add foreign key (id) references atacc1("........pg.dropped.1........");
2024-09-08 14:51:58.555 KST client backend[3076380] pg_regress/plpgsql ERROR:  slice dimension (2) is out of the valid range 0..1
2024-09-08 14:51:58.555 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function foreach_test(anyarray) line 4 at FOREACH over array
2024-09-08 14:51:58.555 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select foreach_test(ARRAY[1,2,3,4]);
2024-09-08 14:51:58.556 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" does not exist
2024-09-08 14:51:58.556 KST client backend[3076390] pg_regress/alter_table STATEMENT:  create index "testing_idx" on atacc1(a);
2024-09-08 14:51:58.556 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" does not exist
2024-09-08 14:51:58.556 KST client backend[3076390] pg_regress/alter_table STATEMENT:  create index "testing_idx" on atacc1("........pg.dropped.1........");
2024-09-08 14:51:58.559 KST client backend[3076390] pg_regress/alter_table ERROR:  new row for relation "atacc1" violates check constraint "atacc1_value_check"
2024-09-08 14:51:58.559 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (1, 100).
2024-09-08 14:51:58.559 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1(value) values (100);
2024-09-08 14:51:58.560 KST client backend[3076390] pg_regress/alter_table ERROR:  new row for relation "atacc1" violates check constraint "atacc1_value_check"
2024-09-08 14:51:58.560 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (2, 100).
2024-09-08 14:51:58.560 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1(value) values (100);
2024-09-08 14:51:58.560 KST client backend[3076390] pg_regress/alter_table ERROR:  null value in column "id" of relation "atacc1" violates not-null constraint
2024-09-08 14:51:58.560 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (null, 0).
2024-09-08 14:51:58.560 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into atacc1(id, value) values (null, 0);
2024-09-08 14:51:58.560 KST client backend[3076380] pg_regress/plpgsql ERROR:  value for domain orderedarray violates check constraint "sorted"
2024-09-08 14:51:58.560 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select '{2,1}'::orderedarray;
2024-09-08 14:51:58.561 KST client backend[3076380] pg_regress/plpgsql ERROR:  value for domain orderedarray violates check constraint "sorted"
2024-09-08 14:51:58.561 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function testoa(integer,integer,integer) line 4 at assignment
2024-09-08 14:51:58.561 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select testoa(2,1,3);
2024-09-08 14:51:58.561 KST client backend[3076380] pg_regress/plpgsql ERROR:  value for domain orderedarray violates check constraint "sorted"
2024-09-08 14:51:58.561 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function testoa(integer,integer,integer) line 5 at assignment
2024-09-08 14:51:58.561 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  select testoa(1,2,1);
2024-09-08 14:51:58.564 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" has a type conflict
2024-09-08 14:51:58.564 KST client backend[3076390] pg_regress/alter_table DETAIL:  double precision versus real
2024-09-08 14:51:58.564 KST client backend[3076390] pg_regress/alter_table STATEMENT:  create table child (a float4) inherits (parent);
2024-09-08 14:51:58.564 KST client backend[3076390] pg_regress/alter_table ERROR:  column "b" has a type conflict
2024-09-08 14:51:58.564 KST client backend[3076390] pg_regress/alter_table DETAIL:  numeric(10,4) versus numeric(10,7)
2024-09-08 14:51:58.564 KST client backend[3076390] pg_regress/alter_table STATEMENT:  create table child (b decimal(10,7)) inherits (parent);
2024-09-08 14:51:58.564 KST client backend[3076390] pg_regress/alter_table ERROR:  column "c" has a collation conflict
2024-09-08 14:51:58.564 KST client backend[3076390] pg_regress/alter_table DETAIL:  "C" versus "POSIX"
2024-09-08 14:51:58.564 KST client backend[3076390] pg_regress/alter_table STATEMENT:  create table child (c text collate "POSIX") inherits (parent);
2024-09-08 14:51:58.566 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "attest" does not exist
2024-09-08 14:51:58.566 KST client backend[3076390] pg_regress/alter_table STATEMENT:  copy attest(a) to stdout;
2024-09-08 14:51:58.566 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" of relation "attest" does not exist
2024-09-08 14:51:58.566 KST client backend[3076390] pg_regress/alter_table STATEMENT:  copy attest("........pg.dropped.1........") to stdout;
2024-09-08 14:51:58.567 KST client backend[3076390] pg_regress/alter_table ERROR:  extra data after last expected column
2024-09-08 14:51:58.567 KST client backend[3076390] pg_regress/alter_table CONTEXT:  COPY attest, line 1: "10	11	12"
2024-09-08 14:51:58.567 KST client backend[3076390] pg_regress/alter_table STATEMENT:  copy attest from stdin;
2024-09-08 14:51:58.567 KST client backend[3076380] pg_regress/plpgsql ERROR:  assertion failed
2024-09-08 14:51:58.567 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function inline_code_block line 3 at ASSERT
2024-09-08 14:51:58.567 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  do $$
	begin
	  assert 1=0;  -- should fail
	end;
	$$;
2024-09-08 14:51:58.567 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" of relation "attest" does not exist
2024-09-08 14:51:58.567 KST client backend[3076390] pg_regress/alter_table STATEMENT:  copy attest(a) from stdin;
2024-09-08 14:51:58.567 KST client backend[3076390] pg_regress/alter_table ERROR:  column "........pg.dropped.1........" of relation "attest" does not exist
2024-09-08 14:51:58.567 KST client backend[3076390] pg_regress/alter_table STATEMENT:  copy attest("........pg.dropped.1........") from stdin;
2024-09-08 14:51:58.567 KST client backend[3076380] pg_regress/plpgsql ERROR:  assertion failed
2024-09-08 14:51:58.567 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function inline_code_block line 3 at ASSERT
2024-09-08 14:51:58.567 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  do $$
	begin
	  assert NULL;  -- should fail
	end;
	$$;
2024-09-08 14:51:58.567 KST client backend[3076380] pg_regress/plpgsql ERROR:  assertion failed, var = "some value"
2024-09-08 14:51:58.567 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function inline_code_block line 4 at ASSERT
2024-09-08 14:51:58.567 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  do $$
	declare var text := 'some value';
	begin
	  assert 1=0, format('assertion failed, var = "%s"', var);
	end;
	$$;
2024-09-08 14:51:58.567 KST client backend[3076380] pg_regress/plpgsql ERROR:  unhandled assertion
2024-09-08 14:51:58.567 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function inline_code_block line 3 at ASSERT
2024-09-08 14:51:58.567 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  do $$
	begin
	  assert 1=0, 'unhandled assertion';
	exception when others then
	  null; -- do nothing
	end;
	$$;
2024-09-08 14:51:58.568 KST client backend[3076380] pg_regress/plpgsql ERROR:  value for domain plpgsql_domain violates check constraint "plpgsql_domain_check"
2024-09-08 14:51:58.568 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function inline_code_block line 4 at assignment
2024-09-08 14:51:58.568 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  do $$
	declare v_test plpgsql_domain := 1;
	begin
	  v_test := 0;  -- fail
	end;
	$$;
2024-09-08 14:51:58.568 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot drop inherited column "a"
2024-09-08 14:51:58.568 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table dropColumnchild drop column a;
2024-09-08 14:51:58.569 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot drop inherited column "b"
2024-09-08 14:51:58.569 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table only dropColumnChild drop column b;
2024-09-08 14:51:58.569 KST client backend[3076380] pg_regress/plpgsql ERROR:  value for domain plpgsql_arr_domain violates check constraint "plpgsql_arr_domain_check"
2024-09-08 14:51:58.569 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function inline_code_block line 4 at assignment
2024-09-08 14:51:58.569 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  do $$
	declare v_test plpgsql_arr_domain := array[1];
	begin
	  v_test := 0 || v_test;  -- fail
	end;
	$$;
2024-09-08 14:51:58.570 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot rename inherited column "a"
2024-09-08 14:51:58.570 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table renameColumnChild rename column a to d;
2024-09-08 14:51:58.570 KST client backend[3076390] pg_regress/alter_table ERROR:  inherited column "a" must be renamed in child tables too
2024-09-08 14:51:58.570 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table only renameColumnChild rename column a to d;
2024-09-08 14:51:58.570 KST client backend[3076390] pg_regress/alter_table ERROR:  inherited column "a" must be renamed in child tables too
2024-09-08 14:51:58.570 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table only renameColumn rename column a to d;
2024-09-08 14:51:58.571 KST client backend[3076390] pg_regress/alter_table ERROR:  column must be added to child tables too
2024-09-08 14:51:58.571 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table only renameColumn add column x int;
2024-09-08 14:51:58.571 KST client backend[3076380] pg_regress/plpgsql ERROR:  OLD TABLE can only be specified for a DELETE or UPDATE trigger
2024-09-08 14:51:58.571 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  CREATE TRIGGER transition_table_base_ins_trig
	  AFTER INSERT ON transition_table_base
	  REFERENCING OLD TABLE AS oldtable NEW TABLE AS newtable
	  FOR EACH STATEMENT
	  EXECUTE PROCEDURE transition_table_base_ins_func();
2024-09-08 14:51:58.572 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot drop inherited column "f1"
2024-09-08 14:51:58.572 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table c1 drop column f1;
2024-09-08 14:51:58.572 KST client backend[3076390] pg_regress/alter_table ERROR:  column "f1" does not exist at character 8
2024-09-08 14:51:58.572 KST client backend[3076390] pg_regress/alter_table HINT:  Perhaps you meant to reference the column "c1.f2".
2024-09-08 14:51:58.572 KST client backend[3076390] pg_regress/alter_table STATEMENT:  select f1 from c1;
2024-09-08 14:51:58.573 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot drop inherited column "f1"
2024-09-08 14:51:58.573 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table c1 drop column f1;
2024-09-08 14:51:58.573 KST client backend[3076390] pg_regress/alter_table ERROR:  column "f1" does not exist at character 8
2024-09-08 14:51:58.573 KST client backend[3076390] pg_regress/alter_table HINT:  Perhaps you meant to reference the column "c1.f2".
2024-09-08 14:51:58.573 KST client backend[3076390] pg_regress/alter_table STATEMENT:  select f1 from c1;
2024-09-08 14:51:58.575 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot drop inherited column "f1"
2024-09-08 14:51:58.575 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table c1 drop column f1;
2024-09-08 14:51:58.576 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot drop inherited column "f1"
2024-09-08 14:51:58.576 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table c1 drop column f1;
2024-09-08 14:51:58.581 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot drop inherited column "name"
2024-09-08 14:51:58.581 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table gc1 drop column name;
2024-09-08 14:51:58.581 KST client backend[3076390] pg_regress/alter_table ERROR:  column "name" of relation "gc1" does not exist
2024-09-08 14:51:58.581 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table gc1 drop column name;
2024-09-08 14:51:58.582 KST client backend[3076390] pg_regress/alter_table ERROR:  column "non_existing" of relation "dropcolumnexists" does not exist
2024-09-08 14:51:58.582 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table dropColumnExists drop column non_existing;
2024-09-08 14:51:58.589 KST client backend[3076390] pg_regress/alter_table ERROR:  new row for relation "c1" violates check constraint "p1_a1_check"
2024-09-08 14:51:58.589 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (11, xyz, 33, 0).
2024-09-08 14:51:58.589 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into c1 values(11,'xyz',33,0);
2024-09-08 14:51:58.593 KST client backend[3076390] pg_regress/alter_table ERROR:  column "f1" cannot be cast automatically to type integer
2024-09-08 14:51:58.593 KST client backend[3076390] pg_regress/alter_table HINT:  You might need to specify "USING f1::integer".
2024-09-08 14:51:58.593 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table foo alter f1 TYPE integer;
2024-09-08 14:51:58.596 KST client backend[3076390] pg_regress/alter_table ERROR:  column "atcol1" cannot be cast automatically to type boolean
2024-09-08 14:51:58.596 KST client backend[3076390] pg_regress/alter_table HINT:  You might need to specify "USING atcol1::boolean".
2024-09-08 14:51:58.596 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table anothertab alter column atcol1 type boolean;
2024-09-08 14:51:58.596 KST client backend[3076390] pg_regress/alter_table ERROR:  result of USING clause for column "atcol1" cannot be cast automatically to type boolean
2024-09-08 14:51:58.596 KST client backend[3076390] pg_regress/alter_table HINT:  You might need to add an explicit cast.
2024-09-08 14:51:58.596 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table anothertab alter column atcol1 type boolean using atcol1::int;
2024-09-08 14:51:58.597 KST client backend[3076390] pg_regress/alter_table ERROR:  new row for relation "anothertab" violates check constraint "anothertab_chk"
2024-09-08 14:51:58.597 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (45, null).
2024-09-08 14:51:58.597 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into anothertab (atcol1, atcol2) values (45, null);
2024-09-08 14:51:58.599 KST client backend[3076390] pg_regress/alter_table ERROR:  default for column "atcol1" cannot be cast automatically to type boolean
2024-09-08 14:51:58.599 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table anothertab alter column atcol1 type boolean
	        using case when atcol1 % 2 = 0 then true else false end;
2024-09-08 14:51:58.600 KST client backend[3076390] pg_regress/alter_table ERROR:  operator does not exist: boolean <= integer
2024-09-08 14:51:58.600 KST client backend[3076390] pg_regress/alter_table HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
2024-09-08 14:51:58.600 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table anothertab alter column atcol1 type boolean
	        using case when atcol1 % 2 = 0 then true else false end;
2024-09-08 14:51:58.600 KST client backend[3076390] pg_regress/alter_table ERROR:  constraint "anothertab_chk" of relation "anothertab" does not exist
2024-09-08 14:51:58.600 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table anothertab drop constraint anothertab_chk;
2024-09-08 14:51:58.629 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot alter table "at_tab1" because column "at_tab2.y" uses its row type
2024-09-08 14:51:58.629 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table at_tab1 alter column b type varchar;
2024-09-08 14:51:58.631 KST client backend[3076390] pg_regress/alter_table ERROR:  ROW() column has type text instead of type character varying
2024-09-08 14:51:58.631 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into at_tab2 values(1,'42');
2024-09-08 14:51:58.633 KST client backend[3076380] pg_regress/plpgsql ERROR:  relation "dx" cannot be the target of a modifying statement
2024-09-08 14:51:58.633 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  SQL statement "INSERT INTO dx VALUES (1000000, 1000000, 'x')"
	PL/pgSQL function transition_table_level2_bad_usage_func() line 3 at SQL statement
2024-09-08 14:51:58.633 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  DELETE FROM transition_table_level2
	  WHERE level2_no BETWEEN 301 AND 305;
2024-09-08 14:51:58.633 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot alter table "at_tab1" because column "at_tab2.y" uses its row type
2024-09-08 14:51:58.633 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table at_tab1 alter column b type varchar;
2024-09-08 14:51:58.635 KST client backend[3076380] pg_regress/plpgsql ERROR:  RI error
2024-09-08 14:51:58.635 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function transition_table_level1_ri_parent_del_func() line 6 at RAISE
2024-09-08 14:51:58.635 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  DELETE FROM transition_table_level1
	  WHERE level1_no = 25;
2024-09-08 14:51:58.636 KST client backend[3076380] pg_regress/plpgsql ERROR:  RI error
2024-09-08 14:51:58.636 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function transition_table_level1_ri_parent_upd_func() line 15 at RAISE
2024-09-08 14:51:58.636 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  UPDATE transition_table_level1 SET level1_no = -1
	  WHERE level1_no = 30;
2024-09-08 14:51:58.636 KST client backend[3076380] pg_regress/plpgsql ERROR:  RI error
2024-09-08 14:51:58.636 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function transition_table_level2_ri_child_insupd_func() line 8 at RAISE
2024-09-08 14:51:58.636 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  INSERT INTO transition_table_level2 (level2_no, parent_no)
	  VALUES (10000, 10000);
2024-09-08 14:51:58.636 KST client backend[3076380] pg_regress/plpgsql ERROR:  RI error
2024-09-08 14:51:58.636 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function transition_table_level2_ri_child_insupd_func() line 8 at RAISE
2024-09-08 14:51:58.636 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  UPDATE transition_table_level2 SET parent_no = 2000
	  WHERE level2_no = 40;
2024-09-08 14:51:58.642 KST client backend[3076380] pg_regress/plpgsql ERROR:  TRUNCATE triggers with transition tables are not supported
2024-09-08 14:51:58.642 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  CREATE TRIGGER alter_table_under_transition_tables_upd_trigger
	  AFTER TRUNCATE OR UPDATE ON alter_table_under_transition_tables
	  REFERENCING OLD TABLE AS d NEW TABLE AS i
	  FOR EACH STATEMENT EXECUTE PROCEDURE
	    alter_table_under_transition_tables_upd_func();
2024-09-08 14:51:58.643 KST client backend[3076380] pg_regress/plpgsql WARNING:  old table = 1=1,2=2,3=3, new table = 1=11,2=22,3=33
2024-09-08 14:51:58.643 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function alter_table_under_transition_tables_upd_func() line 3 at RAISE
2024-09-08 14:51:58.645 KST client backend[3076380] pg_regress/plpgsql WARNING:  old table = 1=11,2=22,3=33, new table = 1=1111,2=2222,3=3333
2024-09-08 14:51:58.645 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function alter_table_under_transition_tables_upd_func() line 3 at RAISE
2024-09-08 14:51:58.646 KST client backend[3076380] pg_regress/plpgsql ERROR:  column "name" does not exist at character 33
2024-09-08 14:51:58.646 KST client backend[3076380] pg_regress/plpgsql QUERY:  (SELECT string_agg(id || '=' || name, ',') FROM d)
2024-09-08 14:51:58.646 KST client backend[3076380] pg_regress/plpgsql CONTEXT:  PL/pgSQL function alter_table_under_transition_tables_upd_func() line 3 at RAISE
2024-09-08 14:51:58.646 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  UPDATE alter_table_under_transition_tables
	  SET id = id;
2024-09-08 14:51:58.653 KST client backend[3076380] pg_regress/plpgsql ERROR:  "x" is not a scalar variable at character 72
2024-09-08 14:51:58.653 KST client backend[3076380] pg_regress/plpgsql STATEMENT:  CREATE FUNCTION fx(x WSlot) RETURNS void AS $$
	BEGIN
	  GET DIAGNOSTICS x = ROW_COUNT;
	  RETURN;
	END; $$ LANGUAGE plpgsql;
2024-09-08 14:51:58.666 KST client backend[3076390] pg_regress/alter_table ERROR:  composite type recur1 cannot be made a member of itself
2024-09-08 14:51:58.666 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table recur1 add column f2 recur1;
2024-09-08 14:51:58.667 KST client backend[3076390] pg_regress/alter_table ERROR:  composite type recur1 cannot be made a member of itself
2024-09-08 14:51:58.667 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table recur1 add column f2 recur1[];
2024-09-08 14:51:58.667 KST client backend[3076390] pg_regress/alter_table ERROR:  composite type recur1 cannot be made a member of itself
2024-09-08 14:51:58.667 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table recur1 add column f2 array_of_recur1;
2024-09-08 14:51:58.668 KST client backend[3076390] pg_regress/alter_table ERROR:  composite type recur1 cannot be made a member of itself
2024-09-08 14:51:58.668 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table recur1 add column f2 recur2;
2024-09-08 14:51:58.668 KST client backend[3076390] pg_regress/alter_table ERROR:  composite type recur1 cannot be made a member of itself
2024-09-08 14:51:58.668 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table recur1 alter column f2 type recur2;
2024-09-08 14:51:58.671 KST client backend[3076390] pg_regress/alter_table ERROR:  column data type integer can only have storage PLAIN
2024-09-08 14:51:58.671 KST client backend[3076390] pg_regress/alter_table STATEMENT:  create table test_storage_failed (a text, b int storage extended);
2024-09-08 14:51:58.709 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot convert whole-row table reference
2024-09-08 14:51:58.709 KST client backend[3076390] pg_regress/alter_table DETAIL:  USING expression contains a whole-row table reference.
2024-09-08 14:51:58.709 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE test_type_diff2 ALTER COLUMN int_four TYPE int4 USING (pg_column_size(test_type_diff2));
2024-09-08 14:51:58.738 KST client backend[3076390] pg_regress/alter_table ERROR:  type "lockmodes" does not exist
2024-09-08 14:51:58.738 KST client backend[3076390] pg_regress/alter_table STATEMENT:  drop type lockmodes;
2024-09-08 14:51:58.738 KST client backend[3076390] pg_regress/alter_table ERROR:  view "my_locks" does not exist
2024-09-08 14:51:58.738 KST client backend[3076390] pg_regress/alter_table STATEMENT:  drop view my_locks;
2024-09-08 14:51:58.754 KST client backend[3076390] pg_regress/alter_table ERROR:  unrecognized parameter "autovacuum_enabled"
2024-09-08 14:51:58.754 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table my_locks set (autovacuum_enabled = false);
2024-09-08 14:51:58.754 KST client backend[3076390] pg_regress/alter_table ERROR:  unrecognized parameter "autovacuum_enabled"
2024-09-08 14:51:58.754 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter view my_locks set (autovacuum_enabled = false);
2024-09-08 14:51:58.780 KST client backend[3076390] pg_regress/alter_table ERROR:  relation "nosuchtype" does not exist
2024-09-08 14:51:58.780 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TYPE nosuchtype ADD ATTRIBUTE b text;
2024-09-08 14:51:58.782 KST client backend[3076390] pg_regress/alter_table ERROR:  column "b" of relation "test_type" already exists
2024-09-08 14:51:58.782 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TYPE test_type ADD ATTRIBUTE b text;
2024-09-08 14:51:58.786 KST client backend[3076390] pg_regress/alter_table ERROR:  column "c" of relation "test_type" does not exist
2024-09-08 14:51:58.786 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TYPE test_type DROP ATTRIBUTE c;
2024-09-08 14:51:58.787 KST client backend[3076390] pg_regress/alter_table ERROR:  column "a" does not exist
2024-09-08 14:51:58.787 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TYPE test_type RENAME ATTRIBUTE a TO aa;
2024-09-08 14:51:58.790 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot alter type "test_type1" because column "test_tbl1.y" uses it
2024-09-08 14:51:58.790 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TYPE test_type1 ALTER ATTRIBUTE b TYPE varchar;
2024-09-08 14:51:58.791 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot alter type "test_type1" because column "test_tbl1_idx.row" uses it
2024-09-08 14:51:58.791 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TYPE test_type1 ALTER ATTRIBUTE b TYPE varchar;
2024-09-08 14:51:58.797 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot alter type "test_type2" because it is the type of a typed table
2024-09-08 14:51:58.797 KST client backend[3076390] pg_regress/alter_table HINT:  Use ALTER ... CASCADE to alter the typed tables too.
2024-09-08 14:51:58.797 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TYPE test_type2 ADD ATTRIBUTE c text;
2024-09-08 14:51:58.801 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot alter type "test_type2" because it is the type of a typed table
2024-09-08 14:51:58.801 KST client backend[3076390] pg_regress/alter_table HINT:  Use ALTER ... CASCADE to alter the typed tables too.
2024-09-08 14:51:58.801 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TYPE test_type2 ALTER ATTRIBUTE b TYPE varchar;
2024-09-08 14:51:58.804 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot alter type "test_type2" because it is the type of a typed table
2024-09-08 14:51:58.804 KST client backend[3076390] pg_regress/alter_table HINT:  Use ALTER ... CASCADE to alter the typed tables too.
2024-09-08 14:51:58.804 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TYPE test_type2 DROP ATTRIBUTE b;
2024-09-08 14:51:58.807 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot alter type "test_type2" because it is the type of a typed table
2024-09-08 14:51:58.807 KST client backend[3076390] pg_regress/alter_table HINT:  Use ALTER ... CASCADE to alter the typed tables too.
2024-09-08 14:51:58.807 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TYPE test_type2 RENAME ATTRIBUTE a TO aa;
2024-09-08 14:51:58.815 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot drop column a of composite type test_typex because other objects depend on it
2024-09-08 14:51:58.815 KST client backend[3076390] pg_regress/alter_table DETAIL:  constraint test_tblx_y_check on table test_tblx depends on column a of composite type test_typex
2024-09-08 14:51:58.815 KST client backend[3076390] pg_regress/alter_table HINT:  Use DROP ... CASCADE to drop the dependent objects too.
2024-09-08 14:51:58.815 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TYPE test_typex DROP ATTRIBUTE a;
2024-09-08 14:51:58.823 KST client backend[3076390] pg_regress/alter_table ERROR:  table "tt1" has different type for column "y"
2024-09-08 14:51:58.823 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE tt1 OF tt_t0;
2024-09-08 14:51:58.823 KST client backend[3076390] pg_regress/alter_table ERROR:  table "tt2" has different type for column "y"
2024-09-08 14:51:58.823 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE tt2 OF tt_t0;
2024-09-08 14:51:58.823 KST client backend[3076390] pg_regress/alter_table ERROR:  table has column "y" where type requires "x"
2024-09-08 14:51:58.823 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE tt3 OF tt_t0;
2024-09-08 14:51:58.824 KST client backend[3076390] pg_regress/alter_table ERROR:  table is missing column "y"
2024-09-08 14:51:58.824 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE tt4 OF tt_t0;
2024-09-08 14:51:58.824 KST client backend[3076390] pg_regress/alter_table ERROR:  table has extra column "z"
2024-09-08 14:51:58.824 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE tt5 OF tt_t0;
2024-09-08 14:51:58.824 KST client backend[3076390] pg_regress/alter_table ERROR:  typed tables cannot inherit
2024-09-08 14:51:58.824 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE tt6 OF tt_t0;
2024-09-08 14:51:58.828 KST client backend[3076390] pg_regress/alter_table ERROR:  new row for relation "test_drop_constr_child" violates check constraint "test_drop_constr_parent_c_check"
2024-09-08 14:51:58.828 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (null).
2024-09-08 14:51:58.828 KST client backend[3076390] pg_regress/alter_table STATEMENT:  INSERT INTO test_drop_constr_child (c) VALUES (NULL);
2024-09-08 14:51:58.835 KST client backend[3076390] pg_regress/alter_table ERROR:  constraint "foo" for relation "tt9" already exists
2024-09-08 14:51:58.835 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE tt9 ADD CONSTRAINT foo CHECK(c > 4);
2024-09-08 14:51:58.836 KST client backend[3076390] pg_regress/alter_table ERROR:  relation "tt9_c_key" already exists
2024-09-08 14:51:58.836 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE tt9 ADD CONSTRAINT tt9_c_key UNIQUE(c);
2024-09-08 14:51:58.836 KST client backend[3076390] pg_regress/alter_table ERROR:  constraint "foo" for relation "tt9" already exists
2024-09-08 14:51:58.836 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE tt9 ADD CONSTRAINT foo UNIQUE(c);
2024-09-08 14:51:58.836 KST client backend[3076390] pg_regress/alter_table ERROR:  constraint "tt9_c_key" for relation "tt9" already exists
2024-09-08 14:51:58.836 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE tt9 ADD CONSTRAINT tt9_c_key CHECK(c > 5);
2024-09-08 14:51:58.854 KST client backend[3076390] pg_regress/alter_table ERROR:  foreign key constraint "comment_test_child_fk" cannot be implemented
2024-09-08 14:51:58.854 KST client backend[3076390] pg_regress/alter_table DETAIL:  Key columns "id" and "id" are of incompatible types: text and integer.
2024-09-08 14:51:58.854 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE comment_test ALTER COLUMN id SET DATA TYPE int USING id::integer;
2024-09-08 14:51:58.863 KST client backend[3076390] pg_regress/alter_table ERROR:  permission denied to create "pg_catalog.new_system_table"
2024-09-08 14:51:58.863 KST client backend[3076390] pg_regress/alter_table DETAIL:  System catalog modifications are currently disallowed.
2024-09-08 14:51:58.863 KST client backend[3076390] pg_regress/alter_table STATEMENT:  CREATE TABLE pg_catalog.new_system_table();
2024-09-08 14:51:58.877 KST client backend[3076390] pg_regress/alter_table ERROR:  could not change table "unlogged2" to logged because it references unlogged table "unlogged1"
2024-09-08 14:51:58.877 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE unlogged2 SET LOGGED;
2024-09-08 14:51:58.890 KST client backend[3076390] pg_regress/alter_table ERROR:  could not change table "logged1" to unlogged because it references logged table "logged2"
2024-09-08 14:51:58.890 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE logged1 SET UNLOGGED;
2024-09-08 14:51:58.904 KST client backend[3076390] pg_regress/alter_table ERROR:  column "c2" of relation "test_add_column" already exists
2024-09-08 14:51:58.904 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE test_add_column
		ADD COLUMN c2 integer;
2024-09-08 14:51:58.904 KST client backend[3076390] pg_regress/alter_table ERROR:  column "c2" of relation "test_add_column" already exists
2024-09-08 14:51:58.904 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE ONLY test_add_column
		ADD COLUMN c2 integer;
2024-09-08 14:51:58.909 KST client backend[3076390] pg_regress/alter_table ERROR:  column "c2" of relation "test_add_column" already exists
2024-09-08 14:51:58.909 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE test_add_column
		ADD COLUMN c2 integer, -- fail because c2 already exists
		ADD COLUMN c3 integer primary key;
2024-09-08 14:51:58.957 KST client backend[3076390] pg_regress/alter_table ERROR:  exclusion constraints are not supported on partitioned tables at character 29
2024-09-08 14:51:58.957 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE partitioned ADD EXCLUDE USING gist (a WITH &&);
2024-09-08 14:51:58.957 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot drop column "a" because it is part of the partition key of relation "partitioned"
2024-09-08 14:51:58.957 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE partitioned DROP COLUMN a;
2024-09-08 14:51:58.957 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot alter column "a" because it is part of the partition key of relation "partitioned"
2024-09-08 14:51:58.957 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE partitioned ALTER COLUMN a TYPE char(5);
2024-09-08 14:51:58.958 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot drop column "b" because it is part of the partition key of relation "partitioned"
2024-09-08 14:51:58.958 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE partitioned DROP COLUMN b;
2024-09-08 14:51:58.958 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot alter column "b" because it is part of the partition key of relation "partitioned"
2024-09-08 14:51:58.958 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE partitioned ALTER COLUMN b TYPE char(5);
2024-09-08 14:51:58.958 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot specify storage parameters for a partitioned table
2024-09-08 14:51:58.958 KST client backend[3076390] pg_regress/alter_table HINT:  Specify storage parameters for its leaf partitions instead.
2024-09-08 14:51:58.958 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE partitioned SET (fillfactor=100);
2024-09-08 14:51:58.958 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot change inheritance of partitioned table
2024-09-08 14:51:58.958 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE partitioned INHERIT nonpartitioned;
2024-09-08 14:51:58.958 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot inherit from partitioned table "partitioned"
2024-09-08 14:51:58.958 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE nonpartitioned INHERIT partitioned;
2024-09-08 14:51:58.958 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot add NO INHERIT constraint to partitioned table "partitioned"
2024-09-08 14:51:58.958 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE partitioned ADD CONSTRAINT chk_a CHECK (a > 0) NO INHERIT;
2024-09-08 14:51:58.959 KST client backend[3076390] pg_regress/alter_table ERROR:  table "unparted" is not partitioned
2024-09-08 14:51:58.959 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE unparted ATTACH PARTITION fail_part FOR VALUES IN ('a');
2024-09-08 14:51:58.961 KST client backend[3076390] pg_regress/alter_table ERROR:  invalid bound specification for a list partition at character 63
2024-09-08 14:51:58.961 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted ATTACH PARTITION fail_part FOR VALUES FROM (1) TO (10);
2024-09-08 14:51:58.961 KST client backend[3076390] pg_regress/alter_table ERROR:  relation "nonexistent" does not exist
2024-09-08 14:51:58.961 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted ATTACH PARTITION nonexistent FOR VALUES IN (1);
2024-09-08 14:51:58.962 KST client backend[3076390] pg_regress/alter_table ERROR:  must be owner of table not_owned_by_me
2024-09-08 14:51:58.962 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE owned_by_me ATTACH PARTITION not_owned_by_me FOR VALUES IN (1);
2024-09-08 14:51:58.964 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot attach inheritance child as partition
2024-09-08 14:51:58.964 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted ATTACH PARTITION child FOR VALUES IN (1);
2024-09-08 14:51:58.964 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot attach inheritance parent as partition
2024-09-08 14:51:58.964 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted ATTACH PARTITION parent FOR VALUES IN (1);
2024-09-08 14:51:58.965 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot attach a permanent relation as partition of temporary relation "temp_parted"
2024-09-08 14:51:58.965 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE temp_parted ATTACH PARTITION perm_part FOR VALUES IN (1);
2024-09-08 14:51:58.966 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot attach a typed table as partition
2024-09-08 14:51:58.966 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted ATTACH PARTITION fail_part FOR VALUES IN (1);
2024-09-08 14:51:58.967 KST client backend[3076390] pg_regress/alter_table ERROR:  table "fail_part" contains column "c" not found in parent "list_parted"
2024-09-08 14:51:58.967 KST client backend[3076390] pg_regress/alter_table DETAIL:  The new partition may contain only the columns present in parent.
2024-09-08 14:51:58.967 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted ATTACH PARTITION fail_part FOR VALUES IN (1);
2024-09-08 14:51:58.968 KST client backend[3076390] pg_regress/alter_table ERROR:  child table is missing column "b"
2024-09-08 14:51:58.968 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted ATTACH PARTITION fail_part FOR VALUES IN (1);
2024-09-08 14:51:58.968 KST client backend[3076390] pg_regress/alter_table ERROR:  child table "fail_part" has different type for column "b"
2024-09-08 14:51:58.968 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted ATTACH PARTITION fail_part FOR VALUES IN (1);
2024-09-08 14:51:58.969 KST client backend[3076390] pg_regress/alter_table ERROR:  child table "fail_part" has different collation for column "b"
2024-09-08 14:51:58.969 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted ATTACH PARTITION fail_part FOR VALUES IN (1);
2024-09-08 14:51:58.970 KST client backend[3076390] pg_regress/alter_table ERROR:  child table is missing constraint "check_a"
2024-09-08 14:51:58.970 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted ATTACH PARTITION fail_part FOR VALUES IN (1);
2024-09-08 14:51:58.971 KST client backend[3076390] pg_regress/alter_table ERROR:  child table "fail_part" has different definition for check constraint "check_a"
2024-09-08 14:51:58.971 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted ATTACH PARTITION fail_part FOR VALUES IN (1);
2024-09-08 14:51:58.973 KST client backend[3076390] pg_regress/alter_table ERROR:  partition "fail_part" would overlap partition "part_1" at character 67
2024-09-08 14:51:58.973 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted ATTACH PARTITION fail_part FOR VALUES IN (1);
2024-09-08 14:51:58.974 KST client backend[3076390] pg_regress/alter_table ERROR:  partition "fail_def_part" conflicts with existing default partition "def_part" at character 56
2024-09-08 14:51:58.974 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted ATTACH PARTITION fail_def_part DEFAULT;
2024-09-08 14:51:58.976 KST client backend[3076390] pg_regress/alter_table ERROR:  partition constraint of relation "part_2" is violated by some row
2024-09-08 14:51:58.976 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted2 ATTACH PARTITION part_2 FOR VALUES IN (2);
2024-09-08 14:51:58.977 KST client backend[3076390] pg_regress/alter_table ERROR:  updated partition constraint for default partition "list_parted2_def" would be violated by some row
2024-09-08 14:51:58.977 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted2 ATTACH PARTITION part_3 FOR VALUES IN (11);
2024-09-08 14:51:58.982 KST client backend[3076390] pg_regress/alter_table ERROR:  partition constraint of relation "part1" is violated by some row
2024-09-08 14:51:58.982 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE range_parted ATTACH PARTITION part1 FOR VALUES FROM (1, 1) TO (1, 10);
2024-09-08 14:51:58.984 KST client backend[3076390] pg_regress/alter_table ERROR:  partition "partr_def2" conflicts with existing default partition "partr_def1" at character 54
2024-09-08 14:51:58.984 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE range_parted ATTACH PARTITION partr_def2 DEFAULT;
2024-09-08 14:51:58.985 KST client backend[3076390] pg_regress/alter_table ERROR:  updated partition constraint for default partition "partr_def1" would be violated by some row
2024-09-08 14:51:58.985 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE range_parted ATTACH partition part3 FOR VALUES FROM (2, 10) TO (2, 20);
2024-09-08 14:51:58.987 KST client backend[3076390] pg_regress/alter_table ERROR:  partition constraint of relation "part_5_a" is violated by some row
2024-09-08 14:51:58.987 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted2 ATTACH PARTITION part_5 FOR VALUES IN (5);
2024-09-08 14:51:58.994 KST client backend[3076390] pg_regress/alter_table ERROR:  partition constraint of relation "part_7_a_null" is violated by some row
2024-09-08 14:51:58.994 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted2 ATTACH PARTITION part_7 FOR VALUES IN (7);
2024-09-08 14:51:58.996 KST client backend[3076390] pg_regress/alter_table ERROR:  updated partition constraint for default partition "part5_def_p1" would be violated by some row
2024-09-08 14:51:58.996 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE part_5 ATTACH PARTITION part5_p1 FOR VALUES IN ('y');
2024-09-08 14:51:58.996 KST client backend[3076390] pg_regress/alter_table ERROR:  "part_2" is already a partition
2024-09-08 14:51:58.996 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted2 ATTACH PARTITION part_2 FOR VALUES IN (2);
2024-09-08 14:51:58.997 KST client backend[3076390] pg_regress/alter_table ERROR:  circular inheritance not allowed
2024-09-08 14:51:58.997 KST client backend[3076390] pg_regress/alter_table DETAIL:  "part_5" is already a child of "list_parted2".
2024-09-08 14:51:58.997 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE part_5 ATTACH PARTITION list_parted2 FOR VALUES IN ('b');
2024-09-08 14:51:58.997 KST client backend[3076390] pg_regress/alter_table ERROR:  circular inheritance not allowed
2024-09-08 14:51:58.997 KST client backend[3076390] pg_regress/alter_table DETAIL:  "list_parted2" is already a child of "list_parted2".
2024-09-08 14:51:58.997 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted2 ATTACH PARTITION list_parted2 FOR VALUES IN (0);
2024-09-08 14:51:59.008 KST client backend[3076390] pg_regress/alter_table ERROR:  partition "fail_part" would overlap partition "hpart_1" at character 63
2024-09-08 14:51:59.008 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE hash_parted ATTACH PARTITION fail_part FOR VALUES WITH (MODULUS 8, REMAINDER 4);
2024-09-08 14:51:59.008 KST client backend[3076390] pg_regress/alter_table ERROR:  partition "fail_part" would overlap partition "hpart_1" at character 63
2024-09-08 14:51:59.008 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE hash_parted ATTACH PARTITION fail_part FOR VALUES WITH (MODULUS 8, REMAINDER 0);
2024-09-08 14:51:59.009 KST client backend[3076390] pg_regress/alter_table ERROR:  partition constraint of relation "hpart_2" is violated by some row
2024-09-08 14:51:59.009 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE hash_parted ATTACH PARTITION hpart_2 FOR VALUES WITH (MODULUS 4, REMAINDER 1);
2024-09-08 14:51:59.011 KST client backend[3076390] pg_regress/alter_table ERROR:  partition constraint of relation "hpart_5_a" is violated by some row
2024-09-08 14:51:59.011 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE hash_parted ATTACH PARTITION hpart_5 FOR VALUES WITH (MODULUS 4, REMAINDER 2);
2024-09-08 14:51:59.012 KST client backend[3076390] pg_regress/alter_table ERROR:  modulus for hash partition must be an integer value greater than zero
2024-09-08 14:51:59.012 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE hash_parted ATTACH PARTITION fail_part FOR VALUES WITH (MODULUS 0, REMAINDER 1);
2024-09-08 14:51:59.012 KST client backend[3076390] pg_regress/alter_table ERROR:  remainder for hash partition must be less than modulus
2024-09-08 14:51:59.012 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE hash_parted ATTACH PARTITION fail_part FOR VALUES WITH (MODULUS 8, REMAINDER 8);
2024-09-08 14:51:59.012 KST client backend[3076390] pg_regress/alter_table ERROR:  every hash partition modulus must be a factor of the next larger modulus
2024-09-08 14:51:59.012 KST client backend[3076390] pg_regress/alter_table DETAIL:  The new modulus 3 is not a factor of 4, the modulus of existing partition "hpart_1".
2024-09-08 14:51:59.012 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE hash_parted ATTACH PARTITION fail_part FOR VALUES WITH (MODULUS 3, REMAINDER 2);
2024-09-08 14:51:59.013 KST client backend[3076390] pg_regress/alter_table ERROR:  table "regular_table" is not partitioned
2024-09-08 14:51:59.013 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE regular_table DETACH PARTITION any_name;
2024-09-08 14:51:59.013 KST client backend[3076390] pg_regress/alter_table ERROR:  relation "part_4" does not exist
2024-09-08 14:51:59.013 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted2 DETACH PARTITION part_4;
2024-09-08 14:51:59.013 KST client backend[3076390] pg_regress/alter_table ERROR:  relation "hpart_4" does not exist
2024-09-08 14:51:59.013 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE hash_parted DETACH PARTITION hpart_4;
2024-09-08 14:51:59.014 KST client backend[3076390] pg_regress/alter_table ERROR:  relation "not_a_part" is not a partition of relation "list_parted2"
2024-09-08 14:51:59.014 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted2 DETACH PARTITION not_a_part;
2024-09-08 14:51:59.014 KST client backend[3076390] pg_regress/alter_table ERROR:  relation "part_1" is not a partition of relation "list_parted2"
2024-09-08 14:51:59.014 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted2 DETACH PARTITION part_1;
2024-09-08 14:51:59.014 KST client backend[3076390] pg_regress/alter_table ERROR:  relation "not_a_part" is not a partition of relation "hash_parted"
2024-09-08 14:51:59.014 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE hash_parted DETACH PARTITION not_a_part;
2024-09-08 14:51:59.018 KST client backend[3076390] pg_regress/alter_table ERROR:  ALTER TABLE ... DETACH CONCURRENTLY cannot run inside a transaction block
2024-09-08 14:51:59.018 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE range_parted2 DETACH PARTITION part_rp CONCURRENTLY;
2024-09-08 14:51:59.018 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot detach partitions concurrently when a default partition exists
2024-09-08 14:51:59.018 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE range_parted2 DETACH PARTITION part_rp CONCURRENTLY;
2024-09-08 14:51:59.018 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot detach partitions concurrently when a default partition exists
2024-09-08 14:51:59.018 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE range_parted2 DETACH PARTITION part_rpd CONCURRENTLY;
2024-09-08 14:51:59.028 KST client backend[3076390] pg_regress/alter_table ERROR:  column must be added to child tables too
2024-09-08 14:51:59.028 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE ONLY list_parted2 ADD COLUMN c int;
2024-09-08 14:51:59.028 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot drop column from only the partitioned table when partitions exist
2024-09-08 14:51:59.028 KST client backend[3076390] pg_regress/alter_table HINT:  Do not specify the ONLY keyword.
2024-09-08 14:51:59.028 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE ONLY list_parted2 DROP COLUMN b;
2024-09-08 14:51:59.028 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot add column to a partition
2024-09-08 14:51:59.028 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE part_2 ADD COLUMN c text;
2024-09-08 14:51:59.028 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot drop inherited column "b"
2024-09-08 14:51:59.028 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE part_2 DROP COLUMN b;
2024-09-08 14:51:59.028 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot rename inherited column "b"
2024-09-08 14:51:59.028 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE part_2 RENAME COLUMN b to c;
2024-09-08 14:51:59.029 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot alter inherited column "b"
2024-09-08 14:51:59.029 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE part_2 ALTER COLUMN b TYPE text;
2024-09-08 14:51:59.029 KST client backend[3076390] pg_regress/alter_table ERROR:  constraint must be added to child tables too
2024-09-08 14:51:59.029 KST client backend[3076390] pg_regress/alter_table DETAIL:  Column "b" of relation "part_2" is not already NOT NULL.
2024-09-08 14:51:59.029 KST client backend[3076390] pg_regress/alter_table HINT:  Do not specify the ONLY keyword.
2024-09-08 14:51:59.029 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE ONLY list_parted2 ALTER b SET NOT NULL;
2024-09-08 14:51:59.029 KST client backend[3076390] pg_regress/alter_table ERROR:  constraint must be added to child tables too
2024-09-08 14:51:59.029 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE ONLY list_parted2 ADD CONSTRAINT check_b CHECK (b <> 'zz');
2024-09-08 14:51:59.030 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot remove constraint from only the partitioned table when partitions exist
2024-09-08 14:51:59.030 KST client backend[3076390] pg_regress/alter_table HINT:  Do not specify the ONLY keyword.
2024-09-08 14:51:59.030 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE ONLY list_parted2 ALTER b DROP NOT NULL;
2024-09-08 14:51:59.031 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot remove constraint from only the partitioned table when partitions exist
2024-09-08 14:51:59.031 KST client backend[3076390] pg_regress/alter_table HINT:  Do not specify the ONLY keyword.
2024-09-08 14:51:59.031 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE ONLY list_parted2 DROP CONSTRAINT check_b;
2024-09-08 14:51:59.034 KST client backend[3076390] pg_regress/alter_table ERROR:  column "b" is marked NOT NULL in parent table
2024-09-08 14:51:59.034 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE part_2 ALTER b DROP NOT NULL;
2024-09-08 14:51:59.034 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot drop inherited constraint "check_a2" of relation "part_2"
2024-09-08 14:51:59.034 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE part_2 DROP CONSTRAINT check_a2;
2024-09-08 14:51:59.034 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot add NO INHERIT constraint to partitioned table "list_parted2"
2024-09-08 14:51:59.034 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted2 add constraint check_b2 check (b <> 'zz') NO INHERIT;
2024-09-08 14:51:59.034 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot inherit from partition "part_2"
2024-09-08 14:51:59.034 KST client backend[3076390] pg_regress/alter_table STATEMENT:  CREATE TABLE inh_test () INHERITS (part_2);
2024-09-08 14:51:59.034 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot inherit from a partition
2024-09-08 14:51:59.034 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE inh_test INHERIT part_2;
2024-09-08 14:51:59.034 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot change inheritance of a partition
2024-09-08 14:51:59.034 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE part_2 INHERIT inh_test;
2024-09-08 14:51:59.035 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot drop column "b" because it is part of the partition key of relation "part_5"
2024-09-08 14:51:59.035 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted2 DROP COLUMN b;
2024-09-08 14:51:59.035 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot alter column "b" because it is part of the partition key of relation "part_5"
2024-09-08 14:51:59.035 KST client backend[3076390] pg_regress/alter_table STATEMENT:  ALTER TABLE list_parted2 ALTER COLUMN b TYPE text;
2024-09-08 14:51:59.045 KST client backend[3076390] pg_regress/alter_table ERROR:  partition constraint of relation "p11" is violated by some row
2024-09-08 14:51:59.045 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table p attach partition p1 for values from (1, 2) to (1, 10);
2024-09-08 14:51:59.050 KST client backend[3076390] pg_regress/alter_table ERROR:  partition constraint of relation "defpart_attach_test_d" is violated by some row
2024-09-08 14:51:59.050 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table defpart_attach_test attach partition defpart_attach_test_d default;
2024-09-08 14:51:59.051 KST client backend[3076390] pg_regress/alter_table ERROR:  updated partition constraint for default partition "defpart_attach_test_d" would be violated by some row
2024-09-08 14:51:59.051 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table defpart_attach_test attach partition defpart_attach_test_2 for values in (2);
2024-09-08 14:51:59.052 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot attach a permanent relation as partition of temporary relation "temp_part_parent"
2024-09-08 14:51:59.052 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table temp_part_parent attach partition perm_part_child default;
2024-09-08 14:51:59.053 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot attach a temporary relation as partition of permanent relation "perm_part_parent"
2024-09-08 14:51:59.053 KST client backend[3076390] pg_regress/alter_table STATEMENT:  alter table perm_part_parent attach partition temp_part_child default;
2024-09-08 14:51:59.054 KST client backend[3076390] pg_regress/alter_table ERROR:  cannot ALTER TABLE "tab_part_attach" because it is being used by active queries in this session
2024-09-08 14:51:59.054 KST client backend[3076390] pg_regress/alter_table CONTEXT:  SQL statement "alter table tab_part_attach attach partition tab_part_attach_1 for values in (1)"
	PL/pgSQL function func_part_attach() line 4 at EXECUTE
2024-09-08 14:51:59.054 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into tab_part_attach values (1);
2024-09-08 14:51:59.077 KST client backend[3076390] pg_regress/alter_table ERROR:  new row for relation "attach_parted_part1" violates partition constraint
2024-09-08 14:51:59.077 KST client backend[3076390] pg_regress/alter_table DETAIL:  Failing row contains (2, 1).
2024-09-08 14:51:59.077 KST client backend[3076390] pg_regress/alter_table STATEMENT:  insert into attach_parted_part1 values (2, 1);
2024-09-08 14:51:59.078 KST client backend[3076390] pg_regress/alter_table WARNING:  wal_level is insufficient to publish logical changes
2024-09-08 14:51:59.078 KST client backend[3076390] pg_regress/alter_table HINT:  Set wal_level to "logical" before creating subscriptions.
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions ERROR:  value 2 out of bounds for option "fillfactor"
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions DETAIL:  Valid values are between "10" and "100".
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE TABLE reloptions_test2(i INT) WITH (fillfactor=2);
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions ERROR:  value 110 out of bounds for option "fillfactor"
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions DETAIL:  Valid values are between "10" and "100".
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE TABLE reloptions_test2(i INT) WITH (fillfactor=110);
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions ERROR:  value -10.0 out of bounds for option "autovacuum_analyze_scale_factor"
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions DETAIL:  Valid values are between "0.000000" and "100.000000".
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_analyze_scale_factor = -10.0);
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions ERROR:  value 110.0 out of bounds for option "autovacuum_analyze_scale_factor"
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions DETAIL:  Valid values are between "0.000000" and "100.000000".
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_analyze_scale_factor = 110.0);
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions ERROR:  unrecognized parameter "not_existing_option"
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE TABLE reloptions_test2(i INT) WITH (not_existing_option=2);
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions ERROR:  unrecognized parameter namespace "not_existing_namespace"
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE TABLE reloptions_test2(i INT) WITH (not_existing_namespace.fillfactor=2);
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions ERROR:  value -30.1 out of bounds for option "fillfactor"
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions DETAIL:  Valid values are between "10" and "100".
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE TABLE reloptions_test2(i INT) WITH (fillfactor=-30.1);
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions ERROR:  invalid value for integer option "fillfactor": string
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE TABLE reloptions_test2(i INT) WITH (fillfactor='string');
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions ERROR:  invalid value for integer option "fillfactor": true
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE TABLE reloptions_test2(i INT) WITH (fillfactor=true);
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions ERROR:  invalid value for boolean option "autovacuum_enabled": 12
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_enabled=12);
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions ERROR:  invalid value for boolean option "autovacuum_enabled": 30.5
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_enabled=30.5);
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions ERROR:  invalid value for boolean option "autovacuum_enabled": string
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_enabled='string');
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions ERROR:  invalid value for floating point option "autovacuum_analyze_scale_factor": string
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_analyze_scale_factor='string');
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions ERROR:  invalid value for floating point option "autovacuum_analyze_scale_factor": true
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE TABLE reloptions_test2(i INT) WITH (autovacuum_analyze_scale_factor=true);
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions ERROR:  parameter "fillfactor" specified more than once
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE TABLE reloptions_test2(i INT) WITH (fillfactor=30, fillfactor=40);
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions ERROR:  invalid value for integer option "fillfactor": true
2024-09-08 14:51:59.140 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE TABLE reloptions_test2(i INT) WITH (fillfactor);
2024-09-08 14:51:59.141 KST client backend[3076456] pg_regress/hash_part ERROR:  could not open relation with OID 0
2024-09-08 14:51:59.141 KST client backend[3076456] pg_regress/hash_part STATEMENT:  SELECT satisfies_hash_partition(0, 4, 0, NULL);
2024-09-08 14:51:59.141 KST client backend[3076456] pg_regress/hash_part ERROR:  "tenk1" is not a hash partitioned table
2024-09-08 14:51:59.141 KST client backend[3076456] pg_regress/hash_part STATEMENT:  SELECT satisfies_hash_partition('tenk1'::regclass, 4, 0, NULL);
2024-09-08 14:51:59.141 KST client backend[3076456] pg_regress/hash_part ERROR:  "mchash1" is not a hash partitioned table
2024-09-08 14:51:59.141 KST client backend[3076456] pg_regress/hash_part STATEMENT:  SELECT satisfies_hash_partition('mchash1'::regclass, 4, 0, NULL);
2024-09-08 14:51:59.141 KST client backend[3076456] pg_regress/hash_part ERROR:  modulus for hash partition must be an integer value greater than zero
2024-09-08 14:51:59.141 KST client backend[3076456] pg_regress/hash_part STATEMENT:  SELECT satisfies_hash_partition('mchash'::regclass, 0, 0, NULL);
2024-09-08 14:51:59.141 KST client backend[3076456] pg_regress/hash_part ERROR:  remainder for hash partition must be an integer value greater than or equal to zero
2024-09-08 14:51:59.141 KST client backend[3076456] pg_regress/hash_part STATEMENT:  SELECT satisfies_hash_partition('mchash'::regclass, 1, -1, NULL);
2024-09-08 14:51:59.141 KST client backend[3076456] pg_regress/hash_part ERROR:  remainder for hash partition must be less than modulus
2024-09-08 14:51:59.141 KST client backend[3076456] pg_regress/hash_part STATEMENT:  SELECT satisfies_hash_partition('mchash'::regclass, 1, 1, NULL);
2024-09-08 14:51:59.142 KST client backend[3076456] pg_regress/hash_part ERROR:  number of partitioning columns (2) does not match number of partition keys provided (3)
2024-09-08 14:51:59.142 KST client backend[3076456] pg_regress/hash_part STATEMENT:  SELECT satisfies_hash_partition('mchash'::regclass, 4, 0, NULL::int, NULL::text, NULL::json);
2024-09-08 14:51:59.142 KST client backend[3076456] pg_regress/hash_part ERROR:  number of partitioning columns (2) does not match number of partition keys provided (1)
2024-09-08 14:51:59.142 KST client backend[3076456] pg_regress/hash_part STATEMENT:  SELECT satisfies_hash_partition('mchash'::regclass, 3, 1, NULL::int);
2024-09-08 14:51:59.142 KST client backend[3076456] pg_regress/hash_part ERROR:  column 2 of the partition key has type text, but supplied value is of type integer
2024-09-08 14:51:59.142 KST client backend[3076456] pg_regress/hash_part STATEMENT:  SELECT satisfies_hash_partition('mchash'::regclass, 2, 1, NULL::int, NULL::int);
2024-09-08 14:51:59.142 KST client backend[3076454] pg_regress/reloptions ERROR:  RESET must not include values for parameters
2024-09-08 14:51:59.142 KST client backend[3076454] pg_regress/reloptions STATEMENT:  ALTER TABLE reloptions_test RESET (fillfactor=12);
2024-09-08 14:51:59.142 KST client backend[3076456] pg_regress/hash_part ERROR:  column 2 of the partition key has type "text", but supplied value is of type "integer"
2024-09-08 14:51:59.142 KST client backend[3076456] pg_regress/hash_part STATEMENT:  SELECT satisfies_hash_partition('mchash'::regclass, 2, 1,
									variadic array[1,2]::int[]);
2024-09-08 14:51:59.143 KST client backend[3076456] pg_regress/hash_part ERROR:  number of partitioning columns (2) does not match number of partition keys provided (0)
2024-09-08 14:51:59.143 KST client backend[3076456] pg_regress/hash_part STATEMENT:  SELECT satisfies_hash_partition('mcinthash'::regclass, 4, 0,
									variadic array[]::int[]);
2024-09-08 14:51:59.143 KST client backend[3076456] pg_regress/hash_part ERROR:  column 1 of the partition key has type "integer", but supplied value is of type "timestamp with time zone"
2024-09-08 14:51:59.143 KST client backend[3076456] pg_regress/hash_part STATEMENT:  SELECT satisfies_hash_partition('mcinthash'::regclass, 4, 0,
									variadic array[now(), now()]);
2024-09-08 14:51:59.144 KST client backend[3076454] pg_regress/reloptions ERROR:  null value in column "i" of relation "reloptions_test" violates not-null constraint
2024-09-08 14:51:59.144 KST client backend[3076454] pg_regress/reloptions DETAIL:  Failing row contains (null, null).
2024-09-08 14:51:59.144 KST client backend[3076454] pg_regress/reloptions STATEMENT:  INSERT INTO reloptions_test VALUES (1, NULL), (NULL, NULL);
2024-09-08 14:51:59.145 KST client backend[3076459] pg_regress/explain ERROR:  EXPLAIN options ANALYZE and GENERIC_PLAN cannot be used together
2024-09-08 14:51:59.145 KST client backend[3076459] pg_regress/explain CONTEXT:  PL/pgSQL function explain_filter(text) line 5 at FOR over EXECUTE statement
2024-09-08 14:51:59.145 KST client backend[3076459] pg_regress/explain STATEMENT:  select explain_filter('explain (analyze, generic_plan) select unique1 from tenk1 where thousand = $1');
2024-09-08 14:51:59.146 KST client backend[3076454] pg_regress/reloptions ERROR:  null value in column "i" of relation "reloptions_test" violates not-null constraint
2024-09-08 14:51:59.146 KST client backend[3076454] pg_regress/reloptions DETAIL:  Failing row contains (null, null).
2024-09-08 14:51:59.146 KST client backend[3076454] pg_regress/reloptions STATEMENT:  INSERT INTO reloptions_test VALUES (1, NULL), (NULL, NULL);
2024-09-08 14:51:59.150 KST client backend[3076454] pg_regress/reloptions ERROR:  unrecognized parameter "not_existing_option"
2024-09-08 14:51:59.150 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE TABLE reloptions_test2 (i int) WITH (toast.not_existing_option = 42);
2024-09-08 14:51:59.151 KST client backend[3076460] pg_regress/compression ERROR:  compression method lz4 not supported
2024-09-08 14:51:59.151 KST client backend[3076460] pg_regress/compression DETAIL:  This functionality requires the server to be built with lz4 support.
2024-09-08 14:51:59.151 KST client backend[3076460] pg_regress/compression STATEMENT:  CREATE TABLE cmdata1(f1 TEXT COMPRESSION lz4);
2024-09-08 14:51:59.151 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmdata1" does not exist at character 13
2024-09-08 14:51:59.151 KST client backend[3076460] pg_regress/compression STATEMENT:  INSERT INTO cmdata1 VALUES(repeat('1234567890', 1004));
2024-09-08 14:51:59.152 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmdata1" does not exist at character 39
2024-09-08 14:51:59.152 KST client backend[3076460] pg_regress/compression STATEMENT:  SELECT pg_column_compression(f1) FROM cmdata1;
2024-09-08 14:51:59.152 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmdata1" does not exist at character 34
2024-09-08 14:51:59.152 KST client backend[3076460] pg_regress/compression STATEMENT:  SELECT SUBSTR(f1, 2000, 50) FROM cmdata1;
2024-09-08 14:51:59.152 KST client backend[3076455] pg_regress/indexing ERROR:  cannot create index on partitioned table "idxpart" concurrently
2024-09-08 14:51:59.152 KST client backend[3076455] pg_regress/indexing STATEMENT:  create index concurrently on idxpart (a);
2024-09-08 14:51:59.153 KST client backend[3076454] pg_regress/reloptions ERROR:  unrecognized parameter "not_existing_option"
2024-09-08 14:51:59.153 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE INDEX reloptions_test_idx ON reloptions_test (s)
		WITH (not_existing_option=2);
2024-09-08 14:51:59.153 KST client backend[3076454] pg_regress/reloptions ERROR:  unrecognized parameter namespace "not_existing_ns"
2024-09-08 14:51:59.153 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE INDEX reloptions_test_idx ON reloptions_test (s)
		WITH (not_existing_ns.fillfactor=2);
2024-09-08 14:51:59.153 KST client backend[3076454] pg_regress/reloptions ERROR:  value 1 out of bounds for option "fillfactor"
2024-09-08 14:51:59.153 KST client backend[3076454] pg_regress/reloptions DETAIL:  Valid values are between "10" and "100".
2024-09-08 14:51:59.153 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE INDEX reloptions_test_idx2 ON reloptions_test (s) WITH (fillfactor=1);
2024-09-08 14:51:59.153 KST client backend[3076454] pg_regress/reloptions ERROR:  value 130 out of bounds for option "fillfactor"
2024-09-08 14:51:59.153 KST client backend[3076454] pg_regress/reloptions DETAIL:  Valid values are between "10" and "100".
2024-09-08 14:51:59.153 KST client backend[3076454] pg_regress/reloptions STATEMENT:  CREATE INDEX reloptions_test_idx2 ON reloptions_test (s) WITH (fillfactor=130);
2024-09-08 14:51:59.157 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmdata1" does not exist at character 35
2024-09-08 14:51:59.157 KST client backend[3076460] pg_regress/compression STATEMENT:  INSERT INTO cmmove3 SELECT * FROM cmdata1;
2024-09-08 14:51:59.157 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmdata1" does not exist at character 28
2024-09-08 14:51:59.157 KST client backend[3076460] pg_regress/compression STATEMENT:  CREATE TABLE cmdata2 (LIKE cmdata1 INCLUDING COMPRESSION);
2024-09-08 14:51:59.158 KST client backend[3076460] pg_regress/compression ERROR:  table "cmdata2" does not exist
2024-09-08 14:51:59.158 KST client backend[3076460] pg_regress/compression STATEMENT:  DROP TABLE cmdata2;
2024-09-08 14:51:59.158 KST client backend[3076460] pg_regress/compression ERROR:  column data type integer does not support compression
2024-09-08 14:51:59.158 KST client backend[3076460] pg_regress/compression STATEMENT:  CREATE TABLE cmdata2 (f1 int COMPRESSION pglz);
2024-09-08 14:51:59.159 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmdata1" does not exist at character 41
2024-09-08 14:51:59.159 KST client backend[3076460] pg_regress/compression STATEMENT:  UPDATE cmmove2 SET f1 = cmdata1.f1 FROM cmdata1;
2024-09-08 14:51:59.162 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmdata1" does not exist at character 13
2024-09-08 14:51:59.162 KST client backend[3076460] pg_regress/compression STATEMENT:  INSERT INTO cmdata1 SELECT large_val() || repeat('a', 4000);
2024-09-08 14:51:59.162 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmdata1" does not exist at character 39
2024-09-08 14:51:59.162 KST client backend[3076460] pg_regress/compression STATEMENT:  SELECT pg_column_compression(f1) FROM cmdata1;
2024-09-08 14:51:59.162 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmdata1" does not exist at character 32
2024-09-08 14:51:59.162 KST client backend[3076460] pg_regress/compression STATEMENT:  SELECT SUBSTR(f1, 200, 5) FROM cmdata1;
2024-09-08 14:51:59.176 KST client backend[3076455] pg_regress/indexing ERROR:  "idxpart_c" is not a partitioned table
2024-09-08 14:51:59.176 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter table idxpart_c attach partition idxpart1_c for values from (10) to (20);
2024-09-08 14:51:59.177 KST client backend[3076455] pg_regress/indexing ERROR:  ALTER action DETACH PARTITION cannot be performed on relation "idxpart_c"
2024-09-08 14:51:59.177 KST client backend[3076455] pg_regress/indexing DETAIL:  This operation is not supported for partitioned indexes.
2024-09-08 14:51:59.177 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter table idxpart_c detach partition idxpart1_c;
2024-09-08 14:51:59.181 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmdata1" does not exist at character 57
2024-09-08 14:51:59.181 KST client backend[3076460] pg_regress/compression STATEMENT:  CREATE MATERIALIZED VIEW compressmv(x) AS SELECT * FROM cmdata1;
2024-09-08 14:51:59.182 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmdata1" does not exist at character 39
2024-09-08 14:51:59.182 KST client backend[3076460] pg_regress/compression STATEMENT:  SELECT pg_column_compression(f1) FROM cmdata1;
2024-09-08 14:51:59.182 KST client backend[3076460] pg_regress/compression ERROR:  relation "compressmv" does not exist at character 38
2024-09-08 14:51:59.182 KST client backend[3076460] pg_regress/compression STATEMENT:  SELECT pg_column_compression(x) FROM compressmv;
2024-09-08 14:51:59.182 KST client backend[3076460] pg_regress/compression ERROR:  compression method lz4 not supported
2024-09-08 14:51:59.182 KST client backend[3076460] pg_regress/compression DETAIL:  This functionality requires the server to be built with lz4 support.
2024-09-08 14:51:59.182 KST client backend[3076460] pg_regress/compression STATEMENT:  CREATE TABLE cmpart(f1 text COMPRESSION lz4) PARTITION BY HASH(f1);
2024-09-08 14:51:59.182 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmpart" does not exist
2024-09-08 14:51:59.182 KST client backend[3076460] pg_regress/compression STATEMENT:  CREATE TABLE cmpart1 PARTITION OF cmpart FOR VALUES WITH (MODULUS 2, REMAINDER 0);
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmpart" does not exist
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression STATEMENT:  ALTER TABLE cmpart ATTACH PARTITION cmpart2 FOR VALUES WITH (MODULUS 2, REMAINDER 1);
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmpart" does not exist at character 13
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression STATEMENT:  INSERT INTO cmpart VALUES (repeat('123456789', 1004));
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmpart" does not exist at character 13
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression STATEMENT:  INSERT INTO cmpart VALUES (repeat('123456789', 4004));
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmpart1" does not exist at character 39
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression STATEMENT:  SELECT pg_column_compression(f1) FROM cmpart1;
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmdata1" does not exist
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression STATEMENT:  CREATE TABLE cminh() INHERITS(cmdata, cmdata1);
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression ERROR:  column "f1" has a compression method conflict
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression DETAIL:  pglz versus lz4
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression STATEMENT:  CREATE TABLE cminh(f1 TEXT COMPRESSION lz4) INHERITS(cmdata);
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression ERROR:  invalid value for parameter "default_toast_compression": ""
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression HINT:  Available values: pglz.
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression STATEMENT:  SET default_toast_compression = '';
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression ERROR:  invalid value for parameter "default_toast_compression": "I do not exist compression"
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression HINT:  Available values: pglz.
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression STATEMENT:  SET default_toast_compression = 'I do not exist compression';
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression ERROR:  invalid value for parameter "default_toast_compression": "lz4"
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression HINT:  Available values: pglz.
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression STATEMENT:  SET default_toast_compression = 'lz4';
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression ERROR:  compression method lz4 not supported
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression DETAIL:  This functionality requires the server to be built with lz4 support.
2024-09-08 14:51:59.183 KST client backend[3076460] pg_regress/compression STATEMENT:  ALTER TABLE cmdata ALTER COLUMN f1 SET COMPRESSION lz4;
2024-09-08 14:51:59.184 KST client backend[3076455] pg_regress/indexing ERROR:  cannot drop index idxpart1_a_idx because index idxpart_a_idx requires it
2024-09-08 14:51:59.184 KST client backend[3076455] pg_regress/indexing HINT:  You can drop index idxpart_a_idx instead.
2024-09-08 14:51:59.184 KST client backend[3076455] pg_regress/indexing STATEMENT:  drop index idxpart1_a_idx;
2024-09-08 14:51:59.184 KST client backend[3076455] pg_regress/indexing ERROR:  cannot drop partitioned index "idxpart_a_idx" concurrently
2024-09-08 14:51:59.184 KST client backend[3076455] pg_regress/indexing STATEMENT:  drop index concurrently idxpart_a_idx;
2024-09-08 14:51:59.187 KST client backend[3076455] pg_regress/indexing ERROR:  cannot drop index idxpart1_temp_a_idx because index idxpart_temp_a_idx requires it
2024-09-08 14:51:59.187 KST client backend[3076455] pg_regress/indexing HINT:  You can drop index idxpart_temp_a_idx instead.
2024-09-08 14:51:59.187 KST client backend[3076455] pg_regress/indexing STATEMENT:  drop index idxpart1_temp_a_idx;
2024-09-08 14:51:59.189 KST client backend[3076460] pg_regress/compression ERROR:  relation "compressmv" does not exist
2024-09-08 14:51:59.189 KST client backend[3076460] pg_regress/compression STATEMENT:  ALTER MATERIALIZED VIEW compressmv ALTER COLUMN x SET COMPRESSION lz4;
2024-09-08 14:51:59.190 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmpart1" does not exist
2024-09-08 14:51:59.190 KST client backend[3076460] pg_regress/compression STATEMENT:  ALTER TABLE cmpart1 ALTER COLUMN f1 SET COMPRESSION pglz;
2024-09-08 14:51:59.190 KST client backend[3076460] pg_regress/compression ERROR:  compression method lz4 not supported
2024-09-08 14:51:59.190 KST client backend[3076460] pg_regress/compression DETAIL:  This functionality requires the server to be built with lz4 support.
2024-09-08 14:51:59.190 KST client backend[3076460] pg_regress/compression STATEMENT:  ALTER TABLE cmpart2 ALTER COLUMN f1 SET COMPRESSION lz4;
2024-09-08 14:51:59.190 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmpart" does not exist at character 13
2024-09-08 14:51:59.190 KST client backend[3076460] pg_regress/compression STATEMENT:  INSERT INTO cmpart VALUES (repeat('123456789', 1004));
2024-09-08 14:51:59.190 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmpart" does not exist at character 13
2024-09-08 14:51:59.190 KST client backend[3076460] pg_regress/compression STATEMENT:  INSERT INTO cmpart VALUES (repeat('123456789', 4004));
2024-09-08 14:51:59.190 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmpart1" does not exist at character 39
2024-09-08 14:51:59.190 KST client backend[3076460] pg_regress/compression STATEMENT:  SELECT pg_column_compression(f1) FROM cmpart1;
2024-09-08 14:51:59.191 KST client backend[3076455] pg_regress/indexing ERROR:  "idxpart" is not an index
2024-09-08 14:51:59.191 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter index idxpart attach partition idxpart1;
2024-09-08 14:51:59.191 KST client backend[3076455] pg_regress/indexing ERROR:  "idxpart1" is not an index
2024-09-08 14:51:59.191 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter index idxpart_a_b_idx attach partition idxpart1;
2024-09-08 14:51:59.191 KST client backend[3076455] pg_regress/indexing ERROR:  cannot attach index "idxpart_a_b_idx" as a partition of index "idxpart_a_b_idx"
2024-09-08 14:51:59.191 KST client backend[3076455] pg_regress/indexing DETAIL:  Index "idxpart_a_b_idx" is not an index on any partition of table "idxpart".
2024-09-08 14:51:59.191 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter index idxpart_a_b_idx attach partition idxpart_a_b_idx;
2024-09-08 14:51:59.191 KST client backend[3076455] pg_regress/indexing ERROR:  relation "idxpart1_b_idx" does not exist
2024-09-08 14:51:59.191 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter index idxpart_a_b_idx attach partition idxpart1_b_idx;
2024-09-08 14:51:59.191 KST client backend[3076455] pg_regress/indexing ERROR:  cannot attach index "idxpart1_tst1" as a partition of index "idxpart_a_b_idx"
2024-09-08 14:51:59.191 KST client backend[3076455] pg_regress/indexing DETAIL:  The index definitions do not match.
2024-09-08 14:51:59.191 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter index idxpart_a_b_idx attach partition idxpart1_tst1;
2024-09-08 14:51:59.191 KST client backend[3076455] pg_regress/indexing ERROR:  cannot attach index "idxpart1_tst2" as a partition of index "idxpart_a_b_idx"
2024-09-08 14:51:59.191 KST client backend[3076455] pg_regress/indexing DETAIL:  The index definitions do not match.
2024-09-08 14:51:59.191 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter index idxpart_a_b_idx attach partition idxpart1_tst2;
2024-09-08 14:51:59.191 KST client backend[3076455] pg_regress/indexing ERROR:  cannot attach index "idxpart1_tst3" as a partition of index "idxpart_a_b_idx"
2024-09-08 14:51:59.191 KST client backend[3076455] pg_regress/indexing DETAIL:  The index definitions do not match.
2024-09-08 14:51:59.191 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter index idxpart_a_b_idx attach partition idxpart1_tst3;
2024-09-08 14:51:59.192 KST client backend[3076455] pg_regress/indexing ERROR:  cannot attach index "idxpart1_2_a_b" as a partition of index "idxpart_a_b_idx"
2024-09-08 14:51:59.192 KST client backend[3076455] pg_regress/indexing DETAIL:  Another index is already attached for partition "idxpart1".
2024-09-08 14:51:59.192 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter index idxpart_a_b_idx attach partition idxpart1_2_a_b;
2024-09-08 14:51:59.193 KST client backend[3076460] pg_regress/compression ERROR:  compression method lz4 not supported
2024-09-08 14:51:59.193 KST client backend[3076460] pg_regress/compression DETAIL:  This functionality requires the server to be built with lz4 support.
2024-09-08 14:51:59.193 KST client backend[3076460] pg_regress/compression STATEMENT:  CREATE TABLE cmdata2 (f1 TEXT COMPRESSION pglz, f2 TEXT COMPRESSION lz4);
2024-09-08 14:51:59.193 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmdata2" does not exist
2024-09-08 14:51:59.193 KST client backend[3076460] pg_regress/compression STATEMENT:  CREATE UNIQUE INDEX idx1 ON cmdata2 ((f1 || f2));
2024-09-08 14:51:59.193 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmdata2" does not exist at character 13
2024-09-08 14:51:59.193 KST client backend[3076460] pg_regress/compression STATEMENT:  INSERT INTO cmdata2 VALUES((SELECT array_agg(fipshash(g::TEXT))::TEXT FROM
	generate_series(1, 50) g), VERSION());
2024-09-08 14:51:59.194 KST client backend[3076460] pg_regress/compression ERROR:  relation "cmdata1" does not exist at character 24
2024-09-08 14:51:59.194 KST client backend[3076460] pg_regress/compression STATEMENT:  SELECT length(f1) FROM cmdata1;
2024-09-08 14:51:59.194 KST client backend[3076460] pg_regress/compression ERROR:  invalid compression method "i_do_not_exist_compression"
2024-09-08 14:51:59.194 KST client backend[3076460] pg_regress/compression STATEMENT:  CREATE TABLE badcompresstbl (a text COMPRESSION I_Do_Not_Exist_Compression);
2024-09-08 14:51:59.195 KST client backend[3076460] pg_regress/compression ERROR:  invalid compression method "i_do_not_exist_compression"
2024-09-08 14:51:59.195 KST client backend[3076460] pg_regress/compression STATEMENT:  ALTER TABLE badcompresstbl ALTER a SET COMPRESSION I_Do_Not_Exist_Compression;
2024-09-08 14:51:59.207 KST client backend[3076451] pg_regress/partition_prune ERROR:  table "part_rev" contains column "c" not found in parent "part"
2024-09-08 14:51:59.207 KST client backend[3076451] pg_regress/partition_prune DETAIL:  The new partition may contain only the columns present in parent.
2024-09-08 14:51:59.207 KST client backend[3076451] pg_regress/partition_prune STATEMENT:  ALTER TABLE part ATTACH PARTITION part_rev FOR VALUES IN (3);
2024-09-08 14:51:59.284 KST client backend[3076455] pg_regress/indexing ERROR:  cannot attach index "idxpart2_a_idx" as a partition of index "idxpart_a_idx"
2024-09-08 14:51:59.284 KST client backend[3076455] pg_regress/indexing DETAIL:  The index definitions do not match.
2024-09-08 14:51:59.284 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter index idxpart_a_idx attach partition idxpart2_a_idx;
2024-09-08 14:51:59.289 KST client backend[3076455] pg_regress/indexing ERROR:  cannot attach index "idxpart1_1b_idx" as a partition of index "idxpart_1_idx"
2024-09-08 14:51:59.289 KST client backend[3076455] pg_regress/indexing DETAIL:  The index definitions do not match.
2024-09-08 14:51:59.289 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter index idxpart_1_idx attach partition idxpart1_1b_idx;
2024-09-08 14:51:59.289 KST client backend[3076455] pg_regress/indexing ERROR:  cannot attach index "idxpart1_2b_idx" as a partition of index "idxpart_2_idx"
2024-09-08 14:51:59.289 KST client backend[3076455] pg_regress/indexing DETAIL:  The index definitions do not match.
2024-09-08 14:51:59.289 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter index idxpart_2_idx attach partition idxpart1_2b_idx;
2024-09-08 14:51:59.289 KST client backend[3076455] pg_regress/indexing ERROR:  cannot attach index "idxpart1_2c_idx" as a partition of index "idxpart_2_idx"
2024-09-08 14:51:59.289 KST client backend[3076455] pg_regress/indexing DETAIL:  The index definitions do not match.
2024-09-08 14:51:59.289 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter index idxpart_2_idx attach partition idxpart1_2c_idx;
2024-09-08 14:51:59.348 KST client backend[3076455] pg_regress/indexing ERROR:  multiple primary keys for table "failpart" are not allowed
2024-09-08 14:51:59.348 KST client backend[3076455] pg_regress/indexing STATEMENT:  create table failpart partition of idxpart (b primary key) for values from (0) to (100);
2024-09-08 14:51:59.353 KST client backend[3076455] pg_regress/indexing ERROR:  unique constraint on partitioned table must include all partitioning columns
2024-09-08 14:51:59.353 KST client backend[3076455] pg_regress/indexing DETAIL:  UNIQUE constraint on table "idxpart" lacks column "b" which is part of the partition key.
2024-09-08 14:51:59.353 KST client backend[3076455] pg_regress/indexing STATEMENT:  create table idxpart (a int unique, b int) partition by range (a, b);
2024-09-08 14:51:59.353 KST client backend[3076455] pg_regress/indexing ERROR:  unique constraint on partitioned table must include all partitioning columns
2024-09-08 14:51:59.353 KST client backend[3076455] pg_regress/indexing DETAIL:  UNIQUE constraint on table "idxpart" lacks column "a" which is part of the partition key.
2024-09-08 14:51:59.353 KST client backend[3076455] pg_regress/indexing STATEMENT:  create table idxpart (a int, b int unique) partition by range (a, b);
2024-09-08 14:51:59.353 KST client backend[3076455] pg_regress/indexing ERROR:  unique constraint on partitioned table must include all partitioning columns
2024-09-08 14:51:59.353 KST client backend[3076455] pg_regress/indexing DETAIL:  PRIMARY KEY constraint on table "idxpart" lacks column "b" which is part of the partition key.
2024-09-08 14:51:59.353 KST client backend[3076455] pg_regress/indexing STATEMENT:  create table idxpart (a int primary key, b int) partition by range (b, a);
2024-09-08 14:51:59.354 KST client backend[3076455] pg_regress/indexing ERROR:  unique constraint on partitioned table must include all partitioning columns
2024-09-08 14:51:59.354 KST client backend[3076455] pg_regress/indexing DETAIL:  PRIMARY KEY constraint on table "idxpart" lacks column "a" which is part of the partition key.
2024-09-08 14:51:59.354 KST client backend[3076455] pg_regress/indexing STATEMENT:  create table idxpart (a int, b int primary key) partition by range (b, a);
2024-09-08 14:51:59.355 KST client backend[3076455] pg_regress/indexing ERROR:  exclusion constraints are not supported on partitioned tables at character 30
2024-09-08 14:51:59.355 KST client backend[3076455] pg_regress/indexing STATEMENT:  create table idxpart (a int, exclude (a with = )) partition by range (a);
2024-09-08 14:51:59.355 KST client backend[3076455] pg_regress/indexing ERROR:  unsupported PRIMARY KEY constraint with partition key definition
2024-09-08 14:51:59.355 KST client backend[3076455] pg_regress/indexing DETAIL:  PRIMARY KEY constraints cannot be used when partition keys include expressions.
2024-09-08 14:51:59.355 KST client backend[3076455] pg_regress/indexing STATEMENT:  create table idxpart (a int primary key, b int) partition by range ((b + a));
2024-09-08 14:51:59.355 KST client backend[3076455] pg_regress/indexing ERROR:  unsupported UNIQUE constraint with partition key definition
2024-09-08 14:51:59.355 KST client backend[3076455] pg_regress/indexing DETAIL:  UNIQUE constraints cannot be used when partition keys include expressions.
2024-09-08 14:51:59.355 KST client backend[3076455] pg_regress/indexing STATEMENT:  create table idxpart (a int unique, b int) partition by range ((b + a));
2024-09-08 14:51:59.356 KST client backend[3076455] pg_regress/indexing ERROR:  unique constraint on partitioned table must include all partitioning columns
2024-09-08 14:51:59.356 KST client backend[3076455] pg_regress/indexing DETAIL:  PRIMARY KEY constraint on table "idxpart" lacks column "b" which is part of the partition key.
2024-09-08 14:51:59.356 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter table idxpart add primary key (a);
2024-09-08 14:51:59.364 KST client backend[3076455] pg_regress/indexing ERROR:  unique constraint on partitioned table must include all partitioning columns
2024-09-08 14:51:59.364 KST client backend[3076455] pg_regress/indexing DETAIL:  UNIQUE constraint on table "idxpart" lacks column "b" which is part of the partition key.
2024-09-08 14:51:59.364 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter table idxpart add unique (a);
2024-09-08 14:51:59.368 KST client backend[3076455] pg_regress/indexing ERROR:  exclusion constraints are not supported on partitioned tables at character 25
2024-09-08 14:51:59.368 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter table idxpart add exclude (a with =);
2024-09-08 14:51:59.377 KST client backend[3076455] pg_regress/indexing ERROR:  unique constraint on partitioned table must include all partitioning columns
2024-09-08 14:51:59.377 KST client backend[3076455] pg_regress/indexing DETAIL:  PRIMARY KEY constraint on table "idxpart2" lacks column "b" which is part of the partition key.
2024-09-08 14:51:59.377 KST client backend[3076455] pg_regress/indexing STATEMENT:  create table idxpart2 partition of idxpart
	for values from (0) to (1000) partition by range (b);
2024-09-08 14:51:59.378 KST client backend[3076455] pg_regress/indexing ERROR:  unique constraint on partitioned table must include all partitioning columns
2024-09-08 14:51:59.378 KST client backend[3076455] pg_regress/indexing DETAIL:  UNIQUE constraint on table "idxpart1" lacks column "b" which is part of the partition key.
2024-09-08 14:51:59.378 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter table idxpart attach partition idxpart1 for values from (1) to (1000);
2024-09-08 14:51:59.386 KST client backend[3076455] pg_regress/indexing ERROR:  cannot drop index idxpart0_pkey because index idxpart_pkey requires it
2024-09-08 14:51:59.386 KST client backend[3076455] pg_regress/indexing HINT:  You can drop index idxpart_pkey instead.
2024-09-08 14:51:59.386 KST client backend[3076455] pg_regress/indexing STATEMENT:  drop index idxpart0_pkey;
2024-09-08 14:51:59.386 KST client backend[3076455] pg_regress/indexing ERROR:  cannot drop index idxpart1_pkey because index idxpart_pkey requires it
2024-09-08 14:51:59.386 KST client backend[3076455] pg_regress/indexing HINT:  You can drop index idxpart_pkey instead.
2024-09-08 14:51:59.386 KST client backend[3076455] pg_regress/indexing STATEMENT:  drop index idxpart1_pkey;
2024-09-08 14:51:59.386 KST client backend[3076455] pg_regress/indexing ERROR:  cannot drop inherited constraint "idxpart0_pkey" of relation "idxpart0"
2024-09-08 14:51:59.386 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter table idxpart0 drop constraint idxpart0_pkey;
2024-09-08 14:51:59.386 KST client backend[3076455] pg_regress/indexing ERROR:  cannot drop inherited constraint "idxpart1_pkey" of relation "idxpart1"
2024-09-08 14:51:59.386 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter table idxpart1 drop constraint idxpart1_pkey;
2024-09-08 14:51:59.390 KST client backend[3076455] pg_regress/indexing ERROR:  multiple primary keys for table "idxpart1" are not allowed
2024-09-08 14:51:59.390 KST client backend[3076455] pg_regress/indexing STATEMENT:  ALTER TABLE idxpart ATTACH PARTITION idxpart1 FOR VALUES FROM (100) TO (200);
2024-09-08 14:51:59.393 KST client backend[3076455] pg_regress/indexing ERROR:  multiple primary keys for table "idxpart11" are not allowed
2024-09-08 14:51:59.393 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter table idxpart attach partition idxpart1 for values from (0) to (10000);
2024-09-08 14:51:59.400 KST client backend[3076455] pg_regress/indexing ERROR:  constraint must be added to child tables too
2024-09-08 14:51:59.400 KST client backend[3076455] pg_regress/indexing DETAIL:  Column "a" of relation "idxpart0" is not already NOT NULL.
2024-09-08 14:51:59.400 KST client backend[3076455] pg_regress/indexing HINT:  Do not specify the ONLY keyword.
2024-09-08 14:51:59.400 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter table only idxpart add primary key (a);
2024-09-08 14:51:59.400 KST client backend[3076455] pg_regress/indexing ERROR:  column "a" is marked NOT NULL in parent table
2024-09-08 14:51:59.400 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter table idxpart0 alter column a drop not null;
2024-09-08 14:51:59.406 KST client backend[3076455] pg_regress/indexing ERROR:  cannot attach index "idxpart1_a_idx" as a partition of index "idxpart_pkey"
2024-09-08 14:51:59.406 KST client backend[3076455] pg_regress/indexing DETAIL:  The index "idxpart_pkey" belongs to a constraint in table "idxpart" but no constraint exists for index "idxpart1_a_idx".
2024-09-08 14:51:59.406 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter index idxpart_pkey attach partition idxpart1_a_idx;
2024-09-08 14:51:59.411 KST client backend[3076455] pg_regress/indexing ERROR:  duplicate key value violates unique constraint "idxpart1_a_idx"
2024-09-08 14:51:59.411 KST client backend[3076455] pg_regress/indexing DETAIL:  Key (a)=(65536) already exists.
2024-09-08 14:51:59.411 KST client backend[3076455] pg_regress/indexing STATEMENT:  insert into idxpart select 2^g, format('two to power of %s', g) from generate_series(15, 17) g;
2024-09-08 14:51:59.412 KST client backend[3076455] pg_regress/indexing ERROR:  duplicate key value violates unique constraint "idxpart2_a_idx"
2024-09-08 14:51:59.412 KST client backend[3076455] pg_regress/indexing DETAIL:  Key (a)=(285714) already exists.
2024-09-08 14:51:59.412 KST client backend[3076455] pg_regress/indexing STATEMENT:  insert into idxpart select a * 2, b || b from idxpart where a between 2^16 and 2^19;
2024-09-08 14:51:59.412 KST client backend[3076455] pg_regress/indexing ERROR:  duplicate key value violates unique constraint "idxpart2_a_idx"
2024-09-08 14:51:59.412 KST client backend[3076455] pg_regress/indexing DETAIL:  Key (a)=(572814) already exists.
2024-09-08 14:51:59.412 KST client backend[3076455] pg_regress/indexing STATEMENT:  insert into idxpart values (572814, 'five');
2024-09-08 14:51:59.433 KST client backend[3076455] pg_regress/indexing ERROR:  duplicate key value violates unique constraint "covidxpart1_a_b_idx"
2024-09-08 14:51:59.433 KST client backend[3076455] pg_regress/indexing DETAIL:  Key (a)=(1) already exists.
2024-09-08 14:51:59.433 KST client backend[3076455] pg_regress/indexing STATEMENT:  insert into covidxpart values (1, 1);
2024-09-08 14:51:59.435 KST client backend[3076455] pg_regress/indexing ERROR:  duplicate key value violates unique constraint "covidxpart3_a_b_idx"
2024-09-08 14:51:59.435 KST client backend[3076455] pg_regress/indexing DETAIL:  Key (a)=(3) already exists.
2024-09-08 14:51:59.435 KST client backend[3076455] pg_regress/indexing STATEMENT:  insert into covidxpart values (3, 1);
2024-09-08 14:51:59.436 KST client backend[3076455] pg_regress/indexing ERROR:  duplicate key value violates unique constraint "covidxpart4_a_b_idx"
2024-09-08 14:51:59.436 KST client backend[3076455] pg_regress/indexing DETAIL:  Key (a)=(4) already exists.
2024-09-08 14:51:59.436 KST client backend[3076455] pg_regress/indexing STATEMENT:  insert into covidxpart values (4, 1);
2024-09-08 14:51:59.436 KST client backend[3076455] pg_regress/indexing ERROR:  unique constraint on partitioned table must include all partitioning columns
2024-09-08 14:51:59.436 KST client backend[3076455] pg_regress/indexing DETAIL:  UNIQUE constraint on table "covidxpart" lacks column "a" which is part of the partition key.
2024-09-08 14:51:59.436 KST client backend[3076455] pg_regress/indexing STATEMENT:  create unique index on covidxpart (b) include (a);
2024-09-08 14:51:59.438 KST client backend[3076455] pg_regress/indexing ERROR:  cannot drop inherited constraint "parted_pk_detach_test1_pkey" of relation "parted_pk_detach_test1"
2024-09-08 14:51:59.438 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter table parted_pk_detach_test1 drop constraint parted_pk_detach_test1_pkey;
2024-09-08 14:51:59.440 KST client backend[3076455] pg_regress/indexing ERROR:  cannot drop inherited constraint "parted_uniq_detach_test1_a_key" of relation "parted_uniq_detach_test1"
2024-09-08 14:51:59.440 KST client backend[3076455] pg_regress/indexing STATEMENT:  alter table parted_uniq_detach_test1 drop constraint parted_uniq_detach_test1_a_key;
2024-09-08 14:51:59.464 KST client backend[3076457] pg_regress/tuplesort LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3076457.0", size 540672
2024-09-08 14:51:59.464 KST client backend[3076457] pg_regress/tuplesort STATEMENT:  COMMIT;
2024-09-08 14:51:59.466 KST client backend[3076455] pg_regress/indexing ERROR:  division by zero
2024-09-08 14:51:59.466 KST client backend[3076455] pg_regress/indexing STATEMENT:  create index concurrently parted_isvalid_idx_11 on parted_isvalid_tab_11 ((a/b));
2024-09-08 14:51:59.498 KST checkpointer[3075129] LOG:  checkpoint starting: immediate force wait
2024-09-08 14:51:59.590 KST client backend[3076457] pg_regress/tuplesort LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3076457.4", size 458752
2024-09-08 14:51:59.590 KST client backend[3076457] pg_regress/tuplesort STATEMENT:  SELECT
	    (array_agg(id ORDER BY id DESC NULLS FIRST))[0:5],
	    (array_agg(abort_increasing ORDER BY abort_increasing DESC NULLS LAST))[0:5],
	    (array_agg(id::text ORDER BY id::text DESC NULLS LAST))[0:5],
	    percentile_disc(0.99) WITHIN GROUP (ORDER BY id),
	    percentile_disc(0.01) WITHIN GROUP (ORDER BY id),
	    percentile_disc(0.8) WITHIN GROUP (ORDER BY abort_increasing),
	    percentile_disc(0.2) WITHIN GROUP (ORDER BY id::text),
	    rank('00000000-0000-0000-0000-000000000000', '2', '2') WITHIN GROUP (ORDER BY noabort_increasing, id, id::text)
	FROM (
	    SELECT * FROM abbrev_abort_uuids
	    UNION ALL
	    SELECT NULL, NULL, NULL, NULL, NULL) s;
2024-09-08 14:51:59.600 KST client backend[3076457] pg_regress/tuplesort LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3076457.3", size 278528
2024-09-08 14:51:59.600 KST client backend[3076457] pg_regress/tuplesort STATEMENT:  SELECT
	    (array_agg(id ORDER BY id DESC NULLS FIRST))[0:5],
	    (array_agg(abort_increasing ORDER BY abort_increasing DESC NULLS LAST))[0:5],
	    (array_agg(id::text ORDER BY id::text DESC NULLS LAST))[0:5],
	    percentile_disc(0.99) WITHIN GROUP (ORDER BY id),
	    percentile_disc(0.01) WITHIN GROUP (ORDER BY id),
	    percentile_disc(0.8) WITHIN GROUP (ORDER BY abort_increasing),
	    percentile_disc(0.2) WITHIN GROUP (ORDER BY id::text),
	    rank('00000000-0000-0000-0000-000000000000', '2', '2') WITHIN GROUP (ORDER BY noabort_increasing, id, id::text)
	FROM (
	    SELECT * FROM abbrev_abort_uuids
	    UNION ALL
	    SELECT NULL, NULL, NULL, NULL, NULL) s;
2024-09-08 14:51:59.601 KST checkpointer[3075129] LOG:  checkpoint complete: wrote 11434 buffers (69.8%); 0 WAL file(s) added, 0 removed, 14 recycled; write=0.061 s, sync=0.001 s, total=0.104 s; sync files=0, longest=0.000 s, average=0.000 s; distance=239037 kB, estimate=239037 kB; lsn=0/FF02718, redo lsn=0/FE5B138
2024-09-08 14:51:59.602 KST checkpointer[3075129] LOG:  checkpoint starting: immediate force wait
2024-09-08 14:51:59.603 KST checkpointer[3075129] LOG:  checkpoint complete: wrote 27 buffers (0.2%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.001 s, sync=0.001 s, total=0.001 s; sync files=0, longest=0.000 s, average=0.000 s; distance=669 kB, estimate=215200 kB; lsn=0/FF027C8, redo lsn=0/FF02790
2024-09-08 14:51:59.612 KST client backend[3076520] pg_regress/stats ERROR:  invalid statistics kind: "zaphod"
2024-09-08 14:51:59.612 KST client backend[3076520] pg_regress/stats STATEMENT:  SELECT pg_stat_have_stats('zaphod', 0, 0);
2024-09-08 14:51:59.613 KST client backend[3076457] pg_regress/tuplesort LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3076457.2", size 876544
2024-09-08 14:51:59.613 KST client backend[3076457] pg_regress/tuplesort STATEMENT:  SELECT
	    (array_agg(id ORDER BY id DESC NULLS FIRST))[0:5],
	    (array_agg(abort_increasing ORDER BY abort_increasing DESC NULLS LAST))[0:5],
	    (array_agg(id::text ORDER BY id::text DESC NULLS LAST))[0:5],
	    percentile_disc(0.99) WITHIN GROUP (ORDER BY id),
	    percentile_disc(0.01) WITHIN GROUP (ORDER BY id),
	    percentile_disc(0.8) WITHIN GROUP (ORDER BY abort_increasing),
	    percentile_disc(0.2) WITHIN GROUP (ORDER BY id::text),
	    rank('00000000-0000-0000-0000-000000000000', '2', '2') WITHIN GROUP (ORDER BY noabort_increasing, id, id::text)
	FROM (
	    SELECT * FROM abbrev_abort_uuids
	    UNION ALL
	    SELECT NULL, NULL, NULL, NULL, NULL) s;
2024-09-08 14:51:59.613 KST client backend[3076457] pg_regress/tuplesort LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3076457.5", size 278528
2024-09-08 14:51:59.613 KST client backend[3076457] pg_regress/tuplesort STATEMENT:  SELECT
	    (array_agg(id ORDER BY id DESC NULLS FIRST))[0:5],
	    (array_agg(abort_increasing ORDER BY abort_increasing DESC NULLS LAST))[0:5],
	    (array_agg(id::text ORDER BY id::text DESC NULLS LAST))[0:5],
	    percentile_disc(0.99) WITHIN GROUP (ORDER BY id),
	    percentile_disc(0.01) WITHIN GROUP (ORDER BY id),
	    percentile_disc(0.8) WITHIN GROUP (ORDER BY abort_increasing),
	    percentile_disc(0.2) WITHIN GROUP (ORDER BY id::text),
	    rank('00000000-0000-0000-0000-000000000000', '2', '2') WITHIN GROUP (ORDER BY noabort_increasing, id, id::text)
	FROM (
	    SELECT * FROM abbrev_abort_uuids
	    UNION ALL
	    SELECT NULL, NULL, NULL, NULL, NULL) s;
2024-09-08 14:51:59.613 KST client backend[3076457] pg_regress/tuplesort LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3076457.6", size 466944
2024-09-08 14:51:59.613 KST client backend[3076457] pg_regress/tuplesort STATEMENT:  SELECT
	    (array_agg(id ORDER BY id DESC NULLS FIRST))[0:5],
	    (array_agg(abort_increasing ORDER BY abort_increasing DESC NULLS LAST))[0:5],
	    (array_agg(id::text ORDER BY id::text DESC NULLS LAST))[0:5],
	    percentile_disc(0.99) WITHIN GROUP (ORDER BY id),
	    percentile_disc(0.01) WITHIN GROUP (ORDER BY id),
	    percentile_disc(0.8) WITHIN GROUP (ORDER BY abort_increasing),
	    percentile_disc(0.2) WITHIN GROUP (ORDER BY id::text),
	    rank('00000000-0000-0000-0000-000000000000', '2', '2') WITHIN GROUP (ORDER BY noabort_increasing, id, id::text)
	FROM (
	    SELECT * FROM abbrev_abort_uuids
	    UNION ALL
	    SELECT NULL, NULL, NULL, NULL, NULL) s;
2024-09-08 14:51:59.613 KST client backend[3076457] pg_regress/tuplesort LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3076457.7", size 344064
2024-09-08 14:51:59.613 KST client backend[3076457] pg_regress/tuplesort STATEMENT:  SELECT
	    (array_agg(id ORDER BY id DESC NULLS FIRST))[0:5],
	    (array_agg(abort_increasing ORDER BY abort_increasing DESC NULLS LAST))[0:5],
	    (array_agg(id::text ORDER BY id::text DESC NULLS LAST))[0:5],
	    percentile_disc(0.99) WITHIN GROUP (ORDER BY id),
	    percentile_disc(0.01) WITHIN GROUP (ORDER BY id),
	    percentile_disc(0.8) WITHIN GROUP (ORDER BY abort_increasing),
	    percentile_disc(0.2) WITHIN GROUP (ORDER BY id::text),
	    rank('00000000-0000-0000-0000-000000000000', '2', '2') WITHIN GROUP (ORDER BY noabort_increasing, id, id::text)
	FROM (
	    SELECT * FROM abbrev_abort_uuids
	    UNION ALL
	    SELECT NULL, NULL, NULL, NULL, NULL) s;
2024-09-08 14:51:59.613 KST client backend[3076457] pg_regress/tuplesort LOG:  temporary file: path "base/pgsql_tmp/pgsql_tmp3076457.1", size 958464
2024-09-08 14:51:59.613 KST client backend[3076457] pg_regress/tuplesort STATEMENT:  SELECT
	    (array_agg(id ORDER BY id DESC NULLS FIRST))[0:5],
	    (array_agg(abort_increasing ORDER BY abort_increasing DESC NULLS LAST))[0:5],
	    (array_agg(id::text ORDER BY id::text DESC NULLS LAST))[0:5],
	    percentile_disc(0.99) WITHIN GROUP (ORDER BY id),
	    percentile_disc(0.01) WITHIN GROUP (ORDER BY id),
	    percentile_disc(0.8) WITHIN GROUP (ORDER BY abort_increasing),
	    percentile_disc(0.2) WITHIN GROUP (ORDER BY id::text),
	    rank('00000000-0000-0000-0000-000000000000', '2', '2') WITHIN GROUP (ORDER BY noabort_increasing, id, id::text)
	FROM (
	    SELECT * FROM abbrev_abort_uuids
	    UNION ALL
	    SELECT NULL, NULL, NULL, NULL, NULL) s;
2024-09-08 14:51:59.633 KST checkpointer[3075129] LOG:  checkpoint starting: immediate force wait
2024-09-08 14:51:59.633 KST checkpointer[3075129] LOG:  checkpoint complete: wrote 47 buffers (0.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.001 s, sync=0.001 s, total=0.001 s; sync files=0, longest=0.000 s, average=0.000 s; distance=249 kB, estimate=193705 kB; lsn=0/FF40E68, redo lsn=0/FF40E30
2024-09-08 14:51:59.633 KST checkpointer[3075129] LOG:  checkpoint starting: immediate force wait
2024-09-08 14:51:59.634 KST checkpointer[3075129] LOG:  checkpoint complete: wrote 0 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.001 s, sync=0.001 s, total=0.001 s; sync files=0, longest=0.000 s, average=0.000 s; distance=0 kB, estimate=174334 kB; lsn=0/FF40F18, redo lsn=0/FF40EE0
2024-09-08 14:51:59.665 KST client backend[3076522] pg_regress/stats LOG:  wait_for_hot_stats delayed 0.000375 seconds
2024-09-08 14:51:59.665 KST client backend[3076522] pg_regress/stats CONTEXT:  PL/pgSQL function wait_for_hot_stats() line 17 at RAISE
2024-09-08 14:51:59.665 KST client backend[3076522] pg_regress/stats STATEMENT:  SELECT wait_for_hot_stats();
2024-09-08 14:51:59.708 KST client backend[3076551] pg_regress/event_trigger ERROR:  function pg_backend_pid must return type event_trigger
2024-09-08 14:51:59.708 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  create event trigger regress_event_trigger
	   on ddl_command_start
	   execute procedure pg_backend_pid();
2024-09-08 14:51:59.709 KST client backend[3076551] pg_regress/event_trigger ERROR:  trigger functions can only be called as triggers
2024-09-08 14:51:59.709 KST client backend[3076551] pg_regress/event_trigger CONTEXT:  compilation of PL/pgSQL function "test_event_trigger" near line 1
2024-09-08 14:51:59.709 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  SELECT test_event_trigger();
2024-09-08 14:51:59.709 KST client backend[3076551] pg_regress/event_trigger ERROR:  event trigger functions cannot have declared arguments
2024-09-08 14:51:59.709 KST client backend[3076551] pg_regress/event_trigger CONTEXT:  compilation of PL/pgSQL function "test_event_trigger_arg" near line 1
2024-09-08 14:51:59.709 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  create function test_event_trigger_arg(name text)
	returns event_trigger as $$ BEGIN RETURN 1; END $$ language plpgsql;
2024-09-08 14:51:59.709 KST client backend[3076551] pg_regress/event_trigger ERROR:  SQL functions cannot return type event_trigger
2024-09-08 14:51:59.709 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  create function test_event_trigger_sql() returns event_trigger as $$
	SELECT 1 $$ language sql;
2024-09-08 14:51:59.709 KST client backend[3076551] pg_regress/event_trigger ERROR:  unrecognized event name "elephant_bootstrap"
2024-09-08 14:51:59.709 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  create event trigger regress_event_trigger on elephant_bootstrap
	   execute procedure test_event_trigger();
2024-09-08 14:51:59.710 KST client backend[3076551] pg_regress/event_trigger ERROR:  unrecognized filter variable "food"
2024-09-08 14:51:59.710 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  create event trigger regress_event_trigger2 on ddl_command_start
	   when food in ('sandwich')
	   execute procedure test_event_trigger();
2024-09-08 14:51:59.710 KST client backend[3076551] pg_regress/event_trigger ERROR:  filter value "sandwich" not recognized for filter variable "tag"
2024-09-08 14:51:59.710 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  create event trigger regress_event_trigger2 on ddl_command_start
	   when tag in ('sandwich')
	   execute procedure test_event_trigger();
2024-09-08 14:51:59.710 KST client backend[3076551] pg_regress/event_trigger ERROR:  filter value "create skunkcabbage" not recognized for filter variable "tag"
2024-09-08 14:51:59.710 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  create event trigger regress_event_trigger2 on ddl_command_start
	   when tag in ('create table', 'create skunkcabbage')
	   execute procedure test_event_trigger();
2024-09-08 14:51:59.710 KST client backend[3076551] pg_regress/event_trigger ERROR:  event triggers are not supported for DROP EVENT TRIGGER
2024-09-08 14:51:59.710 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  create event trigger regress_event_trigger2 on ddl_command_start
	   when tag in ('DROP EVENT TRIGGER')
	   execute procedure test_event_trigger();
2024-09-08 14:51:59.710 KST client backend[3076551] pg_regress/event_trigger ERROR:  event triggers are not supported for CREATE ROLE
2024-09-08 14:51:59.710 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  create event trigger regress_event_trigger2 on ddl_command_start
	   when tag in ('CREATE ROLE')
	   execute procedure test_event_trigger();
2024-09-08 14:51:59.710 KST client backend[3076551] pg_regress/event_trigger ERROR:  event triggers are not supported for CREATE DATABASE
2024-09-08 14:51:59.710 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  create event trigger regress_event_trigger2 on ddl_command_start
	   when tag in ('CREATE DATABASE')
	   execute procedure test_event_trigger();
2024-09-08 14:51:59.710 KST client backend[3076551] pg_regress/event_trigger ERROR:  event triggers are not supported for CREATE TABLESPACE
2024-09-08 14:51:59.710 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  create event trigger regress_event_trigger2 on ddl_command_start
	   when tag in ('CREATE TABLESPACE')
	   execute procedure test_event_trigger();
2024-09-08 14:51:59.710 KST client backend[3076551] pg_regress/event_trigger ERROR:  filter variable "tag" specified more than once
2024-09-08 14:51:59.710 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  create event trigger regress_event_trigger2 on ddl_command_start
	   when tag in ('create table') and tag in ('CREATE FUNCTION')
	   execute procedure test_event_trigger();
2024-09-08 14:51:59.710 KST client backend[3076551] pg_regress/event_trigger ERROR:  syntax error at or near "'argument not allowed'" at character 106
2024-09-08 14:51:59.710 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  create event trigger regress_event_trigger2 on ddl_command_start
	   execute procedure test_event_trigger('argument not allowed');
2024-09-08 14:51:59.711 KST client backend[3076551] pg_regress/event_trigger ERROR:  permission denied to create event trigger "regress_event_trigger_noperms"
2024-09-08 14:51:59.711 KST client backend[3076551] pg_regress/event_trigger HINT:  Must be superuser to create an event trigger.
2024-09-08 14:51:59.711 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  create event trigger regress_event_trigger_noperms on ddl_command_start
	   execute procedure test_event_trigger();
2024-09-08 14:51:59.716 KST client backend[3076551] pg_regress/event_trigger ERROR:  permission denied to change owner of event trigger "regress_event_trigger"
2024-09-08 14:51:59.716 KST client backend[3076551] pg_regress/event_trigger HINT:  The owner of an event trigger must be a superuser.
2024-09-08 14:51:59.716 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  alter event trigger regress_event_trigger owner to regress_evt_user;
2024-09-08 14:51:59.716 KST client backend[3076551] pg_regress/event_trigger ERROR:  event trigger "regress_event_trigger2" already exists
2024-09-08 14:51:59.716 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  alter event trigger regress_event_trigger rename to regress_event_trigger2;
2024-09-08 14:51:59.716 KST client backend[3076551] pg_regress/event_trigger ERROR:  event trigger "regress_event_trigger" does not exist
2024-09-08 14:51:59.716 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  drop event trigger regress_event_trigger;
2024-09-08 14:51:59.717 KST client backend[3076551] pg_regress/event_trigger ERROR:  role "regress_evt_user" cannot be dropped because some objects depend on it
2024-09-08 14:51:59.717 KST client backend[3076551] pg_regress/event_trigger DETAIL:  owner of event trigger regress_event_trigger3
	owner of user mapping for regress_evt_user on server useless_server
	owner of default privileges on new relations belonging to role regress_evt_user
2024-09-08 14:51:59.717 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  drop role regress_evt_user;
2024-09-08 14:51:59.726 KST client backend[3076551] pg_regress/event_trigger ERROR:  object audit_tbls.schema_two_table_three of type table cannot be dropped
2024-09-08 14:51:59.726 KST client backend[3076551] pg_regress/event_trigger CONTEXT:  PL/pgSQL function undroppable() line 14 at RAISE
	SQL statement "DROP TABLE IF EXISTS audit_tbls.schema_two_table_three"
	PL/pgSQL function test_evtrig_dropped_objects() line 8 at EXECUTE
2024-09-08 14:51:59.726 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  DROP SCHEMA schema_one, schema_two CASCADE;
2024-09-08 14:51:59.728 KST client backend[3076551] pg_regress/event_trigger ERROR:  object schema_one.table_three of type table cannot be dropped
2024-09-08 14:51:59.728 KST client backend[3076551] pg_regress/event_trigger CONTEXT:  PL/pgSQL function undroppable() line 14 at RAISE
2024-09-08 14:51:59.728 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  DROP SCHEMA schema_one, schema_two CASCADE;
2024-09-08 14:51:59.747 KST client backend[3076551] pg_regress/event_trigger ERROR:  pg_event_trigger_table_rewrite_oid() can only be called in a table_rewrite event trigger function
2024-09-08 14:51:59.747 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  select pg_event_trigger_table_rewrite_oid();
2024-09-08 14:51:59.750 KST client backend[3076551] pg_regress/event_trigger ERROR:  rewrites not allowed
2024-09-08 14:51:59.750 KST client backend[3076551] pg_regress/event_trigger CONTEXT:  PL/pgSQL function test_evtrig_no_rewrite() line 3 at RAISE
2024-09-08 14:51:59.750 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  alter table rewriteme alter column foo type numeric;
2024-09-08 14:51:59.760 KST client backend[3076551] pg_regress/event_trigger ERROR:  cannot alter type "rewritetype" because column "rewritemetoo3.a" uses it
2024-09-08 14:51:59.760 KST client backend[3076551] pg_regress/event_trigger STATEMENT:  alter type rewritetype alter attribute a type varchar cascade;
2024-09-08 14:51:59.924 KST client backend[3076562] pg_regress/tablespace ERROR:  tablespace location must be an absolute path
2024-09-08 14:51:59.924 KST client backend[3076562] pg_regress/tablespace STATEMENT:  CREATE TABLESPACE regress_tblspace LOCATION 'relative';
2024-09-08 14:51:59.924 KST client backend[3076562] pg_regress/tablespace ERROR:  tablespace location must be an absolute path
2024-09-08 14:51:59.924 KST client backend[3076562] pg_regress/tablespace STATEMENT:  CREATE TABLESPACE regress_tblspace LOCATION '';
2024-09-08 14:51:59.924 KST client backend[3076562] pg_regress/tablespace ERROR:  unrecognized parameter "some_nonexistent_parameter"
2024-09-08 14:51:59.924 KST client backend[3076562] pg_regress/tablespace STATEMENT:  CREATE TABLESPACE regress_tblspacewith LOCATION '' WITH (some_nonexistent_parameter = true);
2024-09-08 14:51:59.925 KST client backend[3076562] pg_regress/tablespace ERROR:  unrecognized parameter "some_nonexistent_parameter"
2024-09-08 14:51:59.925 KST client backend[3076562] pg_regress/tablespace STATEMENT:  ALTER TABLESPACE regress_tblspace SET (some_nonexistent_parameter = true);
2024-09-08 14:51:59.925 KST client backend[3076562] pg_regress/tablespace ERROR:  RESET must not include values for parameters
2024-09-08 14:51:59.925 KST client backend[3076562] pg_regress/tablespace STATEMENT:  ALTER TABLESPACE regress_tblspace RESET (random_page_cost = 2.0);
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace ERROR:  cannot move system relation "pg_am_name_index"
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace STATEMENT:  REINDEX (TABLESPACE regress_tblspace) TABLE pg_am;
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace ERROR:  cannot reindex system catalogs concurrently
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace STATEMENT:  REINDEX (TABLESPACE regress_tblspace) TABLE CONCURRENTLY pg_am;
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace ERROR:  cannot move system relation "pg_authid_rolname_index"
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace STATEMENT:  REINDEX (TABLESPACE regress_tblspace) TABLE pg_authid;
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace ERROR:  cannot reindex system catalogs concurrently
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace STATEMENT:  REINDEX (TABLESPACE regress_tblspace) TABLE CONCURRENTLY pg_authid;
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace ERROR:  cannot move system relation "pg_toast_1260_index"
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace STATEMENT:  REINDEX (TABLESPACE regress_tblspace) INDEX pg_toast.pg_toast_1260_index;
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace ERROR:  cannot reindex system catalogs concurrently
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace STATEMENT:  REINDEX (TABLESPACE regress_tblspace) INDEX CONCURRENTLY pg_toast.pg_toast_1260_index;
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace ERROR:  cannot move system relation "pg_toast_1260_index"
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace STATEMENT:  REINDEX (TABLESPACE regress_tblspace) TABLE pg_toast.pg_toast_1260;
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace ERROR:  cannot reindex system catalogs concurrently
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace STATEMENT:  REINDEX (TABLESPACE regress_tblspace) TABLE CONCURRENTLY pg_toast.pg_toast_1260;
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace ERROR:  cannot move system relation "pg_authid_rolname_index"
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace STATEMENT:  REINDEX (TABLESPACE pg_global) TABLE pg_authid;
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace ERROR:  cannot reindex system catalogs concurrently
2024-09-08 14:51:59.926 KST client backend[3076562] pg_regress/tablespace STATEMENT:  REINDEX (TABLESPACE pg_global) TABLE CONCURRENTLY pg_authid;
2024-09-08 14:51:59.928 KST client backend[3076562] pg_regress/tablespace ERROR:  only shared relations can be placed in pg_global tablespace
2024-09-08 14:51:59.928 KST client backend[3076562] pg_regress/tablespace STATEMENT:  REINDEX (TABLESPACE pg_global) INDEX regress_tblspace_test_tbl_idx;
2024-09-08 14:51:59.928 KST client backend[3076562] pg_regress/tablespace ERROR:  cannot move non-shared relation to tablespace "pg_global"
2024-09-08 14:51:59.928 KST client backend[3076562] pg_regress/tablespace STATEMENT:  REINDEX (TABLESPACE pg_global) INDEX CONCURRENTLY regress_tblspace_test_tbl_idx;
2024-09-08 14:51:59.957 KST client backend[3076562] pg_regress/tablespace ERROR:  only shared relations can be placed in pg_global tablespace
2024-09-08 14:51:59.957 KST client backend[3076562] pg_regress/tablespace STATEMENT:  CREATE TABLE testschema.part_1 PARTITION OF testschema.part FOR VALUES IN (1);
2024-09-08 14:51:59.958 KST client backend[3076562] pg_regress/tablespace ERROR:  only shared relations can be placed in pg_global tablespace
2024-09-08 14:51:59.958 KST client backend[3076562] pg_regress/tablespace STATEMENT:  CREATE TABLE testschema.part_3 PARTITION OF testschema.part FOR VALUES IN (3);
2024-09-08 14:51:59.960 KST client backend[3076562] pg_regress/tablespace ERROR:  only shared relations can be placed in pg_global tablespace
2024-09-08 14:51:59.960 KST client backend[3076562] pg_regress/tablespace STATEMENT:  CREATE TABLE testschema.part_78 PARTITION OF testschema.part FOR VALUES IN (7, 8)
	  PARTITION BY LIST (a);
2024-09-08 14:51:59.980 KST client backend[3076562] pg_regress/tablespace ERROR:  cannot specify default tablespace for partitioned relations
2024-09-08 14:51:59.980 KST client backend[3076562] pg_regress/tablespace STATEMENT:  CREATE TABLE testschema.dflt (a int PRIMARY KEY) PARTITION BY LIST (a) TABLESPACE pg_default;
2024-09-08 14:51:59.980 KST client backend[3076562] pg_regress/tablespace ERROR:  cannot specify default tablespace for partitioned relations
2024-09-08 14:51:59.980 KST client backend[3076562] pg_regress/tablespace STATEMENT:  CREATE TABLE testschema.dflt (a int PRIMARY KEY USING INDEX TABLESPACE pg_default) PARTITION BY LIST (a);
2024-09-08 14:51:59.980 KST client backend[3076562] pg_regress/tablespace ERROR:  cannot specify default tablespace for partitioned relations
2024-09-08 14:51:59.980 KST client backend[3076562] pg_regress/tablespace STATEMENT:  CREATE TABLE testschema.dflt (a int PRIMARY KEY) PARTITION BY LIST (a) TABLESPACE regress_tblspace;
2024-09-08 14:51:59.980 KST client backend[3076562] pg_regress/tablespace ERROR:  cannot specify default tablespace for partitioned relations
2024-09-08 14:51:59.980 KST client backend[3076562] pg_regress/tablespace STATEMENT:  CREATE TABLE testschema.dflt (a int PRIMARY KEY USING INDEX TABLESPACE regress_tblspace) PARTITION BY LIST (a);
2024-09-08 14:52:00.074 KST client backend[3076562] pg_regress/tablespace ERROR:  only shared relations can be placed in pg_global tablespace
2024-09-08 14:52:00.074 KST client backend[3076562] pg_regress/tablespace STATEMENT:  ALTER INDEX testschema.part_a_idx SET TABLESPACE pg_global;
2024-09-08 14:52:00.074 KST client backend[3076562] pg_regress/tablespace ERROR:  duplicate key value violates unique constraint "anindex"
2024-09-08 14:52:00.074 KST client backend[3076562] pg_regress/tablespace DETAIL:  Key (column1)=(1) already exists.
2024-09-08 14:52:00.074 KST client backend[3076562] pg_regress/tablespace STATEMENT:  INSERT INTO testschema.atable VALUES(1);
2024-09-08 14:52:00.076 KST client backend[3076562] pg_regress/tablespace ERROR:  directory "/no/such/location" does not exist
2024-09-08 14:52:00.076 KST client backend[3076562] pg_regress/tablespace STATEMENT:  CREATE TABLESPACE regress_badspace LOCATION '/no/such/location';
2024-09-08 14:52:00.076 KST client backend[3076562] pg_regress/tablespace ERROR:  tablespace "regress_nosuchspace" does not exist
2024-09-08 14:52:00.076 KST client backend[3076562] pg_regress/tablespace STATEMENT:  CREATE TABLE bar (i int) TABLESPACE regress_nosuchspace;
2024-09-08 14:52:00.076 KST client backend[3076562] pg_regress/tablespace ERROR:  tablespace "regress_tblspace" cannot be dropped because some objects depend on it
2024-09-08 14:52:00.076 KST client backend[3076562] pg_regress/tablespace DETAIL:  tablespace for index testschema.part_a_idx
2024-09-08 14:52:00.076 KST client backend[3076562] pg_regress/tablespace STATEMENT:  DROP TABLESPACE regress_tblspace;
2024-09-08 14:52:00.077 KST checkpointer[3075129] LOG:  checkpoint starting: immediate force wait
2024-09-08 14:52:00.084 KST checkpointer[3075129] LOG:  checkpoint complete: wrote 959 buffers (5.9%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.006 s, sync=0.001 s, total=0.008 s; sync files=0, longest=0.000 s, average=0.000 s; distance=3542 kB, estimate=157255 kB; lsn=0/102B6800, redo lsn=0/102B67C8
2024-09-08 14:52:00.084 KST client backend[3076562] pg_regress/tablespace ERROR:  tablespace "regress_tblspace" is not empty
2024-09-08 14:52:00.084 KST client backend[3076562] pg_regress/tablespace STATEMENT:  DROP TABLESPACE regress_tblspace;
2024-09-08 14:52:00.086 KST client backend[3076562] pg_regress/tablespace ERROR:  permission denied for tablespace regress_tblspace
2024-09-08 14:52:00.086 KST client backend[3076562] pg_regress/tablespace STATEMENT:  CREATE TABLE tablespace_table (i int) TABLESPACE regress_tblspace;
2024-09-08 14:52:00.087 KST client backend[3076562] pg_regress/tablespace ERROR:  permission denied for tablespace regress_tblspace
2024-09-08 14:52:00.087 KST client backend[3076562] pg_regress/tablespace STATEMENT:  REINDEX (TABLESPACE regress_tblspace) TABLE tablespace_table;
2024-09-08 14:52:00.087 KST client backend[3076562] pg_regress/tablespace ERROR:  permission denied for tablespace regress_tblspace
2024-09-08 14:52:00.087 KST client backend[3076562] pg_regress/tablespace STATEMENT:  REINDEX (TABLESPACE regress_tblspace, CONCURRENTLY) TABLE tablespace_table;
2024-09-08 14:52:00.091 KST checkpointer[3075129] LOG:  checkpoint starting: immediate force wait
2024-09-08 14:52:00.092 KST checkpointer[3075129] LOG:  checkpoint complete: wrote 41 buffers (0.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.001 s, sync=0.001 s, total=0.002 s; sync files=0, longest=0.000 s, average=0.000 s; distance=331 kB, estimate=141563 kB; lsn=0/10309448, redo lsn=0/10309410
2024-09-08 14:52:00.101 KST postmaster[3075126] LOG:  received fast shutdown request
2024-09-08 14:52:00.101 KST postmaster[3075126] LOG:  aborting any active transactions
2024-09-08 14:52:00.102 KST postmaster[3075126] LOG:  background worker "logical replication launcher" (PID 3075134) exited with exit code 1
2024-09-08 14:52:00.102 KST checkpointer[3075129] LOG:  shutting down
2024-09-08 14:52:00.102 KST checkpointer[3075129] LOG:  checkpoint starting: shutdown immediate
2024-09-08 14:52:00.103 KST checkpointer[3075129] LOG:  checkpoint complete: wrote 27 buffers (0.2%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.001 s, sync=0.001 s, total=0.001 s; sync files=0, longest=0.000 s, average=0.000 s; distance=87 kB, estimate=127415 kB; lsn=0/1031F1E0, redo lsn=0/1031F1E0
2024-09-08 14:52:00.141 KST postmaster[3075126] LOG:  database system is shut down
